<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2038" onload="init(evt)" viewBox="0 0 1200 2038" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2038" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="2021.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="2021.00"> </text><svg id="frames" x="10" width="1180" total_samples="8304"><g><title>corosensei::coroutine::ParentStack::new (1 samples, 0.01%)</title><rect x="0.0723%" y="1909" width="0.0120%" height="15" fill="rgb(227,0,7)" fg:x="6" fg:w="1"/><text x="0.3223%" y="1919.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::take (1 samples, 0.01%)</title><rect x="0.0963%" y="1893" width="0.0120%" height="15" fill="rgb(217,0,24)" fg:x="8" fg:w="1"/><text x="0.3463%" y="1903.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="0.0963%" y="1877" width="0.0120%" height="15" fill="rgb(221,193,54)" fg:x="8" fg:w="1"/><text x="0.3463%" y="1887.50"></text></g><g><title>corosensei::coroutine::Yielder&lt;Input,Yield&gt;::on_parent_stack (6 samples, 0.07%)</title><rect x="0.0723%" y="1925" width="0.0723%" height="15" fill="rgb(248,212,6)" fg:x="6" fg:w="6"/><text x="0.3223%" y="1935.50"></text></g><g><title>corosensei::coroutine::on_stack (5 samples, 0.06%)</title><rect x="0.0843%" y="1909" width="0.0602%" height="15" fill="rgb(208,68,35)" fg:x="7" fg:w="5"/><text x="0.3343%" y="1919.50"></text></g><g><title>corosensei::unwind::maybe_resume_unwind (3 samples, 0.04%)</title><rect x="0.1084%" y="1893" width="0.0361%" height="15" fill="rgb(232,128,0)" fg:x="9" fg:w="3"/><text x="0.3584%" y="1903.50"></text></g><g><title>&lt;Func as wasmer::sys::externals::function::inner::HostFunction&lt;(A1,A2),Rets,wasmer::sys::externals::function::inner::WithEnv,Env&gt;&gt;::function_body_ptr::func_wrapper (13 samples, 0.16%)</title><rect x="0.0000%" y="1957" width="0.1566%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="13"/><text x="0.2500%" y="1967.50"></text></g><g><title>wasmer_vm::trap::traphandlers::on_host_stack (9 samples, 0.11%)</title><rect x="0.0482%" y="1941" width="0.1084%" height="15" fill="rgb(228,23,34)" fg:x="4" fg:w="9"/><text x="0.2982%" y="1951.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="0.1445%" y="1925" width="0.0120%" height="15" fill="rgb(218,30,26)" fg:x="12" fg:w="1"/><text x="0.3945%" y="1935.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="0.1445%" y="1909" width="0.0120%" height="15" fill="rgb(220,122,19)" fg:x="12" fg:w="1"/><text x="0.3945%" y="1919.50"></text></g><g><title>wasmer_vm::trap::traphandlers::YIELDER::__getit (1 samples, 0.01%)</title><rect x="0.1445%" y="1893" width="0.0120%" height="15" fill="rgb(250,228,42)" fg:x="12" fg:w="1"/><text x="0.3945%" y="1903.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="0.1445%" y="1877" width="0.0120%" height="15" fill="rgb(240,193,28)" fg:x="12" fg:w="1"/><text x="0.3945%" y="1887.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="0.1445%" y="1861" width="0.0120%" height="15" fill="rgb(216,20,37)" fg:x="12" fg:w="1"/><text x="0.3945%" y="1871.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="0.1445%" y="1845" width="0.0120%" height="15" fill="rgb(206,188,39)" fg:x="12" fg:w="1"/><text x="0.3945%" y="1855.50"></text></g><g><title>&lt;Func as wasmer::sys::externals::function::inner::HostFunction&lt;(A1,A2,A3),Rets,wasmer::sys::externals::function::inner::WithEnv,Env&gt;&gt;::function_body_ptr::func_wrapper (1 samples, 0.01%)</title><rect x="0.1566%" y="1957" width="0.0120%" height="15" fill="rgb(217,207,13)" fg:x="13" fg:w="1"/><text x="0.4066%" y="1967.50"></text></g><g><title>wasmer_vm::trap::traphandlers::on_host_stack (1 samples, 0.01%)</title><rect x="0.1566%" y="1941" width="0.0120%" height="15" fill="rgb(231,73,38)" fg:x="13" fg:w="1"/><text x="0.4066%" y="1951.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="0.1566%" y="1925" width="0.0120%" height="15" fill="rgb(225,20,46)" fg:x="13" fg:w="1"/><text x="0.4066%" y="1935.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="0.1566%" y="1909" width="0.0120%" height="15" fill="rgb(210,31,41)" fg:x="13" fg:w="1"/><text x="0.4066%" y="1919.50"></text></g><g><title>wasmer_vm::trap::traphandlers::YIELDER::__getit (1 samples, 0.01%)</title><rect x="0.1566%" y="1893" width="0.0120%" height="15" fill="rgb(221,200,47)" fg:x="13" fg:w="1"/><text x="0.4066%" y="1903.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="0.1566%" y="1877" width="0.0120%" height="15" fill="rgb(226,26,5)" fg:x="13" fg:w="1"/><text x="0.4066%" y="1887.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="0.1566%" y="1861" width="0.0120%" height="15" fill="rgb(249,33,26)" fg:x="13" fg:w="1"/><text x="0.4066%" y="1871.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="0.1566%" y="1845" width="0.0120%" height="15" fill="rgb(235,183,28)" fg:x="13" fg:w="1"/><text x="0.4066%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;scopeguard::ScopeGuard&lt;(),wasmer_vm::trap::traphandlers::on_host_stack&lt;&lt;Func as wasmer::sys::externals::function::inner::HostFunction&lt;A1,Rets,wasmer::sys::externals::function::inner::WithEnv,Env&gt;&gt;::function_body_ptr::func_wrapper&lt;i64,i64,core::result::Result&lt;i64,vm_library::errors::vm::VmError&gt;,vm_library::env::Context,vm_library::managed::imports::call1&lt;i64,vm_library::managed::imports::car&gt;::{{closure}}&gt;::{{closure}},core::result::Result&lt;core::result::Result&lt;i64,vm_library::errors::vm::VmError&gt;,alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send&gt;&gt;&gt;::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="0.4335%" y="1925" width="0.0120%" height="15" fill="rgb(221,5,38)" fg:x="36" fg:w="1"/><text x="0.6835%" y="1935.50"></text></g><g><title>&lt;scopeguard::ScopeGuard&lt;T,F,S&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="0.4335%" y="1909" width="0.0120%" height="15" fill="rgb(247,18,42)" fg:x="36" fg:w="1"/><text x="0.6835%" y="1919.50"></text></g><g><title>wasmer_vm::trap::traphandlers::on_host_stack::{{closure}} (1 samples, 0.01%)</title><rect x="0.4335%" y="1893" width="0.0120%" height="15" fill="rgb(241,131,45)" fg:x="36" fg:w="1"/><text x="0.6835%" y="1903.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="0.4335%" y="1877" width="0.0120%" height="15" fill="rgb(249,31,29)" fg:x="36" fg:w="1"/><text x="0.6835%" y="1887.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="0.4335%" y="1861" width="0.0120%" height="15" fill="rgb(225,111,53)" fg:x="36" fg:w="1"/><text x="0.6835%" y="1871.50"></text></g><g><title>corosensei::arch::x86_64::on_stack (1 samples, 0.01%)</title><rect x="0.4697%" y="1893" width="0.0120%" height="15" fill="rgb(238,160,17)" fg:x="39" fg:w="1"/><text x="0.7197%" y="1903.50"></text></g><g><title>corosensei::coroutine::Yielder&lt;Input,Yield&gt;::on_parent_stack (6 samples, 0.07%)</title><rect x="0.4456%" y="1925" width="0.0723%" height="15" fill="rgb(214,148,48)" fg:x="37" fg:w="6"/><text x="0.6956%" y="1935.50"></text></g><g><title>corosensei::coroutine::on_stack (6 samples, 0.07%)</title><rect x="0.4456%" y="1909" width="0.0723%" height="15" fill="rgb(232,36,49)" fg:x="37" fg:w="6"/><text x="0.6956%" y="1919.50"></text></g><g><title>corosensei::unwind::maybe_resume_unwind (3 samples, 0.04%)</title><rect x="0.4817%" y="1893" width="0.0361%" height="15" fill="rgb(209,103,24)" fg:x="40" fg:w="3"/><text x="0.7317%" y="1903.50"></text></g><g><title>wasmer_vm::trap::traphandlers::YIELDER::__getit (2 samples, 0.02%)</title><rect x="0.5178%" y="1893" width="0.0241%" height="15" fill="rgb(229,88,8)" fg:x="43" fg:w="2"/><text x="0.7678%" y="1903.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (2 samples, 0.02%)</title><rect x="0.5178%" y="1877" width="0.0241%" height="15" fill="rgb(213,181,19)" fg:x="43" fg:w="2"/><text x="0.7678%" y="1887.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="0.5299%" y="1861" width="0.0120%" height="15" fill="rgb(254,191,54)" fg:x="44" fg:w="1"/><text x="0.7799%" y="1871.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="0.5299%" y="1845" width="0.0120%" height="15" fill="rgb(241,83,37)" fg:x="44" fg:w="1"/><text x="0.7799%" y="1855.50"></text></g><g><title>&lt;Func as wasmer::sys::externals::function::inner::HostFunction&lt;A1,Rets,wasmer::sys::externals::function::inner::WithEnv,Env&gt;&gt;::function_body_ptr::func_wrapper (32 samples, 0.39%)</title><rect x="0.1686%" y="1957" width="0.3854%" height="15" fill="rgb(233,36,39)" fg:x="14" fg:w="32"/><text x="0.4186%" y="1967.50"></text></g><g><title>wasmer_vm::trap::traphandlers::on_host_stack (17 samples, 0.20%)</title><rect x="0.3492%" y="1941" width="0.2047%" height="15" fill="rgb(226,3,54)" fg:x="29" fg:w="17"/><text x="0.5992%" y="1951.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.04%)</title><rect x="0.5178%" y="1925" width="0.0361%" height="15" fill="rgb(245,192,40)" fg:x="43" fg:w="3"/><text x="0.7678%" y="1935.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.04%)</title><rect x="0.5178%" y="1909" width="0.0361%" height="15" fill="rgb(238,167,29)" fg:x="43" fg:w="3"/><text x="0.7678%" y="1919.50"></text></g><g><title>wasmer_vm::trap::traphandlers::on_host_stack::{{closure}} (1 samples, 0.01%)</title><rect x="0.5419%" y="1893" width="0.0120%" height="15" fill="rgb(232,182,51)" fg:x="45" fg:w="1"/><text x="0.7919%" y="1903.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.01%)</title><rect x="0.5419%" y="1877" width="0.0120%" height="15" fill="rgb(231,60,39)" fg:x="45" fg:w="1"/><text x="0.7919%" y="1887.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="0.5419%" y="1861" width="0.0120%" height="15" fill="rgb(208,69,12)" fg:x="45" fg:w="1"/><text x="0.7919%" y="1871.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="0.5419%" y="1845" width="0.0120%" height="15" fill="rgb(235,93,37)" fg:x="45" fg:w="1"/><text x="0.7919%" y="1855.50"></text></g><g><title>__memcpy_avx_unaligned_erms (32 samples, 0.39%)</title><rect x="0.6382%" y="1941" width="0.3854%" height="15" fill="rgb(213,116,39)" fg:x="53" fg:w="32"/><text x="0.8882%" y="1951.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.01%)</title><rect x="1.0236%" y="1941" width="0.0120%" height="15" fill="rgb(222,207,29)" fg:x="85" fg:w="1"/><text x="1.2736%" y="1951.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="1.0236%" y="1925" width="0.0120%" height="15" fill="rgb(206,96,30)" fg:x="85" fg:w="1"/><text x="1.2736%" y="1935.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (3 samples, 0.04%)</title><rect x="1.0959%" y="1893" width="0.0361%" height="15" fill="rgb(218,138,4)" fg:x="91" fg:w="3"/><text x="1.3459%" y="1903.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (3 samples, 0.04%)</title><rect x="1.0959%" y="1877" width="0.0361%" height="15" fill="rgb(250,191,14)" fg:x="91" fg:w="3"/><text x="1.3459%" y="1887.50"></text></g><g><title>core::ptr::write (3 samples, 0.04%)</title><rect x="1.0959%" y="1861" width="0.0361%" height="15" fill="rgb(239,60,40)" fg:x="91" fg:w="3"/><text x="1.3459%" y="1871.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="1.0959%" y="1909" width="0.0482%" height="15" fill="rgb(206,27,48)" fg:x="91" fg:w="4"/><text x="1.3459%" y="1919.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1 samples, 0.01%)</title><rect x="1.1320%" y="1893" width="0.0120%" height="15" fill="rgb(225,35,8)" fg:x="94" fg:w="1"/><text x="1.3820%" y="1903.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1 samples, 0.01%)</title><rect x="1.1320%" y="1877" width="0.0120%" height="15" fill="rgb(250,213,24)" fg:x="94" fg:w="1"/><text x="1.3820%" y="1887.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="1.1320%" y="1861" width="0.0120%" height="15" fill="rgb(247,123,22)" fg:x="94" fg:w="1"/><text x="1.3820%" y="1871.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="1.1320%" y="1845" width="0.0120%" height="15" fill="rgb(231,138,38)" fg:x="94" fg:w="1"/><text x="1.3820%" y="1855.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="1.1320%" y="1829" width="0.0120%" height="15" fill="rgb(231,145,46)" fg:x="94" fg:w="1"/><text x="1.3820%" y="1839.50"></text></g><g><title>mi_malloc (1 samples, 0.01%)</title><rect x="1.1320%" y="1813" width="0.0120%" height="15" fill="rgb(251,118,11)" fg:x="94" fg:w="1"/><text x="1.3820%" y="1823.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.01%)</title><rect x="1.1320%" y="1797" width="0.0120%" height="15" fill="rgb(217,147,25)" fg:x="94" fg:w="1"/><text x="1.3820%" y="1807.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.01%)</title><rect x="1.1320%" y="1781" width="0.0120%" height="15" fill="rgb(247,81,37)" fg:x="94" fg:w="1"/><text x="1.3820%" y="1791.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.01%)</title><rect x="1.1320%" y="1765" width="0.0120%" height="15" fill="rgb(209,12,38)" fg:x="94" fg:w="1"/><text x="1.3820%" y="1775.50"></text></g><g><title>mi_block_next (1 samples, 0.01%)</title><rect x="1.1320%" y="1749" width="0.0120%" height="15" fill="rgb(227,1,9)" fg:x="94" fg:w="1"/><text x="1.3820%" y="1759.50"></text></g><g><title>mi_is_in_same_page (1 samples, 0.01%)</title><rect x="1.1320%" y="1733" width="0.0120%" height="15" fill="rgb(248,47,43)" fg:x="94" fg:w="1"/><text x="1.3820%" y="1743.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="1.1440%" y="1733" width="0.0120%" height="15" fill="rgb(221,10,30)" fg:x="95" fg:w="1"/><text x="1.3940%" y="1743.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.05%)</title><rect x="1.1440%" y="1829" width="0.0482%" height="15" fill="rgb(210,229,1)" fg:x="95" fg:w="4"/><text x="1.3940%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.05%)</title><rect x="1.1440%" y="1813" width="0.0482%" height="15" fill="rgb(222,148,37)" fg:x="95" fg:w="4"/><text x="1.3940%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.05%)</title><rect x="1.1440%" y="1797" width="0.0482%" height="15" fill="rgb(234,67,33)" fg:x="95" fg:w="4"/><text x="1.3940%" y="1807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.05%)</title><rect x="1.1440%" y="1781" width="0.0482%" height="15" fill="rgb(247,98,35)" fg:x="95" fg:w="4"/><text x="1.3940%" y="1791.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.05%)</title><rect x="1.1440%" y="1765" width="0.0482%" height="15" fill="rgb(247,138,52)" fg:x="95" fg:w="4"/><text x="1.3940%" y="1775.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.05%)</title><rect x="1.1440%" y="1749" width="0.0482%" height="15" fill="rgb(213,79,30)" fg:x="95" fg:w="4"/><text x="1.3940%" y="1759.50"></text></g><g><title>mi_malloc (3 samples, 0.04%)</title><rect x="1.1561%" y="1733" width="0.0361%" height="15" fill="rgb(246,177,23)" fg:x="96" fg:w="3"/><text x="1.4061%" y="1743.50"></text></g><g><title>mi_heap_malloc (3 samples, 0.04%)</title><rect x="1.1561%" y="1717" width="0.0361%" height="15" fill="rgb(230,62,27)" fg:x="96" fg:w="3"/><text x="1.4061%" y="1727.50"></text></g><g><title>mi_heap_malloc_small (3 samples, 0.04%)</title><rect x="1.1561%" y="1701" width="0.0361%" height="15" fill="rgb(216,154,8)" fg:x="96" fg:w="3"/><text x="1.4061%" y="1711.50"></text></g><g><title>_mi_page_malloc (3 samples, 0.04%)</title><rect x="1.1561%" y="1685" width="0.0361%" height="15" fill="rgb(244,35,45)" fg:x="96" fg:w="3"/><text x="1.4061%" y="1695.50"></text></g><g><title>mi_block_next (3 samples, 0.04%)</title><rect x="1.1561%" y="1669" width="0.0361%" height="15" fill="rgb(251,115,12)" fg:x="96" fg:w="3"/><text x="1.4061%" y="1679.50"></text></g><g><title>mi_block_nextx (3 samples, 0.04%)</title><rect x="1.1561%" y="1653" width="0.0361%" height="15" fill="rgb(240,54,50)" fg:x="96" fg:w="3"/><text x="1.4061%" y="1663.50"></text></g><g><title>mi_ptr_decode (3 samples, 0.04%)</title><rect x="1.1561%" y="1637" width="0.0361%" height="15" fill="rgb(233,84,52)" fg:x="96" fg:w="3"/><text x="1.4061%" y="1647.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6 samples, 0.07%)</title><rect x="1.1440%" y="1909" width="0.0723%" height="15" fill="rgb(207,117,47)" fg:x="95" fg:w="6"/><text x="1.3940%" y="1919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.07%)</title><rect x="1.1440%" y="1893" width="0.0723%" height="15" fill="rgb(249,43,39)" fg:x="95" fg:w="6"/><text x="1.3940%" y="1903.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.07%)</title><rect x="1.1440%" y="1877" width="0.0723%" height="15" fill="rgb(209,38,44)" fg:x="95" fg:w="6"/><text x="1.3940%" y="1887.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.07%)</title><rect x="1.1440%" y="1861" width="0.0723%" height="15" fill="rgb(236,212,23)" fg:x="95" fg:w="6"/><text x="1.3940%" y="1871.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.07%)</title><rect x="1.1440%" y="1845" width="0.0723%" height="15" fill="rgb(242,79,21)" fg:x="95" fg:w="6"/><text x="1.3940%" y="1855.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.02%)</title><rect x="1.1922%" y="1829" width="0.0241%" height="15" fill="rgb(211,96,35)" fg:x="99" fg:w="2"/><text x="1.4422%" y="1839.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="1.1922%" y="1813" width="0.0241%" height="15" fill="rgb(253,215,40)" fg:x="99" fg:w="2"/><text x="1.4422%" y="1823.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="1.1922%" y="1797" width="0.0241%" height="15" fill="rgb(211,81,21)" fg:x="99" fg:w="2"/><text x="1.4422%" y="1807.50"></text></g><g><title>core::clone::Clone::clone (16 samples, 0.19%)</title><rect x="1.0356%" y="1941" width="0.1927%" height="15" fill="rgb(208,190,38)" fg:x="86" fg:w="16"/><text x="1.2856%" y="1951.50"></text></g><g><title>&lt;vm_library::managed::value::Value as core::clone::Clone&gt;::clone (16 samples, 0.19%)</title><rect x="1.0356%" y="1925" width="0.1927%" height="15" fill="rgb(235,213,38)" fg:x="86" fg:w="16"/><text x="1.2856%" y="1935.50"></text></g><g><title>rug::integer::traits::&lt;impl core::clone::Clone for rug::integer::big::Integer&gt;::clone (1 samples, 0.01%)</title><rect x="1.2163%" y="1909" width="0.0120%" height="15" fill="rgb(237,122,38)" fg:x="101" fg:w="1"/><text x="1.4663%" y="1919.50"></text></g><g><title>rug::ext::xmpz::init_set (1 samples, 0.01%)</title><rect x="1.2163%" y="1893" width="0.0120%" height="15" fill="rgb(244,218,35)" fg:x="101" fg:w="1"/><text x="1.4663%" y="1903.50"></text></g><g><title>__gmpz_init_set (1 samples, 0.01%)</title><rect x="1.2163%" y="1877" width="0.0120%" height="15" fill="rgb(240,68,47)" fg:x="101" fg:w="1"/><text x="1.4663%" y="1887.50"></text></g><g><title>__gmp_default_allocate (1 samples, 0.01%)</title><rect x="1.2163%" y="1861" width="0.0120%" height="15" fill="rgb(210,16,53)" fg:x="101" fg:w="1"/><text x="1.4663%" y="1871.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="1.2163%" y="1845" width="0.0120%" height="15" fill="rgb(235,124,12)" fg:x="101" fg:w="1"/><text x="1.4663%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt; (2 samples, 0.02%)</title><rect x="1.2283%" y="1941" width="0.0241%" height="15" fill="rgb(224,169,11)" fg:x="102" fg:w="2"/><text x="1.4783%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt; (2 samples, 0.02%)</title><rect x="1.2283%" y="1925" width="0.0241%" height="15" fill="rgb(250,166,2)" fg:x="102" fg:w="2"/><text x="1.4783%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;vm_library::managed::value::Value&gt; (2 samples, 0.02%)</title><rect x="1.2283%" y="1909" width="0.0241%" height="15" fill="rgb(242,216,29)" fg:x="102" fg:w="2"/><text x="1.4783%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;vm_library::managed::value::Value&gt;&gt; (2 samples, 0.02%)</title><rect x="1.2283%" y="1893" width="0.0241%" height="15" fill="rgb(230,116,27)" fg:x="102" fg:w="2"/><text x="1.4783%" y="1903.50"></text></g><g><title>__free (2 samples, 0.02%)</title><rect x="1.2283%" y="1877" width="0.0241%" height="15" fill="rgb(228,99,48)" fg:x="102" fg:w="2"/><text x="1.4783%" y="1887.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="1.2404%" y="1861" width="0.0120%" height="15" fill="rgb(253,11,6)" fg:x="103" fg:w="1"/><text x="1.4904%" y="1871.50"></text></g><g><title>__memcpy_avx_unaligned_erms (26 samples, 0.31%)</title><rect x="1.2524%" y="1925" width="0.3131%" height="15" fill="rgb(247,143,39)" fg:x="104" fg:w="26"/><text x="1.5024%" y="1935.50"></text></g><g><title>_mi_memcpy_aligned (7 samples, 0.08%)</title><rect x="1.5896%" y="1781" width="0.0843%" height="15" fill="rgb(236,97,10)" fg:x="132" fg:w="7"/><text x="1.8396%" y="1791.50"></text></g><g><title>_mi_memcpy (7 samples, 0.08%)</title><rect x="1.5896%" y="1765" width="0.0843%" height="15" fill="rgb(233,208,19)" fg:x="132" fg:w="7"/><text x="1.8396%" y="1775.50"></text></g><g><title>__memcpy_avx_unaligned_erms (7 samples, 0.08%)</title><rect x="1.5896%" y="1749" width="0.0843%" height="15" fill="rgb(216,164,2)" fg:x="132" fg:w="7"/><text x="1.8396%" y="1759.50"></text></g><g><title>_mi_page_malloc (2 samples, 0.02%)</title><rect x="1.6859%" y="1749" width="0.0241%" height="15" fill="rgb(220,129,5)" fg:x="140" fg:w="2"/><text x="1.9359%" y="1759.50"></text></g><g><title>mi_block_next (2 samples, 0.02%)</title><rect x="1.6859%" y="1733" width="0.0241%" height="15" fill="rgb(242,17,10)" fg:x="140" fg:w="2"/><text x="1.9359%" y="1743.50"></text></g><g><title>mi_block_nextx (2 samples, 0.02%)</title><rect x="1.6859%" y="1717" width="0.0241%" height="15" fill="rgb(242,107,0)" fg:x="140" fg:w="2"/><text x="1.9359%" y="1727.50"></text></g><g><title>mi_ptr_decode (2 samples, 0.02%)</title><rect x="1.6859%" y="1701" width="0.0241%" height="15" fill="rgb(251,28,31)" fg:x="140" fg:w="2"/><text x="1.9359%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (13 samples, 0.16%)</title><rect x="1.5655%" y="1893" width="0.1566%" height="15" fill="rgb(233,223,10)" fg:x="130" fg:w="13"/><text x="1.8155%" y="1903.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (13 samples, 0.16%)</title><rect x="1.5655%" y="1877" width="0.1566%" height="15" fill="rgb(215,21,27)" fg:x="130" fg:w="13"/><text x="1.8155%" y="1887.50"></text></g><g><title>alloc::raw_vec::finish_grow (13 samples, 0.16%)</title><rect x="1.5655%" y="1861" width="0.1566%" height="15" fill="rgb(232,23,21)" fg:x="130" fg:w="13"/><text x="1.8155%" y="1871.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (12 samples, 0.14%)</title><rect x="1.5776%" y="1845" width="0.1445%" height="15" fill="rgb(244,5,23)" fg:x="131" fg:w="12"/><text x="1.8276%" y="1855.50"></text></g><g><title>alloc::alloc::Global::grow_impl (12 samples, 0.14%)</title><rect x="1.5776%" y="1829" width="0.1445%" height="15" fill="rgb(226,81,46)" fg:x="131" fg:w="12"/><text x="1.8276%" y="1839.50"></text></g><g><title>alloc::alloc::realloc (12 samples, 0.14%)</title><rect x="1.5776%" y="1813" width="0.1445%" height="15" fill="rgb(247,70,30)" fg:x="131" fg:w="12"/><text x="1.8276%" y="1823.50"></text></g><g><title>_mi_heap_realloc_zero (12 samples, 0.14%)</title><rect x="1.5776%" y="1797" width="0.1445%" height="15" fill="rgb(212,68,19)" fg:x="131" fg:w="12"/><text x="1.8276%" y="1807.50"></text></g><g><title>mi_heap_malloc (4 samples, 0.05%)</title><rect x="1.6739%" y="1781" width="0.0482%" height="15" fill="rgb(240,187,13)" fg:x="139" fg:w="4"/><text x="1.9239%" y="1791.50"></text></g><g><title>_mi_malloc_generic (4 samples, 0.05%)</title><rect x="1.6739%" y="1765" width="0.0482%" height="15" fill="rgb(223,113,26)" fg:x="139" fg:w="4"/><text x="1.9239%" y="1775.50"></text></g><g><title>mi_find_page (1 samples, 0.01%)</title><rect x="1.7100%" y="1749" width="0.0120%" height="15" fill="rgb(206,192,2)" fg:x="142" fg:w="1"/><text x="1.9600%" y="1759.50"></text></g><g><title>mi_find_free_page (1 samples, 0.01%)</title><rect x="1.7100%" y="1733" width="0.0120%" height="15" fill="rgb(241,108,4)" fg:x="142" fg:w="1"/><text x="1.9600%" y="1743.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (48 samples, 0.58%)</title><rect x="1.5655%" y="1909" width="0.5780%" height="15" fill="rgb(247,173,49)" fg:x="130" fg:w="48"/><text x="1.8155%" y="1919.50"></text></g><g><title>core::ptr::write (35 samples, 0.42%)</title><rect x="1.7221%" y="1893" width="0.4215%" height="15" fill="rgb(224,114,35)" fg:x="143" fg:w="35"/><text x="1.9721%" y="1903.50"></text></g><g><title>__memcpy_avx_unaligned_erms (35 samples, 0.42%)</title><rect x="1.7221%" y="1877" width="0.4215%" height="15" fill="rgb(245,159,27)" fg:x="143" fg:w="35"/><text x="1.9721%" y="1887.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.04%)</title><rect x="2.1435%" y="1909" width="0.0361%" height="15" fill="rgb(245,172,44)" fg:x="178" fg:w="3"/><text x="2.3935%" y="1919.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.04%)</title><rect x="2.1435%" y="1893" width="0.0361%" height="15" fill="rgb(236,23,11)" fg:x="178" fg:w="3"/><text x="2.3935%" y="1903.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.02%)</title><rect x="2.1556%" y="1877" width="0.0241%" height="15" fill="rgb(205,117,38)" fg:x="179" fg:w="2"/><text x="2.4056%" y="1887.50"></text></g><g><title>&lt;im_rc::nodes::btree::ConsumingIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (137 samples, 1.65%)</title><rect x="0.5539%" y="1957" width="1.6498%" height="15" fill="rgb(237,72,25)" fg:x="46" fg:w="137"/><text x="0.8039%" y="1967.50"></text></g><g><title>im_rc::nodes::btree::ConsumingIter&lt;A&gt;::push_fwd (79 samples, 0.95%)</title><rect x="1.2524%" y="1941" width="0.9513%" height="15" fill="rgb(244,70,9)" fg:x="104" fg:w="79"/><text x="1.5024%" y="1951.50"></text></g><g><title>im_rc::nodes::btree::ConsumingIter&lt;A&gt;::push (53 samples, 0.64%)</title><rect x="1.5655%" y="1925" width="0.6382%" height="15" fill="rgb(217,125,39)" fg:x="130" fg:w="53"/><text x="1.8155%" y="1935.50"></text></g><g><title>sized_chunks::sized_chunk::Chunk&lt;A,N&gt;::pop_back (2 samples, 0.02%)</title><rect x="2.1797%" y="1909" width="0.0241%" height="15" fill="rgb(235,36,10)" fg:x="181" fg:w="2"/><text x="2.4297%" y="1919.50"></text></g><g><title>sized_chunks::sized_chunk::Chunk&lt;A,N&gt;::force_read (2 samples, 0.02%)</title><rect x="2.1797%" y="1893" width="0.0241%" height="15" fill="rgb(251,123,47)" fg:x="181" fg:w="2"/><text x="2.4297%" y="1903.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (2 samples, 0.02%)</title><rect x="2.1797%" y="1877" width="0.0241%" height="15" fill="rgb(221,13,13)" fg:x="181" fg:w="2"/><text x="2.4297%" y="1887.50"></text></g><g><title>core::ptr::read (2 samples, 0.02%)</title><rect x="2.1797%" y="1861" width="0.0241%" height="15" fill="rgb(238,131,9)" fg:x="181" fg:w="2"/><text x="2.4297%" y="1871.50"></text></g><g><title>&lt;im_rc::nodes::btree::ConsumingIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="2.2038%" y="1925" width="0.0120%" height="15" fill="rgb(211,50,8)" fg:x="183" fg:w="1"/><text x="2.4538%" y="1935.50"></text></g><g><title>__rust_probestack (1 samples, 0.01%)</title><rect x="2.2038%" y="1909" width="0.0120%" height="15" fill="rgb(245,182,24)" fg:x="183" fg:w="1"/><text x="2.4538%" y="1919.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="2.2158%" y="1813" width="0.0120%" height="15" fill="rgb(242,14,37)" fg:x="184" fg:w="1"/><text x="2.4658%" y="1823.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="2.2158%" y="1797" width="0.0120%" height="15" fill="rgb(246,228,12)" fg:x="184" fg:w="1"/><text x="2.4658%" y="1807.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="2.2158%" y="1781" width="0.0120%" height="15" fill="rgb(213,55,15)" fg:x="184" fg:w="1"/><text x="2.4658%" y="1791.50"></text></g><g><title>vm_library::managed::value::Value::to_runtime_ticket::{{closure}} (1 samples, 0.01%)</title><rect x="2.2158%" y="1765" width="0.0120%" height="15" fill="rgb(209,9,3)" fg:x="184" fg:w="1"/><text x="2.4658%" y="1775.50"></text></g><g><title>vm_library::managed::value::Value::to_runtime_ticket (1 samples, 0.01%)</title><rect x="2.2158%" y="1749" width="0.0120%" height="15" fill="rgb(230,59,30)" fg:x="184" fg:w="1"/><text x="2.4658%" y="1759.50"></text></g><g><title>__memcpy_avx_unaligned_erms (10 samples, 0.12%)</title><rect x="2.2278%" y="1717" width="0.1204%" height="15" fill="rgb(209,121,21)" fg:x="185" fg:w="10"/><text x="2.4778%" y="1727.50"></text></g><g><title>_mi_page_malloc (2 samples, 0.02%)</title><rect x="2.3483%" y="1637" width="0.0241%" height="15" fill="rgb(220,109,13)" fg:x="195" fg:w="2"/><text x="2.5983%" y="1647.50"></text></g><g><title>mi_block_next (2 samples, 0.02%)</title><rect x="2.3483%" y="1621" width="0.0241%" height="15" fill="rgb(232,18,1)" fg:x="195" fg:w="2"/><text x="2.5983%" y="1631.50"></text></g><g><title>mi_block_nextx (2 samples, 0.02%)</title><rect x="2.3483%" y="1605" width="0.0241%" height="15" fill="rgb(215,41,42)" fg:x="195" fg:w="2"/><text x="2.5983%" y="1615.50"></text></g><g><title>mi_ptr_decode (2 samples, 0.02%)</title><rect x="2.3483%" y="1589" width="0.0241%" height="15" fill="rgb(224,123,36)" fg:x="195" fg:w="2"/><text x="2.5983%" y="1599.50"></text></g><g><title>&lt;im_rc::ord::map::OrdMap&lt;K,V&gt; as core::default::Default&gt;::default (14 samples, 0.17%)</title><rect x="2.2278%" y="1813" width="0.1686%" height="15" fill="rgb(240,125,3)" fg:x="185" fg:w="14"/><text x="2.4778%" y="1823.50"></text></g><g><title>im_rc::ord::map::OrdMap&lt;K,V&gt;::new (14 samples, 0.17%)</title><rect x="2.2278%" y="1797" width="0.1686%" height="15" fill="rgb(205,98,50)" fg:x="185" fg:w="14"/><text x="2.4778%" y="1807.50"></text></g><g><title>im_rc::fakepool::Rc&lt;A&gt;::default (14 samples, 0.17%)</title><rect x="2.2278%" y="1781" width="0.1686%" height="15" fill="rgb(205,185,37)" fg:x="185" fg:w="14"/><text x="2.4778%" y="1791.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::default::Default&gt;::default (14 samples, 0.17%)</title><rect x="2.2278%" y="1765" width="0.1686%" height="15" fill="rgb(238,207,15)" fg:x="185" fg:w="14"/><text x="2.4778%" y="1775.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (14 samples, 0.17%)</title><rect x="2.2278%" y="1749" width="0.1686%" height="15" fill="rgb(213,199,42)" fg:x="185" fg:w="14"/><text x="2.4778%" y="1759.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (14 samples, 0.17%)</title><rect x="2.2278%" y="1733" width="0.1686%" height="15" fill="rgb(235,201,11)" fg:x="185" fg:w="14"/><text x="2.4778%" y="1743.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.05%)</title><rect x="2.3483%" y="1717" width="0.0482%" height="15" fill="rgb(207,46,11)" fg:x="195" fg:w="4"/><text x="2.5983%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.05%)</title><rect x="2.3483%" y="1701" width="0.0482%" height="15" fill="rgb(241,35,35)" fg:x="195" fg:w="4"/><text x="2.5983%" y="1711.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.05%)</title><rect x="2.3483%" y="1685" width="0.0482%" height="15" fill="rgb(243,32,47)" fg:x="195" fg:w="4"/><text x="2.5983%" y="1695.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.05%)</title><rect x="2.3483%" y="1669" width="0.0482%" height="15" fill="rgb(247,202,23)" fg:x="195" fg:w="4"/><text x="2.5983%" y="1679.50"></text></g><g><title>_mi_malloc_generic (4 samples, 0.05%)</title><rect x="2.3483%" y="1653" width="0.0482%" height="15" fill="rgb(219,102,11)" fg:x="195" fg:w="4"/><text x="2.5983%" y="1663.50"></text></g><g><title>mi_find_page (2 samples, 0.02%)</title><rect x="2.3724%" y="1637" width="0.0241%" height="15" fill="rgb(243,110,44)" fg:x="197" fg:w="2"/><text x="2.6224%" y="1647.50"></text></g><g><title>mi_find_free_page (2 samples, 0.02%)</title><rect x="2.3724%" y="1621" width="0.0241%" height="15" fill="rgb(222,74,54)" fg:x="197" fg:w="2"/><text x="2.6224%" y="1631.50"></text></g><g><title>mi_page_queue (1 samples, 0.01%)</title><rect x="2.3844%" y="1605" width="0.0120%" height="15" fill="rgb(216,99,12)" fg:x="198" fg:w="1"/><text x="2.6344%" y="1615.50"></text></g><g><title>__rg_dealloc (1 samples, 0.01%)</title><rect x="2.3964%" y="1797" width="0.0120%" height="15" fill="rgb(226,22,26)" fg:x="199" fg:w="1"/><text x="2.6464%" y="1807.50"></text></g><g><title>&lt;mimalloc::MiMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.01%)</title><rect x="2.3964%" y="1781" width="0.0120%" height="15" fill="rgb(217,163,10)" fg:x="199" fg:w="1"/><text x="2.6464%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="2.4085%" y="1765" width="0.0120%" height="15" fill="rgb(213,25,53)" fg:x="200" fg:w="1"/><text x="2.6585%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;[im_rc::nodes::btree::ConsumingIterItem&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;]&gt; (1 samples, 0.01%)</title><rect x="2.4085%" y="1749" width="0.0120%" height="15" fill="rgb(252,105,26)" fg:x="200" fg:w="1"/><text x="2.6585%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;im_rc::nodes::btree::ConsumingIterItem&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt; (1 samples, 0.01%)</title><rect x="2.4085%" y="1733" width="0.0120%" height="15" fill="rgb(220,39,43)" fg:x="200" fg:w="1"/><text x="2.6585%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;im_rc::nodes::btree::Node&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt; (1 samples, 0.01%)</title><rect x="2.4085%" y="1717" width="0.0120%" height="15" fill="rgb(229,68,48)" fg:x="200" fg:w="1"/><text x="2.6585%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;sized_chunks::sized_chunk::Chunk&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt; (1 samples, 0.01%)</title><rect x="2.4085%" y="1701" width="0.0120%" height="15" fill="rgb(252,8,32)" fg:x="200" fg:w="1"/><text x="2.6585%" y="1711.50"></text></g><g><title>&lt;sized_chunks::sized_chunk::Chunk&lt;A,N&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="2.4085%" y="1685" width="0.0120%" height="15" fill="rgb(223,20,43)" fg:x="200" fg:w="1"/><text x="2.6585%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(vm_library::managed::value::Value,vm_library::managed::value::Value)]&gt; (1 samples, 0.01%)</title><rect x="2.4085%" y="1669" width="0.0120%" height="15" fill="rgb(229,81,49)" fg:x="200" fg:w="1"/><text x="2.6585%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt; (1 samples, 0.01%)</title><rect x="2.4085%" y="1653" width="0.0120%" height="15" fill="rgb(236,28,36)" fg:x="200" fg:w="1"/><text x="2.6585%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;vm_library::managed::value::Value&gt; (1 samples, 0.01%)</title><rect x="2.4085%" y="1637" width="0.0120%" height="15" fill="rgb(249,185,26)" fg:x="200" fg:w="1"/><text x="2.6585%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;im_rc::nodes::btree::ConsumingIterItem&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="2.4085%" y="1781" width="0.0241%" height="15" fill="rgb(249,174,33)" fg:x="200" fg:w="2"/><text x="2.6585%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;im_rc::nodes::btree::ConsumingIterItem&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="2.4205%" y="1765" width="0.0120%" height="15" fill="rgb(233,201,37)" fg:x="201" fg:w="1"/><text x="2.6705%" y="1775.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="2.4205%" y="1749" width="0.0120%" height="15" fill="rgb(221,78,26)" fg:x="201" fg:w="1"/><text x="2.6705%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="2.4205%" y="1733" width="0.0120%" height="15" fill="rgb(250,127,30)" fg:x="201" fg:w="1"/><text x="2.6705%" y="1743.50"></text></g><g><title>__free (1 samples, 0.01%)</title><rect x="2.4326%" y="1749" width="0.0120%" height="15" fill="rgb(230,49,44)" fg:x="202" fg:w="1"/><text x="2.6826%" y="1759.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="2.4326%" y="1733" width="0.0120%" height="15" fill="rgb(229,67,23)" fg:x="202" fg:w="1"/><text x="2.6826%" y="1743.50"></text></g><g><title>__gmpz_clear (1 samples, 0.01%)</title><rect x="2.4446%" y="1749" width="0.0120%" height="15" fill="rgb(249,83,47)" fg:x="203" fg:w="1"/><text x="2.6946%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;im_rc::nodes::btree::ConsumingIter&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt; (5 samples, 0.06%)</title><rect x="2.4085%" y="1797" width="0.0602%" height="15" fill="rgb(215,43,3)" fg:x="200" fg:w="5"/><text x="2.6585%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt; (3 samples, 0.04%)</title><rect x="2.4326%" y="1781" width="0.0361%" height="15" fill="rgb(238,154,13)" fg:x="202" fg:w="3"/><text x="2.6826%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt; (3 samples, 0.04%)</title><rect x="2.4326%" y="1765" width="0.0361%" height="15" fill="rgb(219,56,2)" fg:x="202" fg:w="3"/><text x="2.6826%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;vm_library::managed::value::Value&gt; (1 samples, 0.01%)</title><rect x="2.4566%" y="1749" width="0.0120%" height="15" fill="rgb(233,0,4)" fg:x="204" fg:w="1"/><text x="2.7066%" y="1759.50"></text></g><g><title>&lt;im_rc::ord::map::OrdMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(RK,RV)&gt;&gt;::from_iter (24 samples, 0.29%)</title><rect x="2.2038%" y="1957" width="0.2890%" height="15" fill="rgb(235,30,7)" fg:x="183" fg:w="24"/><text x="2.4538%" y="1967.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.29%)</title><rect x="2.2038%" y="1941" width="0.2890%" height="15" fill="rgb(250,79,13)" fg:x="183" fg:w="24"/><text x="2.4538%" y="1951.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (23 samples, 0.28%)</title><rect x="2.2158%" y="1925" width="0.2770%" height="15" fill="rgb(211,146,34)" fg:x="184" fg:w="23"/><text x="2.4658%" y="1935.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (23 samples, 0.28%)</title><rect x="2.2158%" y="1909" width="0.2770%" height="15" fill="rgb(228,22,38)" fg:x="184" fg:w="23"/><text x="2.4658%" y="1919.50"></text></g><g><title>vm_library::managed::value::Value::to_runtime_ticket::{{closure}} (23 samples, 0.28%)</title><rect x="2.2158%" y="1893" width="0.2770%" height="15" fill="rgb(235,168,5)" fg:x="184" fg:w="23"/><text x="2.4658%" y="1903.50"></text></g><g><title>vm_library::managed::value::Value::to_runtime_ticket (23 samples, 0.28%)</title><rect x="2.2158%" y="1877" width="0.2770%" height="15" fill="rgb(221,155,16)" fg:x="184" fg:w="23"/><text x="2.4658%" y="1887.50"></text></g><g><title>vm_library::managed::value::Value::to_runtime_ticket (23 samples, 0.28%)</title><rect x="2.2158%" y="1861" width="0.2770%" height="15" fill="rgb(215,215,53)" fg:x="184" fg:w="23"/><text x="2.4658%" y="1871.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (23 samples, 0.28%)</title><rect x="2.2158%" y="1845" width="0.2770%" height="15" fill="rgb(223,4,10)" fg:x="184" fg:w="23"/><text x="2.4658%" y="1855.50"></text></g><g><title>&lt;im_rc::ord::map::OrdMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(RK,RV)&gt;&gt;::from_iter (23 samples, 0.28%)</title><rect x="2.2158%" y="1829" width="0.2770%" height="15" fill="rgb(234,103,6)" fg:x="184" fg:w="23"/><text x="2.4658%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;im_rc::nodes::btree::ConsumingIter&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;,vm_library::managed::value::Value::to_runtime_ticket::{{closure}}&gt;&gt; (8 samples, 0.10%)</title><rect x="2.3964%" y="1813" width="0.0963%" height="15" fill="rgb(227,97,0)" fg:x="199" fg:w="8"/><text x="2.6464%" y="1823.50"></text></g><g><title>mi_free (2 samples, 0.02%)</title><rect x="2.4687%" y="1797" width="0.0241%" height="15" fill="rgb(234,150,53)" fg:x="205" fg:w="2"/><text x="2.7187%" y="1807.50"></text></g><g><title>_mi_thread_id (1 samples, 0.01%)</title><rect x="2.4807%" y="1781" width="0.0120%" height="15" fill="rgb(228,201,54)" fg:x="206" fg:w="1"/><text x="2.7307%" y="1791.50"></text></g><g><title>mi_tls_slot (1 samples, 0.01%)</title><rect x="2.4807%" y="1765" width="0.0120%" height="15" fill="rgb(222,22,37)" fg:x="206" fg:w="1"/><text x="2.7307%" y="1775.50"></text></g><g><title>[unknown] (54 samples, 0.65%)</title><rect x="2.5771%" y="1941" width="0.6503%" height="15" fill="rgb(237,53,32)" fg:x="214" fg:w="54"/><text x="2.8271%" y="1951.50"></text></g><g><title>[unknown] (54 samples, 0.65%)</title><rect x="2.5771%" y="1925" width="0.6503%" height="15" fill="rgb(233,25,53)" fg:x="214" fg:w="54"/><text x="2.8271%" y="1935.50"></text></g><g><title>[unknown] (54 samples, 0.65%)</title><rect x="2.5771%" y="1909" width="0.6503%" height="15" fill="rgb(210,40,34)" fg:x="214" fg:w="54"/><text x="2.8271%" y="1919.50"></text></g><g><title>[unknown] (40 samples, 0.48%)</title><rect x="2.7457%" y="1893" width="0.4817%" height="15" fill="rgb(241,220,44)" fg:x="228" fg:w="40"/><text x="2.9957%" y="1903.50"></text></g><g><title>[unknown] (31 samples, 0.37%)</title><rect x="2.8540%" y="1877" width="0.3733%" height="15" fill="rgb(235,28,35)" fg:x="237" fg:w="31"/><text x="3.1040%" y="1887.50"></text></g><g><title>[unknown] (29 samples, 0.35%)</title><rect x="2.8781%" y="1861" width="0.3492%" height="15" fill="rgb(210,56,17)" fg:x="239" fg:w="29"/><text x="3.1281%" y="1871.50"></text></g><g><title>[unknown] (18 samples, 0.22%)</title><rect x="3.0106%" y="1845" width="0.2168%" height="15" fill="rgb(224,130,29)" fg:x="250" fg:w="18"/><text x="3.2606%" y="1855.50"></text></g><g><title>[unknown] (10 samples, 0.12%)</title><rect x="3.1069%" y="1829" width="0.1204%" height="15" fill="rgb(235,212,8)" fg:x="258" fg:w="10"/><text x="3.3569%" y="1839.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="3.1431%" y="1813" width="0.0843%" height="15" fill="rgb(223,33,50)" fg:x="261" fg:w="7"/><text x="3.3931%" y="1823.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="3.2153%" y="1797" width="0.0120%" height="15" fill="rgb(219,149,13)" fg:x="267" fg:w="1"/><text x="3.4653%" y="1807.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="3.2153%" y="1781" width="0.0120%" height="15" fill="rgb(250,156,29)" fg:x="267" fg:w="1"/><text x="3.4653%" y="1791.50"></text></g><g><title>__GI___munmap (2 samples, 0.02%)</title><rect x="3.2274%" y="1941" width="0.0241%" height="15" fill="rgb(216,193,19)" fg:x="268" fg:w="2"/><text x="3.4774%" y="1951.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="3.2274%" y="1925" width="0.0241%" height="15" fill="rgb(216,135,14)" fg:x="268" fg:w="2"/><text x="3.4774%" y="1935.50"></text></g><g><title>crossbeam_epoch::default::pin (1 samples, 0.01%)</title><rect x="3.2514%" y="1941" width="0.0120%" height="15" fill="rgb(241,47,5)" fg:x="270" fg:w="1"/><text x="3.5014%" y="1951.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1 samples, 0.01%)</title><rect x="3.2514%" y="1925" width="0.0120%" height="15" fill="rgb(233,42,35)" fg:x="270" fg:w="1"/><text x="3.5014%" y="1935.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="3.2514%" y="1909" width="0.0120%" height="15" fill="rgb(231,13,6)" fg:x="270" fg:w="1"/><text x="3.5014%" y="1919.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (1 samples, 0.01%)</title><rect x="3.2514%" y="1893" width="0.0120%" height="15" fill="rgb(207,181,40)" fg:x="270" fg:w="1"/><text x="3.5014%" y="1903.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (1 samples, 0.01%)</title><rect x="3.2514%" y="1877" width="0.0120%" height="15" fill="rgb(254,173,49)" fg:x="270" fg:w="1"/><text x="3.5014%" y="1887.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (1 samples, 0.01%)</title><rect x="3.2514%" y="1861" width="0.0120%" height="15" fill="rgb(221,1,38)" fg:x="270" fg:w="1"/><text x="3.5014%" y="1871.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (1 samples, 0.01%)</title><rect x="3.2514%" y="1845" width="0.0120%" height="15" fill="rgb(206,124,46)" fg:x="270" fg:w="1"/><text x="3.5014%" y="1855.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (1 samples, 0.01%)</title><rect x="3.2514%" y="1829" width="0.0120%" height="15" fill="rgb(249,21,11)" fg:x="270" fg:w="1"/><text x="3.5014%" y="1839.50"></text></g><g><title>crossbeam_epoch::sync::queue::Queue&lt;T&gt;::try_pop_if (1 samples, 0.01%)</title><rect x="3.2514%" y="1813" width="0.0120%" height="15" fill="rgb(222,201,40)" fg:x="270" fg:w="1"/><text x="3.5014%" y="1823.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="3.2514%" y="1797" width="0.0120%" height="15" fill="rgb(235,61,29)" fg:x="270" fg:w="1"/><text x="3.5014%" y="1807.50"></text></g><g><title>mi_page_free_list_extend_secure (1 samples, 0.01%)</title><rect x="3.2635%" y="1941" width="0.0120%" height="15" fill="rgb(219,207,3)" fg:x="271" fg:w="1"/><text x="3.5135%" y="1951.50"></text></g><g><title>mi_block_set_next (1 samples, 0.01%)</title><rect x="3.2635%" y="1925" width="0.0120%" height="15" fill="rgb(222,56,46)" fg:x="271" fg:w="1"/><text x="3.5135%" y="1935.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.01%)</title><rect x="3.2635%" y="1909" width="0.0120%" height="15" fill="rgb(239,76,54)" fg:x="271" fg:w="1"/><text x="3.5135%" y="1919.50"></text></g><g><title>mi_ptr_encode (1 samples, 0.01%)</title><rect x="3.2635%" y="1893" width="0.0120%" height="15" fill="rgb(231,124,27)" fg:x="271" fg:w="1"/><text x="3.5135%" y="1903.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="3.2635%" y="1877" width="0.0120%" height="15" fill="rgb(249,195,6)" fg:x="271" fg:w="1"/><text x="3.5135%" y="1887.50"></text></g><g><title>mi_segment_span_allocate (1 samples, 0.01%)</title><rect x="3.2755%" y="1941" width="0.0120%" height="15" fill="rgb(237,174,47)" fg:x="272" fg:w="1"/><text x="3.5255%" y="1951.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="3.2755%" y="1925" width="0.0120%" height="15" fill="rgb(206,201,31)" fg:x="272" fg:w="1"/><text x="3.5255%" y="1935.50"></text></g><g><title>[unknown] (75 samples, 0.90%)</title><rect x="2.4928%" y="1957" width="0.9032%" height="15" fill="rgb(231,57,52)" fg:x="207" fg:w="75"/><text x="2.7428%" y="1967.50"></text></g><g><title>wasmer_vm::mmap::Mmap::make_accessible (9 samples, 0.11%)</title><rect x="3.2876%" y="1941" width="0.1084%" height="15" fill="rgb(248,177,22)" fg:x="273" fg:w="9"/><text x="3.5376%" y="1951.50"></text></g><g><title>region::protect::protect (9 samples, 0.11%)</title><rect x="3.2876%" y="1925" width="0.1084%" height="15" fill="rgb(215,211,37)" fg:x="273" fg:w="9"/><text x="3.5376%" y="1935.50"></text></g><g><title>region::os::unix::protect (9 samples, 0.11%)</title><rect x="3.2876%" y="1909" width="0.1084%" height="15" fill="rgb(241,128,51)" fg:x="273" fg:w="9"/><text x="3.5376%" y="1919.50"></text></g><g><title>__GI___mprotect (9 samples, 0.11%)</title><rect x="3.2876%" y="1893" width="0.1084%" height="15" fill="rgb(227,165,31)" fg:x="273" fg:w="9"/><text x="3.5376%" y="1903.50"></text></g><g><title>[unknown] (9 samples, 0.11%)</title><rect x="3.2876%" y="1877" width="0.1084%" height="15" fill="rgb(228,167,24)" fg:x="273" fg:w="9"/><text x="3.5376%" y="1887.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="3.3478%" y="1861" width="0.0482%" height="15" fill="rgb(228,143,12)" fg:x="278" fg:w="4"/><text x="3.5978%" y="1871.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="3.3960%" y="1941" width="0.0241%" height="15" fill="rgb(249,149,8)" fg:x="282" fg:w="2"/><text x="3.6460%" y="1951.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="3.3960%" y="1925" width="0.0241%" height="15" fill="rgb(243,35,44)" fg:x="282" fg:w="2"/><text x="3.6460%" y="1935.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="3.3960%" y="1909" width="0.0241%" height="15" fill="rgb(246,89,9)" fg:x="282" fg:w="2"/><text x="3.6460%" y="1919.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="3.3960%" y="1893" width="0.0241%" height="15" fill="rgb(233,213,13)" fg:x="282" fg:w="2"/><text x="3.6460%" y="1903.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="3.3960%" y="1877" width="0.0241%" height="15" fill="rgb(233,141,41)" fg:x="282" fg:w="2"/><text x="3.6460%" y="1887.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="3.4080%" y="1861" width="0.0120%" height="15" fill="rgb(239,167,4)" fg:x="283" fg:w="1"/><text x="3.6580%" y="1871.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="3.4080%" y="1845" width="0.0120%" height="15" fill="rgb(209,217,16)" fg:x="283" fg:w="1"/><text x="3.6580%" y="1855.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="3.4080%" y="1829" width="0.0120%" height="15" fill="rgb(219,88,35)" fg:x="283" fg:w="1"/><text x="3.6580%" y="1839.50"></text></g><g><title>[unknown] (17 samples, 0.20%)</title><rect x="3.4562%" y="1925" width="0.2047%" height="15" fill="rgb(220,193,23)" fg:x="287" fg:w="17"/><text x="3.7062%" y="1935.50"></text></g><g><title>[unknown] (17 samples, 0.20%)</title><rect x="3.4562%" y="1909" width="0.2047%" height="15" fill="rgb(230,90,52)" fg:x="287" fg:w="17"/><text x="3.7062%" y="1919.50"></text></g><g><title>[unknown] (17 samples, 0.20%)</title><rect x="3.4562%" y="1893" width="0.2047%" height="15" fill="rgb(252,106,19)" fg:x="287" fg:w="17"/><text x="3.7062%" y="1903.50"></text></g><g><title>[unknown] (15 samples, 0.18%)</title><rect x="3.4803%" y="1877" width="0.1806%" height="15" fill="rgb(206,74,20)" fg:x="289" fg:w="15"/><text x="3.7303%" y="1887.50"></text></g><g><title>[unknown] (12 samples, 0.14%)</title><rect x="3.5164%" y="1861" width="0.1445%" height="15" fill="rgb(230,138,44)" fg:x="292" fg:w="12"/><text x="3.7664%" y="1871.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="3.6488%" y="1845" width="0.0120%" height="15" fill="rgb(235,182,43)" fg:x="303" fg:w="1"/><text x="3.8988%" y="1855.50"></text></g><g><title>__GI___sigsetjmp (1 samples, 0.01%)</title><rect x="3.6609%" y="1925" width="0.0120%" height="15" fill="rgb(242,16,51)" fg:x="304" fg:w="1"/><text x="3.9109%" y="1935.50"></text></g><g><title>__sigjmp_save (2 samples, 0.02%)</title><rect x="3.6729%" y="1925" width="0.0241%" height="15" fill="rgb(248,9,4)" fg:x="305" fg:w="2"/><text x="3.9229%" y="1935.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="3.6850%" y="1909" width="0.0120%" height="15" fill="rgb(210,31,22)" fg:x="306" fg:w="1"/><text x="3.9350%" y="1919.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="3.6850%" y="1893" width="0.0120%" height="15" fill="rgb(239,54,39)" fg:x="306" fg:w="1"/><text x="3.9350%" y="1903.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="3.6850%" y="1877" width="0.0120%" height="15" fill="rgb(230,99,41)" fg:x="306" fg:w="1"/><text x="3.9350%" y="1887.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="3.6850%" y="1861" width="0.0120%" height="15" fill="rgb(253,106,12)" fg:x="306" fg:w="1"/><text x="3.9350%" y="1871.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="3.6850%" y="1845" width="0.0120%" height="15" fill="rgb(213,46,41)" fg:x="306" fg:w="1"/><text x="3.9350%" y="1855.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="3.7572%" y="1829" width="0.0120%" height="15" fill="rgb(215,133,35)" fg:x="312" fg:w="1"/><text x="4.0072%" y="1839.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="3.7572%" y="1813" width="0.0120%" height="15" fill="rgb(213,28,5)" fg:x="312" fg:w="1"/><text x="4.0072%" y="1823.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="3.7572%" y="1797" width="0.0120%" height="15" fill="rgb(215,77,49)" fg:x="312" fg:w="1"/><text x="4.0072%" y="1807.50"></text></g><g><title>std::io::stdio::set_output_capture (6 samples, 0.07%)</title><rect x="3.7211%" y="1845" width="0.0723%" height="15" fill="rgb(248,100,22)" fg:x="309" fg:w="6"/><text x="3.9711%" y="1855.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (2 samples, 0.02%)</title><rect x="3.7693%" y="1829" width="0.0241%" height="15" fill="rgb(208,67,9)" fg:x="313" fg:w="2"/><text x="4.0193%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;bool&gt;&gt; (1 samples, 0.01%)</title><rect x="3.8054%" y="1685" width="0.0120%" height="15" fill="rgb(219,133,21)" fg:x="316" fg:w="1"/><text x="4.0554%" y="1695.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="3.8054%" y="1669" width="0.0120%" height="15" fill="rgb(246,46,29)" fg:x="316" fg:w="1"/><text x="4.0554%" y="1679.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.01%)</title><rect x="3.8054%" y="1653" width="0.0120%" height="15" fill="rgb(246,185,52)" fg:x="316" fg:w="1"/><text x="4.0554%" y="1663.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (1 samples, 0.01%)</title><rect x="3.8054%" y="1637" width="0.0120%" height="15" fill="rgb(252,136,11)" fg:x="316" fg:w="1"/><text x="4.0554%" y="1647.50"></text></g><g><title>&lt;rayon_core::latch::LockLatch as rayon_core::latch::Latch&gt;::set (2 samples, 0.02%)</title><rect x="3.8054%" y="1701" width="0.0241%" height="15" fill="rgb(219,138,53)" fg:x="316" fg:w="2"/><text x="4.0554%" y="1711.50"></text></g><g><title>syscall (1 samples, 0.01%)</title><rect x="3.8174%" y="1685" width="0.0120%" height="15" fill="rgb(211,51,23)" fg:x="317" fg:w="1"/><text x="4.0674%" y="1695.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="3.8174%" y="1669" width="0.0120%" height="15" fill="rgb(247,221,28)" fg:x="317" fg:w="1"/><text x="4.0674%" y="1679.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="3.8174%" y="1653" width="0.0120%" height="15" fill="rgb(251,222,45)" fg:x="317" fg:w="1"/><text x="4.0674%" y="1663.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="3.8174%" y="1637" width="0.0120%" height="15" fill="rgb(217,162,53)" fg:x="317" fg:w="1"/><text x="4.0674%" y="1647.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="3.8174%" y="1621" width="0.0120%" height="15" fill="rgb(229,93,14)" fg:x="317" fg:w="1"/><text x="4.0674%" y="1631.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="3.8174%" y="1605" width="0.0120%" height="15" fill="rgb(209,67,49)" fg:x="317" fg:w="1"/><text x="4.0674%" y="1615.50"></text></g><g><title>mi_page_extend_free (32 samples, 0.39%)</title><rect x="3.8295%" y="1509" width="0.3854%" height="15" fill="rgb(213,87,29)" fg:x="318" fg:w="32"/><text x="4.0795%" y="1519.50"></text></g><g><title>mi_page_free_list_extend_secure (32 samples, 0.39%)</title><rect x="3.8295%" y="1493" width="0.3854%" height="15" fill="rgb(205,151,52)" fg:x="318" fg:w="32"/><text x="4.0795%" y="1503.50"></text></g><g><title>mi_block_set_next (31 samples, 0.37%)</title><rect x="3.8415%" y="1477" width="0.3733%" height="15" fill="rgb(253,215,39)" fg:x="319" fg:w="31"/><text x="4.0915%" y="1487.50"></text></g><g><title>mi_block_set_nextx (31 samples, 0.37%)</title><rect x="3.8415%" y="1461" width="0.3733%" height="15" fill="rgb(221,220,41)" fg:x="319" fg:w="31"/><text x="4.0915%" y="1471.50"></text></g><g><title>mi_ptr_encode (31 samples, 0.37%)</title><rect x="3.8415%" y="1445" width="0.3733%" height="15" fill="rgb(218,133,21)" fg:x="319" fg:w="31"/><text x="4.0915%" y="1455.50"></text></g><g><title>[unknown] (31 samples, 0.37%)</title><rect x="3.8415%" y="1429" width="0.3733%" height="15" fill="rgb(221,193,43)" fg:x="319" fg:w="31"/><text x="4.0915%" y="1439.50"></text></g><g><title>[unknown] (31 samples, 0.37%)</title><rect x="3.8415%" y="1413" width="0.3733%" height="15" fill="rgb(240,128,52)" fg:x="319" fg:w="31"/><text x="4.0915%" y="1423.50"></text></g><g><title>[unknown] (31 samples, 0.37%)</title><rect x="3.8415%" y="1397" width="0.3733%" height="15" fill="rgb(253,114,12)" fg:x="319" fg:w="31"/><text x="4.0915%" y="1407.50"></text></g><g><title>[unknown] (31 samples, 0.37%)</title><rect x="3.8415%" y="1381" width="0.3733%" height="15" fill="rgb(215,223,47)" fg:x="319" fg:w="31"/><text x="4.0915%" y="1391.50"></text></g><g><title>[unknown] (26 samples, 0.31%)</title><rect x="3.9017%" y="1365" width="0.3131%" height="15" fill="rgb(248,225,23)" fg:x="324" fg:w="26"/><text x="4.1517%" y="1375.50"></text></g><g><title>[unknown] (25 samples, 0.30%)</title><rect x="3.9138%" y="1349" width="0.3011%" height="15" fill="rgb(250,108,0)" fg:x="325" fg:w="25"/><text x="4.1638%" y="1359.50"></text></g><g><title>[unknown] (18 samples, 0.22%)</title><rect x="3.9981%" y="1333" width="0.2168%" height="15" fill="rgb(228,208,7)" fg:x="332" fg:w="18"/><text x="4.2481%" y="1343.50"></text></g><g><title>[unknown] (16 samples, 0.19%)</title><rect x="4.0222%" y="1317" width="0.1927%" height="15" fill="rgb(244,45,10)" fg:x="334" fg:w="16"/><text x="4.2722%" y="1327.50"></text></g><g><title>[unknown] (13 samples, 0.16%)</title><rect x="4.0583%" y="1301" width="0.1566%" height="15" fill="rgb(207,125,25)" fg:x="337" fg:w="13"/><text x="4.3083%" y="1311.50"></text></g><g><title>[unknown] (9 samples, 0.11%)</title><rect x="4.1065%" y="1285" width="0.1084%" height="15" fill="rgb(210,195,18)" fg:x="341" fg:w="9"/><text x="4.3565%" y="1295.50"></text></g><g><title>[unknown] (8 samples, 0.10%)</title><rect x="4.1185%" y="1269" width="0.0963%" height="15" fill="rgb(249,80,12)" fg:x="342" fg:w="8"/><text x="4.3685%" y="1279.50"></text></g><g><title>mi_page_init (1 samples, 0.01%)</title><rect x="4.2148%" y="1509" width="0.0120%" height="15" fill="rgb(221,65,9)" fg:x="350" fg:w="1"/><text x="4.4648%" y="1519.50"></text></g><g><title>_mi_heap_random_next (1 samples, 0.01%)</title><rect x="4.2148%" y="1493" width="0.0120%" height="15" fill="rgb(235,49,36)" fg:x="350" fg:w="1"/><text x="4.4648%" y="1503.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="4.2389%" y="1445" width="0.0241%" height="15" fill="rgb(225,32,20)" fg:x="352" fg:w="2"/><text x="4.4889%" y="1455.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.2510%" y="1429" width="0.0120%" height="15" fill="rgb(215,141,46)" fg:x="353" fg:w="1"/><text x="4.5010%" y="1439.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.2510%" y="1413" width="0.0120%" height="15" fill="rgb(250,160,47)" fg:x="353" fg:w="1"/><text x="4.5010%" y="1423.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.2510%" y="1397" width="0.0120%" height="15" fill="rgb(216,222,40)" fg:x="353" fg:w="1"/><text x="4.5010%" y="1407.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.2510%" y="1381" width="0.0120%" height="15" fill="rgb(234,217,39)" fg:x="353" fg:w="1"/><text x="4.5010%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.2510%" y="1365" width="0.0120%" height="15" fill="rgb(207,178,40)" fg:x="353" fg:w="1"/><text x="4.5010%" y="1375.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.2510%" y="1349" width="0.0120%" height="15" fill="rgb(221,136,13)" fg:x="353" fg:w="1"/><text x="4.5010%" y="1359.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.2510%" y="1333" width="0.0120%" height="15" fill="rgb(249,199,10)" fg:x="353" fg:w="1"/><text x="4.5010%" y="1343.50"></text></g><g><title>__memset_avx2_unaligned_erms (112 samples, 1.35%)</title><rect x="4.2630%" y="1445" width="1.3487%" height="15" fill="rgb(249,222,13)" fg:x="354" fg:w="112"/><text x="4.5130%" y="1455.50"></text></g><g><title>[unknown] (112 samples, 1.35%)</title><rect x="4.2630%" y="1429" width="1.3487%" height="15" fill="rgb(244,185,38)" fg:x="354" fg:w="112"/><text x="4.5130%" y="1439.50"></text></g><g><title>[unknown] (109 samples, 1.31%)</title><rect x="4.2991%" y="1413" width="1.3126%" height="15" fill="rgb(236,202,9)" fg:x="357" fg:w="109"/><text x="4.5491%" y="1423.50"></text></g><g><title>[unknown] (109 samples, 1.31%)</title><rect x="4.2991%" y="1397" width="1.3126%" height="15" fill="rgb(250,229,37)" fg:x="357" fg:w="109"/><text x="4.5491%" y="1407.50"></text></g><g><title>[unknown] (109 samples, 1.31%)</title><rect x="4.2991%" y="1381" width="1.3126%" height="15" fill="rgb(206,174,23)" fg:x="357" fg:w="109"/><text x="4.5491%" y="1391.50"></text></g><g><title>[unknown] (83 samples, 1.00%)</title><rect x="4.6122%" y="1365" width="0.9995%" height="15" fill="rgb(211,33,43)" fg:x="383" fg:w="83"/><text x="4.8622%" y="1375.50"></text></g><g><title>[unknown] (65 samples, 0.78%)</title><rect x="4.8290%" y="1349" width="0.7828%" height="15" fill="rgb(245,58,50)" fg:x="401" fg:w="65"/><text x="5.0790%" y="1359.50"></text></g><g><title>[unknown] (48 samples, 0.58%)</title><rect x="5.0337%" y="1333" width="0.5780%" height="15" fill="rgb(244,68,36)" fg:x="418" fg:w="48"/><text x="5.2837%" y="1343.50"></text></g><g><title>[unknown] (45 samples, 0.54%)</title><rect x="5.0698%" y="1317" width="0.5419%" height="15" fill="rgb(232,229,15)" fg:x="421" fg:w="45"/><text x="5.3198%" y="1327.50"></text></g><g><title>[unknown] (37 samples, 0.45%)</title><rect x="5.1662%" y="1301" width="0.4456%" height="15" fill="rgb(254,30,23)" fg:x="429" fg:w="37"/><text x="5.4162%" y="1311.50"></text></g><g><title>[unknown] (29 samples, 0.35%)</title><rect x="5.2625%" y="1285" width="0.3492%" height="15" fill="rgb(235,160,14)" fg:x="437" fg:w="29"/><text x="5.5125%" y="1295.50"></text></g><g><title>[unknown] (19 samples, 0.23%)</title><rect x="5.3829%" y="1269" width="0.2288%" height="15" fill="rgb(212,155,44)" fg:x="447" fg:w="19"/><text x="5.6329%" y="1279.50"></text></g><g><title>_mi_arena_alloc_aligned (6 samples, 0.07%)</title><rect x="5.6118%" y="1445" width="0.0723%" height="15" fill="rgb(226,2,50)" fg:x="466" fg:w="6"/><text x="5.8618%" y="1455.50"></text></g><g><title>_mi_os_alloc_aligned (6 samples, 0.07%)</title><rect x="5.6118%" y="1429" width="0.0723%" height="15" fill="rgb(234,177,6)" fg:x="466" fg:w="6"/><text x="5.8618%" y="1439.50"></text></g><g><title>mi_os_mem_alloc_aligned (6 samples, 0.07%)</title><rect x="5.6118%" y="1413" width="0.0723%" height="15" fill="rgb(217,24,9)" fg:x="466" fg:w="6"/><text x="5.8618%" y="1423.50"></text></g><g><title>mi_os_mem_alloc (6 samples, 0.07%)</title><rect x="5.6118%" y="1397" width="0.0723%" height="15" fill="rgb(220,13,46)" fg:x="466" fg:w="6"/><text x="5.8618%" y="1407.50"></text></g><g><title>mi_unix_mmap (6 samples, 0.07%)</title><rect x="5.6118%" y="1381" width="0.0723%" height="15" fill="rgb(239,221,27)" fg:x="466" fg:w="6"/><text x="5.8618%" y="1391.50"></text></g><g><title>mi_unix_mmapx (6 samples, 0.07%)</title><rect x="5.6118%" y="1365" width="0.0723%" height="15" fill="rgb(222,198,25)" fg:x="466" fg:w="6"/><text x="5.8618%" y="1375.50"></text></g><g><title>__GI___mmap64 (6 samples, 0.07%)</title><rect x="5.6118%" y="1349" width="0.0723%" height="15" fill="rgb(211,99,13)" fg:x="466" fg:w="6"/><text x="5.8618%" y="1359.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="5.6118%" y="1333" width="0.0723%" height="15" fill="rgb(232,111,31)" fg:x="466" fg:w="6"/><text x="5.8618%" y="1343.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="5.6118%" y="1317" width="0.0723%" height="15" fill="rgb(245,82,37)" fg:x="466" fg:w="6"/><text x="5.8618%" y="1327.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="5.6118%" y="1301" width="0.0723%" height="15" fill="rgb(227,149,46)" fg:x="466" fg:w="6"/><text x="5.8618%" y="1311.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="5.6238%" y="1285" width="0.0602%" height="15" fill="rgb(218,36,50)" fg:x="467" fg:w="5"/><text x="5.8738%" y="1295.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="5.6238%" y="1269" width="0.0602%" height="15" fill="rgb(226,80,48)" fg:x="467" fg:w="5"/><text x="5.8738%" y="1279.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="5.6479%" y="1253" width="0.0361%" height="15" fill="rgb(238,224,15)" fg:x="469" fg:w="3"/><text x="5.8979%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="5.6720%" y="1237" width="0.0120%" height="15" fill="rgb(241,136,10)" fg:x="471" fg:w="1"/><text x="5.9220%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="5.6720%" y="1221" width="0.0120%" height="15" fill="rgb(208,32,45)" fg:x="471" fg:w="1"/><text x="5.9220%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="5.6720%" y="1205" width="0.0120%" height="15" fill="rgb(207,135,9)" fg:x="471" fg:w="1"/><text x="5.9220%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="5.6720%" y="1189" width="0.0120%" height="15" fill="rgb(206,86,44)" fg:x="471" fg:w="1"/><text x="5.9220%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="5.6720%" y="1173" width="0.0120%" height="15" fill="rgb(245,177,15)" fg:x="471" fg:w="1"/><text x="5.9220%" y="1183.50"></text></g><g><title>_mi_clock_now (1 samples, 0.01%)</title><rect x="5.6840%" y="1445" width="0.0120%" height="15" fill="rgb(206,64,50)" fg:x="472" fg:w="1"/><text x="5.9340%" y="1455.50"></text></g><g><title>__clock_gettime_2 (1 samples, 0.01%)</title><rect x="5.6840%" y="1429" width="0.0120%" height="15" fill="rgb(234,36,40)" fg:x="472" fg:w="1"/><text x="5.9340%" y="1439.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.01%)</title><rect x="5.6840%" y="1413" width="0.0120%" height="15" fill="rgb(213,64,8)" fg:x="472" fg:w="1"/><text x="5.9340%" y="1423.50"></text></g><g><title>_mi_os_commit (4 samples, 0.05%)</title><rect x="5.6961%" y="1445" width="0.0482%" height="15" fill="rgb(210,75,36)" fg:x="473" fg:w="4"/><text x="5.9461%" y="1455.50"></text></g><g><title>mi_os_commitx (4 samples, 0.05%)</title><rect x="5.6961%" y="1429" width="0.0482%" height="15" fill="rgb(229,88,21)" fg:x="473" fg:w="4"/><text x="5.9461%" y="1439.50"></text></g><g><title>__GI___mprotect (4 samples, 0.05%)</title><rect x="5.6961%" y="1413" width="0.0482%" height="15" fill="rgb(252,204,47)" fg:x="473" fg:w="4"/><text x="5.9461%" y="1423.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="5.6961%" y="1397" width="0.0482%" height="15" fill="rgb(208,77,27)" fg:x="473" fg:w="4"/><text x="5.9461%" y="1407.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="5.6961%" y="1381" width="0.0482%" height="15" fill="rgb(221,76,26)" fg:x="473" fg:w="4"/><text x="5.9461%" y="1391.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="5.6961%" y="1365" width="0.0482%" height="15" fill="rgb(225,139,18)" fg:x="473" fg:w="4"/><text x="5.9461%" y="1375.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="5.6961%" y="1349" width="0.0482%" height="15" fill="rgb(230,137,11)" fg:x="473" fg:w="4"/><text x="5.9461%" y="1359.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="5.6961%" y="1333" width="0.0482%" height="15" fill="rgb(212,28,1)" fg:x="473" fg:w="4"/><text x="5.9461%" y="1343.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="5.6961%" y="1317" width="0.0482%" height="15" fill="rgb(248,164,17)" fg:x="473" fg:w="4"/><text x="5.9461%" y="1327.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="5.6961%" y="1301" width="0.0482%" height="15" fill="rgb(222,171,42)" fg:x="473" fg:w="4"/><text x="5.9461%" y="1311.50"></text></g><g><title>_mi_os_protect (12 samples, 0.14%)</title><rect x="5.7442%" y="1445" width="0.1445%" height="15" fill="rgb(243,84,45)" fg:x="477" fg:w="12"/><text x="5.9942%" y="1455.50"></text></g><g><title>mi_os_protectx (12 samples, 0.14%)</title><rect x="5.7442%" y="1429" width="0.1445%" height="15" fill="rgb(252,49,23)" fg:x="477" fg:w="12"/><text x="5.9942%" y="1439.50"></text></g><g><title>__GI___mprotect (12 samples, 0.14%)</title><rect x="5.7442%" y="1413" width="0.1445%" height="15" fill="rgb(215,19,7)" fg:x="477" fg:w="12"/><text x="5.9942%" y="1423.50"></text></g><g><title>[unknown] (12 samples, 0.14%)</title><rect x="5.7442%" y="1397" width="0.1445%" height="15" fill="rgb(238,81,41)" fg:x="477" fg:w="12"/><text x="5.9942%" y="1407.50"></text></g><g><title>[unknown] (12 samples, 0.14%)</title><rect x="5.7442%" y="1381" width="0.1445%" height="15" fill="rgb(210,199,37)" fg:x="477" fg:w="12"/><text x="5.9942%" y="1391.50"></text></g><g><title>[unknown] (12 samples, 0.14%)</title><rect x="5.7442%" y="1365" width="0.1445%" height="15" fill="rgb(244,192,49)" fg:x="477" fg:w="12"/><text x="5.9942%" y="1375.50"></text></g><g><title>[unknown] (12 samples, 0.14%)</title><rect x="5.7442%" y="1349" width="0.1445%" height="15" fill="rgb(226,211,11)" fg:x="477" fg:w="12"/><text x="5.9942%" y="1359.50"></text></g><g><title>[unknown] (12 samples, 0.14%)</title><rect x="5.7442%" y="1333" width="0.1445%" height="15" fill="rgb(236,162,54)" fg:x="477" fg:w="12"/><text x="5.9942%" y="1343.50"></text></g><g><title>[unknown] (11 samples, 0.13%)</title><rect x="5.7563%" y="1317" width="0.1325%" height="15" fill="rgb(220,229,9)" fg:x="478" fg:w="11"/><text x="6.0063%" y="1327.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="5.8044%" y="1301" width="0.0843%" height="15" fill="rgb(250,87,22)" fg:x="482" fg:w="7"/><text x="6.0544%" y="1311.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="5.8646%" y="1285" width="0.0241%" height="15" fill="rgb(239,43,17)" fg:x="487" fg:w="2"/><text x="6.1146%" y="1295.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="5.8646%" y="1269" width="0.0241%" height="15" fill="rgb(231,177,25)" fg:x="487" fg:w="2"/><text x="6.1146%" y="1279.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="5.8646%" y="1253" width="0.0241%" height="15" fill="rgb(219,179,1)" fg:x="487" fg:w="2"/><text x="6.1146%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="5.8767%" y="1237" width="0.0120%" height="15" fill="rgb(238,219,53)" fg:x="488" fg:w="1"/><text x="6.1267%" y="1247.50"></text></g><g><title>_mi_segment_cache_pop (1 samples, 0.01%)</title><rect x="5.8887%" y="1445" width="0.0120%" height="15" fill="rgb(232,167,36)" fg:x="489" fg:w="1"/><text x="6.1387%" y="1455.50"></text></g><g><title>_mi_bitmap_try_find_from_claim (1 samples, 0.01%)</title><rect x="5.8887%" y="1429" width="0.0120%" height="15" fill="rgb(244,19,51)" fg:x="489" fg:w="1"/><text x="6.1387%" y="1439.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="5.8887%" y="1413" width="0.0120%" height="15" fill="rgb(224,6,22)" fg:x="489" fg:w="1"/><text x="6.1387%" y="1423.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="5.8887%" y="1397" width="0.0120%" height="15" fill="rgb(224,145,5)" fg:x="489" fg:w="1"/><text x="6.1387%" y="1407.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="5.8887%" y="1381" width="0.0120%" height="15" fill="rgb(234,130,49)" fg:x="489" fg:w="1"/><text x="6.1387%" y="1391.50"></text></g><g><title>_mi_stat_increase (4 samples, 0.05%)</title><rect x="5.9008%" y="1445" width="0.0482%" height="15" fill="rgb(254,6,2)" fg:x="490" fg:w="4"/><text x="6.1508%" y="1455.50"></text></g><g><title>mi_stat_update (4 samples, 0.05%)</title><rect x="5.9008%" y="1429" width="0.0482%" height="15" fill="rgb(208,96,46)" fg:x="490" fg:w="4"/><text x="6.1508%" y="1439.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="5.9369%" y="1413" width="0.0120%" height="15" fill="rgb(239,3,39)" fg:x="493" fg:w="1"/><text x="6.1869%" y="1423.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="5.9369%" y="1397" width="0.0120%" height="15" fill="rgb(233,210,1)" fg:x="493" fg:w="1"/><text x="6.1869%" y="1407.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="5.9369%" y="1381" width="0.0120%" height="15" fill="rgb(244,137,37)" fg:x="493" fg:w="1"/><text x="6.1869%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="5.9369%" y="1365" width="0.0120%" height="15" fill="rgb(240,136,2)" fg:x="493" fg:w="1"/><text x="6.1869%" y="1375.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="5.9369%" y="1349" width="0.0120%" height="15" fill="rgb(239,18,37)" fg:x="493" fg:w="1"/><text x="6.1869%" y="1359.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="5.9369%" y="1333" width="0.0120%" height="15" fill="rgb(218,185,22)" fg:x="493" fg:w="1"/><text x="6.1869%" y="1343.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="5.9369%" y="1317" width="0.0120%" height="15" fill="rgb(225,218,4)" fg:x="493" fg:w="1"/><text x="6.1869%" y="1327.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="5.9369%" y="1301" width="0.0120%" height="15" fill="rgb(230,182,32)" fg:x="493" fg:w="1"/><text x="6.1869%" y="1311.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="5.9369%" y="1285" width="0.0120%" height="15" fill="rgb(242,56,43)" fg:x="493" fg:w="1"/><text x="6.1869%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="5.9369%" y="1269" width="0.0120%" height="15" fill="rgb(233,99,24)" fg:x="493" fg:w="1"/><text x="6.1869%" y="1279.50"></text></g><g><title>_mi_os_commit (4 samples, 0.05%)</title><rect x="5.9489%" y="1413" width="0.0482%" height="15" fill="rgb(234,209,42)" fg:x="494" fg:w="4"/><text x="6.1989%" y="1423.50"></text></g><g><title>mi_os_commitx (4 samples, 0.05%)</title><rect x="5.9489%" y="1397" width="0.0482%" height="15" fill="rgb(227,7,12)" fg:x="494" fg:w="4"/><text x="6.1989%" y="1407.50"></text></g><g><title>__GI___mprotect (4 samples, 0.05%)</title><rect x="5.9489%" y="1381" width="0.0482%" height="15" fill="rgb(245,203,43)" fg:x="494" fg:w="4"/><text x="6.1989%" y="1391.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="5.9489%" y="1365" width="0.0482%" height="15" fill="rgb(238,205,33)" fg:x="494" fg:w="4"/><text x="6.1989%" y="1375.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="5.9489%" y="1349" width="0.0482%" height="15" fill="rgb(231,56,7)" fg:x="494" fg:w="4"/><text x="6.1989%" y="1359.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="5.9489%" y="1333" width="0.0482%" height="15" fill="rgb(244,186,29)" fg:x="494" fg:w="4"/><text x="6.1989%" y="1343.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="5.9489%" y="1317" width="0.0482%" height="15" fill="rgb(234,111,31)" fg:x="494" fg:w="4"/><text x="6.1989%" y="1327.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="5.9489%" y="1301" width="0.0482%" height="15" fill="rgb(241,149,10)" fg:x="494" fg:w="4"/><text x="6.1989%" y="1311.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="5.9610%" y="1285" width="0.0361%" height="15" fill="rgb(249,206,44)" fg:x="495" fg:w="3"/><text x="6.2110%" y="1295.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="5.9610%" y="1269" width="0.0361%" height="15" fill="rgb(251,153,30)" fg:x="495" fg:w="3"/><text x="6.2110%" y="1279.50"></text></g><g><title>mi_segment_ensure_committed (5 samples, 0.06%)</title><rect x="5.9489%" y="1445" width="0.0602%" height="15" fill="rgb(239,152,38)" fg:x="494" fg:w="5"/><text x="6.1989%" y="1455.50"></text></g><g><title>mi_segment_commitx (5 samples, 0.06%)</title><rect x="5.9489%" y="1429" width="0.0602%" height="15" fill="rgb(249,139,47)" fg:x="494" fg:w="5"/><text x="6.1989%" y="1439.50"></text></g><g><title>mi_commit_mask_is_empty (1 samples, 0.01%)</title><rect x="5.9971%" y="1413" width="0.0120%" height="15" fill="rgb(244,64,35)" fg:x="498" fg:w="1"/><text x="6.2471%" y="1423.50"></text></g><g><title>mi_segment_alloc (152 samples, 1.83%)</title><rect x="4.2269%" y="1477" width="1.8304%" height="15" fill="rgb(216,46,15)" fg:x="351" fg:w="152"/><text x="4.4769%" y="1487.50">m..</text></g><g><title>mi_segment_init (152 samples, 1.83%)</title><rect x="4.2269%" y="1461" width="1.8304%" height="15" fill="rgb(250,74,19)" fg:x="351" fg:w="152"/><text x="4.4769%" y="1471.50">m..</text></g><g><title>mi_segment_span_allocate (4 samples, 0.05%)</title><rect x="6.0092%" y="1445" width="0.0482%" height="15" fill="rgb(249,42,33)" fg:x="499" fg:w="4"/><text x="6.2592%" y="1455.50"></text></g><g><title>mi_segment_ensure_committed (4 samples, 0.05%)</title><rect x="6.0092%" y="1429" width="0.0482%" height="15" fill="rgb(242,149,17)" fg:x="499" fg:w="4"/><text x="6.2592%" y="1439.50"></text></g><g><title>mi_segment_commitx (4 samples, 0.05%)</title><rect x="6.0092%" y="1413" width="0.0482%" height="15" fill="rgb(244,29,21)" fg:x="499" fg:w="4"/><text x="6.2592%" y="1423.50"></text></g><g><title>_mi_os_commit (4 samples, 0.05%)</title><rect x="6.0092%" y="1397" width="0.0482%" height="15" fill="rgb(220,130,37)" fg:x="499" fg:w="4"/><text x="6.2592%" y="1407.50"></text></g><g><title>mi_os_commitx (4 samples, 0.05%)</title><rect x="6.0092%" y="1381" width="0.0482%" height="15" fill="rgb(211,67,2)" fg:x="499" fg:w="4"/><text x="6.2592%" y="1391.50"></text></g><g><title>__GI___mprotect (4 samples, 0.05%)</title><rect x="6.0092%" y="1365" width="0.0482%" height="15" fill="rgb(235,68,52)" fg:x="499" fg:w="4"/><text x="6.2592%" y="1375.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="6.0092%" y="1349" width="0.0482%" height="15" fill="rgb(246,142,3)" fg:x="499" fg:w="4"/><text x="6.2592%" y="1359.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="6.0092%" y="1333" width="0.0482%" height="15" fill="rgb(241,25,7)" fg:x="499" fg:w="4"/><text x="6.2592%" y="1343.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="6.0092%" y="1317" width="0.0482%" height="15" fill="rgb(242,119,39)" fg:x="499" fg:w="4"/><text x="6.2592%" y="1327.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="6.0092%" y="1301" width="0.0482%" height="15" fill="rgb(241,98,45)" fg:x="499" fg:w="4"/><text x="6.2592%" y="1311.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="6.0092%" y="1285" width="0.0482%" height="15" fill="rgb(254,28,30)" fg:x="499" fg:w="4"/><text x="6.2592%" y="1295.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="6.0212%" y="1269" width="0.0361%" height="15" fill="rgb(241,142,54)" fg:x="500" fg:w="3"/><text x="6.2712%" y="1279.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="6.0212%" y="1253" width="0.0361%" height="15" fill="rgb(222,85,15)" fg:x="500" fg:w="3"/><text x="6.2712%" y="1263.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="6.0332%" y="1237" width="0.0241%" height="15" fill="rgb(210,85,47)" fg:x="501" fg:w="2"/><text x="6.2832%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.0453%" y="1221" width="0.0120%" height="15" fill="rgb(224,206,25)" fg:x="502" fg:w="1"/><text x="6.2953%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.0453%" y="1205" width="0.0120%" height="15" fill="rgb(243,201,19)" fg:x="502" fg:w="1"/><text x="6.2953%" y="1215.50"></text></g><g><title>mi_segment_reclaim_or_alloc (153 samples, 1.84%)</title><rect x="4.2269%" y="1493" width="1.8425%" height="15" fill="rgb(236,59,4)" fg:x="351" fg:w="153"/><text x="4.4769%" y="1503.50">m..</text></g><g><title>mi_segment_try_reclaim (1 samples, 0.01%)</title><rect x="6.0573%" y="1477" width="0.0120%" height="15" fill="rgb(254,179,45)" fg:x="503" fg:w="1"/><text x="6.3073%" y="1487.50"></text></g><g><title>mi_page_queue_find_free_ex (188 samples, 2.26%)</title><rect x="3.8295%" y="1557" width="2.2640%" height="15" fill="rgb(226,14,10)" fg:x="318" fg:w="188"/><text x="4.0795%" y="1567.50">m..</text></g><g><title>mi_page_fresh (188 samples, 2.26%)</title><rect x="3.8295%" y="1541" width="2.2640%" height="15" fill="rgb(244,27,41)" fg:x="318" fg:w="188"/><text x="4.0795%" y="1551.50">m..</text></g><g><title>mi_page_fresh_alloc (188 samples, 2.26%)</title><rect x="3.8295%" y="1525" width="2.2640%" height="15" fill="rgb(235,35,32)" fg:x="318" fg:w="188"/><text x="4.0795%" y="1535.50">m..</text></g><g><title>mi_segments_page_alloc (155 samples, 1.87%)</title><rect x="4.2269%" y="1509" width="1.8666%" height="15" fill="rgb(218,68,31)" fg:x="351" fg:w="155"/><text x="4.4769%" y="1519.50">m..</text></g><g><title>mi_segments_page_find_and_allocate (2 samples, 0.02%)</title><rect x="6.0694%" y="1493" width="0.0241%" height="15" fill="rgb(207,120,37)" fg:x="504" fg:w="2"/><text x="6.3194%" y="1503.50"></text></g><g><title>mi_segment_slice_split (1 samples, 0.01%)</title><rect x="6.0814%" y="1477" width="0.0120%" height="15" fill="rgb(227,98,0)" fg:x="505" fg:w="1"/><text x="6.3314%" y="1487.50"></text></g><g><title>mi_segment_span_free (1 samples, 0.01%)</title><rect x="6.0814%" y="1461" width="0.0120%" height="15" fill="rgb(207,7,3)" fg:x="505" fg:w="1"/><text x="6.3314%" y="1471.50"></text></g><g><title>mi_segment_perhaps_decommit (1 samples, 0.01%)</title><rect x="6.0814%" y="1445" width="0.0120%" height="15" fill="rgb(206,98,19)" fg:x="505" fg:w="1"/><text x="6.3314%" y="1455.50"></text></g><g><title>mi_commit_mask_set (1 samples, 0.01%)</title><rect x="6.0814%" y="1429" width="0.0120%" height="15" fill="rgb(217,5,26)" fg:x="505" fg:w="1"/><text x="6.3314%" y="1439.50"></text></g><g><title>_mi_memcpy_aligned (9 samples, 0.11%)</title><rect x="6.1055%" y="1525" width="0.1084%" height="15" fill="rgb(235,190,38)" fg:x="507" fg:w="9"/><text x="6.3555%" y="1535.50"></text></g><g><title>_mi_memcpy (9 samples, 0.11%)</title><rect x="6.1055%" y="1509" width="0.1084%" height="15" fill="rgb(247,86,24)" fg:x="507" fg:w="9"/><text x="6.3555%" y="1519.50"></text></g><g><title>[unknown] (9 samples, 0.11%)</title><rect x="6.1055%" y="1493" width="0.1084%" height="15" fill="rgb(205,101,16)" fg:x="507" fg:w="9"/><text x="6.3555%" y="1503.50"></text></g><g><title>[unknown] (8 samples, 0.10%)</title><rect x="6.1175%" y="1477" width="0.0963%" height="15" fill="rgb(246,168,33)" fg:x="508" fg:w="8"/><text x="6.3675%" y="1487.50"></text></g><g><title>[unknown] (8 samples, 0.10%)</title><rect x="6.1175%" y="1461" width="0.0963%" height="15" fill="rgb(231,114,1)" fg:x="508" fg:w="8"/><text x="6.3675%" y="1471.50"></text></g><g><title>[unknown] (8 samples, 0.10%)</title><rect x="6.1175%" y="1445" width="0.0963%" height="15" fill="rgb(207,184,53)" fg:x="508" fg:w="8"/><text x="6.3675%" y="1455.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="6.1296%" y="1429" width="0.0843%" height="15" fill="rgb(224,95,51)" fg:x="509" fg:w="7"/><text x="6.3796%" y="1439.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="6.1416%" y="1413" width="0.0723%" height="15" fill="rgb(212,188,45)" fg:x="510" fg:w="6"/><text x="6.3916%" y="1423.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="6.1777%" y="1397" width="0.0361%" height="15" fill="rgb(223,154,38)" fg:x="513" fg:w="3"/><text x="6.4277%" y="1407.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.2018%" y="1381" width="0.0120%" height="15" fill="rgb(251,22,52)" fg:x="515" fg:w="1"/><text x="6.4518%" y="1391.50"></text></g><g><title>_mi_random_init (3 samples, 0.04%)</title><rect x="6.2139%" y="1525" width="0.0361%" height="15" fill="rgb(229,209,22)" fg:x="516" fg:w="3"/><text x="6.4639%" y="1535.50"></text></g><g><title>os_random_buf (3 samples, 0.04%)</title><rect x="6.2139%" y="1509" width="0.0361%" height="15" fill="rgb(234,138,34)" fg:x="516" fg:w="3"/><text x="6.4639%" y="1519.50"></text></g><g><title>syscall (3 samples, 0.04%)</title><rect x="6.2139%" y="1493" width="0.0361%" height="15" fill="rgb(212,95,11)" fg:x="516" fg:w="3"/><text x="6.4639%" y="1503.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="6.2139%" y="1477" width="0.0361%" height="15" fill="rgb(240,179,47)" fg:x="516" fg:w="3"/><text x="6.4639%" y="1487.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="6.2139%" y="1461" width="0.0361%" height="15" fill="rgb(240,163,11)" fg:x="516" fg:w="3"/><text x="6.4639%" y="1471.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="6.2139%" y="1445" width="0.0361%" height="15" fill="rgb(236,37,12)" fg:x="516" fg:w="3"/><text x="6.4639%" y="1455.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="6.2139%" y="1429" width="0.0361%" height="15" fill="rgb(232,164,16)" fg:x="516" fg:w="3"/><text x="6.4639%" y="1439.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="6.2139%" y="1413" width="0.0361%" height="15" fill="rgb(244,205,15)" fg:x="516" fg:w="3"/><text x="6.4639%" y="1423.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="6.2259%" y="1397" width="0.0241%" height="15" fill="rgb(223,117,47)" fg:x="517" fg:w="2"/><text x="6.4759%" y="1407.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.2380%" y="1381" width="0.0120%" height="15" fill="rgb(244,107,35)" fg:x="518" fg:w="1"/><text x="6.4880%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.2380%" y="1365" width="0.0120%" height="15" fill="rgb(205,140,8)" fg:x="518" fg:w="1"/><text x="6.4880%" y="1375.50"></text></g><g><title>_mi_os_good_alloc_size (1 samples, 0.01%)</title><rect x="6.2620%" y="1493" width="0.0120%" height="15" fill="rgb(228,84,46)" fg:x="520" fg:w="1"/><text x="6.5120%" y="1503.50"></text></g><g><title>mi_unix_mmapx (6 samples, 0.07%)</title><rect x="6.2741%" y="1461" width="0.0723%" height="15" fill="rgb(254,188,9)" fg:x="521" fg:w="6"/><text x="6.5241%" y="1471.50"></text></g><g><title>__GI___mmap64 (6 samples, 0.07%)</title><rect x="6.2741%" y="1445" width="0.0723%" height="15" fill="rgb(206,112,54)" fg:x="521" fg:w="6"/><text x="6.5241%" y="1455.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="6.2741%" y="1429" width="0.0723%" height="15" fill="rgb(216,84,49)" fg:x="521" fg:w="6"/><text x="6.5241%" y="1439.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="6.2741%" y="1413" width="0.0723%" height="15" fill="rgb(214,194,35)" fg:x="521" fg:w="6"/><text x="6.5241%" y="1423.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="6.2741%" y="1397" width="0.0723%" height="15" fill="rgb(249,28,3)" fg:x="521" fg:w="6"/><text x="6.5241%" y="1407.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="6.2982%" y="1381" width="0.0482%" height="15" fill="rgb(222,56,52)" fg:x="523" fg:w="4"/><text x="6.5482%" y="1391.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="6.3102%" y="1365" width="0.0361%" height="15" fill="rgb(245,217,50)" fg:x="524" fg:w="3"/><text x="6.5602%" y="1375.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.3343%" y="1349" width="0.0120%" height="15" fill="rgb(213,201,24)" fg:x="526" fg:w="1"/><text x="6.5843%" y="1359.50"></text></g><g><title>rayon_core::job::JobFifo::new (210 samples, 2.53%)</title><rect x="3.8295%" y="1701" width="2.5289%" height="15" fill="rgb(248,116,28)" fg:x="318" fg:w="210"/><text x="4.0795%" y="1711.50">ra..</text></g><g><title>crossbeam_deque::deque::Injector&lt;T&gt;::new (210 samples, 2.53%)</title><rect x="3.8295%" y="1685" width="2.5289%" height="15" fill="rgb(219,72,43)" fg:x="318" fg:w="210"/><text x="4.0795%" y="1695.50">cr..</text></g><g><title>&lt;crossbeam_deque::deque::Injector&lt;T&gt; as core::default::Default&gt;::default (210 samples, 2.53%)</title><rect x="3.8295%" y="1669" width="2.5289%" height="15" fill="rgb(209,138,14)" fg:x="318" fg:w="210"/><text x="4.0795%" y="1679.50">&lt;c..</text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (210 samples, 2.53%)</title><rect x="3.8295%" y="1653" width="2.5289%" height="15" fill="rgb(222,18,33)" fg:x="318" fg:w="210"/><text x="4.0795%" y="1663.50">al..</text></g><g><title>alloc::alloc::exchange_malloc (210 samples, 2.53%)</title><rect x="3.8295%" y="1637" width="2.5289%" height="15" fill="rgb(213,199,7)" fg:x="318" fg:w="210"/><text x="4.0795%" y="1647.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (210 samples, 2.53%)</title><rect x="3.8295%" y="1621" width="2.5289%" height="15" fill="rgb(250,110,10)" fg:x="318" fg:w="210"/><text x="4.0795%" y="1631.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (210 samples, 2.53%)</title><rect x="3.8295%" y="1605" width="2.5289%" height="15" fill="rgb(248,123,6)" fg:x="318" fg:w="210"/><text x="4.0795%" y="1615.50">al..</text></g><g><title>alloc::alloc::alloc (210 samples, 2.53%)</title><rect x="3.8295%" y="1589" width="2.5289%" height="15" fill="rgb(206,91,31)" fg:x="318" fg:w="210"/><text x="4.0795%" y="1599.50">al..</text></g><g><title>_mi_malloc_generic (210 samples, 2.53%)</title><rect x="3.8295%" y="1573" width="2.5289%" height="15" fill="rgb(211,154,13)" fg:x="318" fg:w="210"/><text x="4.0795%" y="1583.50">_m..</text></g><g><title>mi_thread_init (22 samples, 0.26%)</title><rect x="6.0934%" y="1557" width="0.2649%" height="15" fill="rgb(225,148,7)" fg:x="506" fg:w="22"/><text x="6.3434%" y="1567.50"></text></g><g><title>_mi_heap_init (21 samples, 0.25%)</title><rect x="6.1055%" y="1541" width="0.2529%" height="15" fill="rgb(220,160,43)" fg:x="507" fg:w="21"/><text x="6.3555%" y="1551.50"></text></g><g><title>mi_thread_data_alloc (9 samples, 0.11%)</title><rect x="6.2500%" y="1525" width="0.1084%" height="15" fill="rgb(213,52,39)" fg:x="519" fg:w="9"/><text x="6.5000%" y="1535.50"></text></g><g><title>_mi_os_alloc (8 samples, 0.10%)</title><rect x="6.2620%" y="1509" width="0.0963%" height="15" fill="rgb(243,137,7)" fg:x="520" fg:w="8"/><text x="6.5120%" y="1519.50"></text></g><g><title>mi_os_mem_alloc (7 samples, 0.08%)</title><rect x="6.2741%" y="1493" width="0.0843%" height="15" fill="rgb(230,79,13)" fg:x="521" fg:w="7"/><text x="6.5241%" y="1503.50"></text></g><g><title>mi_unix_mmap (7 samples, 0.08%)</title><rect x="6.2741%" y="1477" width="0.0843%" height="15" fill="rgb(247,105,23)" fg:x="521" fg:w="7"/><text x="6.5241%" y="1487.50"></text></g><g><title>use_large_os_page (1 samples, 0.01%)</title><rect x="6.3463%" y="1461" width="0.0120%" height="15" fill="rgb(223,179,41)" fg:x="527" fg:w="1"/><text x="6.5963%" y="1471.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (1 samples, 0.01%)</title><rect x="6.3584%" y="1653" width="0.0120%" height="15" fill="rgb(218,9,34)" fg:x="528" fg:w="1"/><text x="6.6084%" y="1663.50"></text></g><g><title>rayon_core::registry::WORKER_THREAD_STATE::__getit (1 samples, 0.01%)</title><rect x="6.3704%" y="1653" width="0.0120%" height="15" fill="rgb(222,106,8)" fg:x="529" fg:w="1"/><text x="6.6204%" y="1663.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="6.3704%" y="1637" width="0.0120%" height="15" fill="rgb(211,220,0)" fg:x="529" fg:w="1"/><text x="6.6204%" y="1647.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_initialize (1 samples, 0.01%)</title><rect x="6.3704%" y="1621" width="0.0120%" height="15" fill="rgb(229,52,16)" fg:x="529" fg:w="1"/><text x="6.6204%" y="1631.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::initialize (1 samples, 0.01%)</title><rect x="6.3704%" y="1605" width="0.0120%" height="15" fill="rgb(212,155,18)" fg:x="529" fg:w="1"/><text x="6.6204%" y="1615.50"></text></g><g><title>rayon_core::registry::WORKER_THREAD_STATE::__getit::{{closure}} (1 samples, 0.01%)</title><rect x="6.3704%" y="1589" width="0.0120%" height="15" fill="rgb(242,21,14)" fg:x="529" fg:w="1"/><text x="6.6204%" y="1599.50"></text></g><g><title>rayon_core::registry::WorkerThread::set_current (4 samples, 0.05%)</title><rect x="6.3584%" y="1701" width="0.0482%" height="15" fill="rgb(222,19,48)" fg:x="528" fg:w="4"/><text x="6.6084%" y="1711.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.05%)</title><rect x="6.3584%" y="1685" width="0.0482%" height="15" fill="rgb(232,45,27)" fg:x="528" fg:w="4"/><text x="6.6084%" y="1695.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.05%)</title><rect x="6.3584%" y="1669" width="0.0482%" height="15" fill="rgb(249,103,42)" fg:x="528" fg:w="4"/><text x="6.6084%" y="1679.50"></text></g><g><title>rayon_core::registry::WorkerThread::set_current::{{closure}} (2 samples, 0.02%)</title><rect x="6.3825%" y="1653" width="0.0241%" height="15" fill="rgb(246,81,33)" fg:x="530" fg:w="2"/><text x="6.6325%" y="1663.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.3945%" y="1637" width="0.0120%" height="15" fill="rgb(252,33,42)" fg:x="531" fg:w="1"/><text x="6.6445%" y="1647.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.3945%" y="1621" width="0.0120%" height="15" fill="rgb(209,212,41)" fg:x="531" fg:w="1"/><text x="6.6445%" y="1631.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.3945%" y="1605" width="0.0120%" height="15" fill="rgb(207,154,6)" fg:x="531" fg:w="1"/><text x="6.6445%" y="1615.50"></text></g><g><title>rayon_core::registry::Registry::pop_injected_job (2 samples, 0.02%)</title><rect x="6.4066%" y="1637" width="0.0241%" height="15" fill="rgb(223,64,47)" fg:x="532" fg:w="2"/><text x="6.6566%" y="1647.50"></text></g><g><title>crossbeam_deque::deque::Injector&lt;T&gt;::steal (2 samples, 0.02%)</title><rect x="6.4066%" y="1621" width="0.0241%" height="15" fill="rgb(211,161,38)" fg:x="532" fg:w="2"/><text x="6.6566%" y="1631.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.02%)</title><rect x="6.4066%" y="1605" width="0.0241%" height="15" fill="rgb(219,138,40)" fg:x="532" fg:w="2"/><text x="6.6566%" y="1615.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="6.4066%" y="1589" width="0.0241%" height="15" fill="rgb(241,228,46)" fg:x="532" fg:w="2"/><text x="6.6566%" y="1599.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_sub (1 samples, 0.01%)</title><rect x="6.4668%" y="1493" width="0.0120%" height="15" fill="rgb(223,209,38)" fg:x="537" fg:w="1"/><text x="6.7168%" y="1503.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (1 samples, 0.01%)</title><rect x="6.4788%" y="1477" width="0.0120%" height="15" fill="rgb(236,164,45)" fg:x="538" fg:w="1"/><text x="6.7288%" y="1487.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (4 samples, 0.05%)</title><rect x="6.4908%" y="1413" width="0.0482%" height="15" fill="rgb(231,15,5)" fg:x="539" fg:w="4"/><text x="6.7408%" y="1423.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (4 samples, 0.05%)</title><rect x="6.4908%" y="1397" width="0.0482%" height="15" fill="rgb(252,35,15)" fg:x="539" fg:w="4"/><text x="6.7408%" y="1407.50"></text></g><g><title>crossbeam_epoch::default::is_pinned (6 samples, 0.07%)</title><rect x="6.4788%" y="1493" width="0.0723%" height="15" fill="rgb(248,181,18)" fg:x="538" fg:w="6"/><text x="6.7288%" y="1503.50"></text></g><g><title>crossbeam_epoch::default::with_handle (5 samples, 0.06%)</title><rect x="6.4908%" y="1477" width="0.0602%" height="15" fill="rgb(233,39,42)" fg:x="539" fg:w="5"/><text x="6.7408%" y="1487.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.06%)</title><rect x="6.4908%" y="1461" width="0.0602%" height="15" fill="rgb(238,110,33)" fg:x="539" fg:w="5"/><text x="6.7408%" y="1471.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__getit (5 samples, 0.06%)</title><rect x="6.4908%" y="1445" width="0.0602%" height="15" fill="rgb(233,195,10)" fg:x="539" fg:w="5"/><text x="6.7408%" y="1455.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (5 samples, 0.06%)</title><rect x="6.4908%" y="1429" width="0.0602%" height="15" fill="rgb(254,105,3)" fg:x="539" fg:w="5"/><text x="6.7408%" y="1439.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::initialize (1 samples, 0.01%)</title><rect x="6.5390%" y="1413" width="0.0120%" height="15" fill="rgb(221,225,9)" fg:x="543" fg:w="1"/><text x="6.7890%" y="1423.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__getit::{{closure}} (1 samples, 0.01%)</title><rect x="6.5390%" y="1397" width="0.0120%" height="15" fill="rgb(224,227,45)" fg:x="543" fg:w="1"/><text x="6.7890%" y="1407.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__init (1 samples, 0.01%)</title><rect x="6.5390%" y="1381" width="0.0120%" height="15" fill="rgb(229,198,43)" fg:x="543" fg:w="1"/><text x="6.7890%" y="1391.50"></text></g><g><title>crossbeam_epoch::internal::Local::register (1 samples, 0.01%)</title><rect x="6.5390%" y="1365" width="0.0120%" height="15" fill="rgb(206,209,35)" fg:x="543" fg:w="1"/><text x="6.7890%" y="1375.50"></text></g><g><title>crossbeam_epoch::atomic::Owned&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="6.5390%" y="1349" width="0.0120%" height="15" fill="rgb(245,195,53)" fg:x="543" fg:w="1"/><text x="6.7890%" y="1359.50"></text></g><g><title>crossbeam_epoch::atomic::Owned&lt;T&gt;::init (1 samples, 0.01%)</title><rect x="6.5390%" y="1333" width="0.0120%" height="15" fill="rgb(240,92,26)" fg:x="543" fg:w="1"/><text x="6.7890%" y="1343.50"></text></g><g><title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::init (1 samples, 0.01%)</title><rect x="6.5390%" y="1317" width="0.0120%" height="15" fill="rgb(207,40,23)" fg:x="543" fg:w="1"/><text x="6.7890%" y="1327.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="6.5390%" y="1301" width="0.0120%" height="15" fill="rgb(223,111,35)" fg:x="543" fg:w="1"/><text x="6.7890%" y="1311.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="6.5390%" y="1285" width="0.0120%" height="15" fill="rgb(229,147,28)" fg:x="543" fg:w="1"/><text x="6.7890%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="6.5390%" y="1269" width="0.0120%" height="15" fill="rgb(211,29,28)" fg:x="543" fg:w="1"/><text x="6.7890%" y="1279.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="6.5390%" y="1253" width="0.0120%" height="15" fill="rgb(228,72,33)" fg:x="543" fg:w="1"/><text x="6.7890%" y="1263.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="6.5390%" y="1237" width="0.0120%" height="15" fill="rgb(205,214,31)" fg:x="543" fg:w="1"/><text x="6.7890%" y="1247.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.01%)</title><rect x="6.5390%" y="1221" width="0.0120%" height="15" fill="rgb(224,111,15)" fg:x="543" fg:w="1"/><text x="6.7890%" y="1231.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.01%)</title><rect x="6.5390%" y="1205" width="0.0120%" height="15" fill="rgb(253,21,26)" fg:x="543" fg:w="1"/><text x="6.7890%" y="1215.50"></text></g><g><title>mi_page_fresh (1 samples, 0.01%)</title><rect x="6.5390%" y="1189" width="0.0120%" height="15" fill="rgb(245,139,43)" fg:x="543" fg:w="1"/><text x="6.7890%" y="1199.50"></text></g><g><title>mi_page_fresh_alloc (1 samples, 0.01%)</title><rect x="6.5390%" y="1173" width="0.0120%" height="15" fill="rgb(252,170,7)" fg:x="543" fg:w="1"/><text x="6.7890%" y="1183.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.01%)</title><rect x="6.5390%" y="1157" width="0.0120%" height="15" fill="rgb(231,118,14)" fg:x="543" fg:w="1"/><text x="6.7890%" y="1167.50"></text></g><g><title>mi_page_free_list_extend_secure (1 samples, 0.01%)</title><rect x="6.5390%" y="1141" width="0.0120%" height="15" fill="rgb(238,83,0)" fg:x="543" fg:w="1"/><text x="6.7890%" y="1151.50"></text></g><g><title>mi_block_set_next (1 samples, 0.01%)</title><rect x="6.5390%" y="1125" width="0.0120%" height="15" fill="rgb(221,39,39)" fg:x="543" fg:w="1"/><text x="6.7890%" y="1135.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.01%)</title><rect x="6.5390%" y="1109" width="0.0120%" height="15" fill="rgb(222,119,46)" fg:x="543" fg:w="1"/><text x="6.7890%" y="1119.50"></text></g><g><title>mi_ptr_encode (1 samples, 0.01%)</title><rect x="6.5390%" y="1093" width="0.0120%" height="15" fill="rgb(222,165,49)" fg:x="543" fg:w="1"/><text x="6.7890%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.5390%" y="1077" width="0.0120%" height="15" fill="rgb(219,113,52)" fg:x="543" fg:w="1"/><text x="6.7890%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.5390%" y="1061" width="0.0120%" height="15" fill="rgb(214,7,15)" fg:x="543" fg:w="1"/><text x="6.7890%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.5390%" y="1045" width="0.0120%" height="15" fill="rgb(235,32,4)" fg:x="543" fg:w="1"/><text x="6.7890%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.5390%" y="1029" width="0.0120%" height="15" fill="rgb(238,90,54)" fg:x="543" fg:w="1"/><text x="6.7890%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.5390%" y="1013" width="0.0120%" height="15" fill="rgb(213,208,19)" fg:x="543" fg:w="1"/><text x="6.7890%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.5390%" y="997" width="0.0120%" height="15" fill="rgb(233,156,4)" fg:x="543" fg:w="1"/><text x="6.7890%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.5390%" y="981" width="0.0120%" height="15" fill="rgb(207,194,5)" fg:x="543" fg:w="1"/><text x="6.7890%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.5390%" y="965" width="0.0120%" height="15" fill="rgb(206,111,30)" fg:x="543" fg:w="1"/><text x="6.7890%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.5390%" y="949" width="0.0120%" height="15" fill="rgb(243,70,54)" fg:x="543" fg:w="1"/><text x="6.7890%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.5390%" y="933" width="0.0120%" height="15" fill="rgb(242,28,8)" fg:x="543" fg:w="1"/><text x="6.7890%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.5390%" y="917" width="0.0120%" height="15" fill="rgb(219,106,18)" fg:x="543" fg:w="1"/><text x="6.7890%" y="927.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (2 samples, 0.02%)</title><rect x="6.6594%" y="1381" width="0.0241%" height="15" fill="rgb(244,222,10)" fg:x="553" fg:w="2"/><text x="6.9094%" y="1391.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (2 samples, 0.02%)</title><rect x="6.6594%" y="1365" width="0.0241%" height="15" fill="rgb(236,179,52)" fg:x="553" fg:w="2"/><text x="6.9094%" y="1375.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::compare_exchange (7 samples, 0.08%)</title><rect x="6.6835%" y="1381" width="0.0843%" height="15" fill="rgb(213,23,39)" fg:x="555" fg:w="7"/><text x="6.9335%" y="1391.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (7 samples, 0.08%)</title><rect x="6.6835%" y="1365" width="0.0843%" height="15" fill="rgb(238,48,10)" fg:x="555" fg:w="7"/><text x="6.9335%" y="1375.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (7 samples, 0.08%)</title><rect x="6.6835%" y="1349" width="0.0843%" height="15" fill="rgb(251,196,23)" fg:x="555" fg:w="7"/><text x="6.9335%" y="1359.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.7558%" y="1333" width="0.0120%" height="15" fill="rgb(250,152,24)" fg:x="561" fg:w="1"/><text x="7.0058%" y="1343.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (31 samples, 0.37%)</title><rect x="6.4306%" y="1557" width="0.3733%" height="15" fill="rgb(209,150,17)" fg:x="534" fg:w="31"/><text x="6.6806%" y="1567.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (30 samples, 0.36%)</title><rect x="6.4427%" y="1541" width="0.3613%" height="15" fill="rgb(234,202,34)" fg:x="535" fg:w="30"/><text x="6.6927%" y="1551.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (30 samples, 0.36%)</title><rect x="6.4427%" y="1525" width="0.3613%" height="15" fill="rgb(253,148,53)" fg:x="535" fg:w="30"/><text x="6.6927%" y="1535.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (30 samples, 0.36%)</title><rect x="6.4427%" y="1509" width="0.3613%" height="15" fill="rgb(218,129,16)" fg:x="535" fg:w="30"/><text x="6.6927%" y="1519.50"></text></g><g><title>crossbeam_epoch::default::pin (21 samples, 0.25%)</title><rect x="6.5511%" y="1493" width="0.2529%" height="15" fill="rgb(216,85,19)" fg:x="544" fg:w="21"/><text x="6.8011%" y="1503.50"></text></g><g><title>crossbeam_epoch::default::with_handle (20 samples, 0.24%)</title><rect x="6.5631%" y="1477" width="0.2408%" height="15" fill="rgb(235,228,7)" fg:x="545" fg:w="20"/><text x="6.8131%" y="1487.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (20 samples, 0.24%)</title><rect x="6.5631%" y="1461" width="0.2408%" height="15" fill="rgb(245,175,0)" fg:x="545" fg:w="20"/><text x="6.8131%" y="1471.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (20 samples, 0.24%)</title><rect x="6.5631%" y="1445" width="0.2408%" height="15" fill="rgb(208,168,36)" fg:x="545" fg:w="20"/><text x="6.8131%" y="1455.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (20 samples, 0.24%)</title><rect x="6.5631%" y="1429" width="0.2408%" height="15" fill="rgb(246,171,24)" fg:x="545" fg:w="20"/><text x="6.8131%" y="1439.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (20 samples, 0.24%)</title><rect x="6.5631%" y="1413" width="0.2408%" height="15" fill="rgb(215,142,24)" fg:x="545" fg:w="20"/><text x="6.8131%" y="1423.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (20 samples, 0.24%)</title><rect x="6.5631%" y="1397" width="0.2408%" height="15" fill="rgb(250,187,7)" fg:x="545" fg:w="20"/><text x="6.8131%" y="1407.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (3 samples, 0.04%)</title><rect x="6.7678%" y="1381" width="0.0361%" height="15" fill="rgb(228,66,33)" fg:x="562" fg:w="3"/><text x="7.0178%" y="1391.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (3 samples, 0.04%)</title><rect x="6.7678%" y="1365" width="0.0361%" height="15" fill="rgb(234,215,21)" fg:x="562" fg:w="3"/><text x="7.0178%" y="1375.50"></text></g><g><title>&lt;crossbeam_epoch::sync::list::Iter&lt;T,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="6.7678%" y="1349" width="0.0361%" height="15" fill="rgb(222,191,20)" fg:x="562" fg:w="3"/><text x="7.0178%" y="1359.50"></text></g><g><title>crossbeam_epoch::atomic::Shared&lt;T&gt;::tag (3 samples, 0.04%)</title><rect x="6.7678%" y="1333" width="0.0361%" height="15" fill="rgb(245,79,54)" fg:x="562" fg:w="3"/><text x="7.0178%" y="1343.50"></text></g><g><title>crossbeam_epoch::atomic::decompose_tag (3 samples, 0.04%)</title><rect x="6.7678%" y="1317" width="0.0361%" height="15" fill="rgb(240,10,37)" fg:x="562" fg:w="3"/><text x="7.0178%" y="1327.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_sub (1 samples, 0.01%)</title><rect x="6.8642%" y="1477" width="0.0120%" height="15" fill="rgb(214,192,32)" fg:x="570" fg:w="1"/><text x="7.1142%" y="1487.50"></text></g><g><title>crossbeam_deque::deque::Buffer&lt;T&gt;::read (4 samples, 0.05%)</title><rect x="6.8762%" y="1477" width="0.0482%" height="15" fill="rgb(209,36,54)" fg:x="571" fg:w="4"/><text x="7.1262%" y="1487.50"></text></g><g><title>crossbeam_deque::deque::Buffer&lt;T&gt;::at (4 samples, 0.05%)</title><rect x="6.8762%" y="1461" width="0.0482%" height="15" fill="rgb(220,10,11)" fg:x="571" fg:w="4"/><text x="7.1262%" y="1471.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (1 samples, 0.01%)</title><rect x="6.9244%" y="1461" width="0.0120%" height="15" fill="rgb(221,106,17)" fg:x="575" fg:w="1"/><text x="7.1744%" y="1471.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (2 samples, 0.02%)</title><rect x="6.9485%" y="1349" width="0.0241%" height="15" fill="rgb(251,142,44)" fg:x="577" fg:w="2"/><text x="7.1985%" y="1359.50"></text></g><g><title>__GI___lll_lock_wake (1 samples, 0.01%)</title><rect x="6.9605%" y="1333" width="0.0120%" height="15" fill="rgb(238,13,15)" fg:x="578" fg:w="1"/><text x="7.2105%" y="1343.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.9605%" y="1317" width="0.0120%" height="15" fill="rgb(208,107,27)" fg:x="578" fg:w="1"/><text x="7.2105%" y="1327.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.9605%" y="1301" width="0.0120%" height="15" fill="rgb(205,136,37)" fg:x="578" fg:w="1"/><text x="7.2105%" y="1311.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.9605%" y="1285" width="0.0120%" height="15" fill="rgb(250,205,27)" fg:x="578" fg:w="1"/><text x="7.2105%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.9605%" y="1269" width="0.0120%" height="15" fill="rgb(210,80,43)" fg:x="578" fg:w="1"/><text x="7.2105%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.9605%" y="1253" width="0.0120%" height="15" fill="rgb(247,160,36)" fg:x="578" fg:w="1"/><text x="7.2105%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.9605%" y="1237" width="0.0120%" height="15" fill="rgb(234,13,49)" fg:x="578" fg:w="1"/><text x="7.2105%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.9605%" y="1221" width="0.0120%" height="15" fill="rgb(234,122,0)" fg:x="578" fg:w="1"/><text x="7.2105%" y="1231.50"></text></g><g><title>__GI__dl_find_dso_for_object (1 samples, 0.01%)</title><rect x="6.9725%" y="1349" width="0.0120%" height="15" fill="rgb(207,146,38)" fg:x="579" fg:w="1"/><text x="7.2225%" y="1359.50"></text></g><g><title>_dl_addr_inside_object (1 samples, 0.01%)</title><rect x="6.9725%" y="1333" width="0.0120%" height="15" fill="rgb(207,177,25)" fg:x="579" fg:w="1"/><text x="7.2225%" y="1343.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_initialize (5 samples, 0.06%)</title><rect x="6.9485%" y="1397" width="0.0602%" height="15" fill="rgb(211,178,42)" fg:x="577" fg:w="5"/><text x="7.1985%" y="1407.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_register_dtor (5 samples, 0.06%)</title><rect x="6.9485%" y="1381" width="0.0602%" height="15" fill="rgb(230,69,54)" fg:x="577" fg:w="5"/><text x="7.1985%" y="1391.50"></text></g><g><title>__cxa_thread_atexit_impl (5 samples, 0.06%)</title><rect x="6.9485%" y="1365" width="0.0602%" height="15" fill="rgb(214,135,41)" fg:x="577" fg:w="5"/><text x="7.1985%" y="1375.50"></text></g><g><title>__calloc (2 samples, 0.02%)</title><rect x="6.9846%" y="1349" width="0.0241%" height="15" fill="rgb(237,67,25)" fg:x="580" fg:w="2"/><text x="7.2346%" y="1359.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (5 samples, 0.06%)</title><rect x="7.0087%" y="1397" width="0.0602%" height="15" fill="rgb(222,189,50)" fg:x="582" fg:w="5"/><text x="7.2587%" y="1407.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (5 samples, 0.06%)</title><rect x="7.0087%" y="1381" width="0.0602%" height="15" fill="rgb(245,148,34)" fg:x="582" fg:w="5"/><text x="7.2587%" y="1391.50"></text></g><g><title>&lt;crossbeam_epoch::collector::Collector as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="7.0689%" y="1333" width="0.0241%" height="15" fill="rgb(222,29,6)" fg:x="587" fg:w="2"/><text x="7.3189%" y="1343.50"></text></g><g><title>__rust_probestack (1 samples, 0.01%)</title><rect x="7.0809%" y="1317" width="0.0120%" height="15" fill="rgb(221,189,43)" fg:x="588" fg:w="1"/><text x="7.3309%" y="1327.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.0809%" y="1301" width="0.0120%" height="15" fill="rgb(207,36,27)" fg:x="588" fg:w="1"/><text x="7.3309%" y="1311.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.0809%" y="1285" width="0.0120%" height="15" fill="rgb(217,90,24)" fg:x="588" fg:w="1"/><text x="7.3309%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.0809%" y="1269" width="0.0120%" height="15" fill="rgb(224,66,35)" fg:x="588" fg:w="1"/><text x="7.3309%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.0809%" y="1253" width="0.0120%" height="15" fill="rgb(221,13,50)" fg:x="588" fg:w="1"/><text x="7.3309%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.0809%" y="1237" width="0.0120%" height="15" fill="rgb(236,68,49)" fg:x="588" fg:w="1"/><text x="7.3309%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.0809%" y="1221" width="0.0120%" height="15" fill="rgb(229,146,28)" fg:x="588" fg:w="1"/><text x="7.3309%" y="1231.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="7.0930%" y="1269" width="0.0120%" height="15" fill="rgb(225,31,38)" fg:x="589" fg:w="1"/><text x="7.3430%" y="1279.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="7.1050%" y="1205" width="0.0120%" height="15" fill="rgb(250,208,3)" fg:x="590" fg:w="1"/><text x="7.3550%" y="1215.50"></text></g><g><title>_mi_deferred_free (1 samples, 0.01%)</title><rect x="7.1171%" y="1189" width="0.0120%" height="15" fill="rgb(246,54,23)" fg:x="591" fg:w="1"/><text x="7.3671%" y="1199.50"></text></g><g><title>_mi_random_next (1 samples, 0.01%)</title><rect x="7.1411%" y="1109" width="0.0120%" height="15" fill="rgb(243,76,11)" fg:x="593" fg:w="1"/><text x="7.3911%" y="1119.50"></text></g><g><title>chacha_next32 (1 samples, 0.01%)</title><rect x="7.1411%" y="1093" width="0.0120%" height="15" fill="rgb(245,21,50)" fg:x="593" fg:w="1"/><text x="7.3911%" y="1103.50"></text></g><g><title>chacha_block (1 samples, 0.01%)</title><rect x="7.1411%" y="1077" width="0.0120%" height="15" fill="rgb(228,9,43)" fg:x="593" fg:w="1"/><text x="7.3911%" y="1087.50"></text></g><g><title>qround (1 samples, 0.01%)</title><rect x="7.1411%" y="1061" width="0.0120%" height="15" fill="rgb(208,100,47)" fg:x="593" fg:w="1"/><text x="7.3911%" y="1071.50"></text></g><g><title>mi_page_extend_free (69 samples, 0.83%)</title><rect x="7.1291%" y="1141" width="0.8309%" height="15" fill="rgb(232,26,8)" fg:x="592" fg:w="69"/><text x="7.3791%" y="1151.50"></text></g><g><title>mi_page_free_list_extend_secure (69 samples, 0.83%)</title><rect x="7.1291%" y="1125" width="0.8309%" height="15" fill="rgb(216,166,38)" fg:x="592" fg:w="69"/><text x="7.3791%" y="1135.50"></text></g><g><title>mi_block_set_next (67 samples, 0.81%)</title><rect x="7.1532%" y="1109" width="0.8068%" height="15" fill="rgb(251,202,51)" fg:x="594" fg:w="67"/><text x="7.4032%" y="1119.50"></text></g><g><title>mi_block_set_nextx (67 samples, 0.81%)</title><rect x="7.1532%" y="1093" width="0.8068%" height="15" fill="rgb(254,216,34)" fg:x="594" fg:w="67"/><text x="7.4032%" y="1103.50"></text></g><g><title>mi_ptr_encode (67 samples, 0.81%)</title><rect x="7.1532%" y="1077" width="0.8068%" height="15" fill="rgb(251,32,27)" fg:x="594" fg:w="67"/><text x="7.4032%" y="1087.50"></text></g><g><title>[unknown] (67 samples, 0.81%)</title><rect x="7.1532%" y="1061" width="0.8068%" height="15" fill="rgb(208,127,28)" fg:x="594" fg:w="67"/><text x="7.4032%" y="1071.50"></text></g><g><title>[unknown] (66 samples, 0.79%)</title><rect x="7.1652%" y="1045" width="0.7948%" height="15" fill="rgb(224,137,22)" fg:x="595" fg:w="66"/><text x="7.4152%" y="1055.50"></text></g><g><title>[unknown] (66 samples, 0.79%)</title><rect x="7.1652%" y="1029" width="0.7948%" height="15" fill="rgb(254,70,32)" fg:x="595" fg:w="66"/><text x="7.4152%" y="1039.50"></text></g><g><title>[unknown] (66 samples, 0.79%)</title><rect x="7.1652%" y="1013" width="0.7948%" height="15" fill="rgb(229,75,37)" fg:x="595" fg:w="66"/><text x="7.4152%" y="1023.50"></text></g><g><title>[unknown] (58 samples, 0.70%)</title><rect x="7.2616%" y="997" width="0.6985%" height="15" fill="rgb(252,64,23)" fg:x="603" fg:w="58"/><text x="7.5116%" y="1007.50"></text></g><g><title>[unknown] (51 samples, 0.61%)</title><rect x="7.3459%" y="981" width="0.6142%" height="15" fill="rgb(232,162,48)" fg:x="610" fg:w="51"/><text x="7.5959%" y="991.50"></text></g><g><title>[unknown] (38 samples, 0.46%)</title><rect x="7.5024%" y="965" width="0.4576%" height="15" fill="rgb(246,160,12)" fg:x="623" fg:w="38"/><text x="7.7524%" y="975.50"></text></g><g><title>[unknown] (31 samples, 0.37%)</title><rect x="7.5867%" y="949" width="0.3733%" height="15" fill="rgb(247,166,0)" fg:x="630" fg:w="31"/><text x="7.8367%" y="959.50"></text></g><g><title>[unknown] (28 samples, 0.34%)</title><rect x="7.6228%" y="933" width="0.3372%" height="15" fill="rgb(249,219,21)" fg:x="633" fg:w="28"/><text x="7.8728%" y="943.50"></text></g><g><title>[unknown] (20 samples, 0.24%)</title><rect x="7.7192%" y="917" width="0.2408%" height="15" fill="rgb(205,209,3)" fg:x="641" fg:w="20"/><text x="7.9692%" y="927.50"></text></g><g><title>[unknown] (15 samples, 0.18%)</title><rect x="7.7794%" y="901" width="0.1806%" height="15" fill="rgb(243,44,1)" fg:x="646" fg:w="15"/><text x="8.0294%" y="911.50"></text></g><g><title>mi_page_init (1 samples, 0.01%)</title><rect x="7.9600%" y="1141" width="0.0120%" height="15" fill="rgb(206,159,16)" fg:x="661" fg:w="1"/><text x="8.2100%" y="1151.50"></text></g><g><title>_mi_random_next (1 samples, 0.01%)</title><rect x="7.9600%" y="1125" width="0.0120%" height="15" fill="rgb(244,77,30)" fg:x="661" fg:w="1"/><text x="8.2100%" y="1135.50"></text></g><g><title>mi_commit_mask_create_empty (1 samples, 0.01%)</title><rect x="7.9721%" y="1045" width="0.0120%" height="15" fill="rgb(218,69,12)" fg:x="662" fg:w="1"/><text x="8.2221%" y="1055.50"></text></g><g><title>mi_segment_slice_split (2 samples, 0.02%)</title><rect x="7.9721%" y="1109" width="0.0241%" height="15" fill="rgb(212,87,7)" fg:x="662" fg:w="2"/><text x="8.2221%" y="1119.50"></text></g><g><title>mi_segment_span_free (2 samples, 0.02%)</title><rect x="7.9721%" y="1093" width="0.0241%" height="15" fill="rgb(245,114,25)" fg:x="662" fg:w="2"/><text x="8.2221%" y="1103.50"></text></g><g><title>mi_segment_perhaps_decommit (2 samples, 0.02%)</title><rect x="7.9721%" y="1077" width="0.0241%" height="15" fill="rgb(210,61,42)" fg:x="662" fg:w="2"/><text x="8.2221%" y="1087.50"></text></g><g><title>mi_segment_commit_mask (2 samples, 0.02%)</title><rect x="7.9721%" y="1061" width="0.0241%" height="15" fill="rgb(211,52,33)" fg:x="662" fg:w="2"/><text x="8.2221%" y="1071.50"></text></g><g><title>mi_segment_commit_mask (1 samples, 0.01%)</title><rect x="7.9841%" y="1045" width="0.0120%" height="15" fill="rgb(234,58,33)" fg:x="663" fg:w="1"/><text x="8.2341%" y="1055.50"></text></g><g><title>mi_commit_mask_create (1 samples, 0.01%)</title><rect x="7.9841%" y="1029" width="0.0120%" height="15" fill="rgb(220,115,36)" fg:x="663" fg:w="1"/><text x="8.2341%" y="1039.50"></text></g><g><title>mi_commit_mask_create (1 samples, 0.01%)</title><rect x="7.9841%" y="1013" width="0.0120%" height="15" fill="rgb(243,153,54)" fg:x="663" fg:w="1"/><text x="8.2341%" y="1023.50"></text></g><g><title>crossbeam_epoch::atomic::Owned&lt;T&gt;::new (77 samples, 0.93%)</title><rect x="7.0930%" y="1333" width="0.9273%" height="15" fill="rgb(251,47,18)" fg:x="589" fg:w="77"/><text x="7.3430%" y="1343.50"></text></g><g><title>crossbeam_epoch::atomic::Owned&lt;T&gt;::init (77 samples, 0.93%)</title><rect x="7.0930%" y="1317" width="0.9273%" height="15" fill="rgb(242,102,42)" fg:x="589" fg:w="77"/><text x="7.3430%" y="1327.50"></text></g><g><title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::init (77 samples, 0.93%)</title><rect x="7.0930%" y="1301" width="0.9273%" height="15" fill="rgb(234,31,38)" fg:x="589" fg:w="77"/><text x="7.3430%" y="1311.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (77 samples, 0.93%)</title><rect x="7.0930%" y="1285" width="0.9273%" height="15" fill="rgb(221,117,51)" fg:x="589" fg:w="77"/><text x="7.3430%" y="1295.50"></text></g><g><title>alloc::alloc::exchange_malloc (76 samples, 0.92%)</title><rect x="7.1050%" y="1269" width="0.9152%" height="15" fill="rgb(212,20,18)" fg:x="590" fg:w="76"/><text x="7.3550%" y="1279.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (76 samples, 0.92%)</title><rect x="7.1050%" y="1253" width="0.9152%" height="15" fill="rgb(245,133,36)" fg:x="590" fg:w="76"/><text x="7.3550%" y="1263.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (76 samples, 0.92%)</title><rect x="7.1050%" y="1237" width="0.9152%" height="15" fill="rgb(212,6,19)" fg:x="590" fg:w="76"/><text x="7.3550%" y="1247.50"></text></g><g><title>alloc::alloc::alloc (76 samples, 0.92%)</title><rect x="7.1050%" y="1221" width="0.9152%" height="15" fill="rgb(218,1,36)" fg:x="590" fg:w="76"/><text x="7.3550%" y="1231.50"></text></g><g><title>_mi_malloc_generic (75 samples, 0.90%)</title><rect x="7.1171%" y="1205" width="0.9032%" height="15" fill="rgb(246,84,54)" fg:x="591" fg:w="75"/><text x="7.3671%" y="1215.50"></text></g><g><title>mi_page_queue_find_free_ex (74 samples, 0.89%)</title><rect x="7.1291%" y="1189" width="0.8911%" height="15" fill="rgb(242,110,6)" fg:x="592" fg:w="74"/><text x="7.3791%" y="1199.50"></text></g><g><title>mi_page_fresh (74 samples, 0.89%)</title><rect x="7.1291%" y="1173" width="0.8911%" height="15" fill="rgb(214,47,5)" fg:x="592" fg:w="74"/><text x="7.3791%" y="1183.50"></text></g><g><title>mi_page_fresh_alloc (74 samples, 0.89%)</title><rect x="7.1291%" y="1157" width="0.8911%" height="15" fill="rgb(218,159,25)" fg:x="592" fg:w="74"/><text x="7.3791%" y="1167.50"></text></g><g><title>mi_segments_page_alloc (4 samples, 0.05%)</title><rect x="7.9721%" y="1141" width="0.0482%" height="15" fill="rgb(215,211,28)" fg:x="662" fg:w="4"/><text x="8.2221%" y="1151.50"></text></g><g><title>mi_segments_page_find_and_allocate (4 samples, 0.05%)</title><rect x="7.9721%" y="1125" width="0.0482%" height="15" fill="rgb(238,59,32)" fg:x="662" fg:w="4"/><text x="8.2221%" y="1135.50"></text></g><g><title>mi_segment_span_allocate (2 samples, 0.02%)</title><rect x="7.9961%" y="1109" width="0.0241%" height="15" fill="rgb(226,82,3)" fg:x="664" fg:w="2"/><text x="8.2461%" y="1119.50"></text></g><g><title>crossbeam_epoch::internal::Bag::new (2 samples, 0.02%)</title><rect x="8.0202%" y="1333" width="0.0241%" height="15" fill="rgb(240,164,32)" fg:x="666" fg:w="2"/><text x="8.2702%" y="1343.50"></text></g><g><title>crossbeam_epoch::internal::Local::register (2 samples, 0.02%)</title><rect x="8.0202%" y="1317" width="0.0241%" height="15" fill="rgb(232,46,7)" fg:x="666" fg:w="2"/><text x="8.2702%" y="1327.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="8.0202%" y="1301" width="0.0241%" height="15" fill="rgb(229,129,53)" fg:x="666" fg:w="2"/><text x="8.2702%" y="1311.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="8.0202%" y="1285" width="0.0241%" height="15" fill="rgb(234,188,29)" fg:x="666" fg:w="2"/><text x="8.2702%" y="1295.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="8.0202%" y="1269" width="0.0241%" height="15" fill="rgb(246,141,4)" fg:x="666" fg:w="2"/><text x="8.2702%" y="1279.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="8.0202%" y="1253" width="0.0241%" height="15" fill="rgb(229,23,39)" fg:x="666" fg:w="2"/><text x="8.2702%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.0323%" y="1237" width="0.0120%" height="15" fill="rgb(206,12,3)" fg:x="667" fg:w="1"/><text x="8.2823%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.0323%" y="1221" width="0.0120%" height="15" fill="rgb(252,226,20)" fg:x="667" fg:w="1"/><text x="8.2823%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.0323%" y="1205" width="0.0120%" height="15" fill="rgb(216,123,35)" fg:x="667" fg:w="1"/><text x="8.2823%" y="1215.50"></text></g><g><title>crossbeam_epoch::default::is_pinned (94 samples, 1.13%)</title><rect x="6.9244%" y="1477" width="1.1320%" height="15" fill="rgb(212,68,40)" fg:x="575" fg:w="94"/><text x="7.1744%" y="1487.50"></text></g><g><title>crossbeam_epoch::default::with_handle (93 samples, 1.12%)</title><rect x="6.9364%" y="1461" width="1.1199%" height="15" fill="rgb(254,125,32)" fg:x="576" fg:w="93"/><text x="7.1864%" y="1471.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (93 samples, 1.12%)</title><rect x="6.9364%" y="1445" width="1.1199%" height="15" fill="rgb(253,97,22)" fg:x="576" fg:w="93"/><text x="7.1864%" y="1455.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__getit (93 samples, 1.12%)</title><rect x="6.9364%" y="1429" width="1.1199%" height="15" fill="rgb(241,101,14)" fg:x="576" fg:w="93"/><text x="7.1864%" y="1439.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (93 samples, 1.12%)</title><rect x="6.9364%" y="1413" width="1.1199%" height="15" fill="rgb(238,103,29)" fg:x="576" fg:w="93"/><text x="7.1864%" y="1423.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::initialize (82 samples, 0.99%)</title><rect x="7.0689%" y="1397" width="0.9875%" height="15" fill="rgb(233,195,47)" fg:x="587" fg:w="82"/><text x="7.3189%" y="1407.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__getit::{{closure}} (82 samples, 0.99%)</title><rect x="7.0689%" y="1381" width="0.9875%" height="15" fill="rgb(246,218,30)" fg:x="587" fg:w="82"/><text x="7.3189%" y="1391.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__init (82 samples, 0.99%)</title><rect x="7.0689%" y="1365" width="0.9875%" height="15" fill="rgb(219,145,47)" fg:x="587" fg:w="82"/><text x="7.3189%" y="1375.50"></text></g><g><title>crossbeam_epoch::internal::Local::register (82 samples, 0.99%)</title><rect x="7.0689%" y="1349" width="0.9875%" height="15" fill="rgb(243,12,26)" fg:x="587" fg:w="82"/><text x="7.3189%" y="1359.50"></text></g><g><title>crossbeam_epoch::sync::list::List&lt;T,C&gt;::insert (1 samples, 0.01%)</title><rect x="8.0443%" y="1333" width="0.0120%" height="15" fill="rgb(214,87,16)" fg:x="668" fg:w="1"/><text x="8.2943%" y="1343.50"></text></g><g><title>crossbeam_epoch::atomic::Atomic&lt;T&gt;::compare_exchange_weak (1 samples, 0.01%)</title><rect x="8.0443%" y="1317" width="0.0120%" height="15" fill="rgb(208,99,42)" fg:x="668" fg:w="1"/><text x="8.2943%" y="1327.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.01%)</title><rect x="8.0443%" y="1301" width="0.0120%" height="15" fill="rgb(253,99,2)" fg:x="668" fg:w="1"/><text x="8.2943%" y="1311.50"></text></g><g><title>crossbeam_epoch::atomic::Atomic&lt;T&gt;::compare_exchange_weak (1 samples, 0.01%)</title><rect x="8.0443%" y="1285" width="0.0120%" height="15" fill="rgb(220,168,23)" fg:x="668" fg:w="1"/><text x="8.2943%" y="1295.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__getit (1 samples, 0.01%)</title><rect x="8.0684%" y="1429" width="0.0120%" height="15" fill="rgb(242,38,24)" fg:x="670" fg:w="1"/><text x="8.3184%" y="1439.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="8.0684%" y="1413" width="0.0120%" height="15" fill="rgb(225,182,9)" fg:x="670" fg:w="1"/><text x="8.3184%" y="1423.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="8.0684%" y="1397" width="0.0120%" height="15" fill="rgb(243,178,37)" fg:x="670" fg:w="1"/><text x="8.3184%" y="1407.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="8.0684%" y="1381" width="0.0120%" height="15" fill="rgb(232,139,19)" fg:x="670" fg:w="1"/><text x="8.3184%" y="1391.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.01%)</title><rect x="8.1888%" y="1365" width="0.0120%" height="15" fill="rgb(225,201,24)" fg:x="680" fg:w="1"/><text x="8.4388%" y="1375.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.01%)</title><rect x="8.1888%" y="1349" width="0.0120%" height="15" fill="rgb(221,47,46)" fg:x="680" fg:w="1"/><text x="8.4388%" y="1359.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (3 samples, 0.04%)</title><rect x="8.2009%" y="1365" width="0.0361%" height="15" fill="rgb(249,23,13)" fg:x="681" fg:w="3"/><text x="8.4509%" y="1375.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.2250%" y="1349" width="0.0120%" height="15" fill="rgb(219,9,5)" fg:x="683" fg:w="1"/><text x="8.4750%" y="1359.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.2250%" y="1333" width="0.0120%" height="15" fill="rgb(254,171,16)" fg:x="683" fg:w="1"/><text x="8.4750%" y="1343.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.2250%" y="1317" width="0.0120%" height="15" fill="rgb(230,171,20)" fg:x="683" fg:w="1"/><text x="8.4750%" y="1327.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.2250%" y="1301" width="0.0120%" height="15" fill="rgb(210,71,41)" fg:x="683" fg:w="1"/><text x="8.4750%" y="1311.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.2250%" y="1285" width="0.0120%" height="15" fill="rgb(206,173,20)" fg:x="683" fg:w="1"/><text x="8.4750%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.2250%" y="1269" width="0.0120%" height="15" fill="rgb(233,88,34)" fg:x="683" fg:w="1"/><text x="8.4750%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.2250%" y="1253" width="0.0120%" height="15" fill="rgb(223,209,46)" fg:x="683" fg:w="1"/><text x="8.4750%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.2250%" y="1237" width="0.0120%" height="15" fill="rgb(250,43,18)" fg:x="683" fg:w="1"/><text x="8.4750%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.2250%" y="1221" width="0.0120%" height="15" fill="rgb(208,13,10)" fg:x="683" fg:w="1"/><text x="8.4750%" y="1231.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::compare_exchange (7 samples, 0.08%)</title><rect x="8.2370%" y="1365" width="0.0843%" height="15" fill="rgb(212,200,36)" fg:x="684" fg:w="7"/><text x="8.4870%" y="1375.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (7 samples, 0.08%)</title><rect x="8.2370%" y="1349" width="0.0843%" height="15" fill="rgb(225,90,30)" fg:x="684" fg:w="7"/><text x="8.4870%" y="1359.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (7 samples, 0.08%)</title><rect x="8.2370%" y="1333" width="0.0843%" height="15" fill="rgb(236,182,39)" fg:x="684" fg:w="7"/><text x="8.4870%" y="1343.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.3092%" y="1317" width="0.0120%" height="15" fill="rgb(212,144,35)" fg:x="690" fg:w="1"/><text x="8.5592%" y="1327.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.3092%" y="1301" width="0.0120%" height="15" fill="rgb(228,63,44)" fg:x="690" fg:w="1"/><text x="8.5592%" y="1311.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.3092%" y="1285" width="0.0120%" height="15" fill="rgb(228,109,6)" fg:x="690" fg:w="1"/><text x="8.5592%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.3092%" y="1269" width="0.0120%" height="15" fill="rgb(238,117,24)" fg:x="690" fg:w="1"/><text x="8.5592%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.3092%" y="1253" width="0.0120%" height="15" fill="rgb(242,26,26)" fg:x="690" fg:w="1"/><text x="8.5592%" y="1263.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::load (4 samples, 0.05%)</title><rect x="8.3213%" y="1365" width="0.0482%" height="15" fill="rgb(221,92,48)" fg:x="691" fg:w="4"/><text x="8.5713%" y="1375.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (4 samples, 0.05%)</title><rect x="8.3213%" y="1349" width="0.0482%" height="15" fill="rgb(209,209,32)" fg:x="691" fg:w="4"/><text x="8.5713%" y="1359.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.05%)</title><rect x="8.3213%" y="1333" width="0.0482%" height="15" fill="rgb(221,70,22)" fg:x="691" fg:w="4"/><text x="8.5713%" y="1343.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.3574%" y="1317" width="0.0120%" height="15" fill="rgb(248,145,5)" fg:x="694" fg:w="1"/><text x="8.6074%" y="1327.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.3574%" y="1301" width="0.0120%" height="15" fill="rgb(226,116,26)" fg:x="694" fg:w="1"/><text x="8.6074%" y="1311.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.3574%" y="1285" width="0.0120%" height="15" fill="rgb(244,5,17)" fg:x="694" fg:w="1"/><text x="8.6074%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.3574%" y="1269" width="0.0120%" height="15" fill="rgb(252,159,33)" fg:x="694" fg:w="1"/><text x="8.6074%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.3574%" y="1253" width="0.0120%" height="15" fill="rgb(206,71,0)" fg:x="694" fg:w="1"/><text x="8.6074%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.3574%" y="1237" width="0.0120%" height="15" fill="rgb(233,118,54)" fg:x="694" fg:w="1"/><text x="8.6074%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.3574%" y="1221" width="0.0120%" height="15" fill="rgb(234,83,48)" fg:x="694" fg:w="1"/><text x="8.6074%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.3574%" y="1205" width="0.0120%" height="15" fill="rgb(228,3,54)" fg:x="694" fg:w="1"/><text x="8.6074%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.3574%" y="1189" width="0.0120%" height="15" fill="rgb(226,155,13)" fg:x="694" fg:w="1"/><text x="8.6074%" y="1199.50"></text></g><g><title>__rust_probestack (1 samples, 0.01%)</title><rect x="8.3695%" y="1349" width="0.0120%" height="15" fill="rgb(241,28,37)" fg:x="695" fg:w="1"/><text x="8.6195%" y="1359.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (17 samples, 0.20%)</title><rect x="8.3815%" y="1349" width="0.2047%" height="15" fill="rgb(233,93,10)" fg:x="696" fg:w="17"/><text x="8.6315%" y="1359.50"></text></g><g><title>&lt;crossbeam_epoch::sync::list::Iter&lt;T,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.19%)</title><rect x="8.3935%" y="1333" width="0.1927%" height="15" fill="rgb(225,113,19)" fg:x="697" fg:w="16"/><text x="8.6435%" y="1343.50"></text></g><g><title>crossbeam_epoch::atomic::Shared&lt;T&gt;::tag (16 samples, 0.19%)</title><rect x="8.3935%" y="1317" width="0.1927%" height="15" fill="rgb(241,2,18)" fg:x="697" fg:w="16"/><text x="8.6435%" y="1327.50"></text></g><g><title>crossbeam_epoch::atomic::decompose_tag (16 samples, 0.19%)</title><rect x="8.3935%" y="1301" width="0.1927%" height="15" fill="rgb(228,207,21)" fg:x="697" fg:w="16"/><text x="8.6435%" y="1311.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="8.5621%" y="1285" width="0.0241%" height="15" fill="rgb(213,211,35)" fg:x="711" fg:w="2"/><text x="8.8121%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.5742%" y="1269" width="0.0120%" height="15" fill="rgb(209,83,10)" fg:x="712" fg:w="1"/><text x="8.8242%" y="1279.50"></text></g><g><title>crossbeam_epoch::sync::queue::Queue&lt;T&gt;::try_pop_if (1 samples, 0.01%)</title><rect x="8.5862%" y="1349" width="0.0120%" height="15" fill="rgb(209,164,1)" fg:x="713" fg:w="1"/><text x="8.8362%" y="1359.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (183 samples, 2.20%)</title><rect x="6.4066%" y="1669" width="2.2038%" height="15" fill="rgb(213,184,43)" fg:x="532" fg:w="183"/><text x="6.6566%" y="1679.50">c..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold::{{closure}} (183 samples, 2.20%)</title><rect x="6.4066%" y="1653" width="2.2038%" height="15" fill="rgb(231,61,34)" fg:x="532" fg:w="183"/><text x="6.6566%" y="1663.50">r..</text></g><g><title>rayon_core::registry::WorkerThread::steal (181 samples, 2.18%)</title><rect x="6.4306%" y="1637" width="2.1797%" height="15" fill="rgb(235,75,3)" fg:x="534" fg:w="181"/><text x="6.6806%" y="1647.50">r..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map (181 samples, 2.18%)</title><rect x="6.4306%" y="1621" width="2.1797%" height="15" fill="rgb(220,106,47)" fg:x="534" fg:w="181"/><text x="6.6806%" y="1631.50">c..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (181 samples, 2.18%)</title><rect x="6.4306%" y="1605" width="2.1797%" height="15" fill="rgb(210,196,33)" fg:x="534" fg:w="181"/><text x="6.6806%" y="1615.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (181 samples, 2.18%)</title><rect x="6.4306%" y="1589" width="2.1797%" height="15" fill="rgb(229,154,42)" fg:x="534" fg:w="181"/><text x="6.6806%" y="1599.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (181 samples, 2.18%)</title><rect x="6.4306%" y="1573" width="2.1797%" height="15" fill="rgb(228,114,26)" fg:x="534" fg:w="181"/><text x="6.6806%" y="1583.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (150 samples, 1.81%)</title><rect x="6.8039%" y="1557" width="1.8064%" height="15" fill="rgb(208,144,1)" fg:x="565" fg:w="150"/><text x="7.0539%" y="1567.50">c..</text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (150 samples, 1.81%)</title><rect x="6.8039%" y="1541" width="1.8064%" height="15" fill="rgb(239,112,37)" fg:x="565" fg:w="150"/><text x="7.0539%" y="1551.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (150 samples, 1.81%)</title><rect x="6.8039%" y="1525" width="1.8064%" height="15" fill="rgb(210,96,50)" fg:x="565" fg:w="150"/><text x="7.0539%" y="1535.50">c..</text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (150 samples, 1.81%)</title><rect x="6.8039%" y="1509" width="1.8064%" height="15" fill="rgb(222,178,2)" fg:x="565" fg:w="150"/><text x="7.0539%" y="1519.50">r..</text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (150 samples, 1.81%)</title><rect x="6.8039%" y="1493" width="1.8064%" height="15" fill="rgb(226,74,18)" fg:x="565" fg:w="150"/><text x="7.0539%" y="1503.50">c..</text></g><g><title>crossbeam_epoch::default::pin (46 samples, 0.55%)</title><rect x="8.0564%" y="1477" width="0.5539%" height="15" fill="rgb(225,67,54)" fg:x="669" fg:w="46"/><text x="8.3064%" y="1487.50"></text></g><g><title>crossbeam_epoch::default::with_handle (45 samples, 0.54%)</title><rect x="8.0684%" y="1461" width="0.5419%" height="15" fill="rgb(251,92,32)" fg:x="670" fg:w="45"/><text x="8.3184%" y="1471.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (45 samples, 0.54%)</title><rect x="8.0684%" y="1445" width="0.5419%" height="15" fill="rgb(228,149,22)" fg:x="670" fg:w="45"/><text x="8.3184%" y="1455.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (44 samples, 0.53%)</title><rect x="8.0804%" y="1429" width="0.5299%" height="15" fill="rgb(243,54,13)" fg:x="671" fg:w="44"/><text x="8.3304%" y="1439.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (44 samples, 0.53%)</title><rect x="8.0804%" y="1413" width="0.5299%" height="15" fill="rgb(243,180,28)" fg:x="671" fg:w="44"/><text x="8.3304%" y="1423.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (44 samples, 0.53%)</title><rect x="8.0804%" y="1397" width="0.5299%" height="15" fill="rgb(208,167,24)" fg:x="671" fg:w="44"/><text x="8.3304%" y="1407.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (44 samples, 0.53%)</title><rect x="8.0804%" y="1381" width="0.5299%" height="15" fill="rgb(245,73,45)" fg:x="671" fg:w="44"/><text x="8.3304%" y="1391.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (20 samples, 0.24%)</title><rect x="8.3695%" y="1365" width="0.2408%" height="15" fill="rgb(237,203,48)" fg:x="695" fg:w="20"/><text x="8.6195%" y="1375.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.01%)</title><rect x="8.5983%" y="1349" width="0.0120%" height="15" fill="rgb(211,197,16)" fg:x="714" fg:w="1"/><text x="8.8483%" y="1359.50"></text></g><g><title>mi_page_fresh (1 samples, 0.01%)</title><rect x="8.5983%" y="1333" width="0.0120%" height="15" fill="rgb(243,99,51)" fg:x="714" fg:w="1"/><text x="8.8483%" y="1343.50"></text></g><g><title>mi_page_fresh_alloc (1 samples, 0.01%)</title><rect x="8.5983%" y="1317" width="0.0120%" height="15" fill="rgb(215,123,29)" fg:x="714" fg:w="1"/><text x="8.8483%" y="1327.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.01%)</title><rect x="8.5983%" y="1301" width="0.0120%" height="15" fill="rgb(239,186,37)" fg:x="714" fg:w="1"/><text x="8.8483%" y="1311.50"></text></g><g><title>mi_page_free_list_extend_secure (1 samples, 0.01%)</title><rect x="8.5983%" y="1285" width="0.0120%" height="15" fill="rgb(252,136,39)" fg:x="714" fg:w="1"/><text x="8.8483%" y="1295.50"></text></g><g><title>mi_block_set_next (1 samples, 0.01%)</title><rect x="8.5983%" y="1269" width="0.0120%" height="15" fill="rgb(223,213,32)" fg:x="714" fg:w="1"/><text x="8.8483%" y="1279.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.01%)</title><rect x="8.5983%" y="1253" width="0.0120%" height="15" fill="rgb(233,115,5)" fg:x="714" fg:w="1"/><text x="8.8483%" y="1263.50"></text></g><g><title>mi_ptr_encode (1 samples, 0.01%)</title><rect x="8.5983%" y="1237" width="0.0120%" height="15" fill="rgb(207,226,44)" fg:x="714" fg:w="1"/><text x="8.8483%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.5983%" y="1221" width="0.0120%" height="15" fill="rgb(208,126,0)" fg:x="714" fg:w="1"/><text x="8.8483%" y="1231.50"></text></g><g><title>&lt;rayon_core::latch::SpinLatch as rayon_core::latch::Latch&gt;::set (1 samples, 0.01%)</title><rect x="8.6103%" y="1621" width="0.0120%" height="15" fill="rgb(244,66,21)" fg:x="715" fg:w="1"/><text x="8.8603%" y="1631.50"></text></g><g><title>wasmer_compiler::translator::middleware::MiddlewareBinaryReader::new_with_offset (3 samples, 0.04%)</title><rect x="8.6464%" y="1221" width="0.0361%" height="15" fill="rgb(222,97,12)" fg:x="718" fg:w="3"/><text x="8.8964%" y="1231.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::new (3 samples, 0.04%)</title><rect x="8.6464%" y="1205" width="0.0361%" height="15" fill="rgb(219,213,19)" fg:x="718" fg:w="3"/><text x="8.8964%" y="1215.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::new_in (3 samples, 0.04%)</title><rect x="8.6464%" y="1189" width="0.0361%" height="15" fill="rgb(252,169,30)" fg:x="718" fg:w="3"/><text x="8.8964%" y="1199.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="8.6464%" y="1173" width="0.0361%" height="15" fill="rgb(206,32,51)" fg:x="718" fg:w="3"/><text x="8.8964%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="8.6464%" y="1157" width="0.0361%" height="15" fill="rgb(250,172,42)" fg:x="718" fg:w="3"/><text x="8.8964%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.04%)</title><rect x="8.6464%" y="1141" width="0.0361%" height="15" fill="rgb(209,34,43)" fg:x="718" fg:w="3"/><text x="8.8964%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="8.6464%" y="1125" width="0.0361%" height="15" fill="rgb(223,11,35)" fg:x="718" fg:w="3"/><text x="8.8964%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.04%)</title><rect x="8.6464%" y="1109" width="0.0361%" height="15" fill="rgb(251,219,26)" fg:x="718" fg:w="3"/><text x="8.8964%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="8.6464%" y="1093" width="0.0361%" height="15" fill="rgb(231,119,3)" fg:x="718" fg:w="3"/><text x="8.8964%" y="1103.50"></text></g><g><title>_mi_malloc_generic (3 samples, 0.04%)</title><rect x="8.6464%" y="1077" width="0.0361%" height="15" fill="rgb(216,97,11)" fg:x="718" fg:w="3"/><text x="8.8964%" y="1087.50"></text></g><g><title>mi_page_queue_find_free_ex (3 samples, 0.04%)</title><rect x="8.6464%" y="1061" width="0.0361%" height="15" fill="rgb(223,59,9)" fg:x="718" fg:w="3"/><text x="8.8964%" y="1071.50"></text></g><g><title>mi_page_fresh (3 samples, 0.04%)</title><rect x="8.6464%" y="1045" width="0.0361%" height="15" fill="rgb(233,93,31)" fg:x="718" fg:w="3"/><text x="8.8964%" y="1055.50"></text></g><g><title>mi_page_fresh_alloc (3 samples, 0.04%)</title><rect x="8.6464%" y="1029" width="0.0361%" height="15" fill="rgb(239,81,33)" fg:x="718" fg:w="3"/><text x="8.8964%" y="1039.50"></text></g><g><title>mi_page_extend_free (3 samples, 0.04%)</title><rect x="8.6464%" y="1013" width="0.0361%" height="15" fill="rgb(213,120,34)" fg:x="718" fg:w="3"/><text x="8.8964%" y="1023.50"></text></g><g><title>mi_page_free_list_extend_secure (3 samples, 0.04%)</title><rect x="8.6464%" y="997" width="0.0361%" height="15" fill="rgb(243,49,53)" fg:x="718" fg:w="3"/><text x="8.8964%" y="1007.50"></text></g><g><title>mi_block_set_next (3 samples, 0.04%)</title><rect x="8.6464%" y="981" width="0.0361%" height="15" fill="rgb(247,216,33)" fg:x="718" fg:w="3"/><text x="8.8964%" y="991.50"></text></g><g><title>mi_block_set_nextx (3 samples, 0.04%)</title><rect x="8.6464%" y="965" width="0.0361%" height="15" fill="rgb(226,26,14)" fg:x="718" fg:w="3"/><text x="8.8964%" y="975.50"></text></g><g><title>mi_ptr_encode (3 samples, 0.04%)</title><rect x="8.6464%" y="949" width="0.0361%" height="15" fill="rgb(215,49,53)" fg:x="718" fg:w="3"/><text x="8.8964%" y="959.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="8.6464%" y="933" width="0.0361%" height="15" fill="rgb(245,162,40)" fg:x="718" fg:w="3"/><text x="8.8964%" y="943.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="8.6464%" y="917" width="0.0361%" height="15" fill="rgb(229,68,17)" fg:x="718" fg:w="3"/><text x="8.8964%" y="927.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="8.6464%" y="901" width="0.0361%" height="15" fill="rgb(213,182,10)" fg:x="718" fg:w="3"/><text x="8.8964%" y="911.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="8.6464%" y="885" width="0.0361%" height="15" fill="rgb(245,125,30)" fg:x="718" fg:w="3"/><text x="8.8964%" y="895.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::common_decl::MachineState as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="8.6826%" y="1205" width="0.0120%" height="15" fill="rgb(232,202,2)" fg:x="721" fg:w="1"/><text x="8.9326%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="8.6826%" y="1189" width="0.0120%" height="15" fill="rgb(237,140,51)" fg:x="721" fg:w="1"/><text x="8.9326%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="8.6826%" y="1173" width="0.0120%" height="15" fill="rgb(236,157,25)" fg:x="721" fg:w="1"/><text x="8.9326%" y="1183.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="8.6826%" y="1157" width="0.0120%" height="15" fill="rgb(219,209,0)" fg:x="721" fg:w="1"/><text x="8.9326%" y="1167.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="8.6826%" y="1141" width="0.0120%" height="15" fill="rgb(240,116,54)" fg:x="721" fg:w="1"/><text x="8.9326%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="8.6826%" y="1125" width="0.0120%" height="15" fill="rgb(216,10,36)" fg:x="721" fg:w="1"/><text x="8.9326%" y="1135.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::MachineX86_64 as wasmer_compiler_singlepass::machine::Machine&gt;::jmp_on_equal (1 samples, 0.01%)</title><rect x="8.6946%" y="1205" width="0.0120%" height="15" fill="rgb(222,72,44)" fg:x="722" fg:w="1"/><text x="8.9446%" y="1215.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::AssemblerX64 as wasmer_compiler_singlepass::emitter_x64::EmitterX64&gt;::emit_jmp (1 samples, 0.01%)</title><rect x="8.6946%" y="1189" width="0.0120%" height="15" fill="rgb(232,159,9)" fg:x="722" fg:w="1"/><text x="8.9446%" y="1199.50"></text></g><g><title>dynasmrt::DynasmLabelApi::dynamic_reloc (1 samples, 0.01%)</title><rect x="8.6946%" y="1173" width="0.0120%" height="15" fill="rgb(210,39,32)" fg:x="722" fg:w="1"/><text x="8.9446%" y="1183.50"></text></g><g><title>&lt;dynasmrt::VecAssembler&lt;R&gt; as dynasmrt::DynasmLabelApi&gt;::dynamic_relocation (1 samples, 0.01%)</title><rect x="8.6946%" y="1157" width="0.0120%" height="15" fill="rgb(216,194,45)" fg:x="722" fg:w="1"/><text x="8.9446%" y="1167.50"></text></g><g><title>dynasmrt::components::RelocRegistry&lt;R&gt;::add_dynamic (1 samples, 0.01%)</title><rect x="8.6946%" y="1141" width="0.0120%" height="15" fill="rgb(218,18,35)" fg:x="722" fg:w="1"/><text x="8.9446%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="8.6946%" y="1125" width="0.0120%" height="15" fill="rgb(207,83,51)" fg:x="722" fg:w="1"/><text x="8.9446%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="8.6946%" y="1109" width="0.0120%" height="15" fill="rgb(225,63,43)" fg:x="722" fg:w="1"/><text x="8.9446%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="8.6946%" y="1093" width="0.0120%" height="15" fill="rgb(207,57,36)" fg:x="722" fg:w="1"/><text x="8.9446%" y="1103.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="8.6946%" y="1077" width="0.0120%" height="15" fill="rgb(216,99,33)" fg:x="722" fg:w="1"/><text x="8.9446%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.07%)</title><rect x="8.7187%" y="1189" width="0.0723%" height="15" fill="rgb(225,42,16)" fg:x="724" fg:w="6"/><text x="8.9687%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 0.07%)</title><rect x="8.7187%" y="1173" width="0.0723%" height="15" fill="rgb(220,201,45)" fg:x="724" fg:w="6"/><text x="8.9687%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.07%)</title><rect x="8.7187%" y="1157" width="0.0723%" height="15" fill="rgb(225,33,4)" fg:x="724" fg:w="6"/><text x="8.9687%" y="1167.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.07%)</title><rect x="8.7187%" y="1141" width="0.0723%" height="15" fill="rgb(224,33,50)" fg:x="724" fg:w="6"/><text x="8.9687%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.07%)</title><rect x="8.7187%" y="1125" width="0.0723%" height="15" fill="rgb(246,198,51)" fg:x="724" fg:w="6"/><text x="8.9687%" y="1135.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.07%)</title><rect x="8.7187%" y="1109" width="0.0723%" height="15" fill="rgb(205,22,4)" fg:x="724" fg:w="6"/><text x="8.9687%" y="1119.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 0.07%)</title><rect x="8.7187%" y="1093" width="0.0723%" height="15" fill="rgb(206,3,8)" fg:x="724" fg:w="6"/><text x="8.9687%" y="1103.50"></text></g><g><title>_mi_heap_realloc_zero (6 samples, 0.07%)</title><rect x="8.7187%" y="1077" width="0.0723%" height="15" fill="rgb(251,23,15)" fg:x="724" fg:w="6"/><text x="8.9687%" y="1087.50"></text></g><g><title>mi_heap_malloc (6 samples, 0.07%)</title><rect x="8.7187%" y="1061" width="0.0723%" height="15" fill="rgb(252,88,28)" fg:x="724" fg:w="6"/><text x="8.9687%" y="1071.50"></text></g><g><title>_mi_malloc_generic (6 samples, 0.07%)</title><rect x="8.7187%" y="1045" width="0.0723%" height="15" fill="rgb(212,127,14)" fg:x="724" fg:w="6"/><text x="8.9687%" y="1055.50"></text></g><g><title>mi_page_queue_find_free_ex (6 samples, 0.07%)</title><rect x="8.7187%" y="1029" width="0.0723%" height="15" fill="rgb(247,145,37)" fg:x="724" fg:w="6"/><text x="8.9687%" y="1039.50"></text></g><g><title>mi_page_fresh (6 samples, 0.07%)</title><rect x="8.7187%" y="1013" width="0.0723%" height="15" fill="rgb(209,117,53)" fg:x="724" fg:w="6"/><text x="8.9687%" y="1023.50"></text></g><g><title>mi_page_fresh_alloc (6 samples, 0.07%)</title><rect x="8.7187%" y="997" width="0.0723%" height="15" fill="rgb(212,90,42)" fg:x="724" fg:w="6"/><text x="8.9687%" y="1007.50"></text></g><g><title>mi_page_extend_free (6 samples, 0.07%)</title><rect x="8.7187%" y="981" width="0.0723%" height="15" fill="rgb(218,164,37)" fg:x="724" fg:w="6"/><text x="8.9687%" y="991.50"></text></g><g><title>mi_page_free_list_extend_secure (6 samples, 0.07%)</title><rect x="8.7187%" y="965" width="0.0723%" height="15" fill="rgb(246,65,34)" fg:x="724" fg:w="6"/><text x="8.9687%" y="975.50"></text></g><g><title>mi_block_set_next (6 samples, 0.07%)</title><rect x="8.7187%" y="949" width="0.0723%" height="15" fill="rgb(231,100,33)" fg:x="724" fg:w="6"/><text x="8.9687%" y="959.50"></text></g><g><title>mi_block_set_nextx (6 samples, 0.07%)</title><rect x="8.7187%" y="933" width="0.0723%" height="15" fill="rgb(228,126,14)" fg:x="724" fg:w="6"/><text x="8.9687%" y="943.50"></text></g><g><title>mi_ptr_encode (6 samples, 0.07%)</title><rect x="8.7187%" y="917" width="0.0723%" height="15" fill="rgb(215,173,21)" fg:x="724" fg:w="6"/><text x="8.9687%" y="927.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="8.7187%" y="901" width="0.0723%" height="15" fill="rgb(210,6,40)" fg:x="724" fg:w="6"/><text x="8.9687%" y="911.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="8.7187%" y="885" width="0.0723%" height="15" fill="rgb(212,48,18)" fg:x="724" fg:w="6"/><text x="8.9687%" y="895.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="8.7187%" y="869" width="0.0723%" height="15" fill="rgb(230,214,11)" fg:x="724" fg:w="6"/><text x="8.9687%" y="879.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="8.7187%" y="853" width="0.0723%" height="15" fill="rgb(254,105,39)" fg:x="724" fg:w="6"/><text x="8.9687%" y="863.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="8.7187%" y="837" width="0.0723%" height="15" fill="rgb(245,158,5)" fg:x="724" fg:w="6"/><text x="8.9687%" y="847.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="8.7307%" y="821" width="0.0602%" height="15" fill="rgb(249,208,11)" fg:x="725" fg:w="5"/><text x="8.9807%" y="831.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="8.7428%" y="805" width="0.0482%" height="15" fill="rgb(210,39,28)" fg:x="726" fg:w="4"/><text x="8.9928%" y="815.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="8.7428%" y="789" width="0.0482%" height="15" fill="rgb(211,56,53)" fg:x="726" fg:w="4"/><text x="8.9928%" y="799.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="8.7428%" y="773" width="0.0482%" height="15" fill="rgb(226,201,30)" fg:x="726" fg:w="4"/><text x="8.9928%" y="783.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="8.7428%" y="757" width="0.0482%" height="15" fill="rgb(239,101,34)" fg:x="726" fg:w="4"/><text x="8.9928%" y="767.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="8.7548%" y="741" width="0.0361%" height="15" fill="rgb(226,209,5)" fg:x="727" fg:w="3"/><text x="9.0048%" y="751.50"></text></g><g><title>wasmer_compiler_singlepass::codegen::FuncGen&lt;M&gt;::get_state_diff (8 samples, 0.10%)</title><rect x="8.7066%" y="1205" width="0.0963%" height="15" fill="rgb(250,105,47)" fg:x="723" fg:w="8"/><text x="8.9566%" y="1215.50"></text></g><g><title>wasmer_compiler_singlepass::common_decl::MachineState::diff (1 samples, 0.01%)</title><rect x="8.7909%" y="1189" width="0.0120%" height="15" fill="rgb(230,72,3)" fg:x="730" fg:w="1"/><text x="9.0409%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.01%)</title><rect x="8.7909%" y="1173" width="0.0120%" height="15" fill="rgb(232,218,39)" fg:x="730" fg:w="1"/><text x="9.0409%" y="1183.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="8.7909%" y="1157" width="0.0120%" height="15" fill="rgb(248,166,6)" fg:x="730" fg:w="1"/><text x="9.0409%" y="1167.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="8.7909%" y="1141" width="0.0120%" height="15" fill="rgb(247,89,20)" fg:x="730" fg:w="1"/><text x="9.0409%" y="1151.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="8.7909%" y="1125" width="0.0120%" height="15" fill="rgb(248,130,54)" fg:x="730" fg:w="1"/><text x="9.0409%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="8.7909%" y="1109" width="0.0120%" height="15" fill="rgb(234,196,4)" fg:x="730" fg:w="1"/><text x="9.0409%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="8.7909%" y="1093" width="0.0120%" height="15" fill="rgb(250,143,31)" fg:x="730" fg:w="1"/><text x="9.0409%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="8.7909%" y="1077" width="0.0120%" height="15" fill="rgb(211,110,34)" fg:x="730" fg:w="1"/><text x="9.0409%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="8.7909%" y="1061" width="0.0120%" height="15" fill="rgb(215,124,48)" fg:x="730" fg:w="1"/><text x="9.0409%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="8.7909%" y="1045" width="0.0120%" height="15" fill="rgb(216,46,13)" fg:x="730" fg:w="1"/><text x="9.0409%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="8.7909%" y="1029" width="0.0120%" height="15" fill="rgb(205,184,25)" fg:x="730" fg:w="1"/><text x="9.0409%" y="1039.50"></text></g><g><title>mi_malloc (1 samples, 0.01%)</title><rect x="8.7909%" y="1013" width="0.0120%" height="15" fill="rgb(228,1,10)" fg:x="730" fg:w="1"/><text x="9.0409%" y="1023.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.01%)</title><rect x="8.7909%" y="997" width="0.0120%" height="15" fill="rgb(213,116,27)" fg:x="730" fg:w="1"/><text x="9.0409%" y="1007.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.01%)</title><rect x="8.7909%" y="981" width="0.0120%" height="15" fill="rgb(241,95,50)" fg:x="730" fg:w="1"/><text x="9.0409%" y="991.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.01%)</title><rect x="8.7909%" y="965" width="0.0120%" height="15" fill="rgb(238,48,32)" fg:x="730" fg:w="1"/><text x="9.0409%" y="975.50"></text></g><g><title>mi_block_next (1 samples, 0.01%)</title><rect x="8.7909%" y="949" width="0.0120%" height="15" fill="rgb(235,113,49)" fg:x="730" fg:w="1"/><text x="9.0409%" y="959.50"></text></g><g><title>mi_is_in_same_page (1 samples, 0.01%)</title><rect x="8.7909%" y="933" width="0.0120%" height="15" fill="rgb(205,127,43)" fg:x="730" fg:w="1"/><text x="9.0409%" y="943.50"></text></g><g><title>_mi_segment_page_of (1 samples, 0.01%)</title><rect x="8.7909%" y="917" width="0.0120%" height="15" fill="rgb(250,162,2)" fg:x="730" fg:w="1"/><text x="9.0409%" y="927.50"></text></g><g><title>mi_slice_first (1 samples, 0.01%)</title><rect x="8.7909%" y="901" width="0.0120%" height="15" fill="rgb(220,13,41)" fg:x="730" fg:w="1"/><text x="9.0409%" y="911.50"></text></g><g><title>_mi_heap_collect_retired (1 samples, 0.01%)</title><rect x="8.8030%" y="1013" width="0.0120%" height="15" fill="rgb(249,221,25)" fg:x="731" fg:w="1"/><text x="9.0530%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.06%)</title><rect x="8.8030%" y="1189" width="0.0602%" height="15" fill="rgb(215,208,19)" fg:x="731" fg:w="5"/><text x="9.0530%" y="1199.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.06%)</title><rect x="8.8030%" y="1173" width="0.0602%" height="15" fill="rgb(236,175,2)" fg:x="731" fg:w="5"/><text x="9.0530%" y="1183.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (5 samples, 0.06%)</title><rect x="8.8030%" y="1157" width="0.0602%" height="15" fill="rgb(241,52,2)" fg:x="731" fg:w="5"/><text x="9.0530%" y="1167.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (5 samples, 0.06%)</title><rect x="8.8030%" y="1141" width="0.0602%" height="15" fill="rgb(248,140,14)" fg:x="731" fg:w="5"/><text x="9.0530%" y="1151.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (5 samples, 0.06%)</title><rect x="8.8030%" y="1125" width="0.0602%" height="15" fill="rgb(253,22,42)" fg:x="731" fg:w="5"/><text x="9.0530%" y="1135.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (5 samples, 0.06%)</title><rect x="8.8030%" y="1109" width="0.0602%" height="15" fill="rgb(234,61,47)" fg:x="731" fg:w="5"/><text x="9.0530%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.06%)</title><rect x="8.8030%" y="1093" width="0.0602%" height="15" fill="rgb(208,226,15)" fg:x="731" fg:w="5"/><text x="9.0530%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.06%)</title><rect x="8.8030%" y="1077" width="0.0602%" height="15" fill="rgb(217,221,4)" fg:x="731" fg:w="5"/><text x="9.0530%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.06%)</title><rect x="8.8030%" y="1061" width="0.0602%" height="15" fill="rgb(212,174,34)" fg:x="731" fg:w="5"/><text x="9.0530%" y="1071.50"></text></g><g><title>_mi_malloc_generic (5 samples, 0.06%)</title><rect x="8.8030%" y="1045" width="0.0602%" height="15" fill="rgb(253,83,4)" fg:x="731" fg:w="5"/><text x="9.0530%" y="1055.50"></text></g><g><title>mi_page_queue_find_free_ex (5 samples, 0.06%)</title><rect x="8.8030%" y="1029" width="0.0602%" height="15" fill="rgb(250,195,49)" fg:x="731" fg:w="5"/><text x="9.0530%" y="1039.50"></text></g><g><title>mi_page_fresh (4 samples, 0.05%)</title><rect x="8.8150%" y="1013" width="0.0482%" height="15" fill="rgb(241,192,25)" fg:x="732" fg:w="4"/><text x="9.0650%" y="1023.50"></text></g><g><title>mi_page_fresh_alloc (4 samples, 0.05%)</title><rect x="8.8150%" y="997" width="0.0482%" height="15" fill="rgb(208,124,10)" fg:x="732" fg:w="4"/><text x="9.0650%" y="1007.50"></text></g><g><title>mi_page_extend_free (4 samples, 0.05%)</title><rect x="8.8150%" y="981" width="0.0482%" height="15" fill="rgb(222,33,0)" fg:x="732" fg:w="4"/><text x="9.0650%" y="991.50"></text></g><g><title>mi_page_free_list_extend_secure (4 samples, 0.05%)</title><rect x="8.8150%" y="965" width="0.0482%" height="15" fill="rgb(234,209,28)" fg:x="732" fg:w="4"/><text x="9.0650%" y="975.50"></text></g><g><title>mi_block_set_next (3 samples, 0.04%)</title><rect x="8.8271%" y="949" width="0.0361%" height="15" fill="rgb(224,11,23)" fg:x="733" fg:w="3"/><text x="9.0771%" y="959.50"></text></g><g><title>mi_block_set_nextx (3 samples, 0.04%)</title><rect x="8.8271%" y="933" width="0.0361%" height="15" fill="rgb(232,99,1)" fg:x="733" fg:w="3"/><text x="9.0771%" y="943.50"></text></g><g><title>mi_ptr_encode (3 samples, 0.04%)</title><rect x="8.8271%" y="917" width="0.0361%" height="15" fill="rgb(237,95,45)" fg:x="733" fg:w="3"/><text x="9.0771%" y="927.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="8.8271%" y="901" width="0.0361%" height="15" fill="rgb(208,109,11)" fg:x="733" fg:w="3"/><text x="9.0771%" y="911.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="8.8271%" y="885" width="0.0361%" height="15" fill="rgb(216,190,48)" fg:x="733" fg:w="3"/><text x="9.0771%" y="895.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="8.8271%" y="869" width="0.0361%" height="15" fill="rgb(251,171,36)" fg:x="733" fg:w="3"/><text x="9.0771%" y="879.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="8.8271%" y="853" width="0.0361%" height="15" fill="rgb(230,62,22)" fg:x="733" fg:w="3"/><text x="9.0771%" y="863.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="8.8271%" y="837" width="0.0361%" height="15" fill="rgb(225,114,35)" fg:x="733" fg:w="3"/><text x="9.0771%" y="847.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="8.8271%" y="821" width="0.0361%" height="15" fill="rgb(215,118,42)" fg:x="733" fg:w="3"/><text x="9.0771%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.8512%" y="805" width="0.0120%" height="15" fill="rgb(243,119,21)" fg:x="735" fg:w="1"/><text x="9.1012%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.8512%" y="789" width="0.0120%" height="15" fill="rgb(252,177,53)" fg:x="735" fg:w="1"/><text x="9.1012%" y="799.50"></text></g><g><title>wasmer_compiler_singlepass::codegen::FuncGen&lt;M&gt;::mark_trappable (6 samples, 0.07%)</title><rect x="8.8030%" y="1205" width="0.0723%" height="15" fill="rgb(237,209,29)" fg:x="731" fg:w="6"/><text x="9.0530%" y="1215.50"></text></g><g><title>wasmer_compiler_singlepass::codegen::FuncGen&lt;M&gt;::get_state_diff (1 samples, 0.01%)</title><rect x="8.8632%" y="1189" width="0.0120%" height="15" fill="rgb(212,65,23)" fg:x="736" fg:w="1"/><text x="9.1132%" y="1199.50"></text></g><g><title>wasmer_compiler_singlepass::common_decl::MachineState::diff (1 samples, 0.01%)</title><rect x="8.8632%" y="1173" width="0.0120%" height="15" fill="rgb(230,222,46)" fg:x="736" fg:w="1"/><text x="9.1132%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="8.8632%" y="1157" width="0.0120%" height="15" fill="rgb(215,135,32)" fg:x="736" fg:w="1"/><text x="9.1132%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="8.8632%" y="1141" width="0.0120%" height="15" fill="rgb(246,101,22)" fg:x="736" fg:w="1"/><text x="9.1132%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="8.8632%" y="1125" width="0.0120%" height="15" fill="rgb(206,107,13)" fg:x="736" fg:w="1"/><text x="9.1132%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="8.8632%" y="1109" width="0.0120%" height="15" fill="rgb(250,100,44)" fg:x="736" fg:w="1"/><text x="9.1132%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="8.8632%" y="1093" width="0.0120%" height="15" fill="rgb(231,147,38)" fg:x="736" fg:w="1"/><text x="9.1132%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="8.8632%" y="1077" width="0.0120%" height="15" fill="rgb(229,8,40)" fg:x="736" fg:w="1"/><text x="9.1132%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.01%)</title><rect x="8.8632%" y="1061" width="0.0120%" height="15" fill="rgb(221,135,30)" fg:x="736" fg:w="1"/><text x="9.1132%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.01%)</title><rect x="8.8632%" y="1045" width="0.0120%" height="15" fill="rgb(249,193,18)" fg:x="736" fg:w="1"/><text x="9.1132%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="8.8632%" y="1029" width="0.0120%" height="15" fill="rgb(209,133,39)" fg:x="736" fg:w="1"/><text x="9.1132%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (1 samples, 0.01%)</title><rect x="8.8632%" y="1013" width="0.0120%" height="15" fill="rgb(232,100,14)" fg:x="736" fg:w="1"/><text x="9.1132%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (1 samples, 0.01%)</title><rect x="8.8632%" y="997" width="0.0120%" height="15" fill="rgb(224,185,1)" fg:x="736" fg:w="1"/><text x="9.1132%" y="1007.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.01%)</title><rect x="8.8632%" y="981" width="0.0120%" height="15" fill="rgb(223,139,8)" fg:x="736" fg:w="1"/><text x="9.1132%" y="991.50"></text></g><g><title>wasmer_compiler_singlepass::common_decl::MachineState::diff::{{closure}} (1 samples, 0.01%)</title><rect x="8.8632%" y="965" width="0.0120%" height="15" fill="rgb(232,213,38)" fg:x="736" fg:w="1"/><text x="9.1132%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (1 samples, 0.01%)</title><rect x="8.8632%" y="949" width="0.0120%" height="15" fill="rgb(207,94,22)" fg:x="736" fg:w="1"/><text x="9.1132%" y="959.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::common_decl::MachineValue as core::cmp::PartialEq&gt;::ne (1 samples, 0.01%)</title><rect x="8.8632%" y="933" width="0.0120%" height="15" fill="rgb(219,183,54)" fg:x="736" fg:w="1"/><text x="9.1132%" y="943.50"></text></g><g><title>wasmer_compiler_singlepass::codegen::FuncGen&lt;M&gt;::op_memory (1 samples, 0.01%)</title><rect x="8.8752%" y="1205" width="0.0120%" height="15" fill="rgb(216,185,54)" fg:x="737" fg:w="1"/><text x="9.1252%" y="1215.50"></text></g><g><title>wasmer_compiler_singlepass::codegen::FuncGen&lt;M&gt;::feed_operator::{{closure}} (1 samples, 0.01%)</title><rect x="8.8752%" y="1189" width="0.0120%" height="15" fill="rgb(254,217,39)" fg:x="737" fg:w="1"/><text x="9.1252%" y="1199.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::MachineX86_64 as wasmer_compiler_singlepass::machine::Machine&gt;::i64_save (1 samples, 0.01%)</title><rect x="8.8752%" y="1173" width="0.0120%" height="15" fill="rgb(240,178,23)" fg:x="737" fg:w="1"/><text x="9.1252%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.8752%" y="1157" width="0.0120%" height="15" fill="rgb(218,11,47)" fg:x="737" fg:w="1"/><text x="9.1252%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.8752%" y="1141" width="0.0120%" height="15" fill="rgb(218,51,51)" fg:x="737" fg:w="1"/><text x="9.1252%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.8752%" y="1125" width="0.0120%" height="15" fill="rgb(238,126,27)" fg:x="737" fg:w="1"/><text x="9.1252%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.8752%" y="1109" width="0.0120%" height="15" fill="rgb(249,202,22)" fg:x="737" fg:w="1"/><text x="9.1252%" y="1119.50"></text></g><g><title>wasmer_compiler_singlepass::codegen::FuncGen&lt;M&gt;::feed_operator (18 samples, 0.22%)</title><rect x="8.6826%" y="1221" width="0.2168%" height="15" fill="rgb(254,195,49)" fg:x="721" fg:w="18"/><text x="8.9326%" y="1231.50"></text></g><g><title>wasmer_compiler_singlepass::machine_x64::MachineX86_64::emit_relaxed_binop (1 samples, 0.01%)</title><rect x="8.8873%" y="1205" width="0.0120%" height="15" fill="rgb(208,123,14)" fg:x="738" fg:w="1"/><text x="9.1373%" y="1215.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::AssemblerX64 as wasmer_compiler_singlepass::emitter_x64::EmitterX64&gt;::emit_mov (1 samples, 0.01%)</title><rect x="8.8873%" y="1189" width="0.0120%" height="15" fill="rgb(224,200,8)" fg:x="738" fg:w="1"/><text x="9.1373%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="8.8873%" y="1173" width="0.0120%" height="15" fill="rgb(217,61,36)" fg:x="738" fg:w="1"/><text x="9.1373%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="8.8873%" y="1157" width="0.0120%" height="15" fill="rgb(206,35,45)" fg:x="738" fg:w="1"/><text x="9.1373%" y="1167.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="8.8873%" y="1141" width="0.0120%" height="15" fill="rgb(217,65,33)" fg:x="738" fg:w="1"/><text x="9.1373%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="8.8873%" y="1125" width="0.0120%" height="15" fill="rgb(222,158,48)" fg:x="738" fg:w="1"/><text x="9.1373%" y="1135.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="8.8873%" y="1109" width="0.0120%" height="15" fill="rgb(254,2,54)" fg:x="738" fg:w="1"/><text x="9.1373%" y="1119.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="8.8873%" y="1093" width="0.0120%" height="15" fill="rgb(250,143,38)" fg:x="738" fg:w="1"/><text x="9.1373%" y="1103.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.01%)</title><rect x="8.8873%" y="1077" width="0.0120%" height="15" fill="rgb(248,25,0)" fg:x="738" fg:w="1"/><text x="9.1373%" y="1087.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.01%)</title><rect x="8.8873%" y="1061" width="0.0120%" height="15" fill="rgb(206,152,27)" fg:x="738" fg:w="1"/><text x="9.1373%" y="1071.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.01%)</title><rect x="8.8873%" y="1045" width="0.0120%" height="15" fill="rgb(240,77,30)" fg:x="738" fg:w="1"/><text x="9.1373%" y="1055.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.01%)</title><rect x="8.8873%" y="1029" width="0.0120%" height="15" fill="rgb(231,5,3)" fg:x="738" fg:w="1"/><text x="9.1373%" y="1039.50"></text></g><g><title>mi_page_fresh (1 samples, 0.01%)</title><rect x="8.8873%" y="1013" width="0.0120%" height="15" fill="rgb(207,226,32)" fg:x="738" fg:w="1"/><text x="9.1373%" y="1023.50"></text></g><g><title>mi_page_fresh_alloc (1 samples, 0.01%)</title><rect x="8.8873%" y="997" width="0.0120%" height="15" fill="rgb(222,207,47)" fg:x="738" fg:w="1"/><text x="9.1373%" y="1007.50"></text></g><g><title>mi_page_init (1 samples, 0.01%)</title><rect x="8.8873%" y="981" width="0.0120%" height="15" fill="rgb(229,115,45)" fg:x="738" fg:w="1"/><text x="9.1373%" y="991.50"></text></g><g><title>_mi_random_next (1 samples, 0.01%)</title><rect x="8.8873%" y="965" width="0.0120%" height="15" fill="rgb(224,191,6)" fg:x="738" fg:w="1"/><text x="9.1373%" y="975.50"></text></g><g><title>chacha_next32 (1 samples, 0.01%)</title><rect x="8.8873%" y="949" width="0.0120%" height="15" fill="rgb(230,227,24)" fg:x="738" fg:w="1"/><text x="9.1373%" y="959.50"></text></g><g><title>chacha_block (1 samples, 0.01%)</title><rect x="8.8873%" y="933" width="0.0120%" height="15" fill="rgb(228,80,19)" fg:x="738" fg:w="1"/><text x="9.1373%" y="943.50"></text></g><g><title>qround (1 samples, 0.01%)</title><rect x="8.8873%" y="917" width="0.0120%" height="15" fill="rgb(247,229,0)" fg:x="738" fg:w="1"/><text x="9.1373%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="8.8993%" y="1093" width="0.0120%" height="15" fill="rgb(237,194,15)" fg:x="739" fg:w="1"/><text x="9.1493%" y="1103.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="8.8993%" y="1077" width="0.0120%" height="15" fill="rgb(219,203,20)" fg:x="739" fg:w="1"/><text x="9.1493%" y="1087.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="8.8993%" y="1061" width="0.0120%" height="15" fill="rgb(234,128,8)" fg:x="739" fg:w="1"/><text x="9.1493%" y="1071.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.01%)</title><rect x="8.8993%" y="1045" width="0.0120%" height="15" fill="rgb(248,202,8)" fg:x="739" fg:w="1"/><text x="9.1493%" y="1055.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.01%)</title><rect x="8.8993%" y="1029" width="0.0120%" height="15" fill="rgb(206,104,37)" fg:x="739" fg:w="1"/><text x="9.1493%" y="1039.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.01%)</title><rect x="8.8993%" y="1013" width="0.0120%" height="15" fill="rgb(223,8,27)" fg:x="739" fg:w="1"/><text x="9.1493%" y="1023.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.01%)</title><rect x="8.8993%" y="997" width="0.0120%" height="15" fill="rgb(216,217,28)" fg:x="739" fg:w="1"/><text x="9.1493%" y="1007.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.01%)</title><rect x="8.9114%" y="1029" width="0.0120%" height="15" fill="rgb(249,199,1)" fg:x="740" fg:w="1"/><text x="9.1614%" y="1039.50"></text></g><g><title>mi_page_free_list_extend_secure (1 samples, 0.01%)</title><rect x="8.9114%" y="1013" width="0.0120%" height="15" fill="rgb(240,85,17)" fg:x="740" fg:w="1"/><text x="9.1614%" y="1023.50"></text></g><g><title>_mi_malloc_generic (2 samples, 0.02%)</title><rect x="8.9114%" y="1093" width="0.0241%" height="15" fill="rgb(206,108,45)" fg:x="740" fg:w="2"/><text x="9.1614%" y="1103.50"></text></g><g><title>mi_page_queue_find_free_ex (2 samples, 0.02%)</title><rect x="8.9114%" y="1077" width="0.0241%" height="15" fill="rgb(245,210,41)" fg:x="740" fg:w="2"/><text x="9.1614%" y="1087.50"></text></g><g><title>mi_page_fresh (2 samples, 0.02%)</title><rect x="8.9114%" y="1061" width="0.0241%" height="15" fill="rgb(206,13,37)" fg:x="740" fg:w="2"/><text x="9.1614%" y="1071.50"></text></g><g><title>mi_page_fresh_alloc (2 samples, 0.02%)</title><rect x="8.9114%" y="1045" width="0.0241%" height="15" fill="rgb(250,61,18)" fg:x="740" fg:w="2"/><text x="9.1614%" y="1055.50"></text></g><g><title>mi_segments_page_alloc (1 samples, 0.01%)</title><rect x="8.9234%" y="1029" width="0.0120%" height="15" fill="rgb(235,172,48)" fg:x="741" fg:w="1"/><text x="9.1734%" y="1039.50"></text></g><g><title>mi_segments_page_find_and_allocate (1 samples, 0.01%)</title><rect x="8.9234%" y="1013" width="0.0120%" height="15" fill="rgb(249,201,17)" fg:x="741" fg:w="1"/><text x="9.1734%" y="1023.50"></text></g><g><title>mi_segment_span_allocate (1 samples, 0.01%)</title><rect x="8.9234%" y="997" width="0.0120%" height="15" fill="rgb(219,208,6)" fg:x="741" fg:w="1"/><text x="9.1734%" y="1007.50"></text></g><g><title>mi_segment_ensure_committed (1 samples, 0.01%)</title><rect x="8.9234%" y="981" width="0.0120%" height="15" fill="rgb(248,31,23)" fg:x="741" fg:w="1"/><text x="9.1734%" y="991.50"></text></g><g><title>mi_segment_commitx (1 samples, 0.01%)</title><rect x="8.9234%" y="965" width="0.0120%" height="15" fill="rgb(245,15,42)" fg:x="741" fg:w="1"/><text x="9.1734%" y="975.50"></text></g><g><title>mi_segment_commit_mask (1 samples, 0.01%)</title><rect x="8.9234%" y="949" width="0.0120%" height="15" fill="rgb(222,217,39)" fg:x="741" fg:w="1"/><text x="9.1734%" y="959.50"></text></g><g><title>mi_segment_commit_mask (1 samples, 0.01%)</title><rect x="8.9234%" y="933" width="0.0120%" height="15" fill="rgb(210,219,27)" fg:x="741" fg:w="1"/><text x="9.1734%" y="943.50"></text></g><g><title>mi_segment_info_size (1 samples, 0.01%)</title><rect x="8.9234%" y="917" width="0.0120%" height="15" fill="rgb(252,166,36)" fg:x="741" fg:w="1"/><text x="9.1734%" y="927.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::MachineX86_64 as wasmer_compiler_singlepass::machine::Machine&gt;::get_label (4 samples, 0.05%)</title><rect x="8.8993%" y="1205" width="0.0482%" height="15" fill="rgb(245,132,34)" fg:x="739" fg:w="4"/><text x="9.1493%" y="1215.50"></text></g><g><title>dynasmrt::VecAssembler&lt;R&gt;::new_dynamic_label (4 samples, 0.05%)</title><rect x="8.8993%" y="1189" width="0.0482%" height="15" fill="rgb(236,54,3)" fg:x="739" fg:w="4"/><text x="9.1493%" y="1199.50"></text></g><g><title>dynasmrt::components::LabelRegistry::new_dynamic_label (4 samples, 0.05%)</title><rect x="8.8993%" y="1173" width="0.0482%" height="15" fill="rgb(241,173,43)" fg:x="739" fg:w="4"/><text x="9.1493%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.05%)</title><rect x="8.8993%" y="1157" width="0.0482%" height="15" fill="rgb(215,190,9)" fg:x="739" fg:w="4"/><text x="9.1493%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.05%)</title><rect x="8.8993%" y="1141" width="0.0482%" height="15" fill="rgb(242,101,16)" fg:x="739" fg:w="4"/><text x="9.1493%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.05%)</title><rect x="8.8993%" y="1125" width="0.0482%" height="15" fill="rgb(223,190,21)" fg:x="739" fg:w="4"/><text x="9.1493%" y="1135.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.05%)</title><rect x="8.8993%" y="1109" width="0.0482%" height="15" fill="rgb(215,228,25)" fg:x="739" fg:w="4"/><text x="9.1493%" y="1119.50"></text></g><g><title>mi_malloc (1 samples, 0.01%)</title><rect x="8.9355%" y="1093" width="0.0120%" height="15" fill="rgb(225,36,22)" fg:x="742" fg:w="1"/><text x="9.1855%" y="1103.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.01%)</title><rect x="8.9355%" y="1077" width="0.0120%" height="15" fill="rgb(251,106,46)" fg:x="742" fg:w="1"/><text x="9.1855%" y="1087.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.01%)</title><rect x="8.9355%" y="1061" width="0.0120%" height="15" fill="rgb(208,90,1)" fg:x="742" fg:w="1"/><text x="9.1855%" y="1071.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.01%)</title><rect x="8.9355%" y="1045" width="0.0120%" height="15" fill="rgb(243,10,4)" fg:x="742" fg:w="1"/><text x="9.1855%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.01%)</title><rect x="8.9475%" y="1141" width="0.0120%" height="15" fill="rgb(212,137,27)" fg:x="743" fg:w="1"/><text x="9.1975%" y="1151.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="8.9475%" y="1125" width="0.0120%" height="15" fill="rgb(231,220,49)" fg:x="743" fg:w="1"/><text x="9.1975%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.9475%" y="1109" width="0.0120%" height="15" fill="rgb(237,96,20)" fg:x="743" fg:w="1"/><text x="9.1975%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.9475%" y="1093" width="0.0120%" height="15" fill="rgb(239,229,30)" fg:x="743" fg:w="1"/><text x="9.1975%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.9475%" y="1077" width="0.0120%" height="15" fill="rgb(219,65,33)" fg:x="743" fg:w="1"/><text x="9.1975%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.9475%" y="1061" width="0.0120%" height="15" fill="rgb(243,134,7)" fg:x="743" fg:w="1"/><text x="9.1975%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.9475%" y="1045" width="0.0120%" height="15" fill="rgb(216,177,54)" fg:x="743" fg:w="1"/><text x="9.1975%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.9475%" y="1029" width="0.0120%" height="15" fill="rgb(211,160,20)" fg:x="743" fg:w="1"/><text x="9.1975%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.9475%" y="1013" width="0.0120%" height="15" fill="rgb(239,85,39)" fg:x="743" fg:w="1"/><text x="9.1975%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.9475%" y="997" width="0.0120%" height="15" fill="rgb(232,125,22)" fg:x="743" fg:w="1"/><text x="9.1975%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.9475%" y="981" width="0.0120%" height="15" fill="rgb(244,57,34)" fg:x="743" fg:w="1"/><text x="9.1975%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.9475%" y="965" width="0.0120%" height="15" fill="rgb(214,203,32)" fg:x="743" fg:w="1"/><text x="9.1975%" y="975.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::MachineX86_64 as wasmer_compiler_singlepass::machine::Machine&gt;::new_machine_state (2 samples, 0.02%)</title><rect x="8.9475%" y="1205" width="0.0241%" height="15" fill="rgb(207,58,43)" fg:x="743" fg:w="2"/><text x="9.1975%" y="1215.50"></text></g><g><title>wasmer_compiler_singlepass::x64_decl::new_machine_state (2 samples, 0.02%)</title><rect x="8.9475%" y="1189" width="0.0241%" height="15" fill="rgb(215,193,15)" fg:x="743" fg:w="2"/><text x="9.1975%" y="1199.50"></text></g><g><title>alloc::vec::from_elem (2 samples, 0.02%)</title><rect x="8.9475%" y="1173" width="0.0241%" height="15" fill="rgb(232,15,44)" fg:x="743" fg:w="2"/><text x="9.1975%" y="1183.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (2 samples, 0.02%)</title><rect x="8.9475%" y="1157" width="0.0241%" height="15" fill="rgb(212,3,48)" fg:x="743" fg:w="2"/><text x="9.1975%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="8.9595%" y="1141" width="0.0120%" height="15" fill="rgb(218,128,7)" fg:x="744" fg:w="1"/><text x="9.2095%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="8.9595%" y="1125" width="0.0120%" height="15" fill="rgb(226,216,39)" fg:x="744" fg:w="1"/><text x="9.2095%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="8.9595%" y="1109" width="0.0120%" height="15" fill="rgb(243,47,51)" fg:x="744" fg:w="1"/><text x="9.2095%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="8.9595%" y="1093" width="0.0120%" height="15" fill="rgb(241,183,40)" fg:x="744" fg:w="1"/><text x="9.2095%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="8.9595%" y="1077" width="0.0120%" height="15" fill="rgb(231,217,32)" fg:x="744" fg:w="1"/><text x="9.2095%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="8.9595%" y="1061" width="0.0120%" height="15" fill="rgb(229,61,38)" fg:x="744" fg:w="1"/><text x="9.2095%" y="1071.50"></text></g><g><title>mi_malloc (1 samples, 0.01%)</title><rect x="8.9595%" y="1045" width="0.0120%" height="15" fill="rgb(225,210,5)" fg:x="744" fg:w="1"/><text x="9.2095%" y="1055.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.01%)</title><rect x="8.9595%" y="1029" width="0.0120%" height="15" fill="rgb(231,79,45)" fg:x="744" fg:w="1"/><text x="9.2095%" y="1039.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.01%)</title><rect x="8.9595%" y="1013" width="0.0120%" height="15" fill="rgb(224,100,7)" fg:x="744" fg:w="1"/><text x="9.2095%" y="1023.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.01%)</title><rect x="8.9595%" y="997" width="0.0120%" height="15" fill="rgb(241,198,18)" fg:x="744" fg:w="1"/><text x="9.2095%" y="1007.50"></text></g><g><title>wasmer_compiler_singlepass::codegen::FuncGen&lt;M&gt;::init_locals (1 samples, 0.01%)</title><rect x="8.9716%" y="1189" width="0.0120%" height="15" fill="rgb(252,97,53)" fg:x="745" fg:w="1"/><text x="9.2216%" y="1199.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::MachineX86_64 as wasmer_compiler_singlepass::machine::Machine&gt;::move_local (1 samples, 0.01%)</title><rect x="8.9716%" y="1173" width="0.0120%" height="15" fill="rgb(220,88,7)" fg:x="745" fg:w="1"/><text x="9.2216%" y="1183.50"></text></g><g><title>wasmer_compiler_singlepass::machine_x64::MachineX86_64::emit_unwind_op (1 samples, 0.01%)</title><rect x="8.9716%" y="1157" width="0.0120%" height="15" fill="rgb(213,176,14)" fg:x="745" fg:w="1"/><text x="9.2216%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="8.9716%" y="1141" width="0.0120%" height="15" fill="rgb(246,73,7)" fg:x="745" fg:w="1"/><text x="9.2216%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="8.9716%" y="1125" width="0.0120%" height="15" fill="rgb(245,64,36)" fg:x="745" fg:w="1"/><text x="9.2216%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="8.9716%" y="1109" width="0.0120%" height="15" fill="rgb(245,80,10)" fg:x="745" fg:w="1"/><text x="9.2216%" y="1119.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="8.9716%" y="1093" width="0.0120%" height="15" fill="rgb(232,107,50)" fg:x="745" fg:w="1"/><text x="9.2216%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="8.9716%" y="1077" width="0.0120%" height="15" fill="rgb(253,3,0)" fg:x="745" fg:w="1"/><text x="9.2216%" y="1087.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="8.9716%" y="1061" width="0.0120%" height="15" fill="rgb(212,99,53)" fg:x="745" fg:w="1"/><text x="9.2216%" y="1071.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="8.9716%" y="1045" width="0.0120%" height="15" fill="rgb(249,111,54)" fg:x="745" fg:w="1"/><text x="9.2216%" y="1055.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.01%)</title><rect x="8.9716%" y="1029" width="0.0120%" height="15" fill="rgb(249,55,30)" fg:x="745" fg:w="1"/><text x="9.2216%" y="1039.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.01%)</title><rect x="8.9716%" y="1013" width="0.0120%" height="15" fill="rgb(237,47,42)" fg:x="745" fg:w="1"/><text x="9.2216%" y="1023.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.01%)</title><rect x="8.9716%" y="997" width="0.0120%" height="15" fill="rgb(211,20,18)" fg:x="745" fg:w="1"/><text x="9.2216%" y="1007.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.01%)</title><rect x="8.9716%" y="981" width="0.0120%" height="15" fill="rgb(231,203,46)" fg:x="745" fg:w="1"/><text x="9.2216%" y="991.50"></text></g><g><title>mi_page_fresh (1 samples, 0.01%)</title><rect x="8.9716%" y="965" width="0.0120%" height="15" fill="rgb(237,142,3)" fg:x="745" fg:w="1"/><text x="9.2216%" y="975.50"></text></g><g><title>mi_page_fresh_alloc (1 samples, 0.01%)</title><rect x="8.9716%" y="949" width="0.0120%" height="15" fill="rgb(241,107,1)" fg:x="745" fg:w="1"/><text x="9.2216%" y="959.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.01%)</title><rect x="8.9716%" y="933" width="0.0120%" height="15" fill="rgb(229,83,13)" fg:x="745" fg:w="1"/><text x="9.2216%" y="943.50"></text></g><g><title>mi_page_free_list_extend_secure (1 samples, 0.01%)</title><rect x="8.9716%" y="917" width="0.0120%" height="15" fill="rgb(241,91,40)" fg:x="745" fg:w="1"/><text x="9.2216%" y="927.50"></text></g><g><title>mi_block_set_next (1 samples, 0.01%)</title><rect x="8.9716%" y="901" width="0.0120%" height="15" fill="rgb(225,3,45)" fg:x="745" fg:w="1"/><text x="9.2216%" y="911.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.01%)</title><rect x="8.9716%" y="885" width="0.0120%" height="15" fill="rgb(244,223,14)" fg:x="745" fg:w="1"/><text x="9.2216%" y="895.50"></text></g><g><title>mi_ptr_encode (1 samples, 0.01%)</title><rect x="8.9716%" y="869" width="0.0120%" height="15" fill="rgb(224,124,37)" fg:x="745" fg:w="1"/><text x="9.2216%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.9716%" y="853" width="0.0120%" height="15" fill="rgb(251,171,30)" fg:x="745" fg:w="1"/><text x="9.2216%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.9716%" y="837" width="0.0120%" height="15" fill="rgb(236,46,54)" fg:x="745" fg:w="1"/><text x="9.2216%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.9716%" y="821" width="0.0120%" height="15" fill="rgb(245,213,5)" fg:x="745" fg:w="1"/><text x="9.2216%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.9716%" y="805" width="0.0120%" height="15" fill="rgb(230,144,27)" fg:x="745" fg:w="1"/><text x="9.2216%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.9716%" y="789" width="0.0120%" height="15" fill="rgb(220,86,6)" fg:x="745" fg:w="1"/><text x="9.2216%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.9716%" y="773" width="0.0120%" height="15" fill="rgb(240,20,13)" fg:x="745" fg:w="1"/><text x="9.2216%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.9716%" y="757" width="0.0120%" height="15" fill="rgb(217,89,34)" fg:x="745" fg:w="1"/><text x="9.2216%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.9716%" y="741" width="0.0120%" height="15" fill="rgb(229,13,5)" fg:x="745" fg:w="1"/><text x="9.2216%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.9716%" y="725" width="0.0120%" height="15" fill="rgb(244,67,35)" fg:x="745" fg:w="1"/><text x="9.2216%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.9716%" y="709" width="0.0120%" height="15" fill="rgb(221,40,2)" fg:x="745" fg:w="1"/><text x="9.2216%" y="719.50"></text></g><g><title>wasmer_compiler_singlepass::codegen::FuncGen&lt;M&gt;::emit_head (2 samples, 0.02%)</title><rect x="8.9716%" y="1205" width="0.0241%" height="15" fill="rgb(237,157,21)" fg:x="745" fg:w="2"/><text x="9.2216%" y="1215.50"></text></g><g><title>wasmer_compiler_singlepass::common_decl::MachineState::diff (1 samples, 0.01%)</title><rect x="8.9836%" y="1189" width="0.0120%" height="15" fill="rgb(222,94,11)" fg:x="746" fg:w="1"/><text x="9.2336%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="8.9836%" y="1173" width="0.0120%" height="15" fill="rgb(249,113,6)" fg:x="746" fg:w="1"/><text x="9.2336%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="8.9836%" y="1157" width="0.0120%" height="15" fill="rgb(238,137,36)" fg:x="746" fg:w="1"/><text x="9.2336%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="8.9836%" y="1141" width="0.0120%" height="15" fill="rgb(210,102,26)" fg:x="746" fg:w="1"/><text x="9.2336%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="8.9836%" y="1125" width="0.0120%" height="15" fill="rgb(218,30,30)" fg:x="746" fg:w="1"/><text x="9.2336%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="8.9836%" y="1109" width="0.0120%" height="15" fill="rgb(214,67,26)" fg:x="746" fg:w="1"/><text x="9.2336%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.01%)</title><rect x="8.9836%" y="1093" width="0.0120%" height="15" fill="rgb(251,9,53)" fg:x="746" fg:w="1"/><text x="9.2336%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="8.9836%" y="1077" width="0.0120%" height="15" fill="rgb(228,204,25)" fg:x="746" fg:w="1"/><text x="9.2336%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="8.9836%" y="1061" width="0.0120%" height="15" fill="rgb(207,153,8)" fg:x="746" fg:w="1"/><text x="9.2336%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="8.9836%" y="1045" width="0.0120%" height="15" fill="rgb(242,9,16)" fg:x="746" fg:w="1"/><text x="9.2336%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="8.9836%" y="1029" width="0.0120%" height="15" fill="rgb(217,211,10)" fg:x="746" fg:w="1"/><text x="9.2336%" y="1039.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="8.9836%" y="1013" width="0.0120%" height="15" fill="rgb(219,228,52)" fg:x="746" fg:w="1"/><text x="9.2336%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="8.9836%" y="997" width="0.0120%" height="15" fill="rgb(231,92,29)" fg:x="746" fg:w="1"/><text x="9.2336%" y="1007.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="8.9836%" y="981" width="0.0120%" height="15" fill="rgb(232,8,23)" fg:x="746" fg:w="1"/><text x="9.2336%" y="991.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="8.9836%" y="965" width="0.0120%" height="15" fill="rgb(216,211,34)" fg:x="746" fg:w="1"/><text x="9.2336%" y="975.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.01%)</title><rect x="8.9836%" y="949" width="0.0120%" height="15" fill="rgb(236,151,0)" fg:x="746" fg:w="1"/><text x="9.2336%" y="959.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.01%)</title><rect x="8.9836%" y="933" width="0.0120%" height="15" fill="rgb(209,168,3)" fg:x="746" fg:w="1"/><text x="9.2336%" y="943.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.01%)</title><rect x="8.9836%" y="917" width="0.0120%" height="15" fill="rgb(208,129,28)" fg:x="746" fg:w="1"/><text x="9.2336%" y="927.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.01%)</title><rect x="8.9836%" y="901" width="0.0120%" height="15" fill="rgb(229,78,22)" fg:x="746" fg:w="1"/><text x="9.2336%" y="911.50"></text></g><g><title>mi_page_fresh (1 samples, 0.01%)</title><rect x="8.9836%" y="885" width="0.0120%" height="15" fill="rgb(228,187,13)" fg:x="746" fg:w="1"/><text x="9.2336%" y="895.50"></text></g><g><title>mi_page_fresh_alloc (1 samples, 0.01%)</title><rect x="8.9836%" y="869" width="0.0120%" height="15" fill="rgb(240,119,24)" fg:x="746" fg:w="1"/><text x="9.2336%" y="879.50"></text></g><g><title>mi_segments_page_alloc (1 samples, 0.01%)</title><rect x="8.9836%" y="853" width="0.0120%" height="15" fill="rgb(209,194,42)" fg:x="746" fg:w="1"/><text x="9.2336%" y="863.50"></text></g><g><title>mi_segments_page_find_and_allocate (1 samples, 0.01%)</title><rect x="8.9836%" y="837" width="0.0120%" height="15" fill="rgb(247,200,46)" fg:x="746" fg:w="1"/><text x="9.2336%" y="847.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (30 samples, 0.36%)</title><rect x="8.6464%" y="1445" width="0.3613%" height="15" fill="rgb(218,76,16)" fg:x="718" fg:w="30"/><text x="8.8964%" y="1455.50"></text></g><g><title>&lt;rayon::iter::while_some::WhileSomeFolder&lt;C&gt; as rayon::iter::plumbing::Folder&lt;core::option::Option&lt;T&gt;&gt;&gt;::consume_iter (30 samples, 0.36%)</title><rect x="8.6464%" y="1429" width="0.3613%" height="15" fill="rgb(225,21,48)" fg:x="718" fg:w="30"/><text x="8.8964%" y="1439.50"></text></g><g><title>&lt;rayon::iter::extend::ListVecFolder&lt;T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (30 samples, 0.36%)</title><rect x="8.6464%" y="1413" width="0.3613%" height="15" fill="rgb(239,223,50)" fg:x="718" fg:w="30"/><text x="8.8964%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (30 samples, 0.36%)</title><rect x="8.6464%" y="1397" width="0.3613%" height="15" fill="rgb(244,45,21)" fg:x="718" fg:w="30"/><text x="8.8964%" y="1407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (30 samples, 0.36%)</title><rect x="8.6464%" y="1381" width="0.3613%" height="15" fill="rgb(232,33,43)" fg:x="718" fg:w="30"/><text x="8.8964%" y="1391.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (30 samples, 0.36%)</title><rect x="8.6464%" y="1365" width="0.3613%" height="15" fill="rgb(209,8,3)" fg:x="718" fg:w="30"/><text x="8.8964%" y="1375.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.36%)</title><rect x="8.6464%" y="1349" width="0.3613%" height="15" fill="rgb(214,25,53)" fg:x="718" fg:w="30"/><text x="8.8964%" y="1359.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.36%)</title><rect x="8.6464%" y="1333" width="0.3613%" height="15" fill="rgb(254,186,54)" fg:x="718" fg:w="30"/><text x="8.8964%" y="1343.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.36%)</title><rect x="8.6464%" y="1317" width="0.3613%" height="15" fill="rgb(208,174,49)" fg:x="718" fg:w="30"/><text x="8.8964%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.36%)</title><rect x="8.6464%" y="1301" width="0.3613%" height="15" fill="rgb(233,191,51)" fg:x="718" fg:w="30"/><text x="8.8964%" y="1311.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (30 samples, 0.36%)</title><rect x="8.6464%" y="1285" width="0.3613%" height="15" fill="rgb(222,134,10)" fg:x="718" fg:w="30"/><text x="8.8964%" y="1295.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (30 samples, 0.36%)</title><rect x="8.6464%" y="1269" width="0.3613%" height="15" fill="rgb(230,226,20)" fg:x="718" fg:w="30"/><text x="8.8964%" y="1279.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (30 samples, 0.36%)</title><rect x="8.6464%" y="1253" width="0.3613%" height="15" fill="rgb(251,111,25)" fg:x="718" fg:w="30"/><text x="8.8964%" y="1263.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::compiler::SinglepassCompiler as wasmer_compiler::compiler::Compiler&gt;::compile_module::{{closure}} (30 samples, 0.36%)</title><rect x="8.6464%" y="1237" width="0.3613%" height="15" fill="rgb(224,40,46)" fg:x="718" fg:w="30"/><text x="8.8964%" y="1247.50"></text></g><g><title>wasmer_compiler_singlepass::codegen::FuncGen&lt;M&gt;::new (9 samples, 0.11%)</title><rect x="8.8993%" y="1221" width="0.1084%" height="15" fill="rgb(236,108,47)" fg:x="739" fg:w="9"/><text x="9.1493%" y="1231.50"></text></g><g><title>wasmer_types::module::ModuleInfo::func_index (1 samples, 0.01%)</title><rect x="8.9957%" y="1205" width="0.0120%" height="15" fill="rgb(234,93,0)" fg:x="747" fg:w="1"/><text x="9.2457%" y="1215.50"></text></g><g><title>&lt;wasmer_types::entity::primary_map::PrimaryMap&lt;K,V&gt; as core::ops::index::Index&lt;K&gt;&gt;::index (1 samples, 0.01%)</title><rect x="9.0197%" y="1349" width="0.0120%" height="15" fill="rgb(224,213,32)" fg:x="749" fg:w="1"/><text x="9.2697%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.01%)</title><rect x="9.0197%" y="1333" width="0.0120%" height="15" fill="rgb(251,11,48)" fg:x="749" fg:w="1"/><text x="9.2697%" y="1343.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.01%)</title><rect x="9.0197%" y="1317" width="0.0120%" height="15" fill="rgb(236,173,5)" fg:x="749" fg:w="1"/><text x="9.2697%" y="1327.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.01%)</title><rect x="9.0197%" y="1301" width="0.0120%" height="15" fill="rgb(230,95,12)" fg:x="749" fg:w="1"/><text x="9.2697%" y="1311.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::AssemblerX64 as wasmer_compiler_singlepass::emitter_x64::EmitterX64&gt;::emit_host_redirection (2 samples, 0.02%)</title><rect x="9.0318%" y="1317" width="0.0241%" height="15" fill="rgb(232,209,1)" fg:x="750" fg:w="2"/><text x="9.2818%" y="1327.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::AssemblerX64 as wasmer_compiler_singlepass::emitter_x64::EmitterX64&gt;::emit_jmp_location (2 samples, 0.02%)</title><rect x="9.0318%" y="1301" width="0.0241%" height="15" fill="rgb(232,6,1)" fg:x="750" fg:w="2"/><text x="9.2818%" y="1311.50"></text></g><g><title>&lt;dynasmrt::VecAssembler&lt;R&gt; as dynasmrt::DynasmApi&gt;::push (2 samples, 0.02%)</title><rect x="9.0318%" y="1285" width="0.0241%" height="15" fill="rgb(210,224,50)" fg:x="750" fg:w="2"/><text x="9.2818%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.02%)</title><rect x="9.0318%" y="1269" width="0.0241%" height="15" fill="rgb(228,127,35)" fg:x="750" fg:w="2"/><text x="9.2818%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.02%)</title><rect x="9.0318%" y="1253" width="0.0241%" height="15" fill="rgb(245,102,45)" fg:x="750" fg:w="2"/><text x="9.2818%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.02%)</title><rect x="9.0318%" y="1237" width="0.0241%" height="15" fill="rgb(214,1,49)" fg:x="750" fg:w="2"/><text x="9.2818%" y="1247.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="9.0318%" y="1221" width="0.0241%" height="15" fill="rgb(226,163,40)" fg:x="750" fg:w="2"/><text x="9.2818%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.02%)</title><rect x="9.0318%" y="1205" width="0.0241%" height="15" fill="rgb(239,212,28)" fg:x="750" fg:w="2"/><text x="9.2818%" y="1215.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.02%)</title><rect x="9.0318%" y="1189" width="0.0241%" height="15" fill="rgb(220,20,13)" fg:x="750" fg:w="2"/><text x="9.2818%" y="1199.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.02%)</title><rect x="9.0318%" y="1173" width="0.0241%" height="15" fill="rgb(210,164,35)" fg:x="750" fg:w="2"/><text x="9.2818%" y="1183.50"></text></g><g><title>_mi_heap_realloc_zero (2 samples, 0.02%)</title><rect x="9.0318%" y="1157" width="0.0241%" height="15" fill="rgb(248,109,41)" fg:x="750" fg:w="2"/><text x="9.2818%" y="1167.50"></text></g><g><title>mi_heap_malloc (2 samples, 0.02%)</title><rect x="9.0318%" y="1141" width="0.0241%" height="15" fill="rgb(238,23,50)" fg:x="750" fg:w="2"/><text x="9.2818%" y="1151.50"></text></g><g><title>_mi_malloc_generic (2 samples, 0.02%)</title><rect x="9.0318%" y="1125" width="0.0241%" height="15" fill="rgb(211,48,49)" fg:x="750" fg:w="2"/><text x="9.2818%" y="1135.50"></text></g><g><title>mi_page_queue_find_free_ex (2 samples, 0.02%)</title><rect x="9.0318%" y="1109" width="0.0241%" height="15" fill="rgb(223,36,21)" fg:x="750" fg:w="2"/><text x="9.2818%" y="1119.50"></text></g><g><title>mi_page_fresh (2 samples, 0.02%)</title><rect x="9.0318%" y="1093" width="0.0241%" height="15" fill="rgb(207,123,46)" fg:x="750" fg:w="2"/><text x="9.2818%" y="1103.50"></text></g><g><title>mi_page_fresh_alloc (1 samples, 0.01%)</title><rect x="9.0438%" y="1077" width="0.0120%" height="15" fill="rgb(240,218,32)" fg:x="751" fg:w="1"/><text x="9.2938%" y="1087.50"></text></g><g><title>mi_segments_page_alloc (1 samples, 0.01%)</title><rect x="9.0438%" y="1061" width="0.0120%" height="15" fill="rgb(252,5,43)" fg:x="751" fg:w="1"/><text x="9.2938%" y="1071.50"></text></g><g><title>mi_segments_page_find_and_allocate (1 samples, 0.01%)</title><rect x="9.0438%" y="1045" width="0.0120%" height="15" fill="rgb(252,84,19)" fg:x="751" fg:w="1"/><text x="9.2938%" y="1055.50"></text></g><g><title>mi_segment_span_allocate (1 samples, 0.01%)</title><rect x="9.0438%" y="1029" width="0.0120%" height="15" fill="rgb(243,152,39)" fg:x="751" fg:w="1"/><text x="9.2938%" y="1039.50"></text></g><g><title>mi_segment_ensure_committed (1 samples, 0.01%)</title><rect x="9.0438%" y="1013" width="0.0120%" height="15" fill="rgb(234,160,15)" fg:x="751" fg:w="1"/><text x="9.2938%" y="1023.50"></text></g><g><title>mi_segment_commitx (1 samples, 0.01%)</title><rect x="9.0438%" y="997" width="0.0120%" height="15" fill="rgb(237,34,20)" fg:x="751" fg:w="1"/><text x="9.2938%" y="1007.50"></text></g><g><title>&lt;dynasmrt::VecAssembler&lt;R&gt; as core::iter::traits::collect::Extend&lt;&amp;u8&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="9.0559%" y="1301" width="0.0120%" height="15" fill="rgb(229,97,13)" fg:x="752" fg:w="1"/><text x="9.3059%" y="1311.50"></text></g><g><title>mi_find_page (1 samples, 0.01%)</title><rect x="9.0679%" y="1125" width="0.0120%" height="15" fill="rgb(234,71,50)" fg:x="753" fg:w="1"/><text x="9.3179%" y="1135.50"></text></g><g><title>mi_find_free_page (1 samples, 0.01%)</title><rect x="9.0679%" y="1109" width="0.0120%" height="15" fill="rgb(253,155,4)" fg:x="753" fg:w="1"/><text x="9.3179%" y="1119.50"></text></g><g><title>mi_page_extend_free (6 samples, 0.07%)</title><rect x="9.0800%" y="1077" width="0.0723%" height="15" fill="rgb(222,185,37)" fg:x="754" fg:w="6"/><text x="9.3300%" y="1087.50"></text></g><g><title>mi_page_free_list_extend_secure (6 samples, 0.07%)</title><rect x="9.0800%" y="1061" width="0.0723%" height="15" fill="rgb(251,177,13)" fg:x="754" fg:w="6"/><text x="9.3300%" y="1071.50"></text></g><g><title>mi_block_set_next (3 samples, 0.04%)</title><rect x="9.1161%" y="1045" width="0.0361%" height="15" fill="rgb(250,179,40)" fg:x="757" fg:w="3"/><text x="9.3661%" y="1055.50"></text></g><g><title>mi_block_set_nextx (3 samples, 0.04%)</title><rect x="9.1161%" y="1029" width="0.0361%" height="15" fill="rgb(242,44,2)" fg:x="757" fg:w="3"/><text x="9.3661%" y="1039.50"></text></g><g><title>mi_ptr_encode (3 samples, 0.04%)</title><rect x="9.1161%" y="1013" width="0.0361%" height="15" fill="rgb(216,177,13)" fg:x="757" fg:w="3"/><text x="9.3661%" y="1023.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="9.1161%" y="997" width="0.0361%" height="15" fill="rgb(216,106,43)" fg:x="757" fg:w="3"/><text x="9.3661%" y="1007.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="9.1161%" y="981" width="0.0361%" height="15" fill="rgb(216,183,2)" fg:x="757" fg:w="3"/><text x="9.3661%" y="991.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="9.1161%" y="965" width="0.0361%" height="15" fill="rgb(249,75,3)" fg:x="757" fg:w="3"/><text x="9.3661%" y="975.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="9.1161%" y="949" width="0.0361%" height="15" fill="rgb(219,67,39)" fg:x="757" fg:w="3"/><text x="9.3661%" y="959.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="9.1281%" y="933" width="0.0241%" height="15" fill="rgb(253,228,2)" fg:x="758" fg:w="2"/><text x="9.3781%" y="943.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="9.1281%" y="917" width="0.0241%" height="15" fill="rgb(235,138,27)" fg:x="758" fg:w="2"/><text x="9.3781%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8 samples, 0.10%)</title><rect x="9.0679%" y="1221" width="0.0963%" height="15" fill="rgb(236,97,51)" fg:x="753" fg:w="8"/><text x="9.3179%" y="1231.50"></text></g><g><title>alloc::alloc::Global::grow_impl (8 samples, 0.10%)</title><rect x="9.0679%" y="1205" width="0.0963%" height="15" fill="rgb(240,80,30)" fg:x="753" fg:w="8"/><text x="9.3179%" y="1215.50"></text></g><g><title>alloc::alloc::realloc (8 samples, 0.10%)</title><rect x="9.0679%" y="1189" width="0.0963%" height="15" fill="rgb(230,178,19)" fg:x="753" fg:w="8"/><text x="9.3179%" y="1199.50"></text></g><g><title>_mi_heap_realloc_zero (8 samples, 0.10%)</title><rect x="9.0679%" y="1173" width="0.0963%" height="15" fill="rgb(210,190,27)" fg:x="753" fg:w="8"/><text x="9.3179%" y="1183.50"></text></g><g><title>mi_heap_malloc (8 samples, 0.10%)</title><rect x="9.0679%" y="1157" width="0.0963%" height="15" fill="rgb(222,107,31)" fg:x="753" fg:w="8"/><text x="9.3179%" y="1167.50"></text></g><g><title>_mi_malloc_generic (8 samples, 0.10%)</title><rect x="9.0679%" y="1141" width="0.0963%" height="15" fill="rgb(216,127,34)" fg:x="753" fg:w="8"/><text x="9.3179%" y="1151.50"></text></g><g><title>mi_page_queue_find_free_ex (7 samples, 0.08%)</title><rect x="9.0800%" y="1125" width="0.0843%" height="15" fill="rgb(234,116,52)" fg:x="754" fg:w="7"/><text x="9.3300%" y="1135.50"></text></g><g><title>mi_page_fresh (7 samples, 0.08%)</title><rect x="9.0800%" y="1109" width="0.0843%" height="15" fill="rgb(222,124,15)" fg:x="754" fg:w="7"/><text x="9.3300%" y="1119.50"></text></g><g><title>mi_page_fresh_alloc (7 samples, 0.08%)</title><rect x="9.0800%" y="1093" width="0.0843%" height="15" fill="rgb(231,179,28)" fg:x="754" fg:w="7"/><text x="9.3300%" y="1103.50"></text></g><g><title>mi_segments_page_alloc (1 samples, 0.01%)</title><rect x="9.1522%" y="1077" width="0.0120%" height="15" fill="rgb(226,93,45)" fg:x="760" fg:w="1"/><text x="9.4022%" y="1087.50"></text></g><g><title>mi_segment_delayed_decommit (1 samples, 0.01%)</title><rect x="9.1522%" y="1061" width="0.0120%" height="15" fill="rgb(215,8,51)" fg:x="760" fg:w="1"/><text x="9.4022%" y="1071.50"></text></g><g><title>_mi_clock_now (1 samples, 0.01%)</title><rect x="9.1522%" y="1045" width="0.0120%" height="15" fill="rgb(223,106,5)" fg:x="760" fg:w="1"/><text x="9.4022%" y="1055.50"></text></g><g><title>__clock_gettime_2 (1 samples, 0.01%)</title><rect x="9.1522%" y="1029" width="0.0120%" height="15" fill="rgb(250,191,5)" fg:x="760" fg:w="1"/><text x="9.4022%" y="1039.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.01%)</title><rect x="9.1522%" y="1013" width="0.0120%" height="15" fill="rgb(242,132,44)" fg:x="760" fg:w="1"/><text x="9.4022%" y="1023.50"></text></g><g><title>_mi_deferred_free (2 samples, 0.02%)</title><rect x="9.1643%" y="1205" width="0.0241%" height="15" fill="rgb(251,152,29)" fg:x="761" fg:w="2"/><text x="9.4143%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="9.1763%" y="1189" width="0.0120%" height="15" fill="rgb(218,179,5)" fg:x="762" fg:w="1"/><text x="9.4263%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="9.1763%" y="1173" width="0.0120%" height="15" fill="rgb(227,67,19)" fg:x="762" fg:w="1"/><text x="9.4263%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="9.1763%" y="1157" width="0.0120%" height="15" fill="rgb(233,119,31)" fg:x="762" fg:w="1"/><text x="9.4263%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="9.1763%" y="1141" width="0.0120%" height="15" fill="rgb(241,120,22)" fg:x="762" fg:w="1"/><text x="9.4263%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="9.1763%" y="1125" width="0.0120%" height="15" fill="rgb(224,102,30)" fg:x="762" fg:w="1"/><text x="9.4263%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="9.3088%" y="1125" width="0.0120%" height="15" fill="rgb(210,164,37)" fg:x="773" fg:w="1"/><text x="9.5588%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="9.3088%" y="1109" width="0.0120%" height="15" fill="rgb(226,191,16)" fg:x="773" fg:w="1"/><text x="9.5588%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="9.3088%" y="1093" width="0.0120%" height="15" fill="rgb(214,40,45)" fg:x="773" fg:w="1"/><text x="9.5588%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="9.3088%" y="1077" width="0.0120%" height="15" fill="rgb(244,29,26)" fg:x="773" fg:w="1"/><text x="9.5588%" y="1087.50"></text></g><g><title>_mi_random_shuffle (1 samples, 0.01%)</title><rect x="9.3208%" y="1125" width="0.0120%" height="15" fill="rgb(216,16,5)" fg:x="774" fg:w="1"/><text x="9.5708%" y="1135.50"></text></g><g><title>mi_page_extend_free (14 samples, 0.17%)</title><rect x="9.1883%" y="1157" width="0.1686%" height="15" fill="rgb(249,76,35)" fg:x="763" fg:w="14"/><text x="9.4383%" y="1167.50"></text></g><g><title>mi_page_free_list_extend_secure (14 samples, 0.17%)</title><rect x="9.1883%" y="1141" width="0.1686%" height="15" fill="rgb(207,11,44)" fg:x="763" fg:w="14"/><text x="9.4383%" y="1151.50"></text></g><g><title>mi_block_set_next (2 samples, 0.02%)</title><rect x="9.3329%" y="1125" width="0.0241%" height="15" fill="rgb(228,190,49)" fg:x="775" fg:w="2"/><text x="9.5829%" y="1135.50"></text></g><g><title>mi_block_set_nextx (2 samples, 0.02%)</title><rect x="9.3329%" y="1109" width="0.0241%" height="15" fill="rgb(214,173,12)" fg:x="775" fg:w="2"/><text x="9.5829%" y="1119.50"></text></g><g><title>mi_ptr_encode (2 samples, 0.02%)</title><rect x="9.3329%" y="1093" width="0.0241%" height="15" fill="rgb(218,26,35)" fg:x="775" fg:w="2"/><text x="9.5829%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="9.3449%" y="1077" width="0.0120%" height="15" fill="rgb(220,200,19)" fg:x="776" fg:w="1"/><text x="9.5949%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="9.3449%" y="1061" width="0.0120%" height="15" fill="rgb(239,95,49)" fg:x="776" fg:w="1"/><text x="9.5949%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="9.3449%" y="1045" width="0.0120%" height="15" fill="rgb(235,85,53)" fg:x="776" fg:w="1"/><text x="9.5949%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="9.3449%" y="1029" width="0.0120%" height="15" fill="rgb(233,133,31)" fg:x="776" fg:w="1"/><text x="9.5949%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="9.3449%" y="1013" width="0.0120%" height="15" fill="rgb(218,25,20)" fg:x="776" fg:w="1"/><text x="9.5949%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="9.3449%" y="997" width="0.0120%" height="15" fill="rgb(252,210,38)" fg:x="776" fg:w="1"/><text x="9.5949%" y="1007.50"></text></g><g><title>mi_page_init (1 samples, 0.01%)</title><rect x="9.3569%" y="1157" width="0.0120%" height="15" fill="rgb(242,134,21)" fg:x="777" fg:w="1"/><text x="9.6069%" y="1167.50"></text></g><g><title>_mi_random_next (1 samples, 0.01%)</title><rect x="9.3569%" y="1141" width="0.0120%" height="15" fill="rgb(213,28,48)" fg:x="777" fg:w="1"/><text x="9.6069%" y="1151.50"></text></g><g><title>chacha_next32 (1 samples, 0.01%)</title><rect x="9.3569%" y="1125" width="0.0120%" height="15" fill="rgb(250,196,2)" fg:x="777" fg:w="1"/><text x="9.6069%" y="1135.50"></text></g><g><title>mi_segment_slice_split (1 samples, 0.01%)</title><rect x="9.3690%" y="1125" width="0.0120%" height="15" fill="rgb(227,5,17)" fg:x="778" fg:w="1"/><text x="9.6190%" y="1135.50"></text></g><g><title>mi_segment_span_free (1 samples, 0.01%)</title><rect x="9.3690%" y="1109" width="0.0120%" height="15" fill="rgb(221,226,24)" fg:x="778" fg:w="1"/><text x="9.6190%" y="1119.50"></text></g><g><title>mi_segment_perhaps_decommit (1 samples, 0.01%)</title><rect x="9.3690%" y="1093" width="0.0120%" height="15" fill="rgb(211,5,48)" fg:x="778" fg:w="1"/><text x="9.6190%" y="1103.50"></text></g><g><title>_mi_clock_now (1 samples, 0.01%)</title><rect x="9.3690%" y="1077" width="0.0120%" height="15" fill="rgb(219,150,6)" fg:x="778" fg:w="1"/><text x="9.6190%" y="1087.50"></text></g><g><title>__clock_gettime_2 (1 samples, 0.01%)</title><rect x="9.3690%" y="1061" width="0.0120%" height="15" fill="rgb(251,46,16)" fg:x="778" fg:w="1"/><text x="9.6190%" y="1071.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.01%)</title><rect x="9.3690%" y="1045" width="0.0120%" height="15" fill="rgb(220,204,40)" fg:x="778" fg:w="1"/><text x="9.6190%" y="1055.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::AssemblerX64 as wasmer_compiler_singlepass::emitter_x64::EmitterX64&gt;::emit_mov (28 samples, 0.34%)</title><rect x="9.0559%" y="1317" width="0.3372%" height="15" fill="rgb(211,85,2)" fg:x="752" fg:w="28"/><text x="9.3059%" y="1327.50"></text></g><g><title>&lt;dynasmrt::VecAssembler&lt;R&gt; as dynasmrt::DynasmApi&gt;::push (27 samples, 0.33%)</title><rect x="9.0679%" y="1301" width="0.3251%" height="15" fill="rgb(229,17,7)" fg:x="753" fg:w="27"/><text x="9.3179%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (27 samples, 0.33%)</title><rect x="9.0679%" y="1285" width="0.3251%" height="15" fill="rgb(239,72,28)" fg:x="753" fg:w="27"/><text x="9.3179%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (27 samples, 0.33%)</title><rect x="9.0679%" y="1269" width="0.3251%" height="15" fill="rgb(230,47,54)" fg:x="753" fg:w="27"/><text x="9.3179%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (27 samples, 0.33%)</title><rect x="9.0679%" y="1253" width="0.3251%" height="15" fill="rgb(214,50,8)" fg:x="753" fg:w="27"/><text x="9.3179%" y="1263.50"></text></g><g><title>alloc::raw_vec::finish_grow (27 samples, 0.33%)</title><rect x="9.0679%" y="1237" width="0.3251%" height="15" fill="rgb(216,198,43)" fg:x="753" fg:w="27"/><text x="9.3179%" y="1247.50"></text></g><g><title>_mi_malloc_generic (19 samples, 0.23%)</title><rect x="9.1643%" y="1221" width="0.2288%" height="15" fill="rgb(234,20,35)" fg:x="761" fg:w="19"/><text x="9.4143%" y="1231.50"></text></g><g><title>mi_page_queue_find_free_ex (17 samples, 0.20%)</title><rect x="9.1883%" y="1205" width="0.2047%" height="15" fill="rgb(254,45,19)" fg:x="763" fg:w="17"/><text x="9.4383%" y="1215.50"></text></g><g><title>mi_page_fresh (17 samples, 0.20%)</title><rect x="9.1883%" y="1189" width="0.2047%" height="15" fill="rgb(219,14,44)" fg:x="763" fg:w="17"/><text x="9.4383%" y="1199.50"></text></g><g><title>mi_page_fresh_alloc (17 samples, 0.20%)</title><rect x="9.1883%" y="1173" width="0.2047%" height="15" fill="rgb(217,220,26)" fg:x="763" fg:w="17"/><text x="9.4383%" y="1183.50"></text></g><g><title>mi_segments_page_alloc (2 samples, 0.02%)</title><rect x="9.3690%" y="1157" width="0.0241%" height="15" fill="rgb(213,158,28)" fg:x="778" fg:w="2"/><text x="9.6190%" y="1167.50"></text></g><g><title>mi_segments_page_find_and_allocate (2 samples, 0.02%)</title><rect x="9.3690%" y="1141" width="0.0241%" height="15" fill="rgb(252,51,52)" fg:x="778" fg:w="2"/><text x="9.6190%" y="1151.50"></text></g><g><title>mi_span_queue_delete (1 samples, 0.01%)</title><rect x="9.3810%" y="1125" width="0.0120%" height="15" fill="rgb(246,89,16)" fg:x="779" fg:w="1"/><text x="9.6310%" y="1135.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::MachineX86_64 as wasmer_compiler_singlepass::machine::Machine&gt;::gen_import_call_trampoline (31 samples, 0.37%)</title><rect x="9.0318%" y="1333" width="0.3733%" height="15" fill="rgb(216,158,49)" fg:x="750" fg:w="31"/><text x="9.2818%" y="1343.50"></text></g><g><title>wasmer_compiler_singlepass::machine_x64::AssemblerX64::finalize (1 samples, 0.01%)</title><rect x="9.3931%" y="1317" width="0.0120%" height="15" fill="rgb(236,107,19)" fg:x="780" fg:w="1"/><text x="9.6431%" y="1327.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="9.3931%" y="1301" width="0.0120%" height="15" fill="rgb(228,185,30)" fg:x="780" fg:w="1"/><text x="9.6431%" y="1311.50"></text></g><g><title>wasmer_compiler_singlepass::machine::gen_import_call_trampoline (34 samples, 0.41%)</title><rect x="9.0318%" y="1349" width="0.4094%" height="15" fill="rgb(246,134,8)" fg:x="750" fg:w="34"/><text x="9.2818%" y="1359.50"></text></g><g><title>wasmer_compiler_singlepass::machine_x64::MachineX86_64::new (3 samples, 0.04%)</title><rect x="9.4051%" y="1333" width="0.0361%" height="15" fill="rgb(214,143,50)" fg:x="781" fg:w="3"/><text x="9.6551%" y="1343.50"></text></g><g><title>wasmer_compiler_singlepass::machine_x64::AssemblerX64::new (3 samples, 0.04%)</title><rect x="9.4051%" y="1317" width="0.0361%" height="15" fill="rgb(228,75,8)" fg:x="781" fg:w="3"/><text x="9.6551%" y="1327.50"></text></g><g><title>dynasmrt::VecAssembler&lt;R&gt;::new (3 samples, 0.04%)</title><rect x="9.4051%" y="1301" width="0.0361%" height="15" fill="rgb(207,175,4)" fg:x="781" fg:w="3"/><text x="9.6551%" y="1311.50"></text></g><g><title>dynasmrt::components::LabelRegistry::new (3 samples, 0.04%)</title><rect x="9.4051%" y="1285" width="0.0361%" height="15" fill="rgb(205,108,24)" fg:x="781" fg:w="3"/><text x="9.6551%" y="1295.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V&gt;::new (3 samples, 0.04%)</title><rect x="9.4051%" y="1269" width="0.0361%" height="15" fill="rgb(244,120,49)" fg:x="781" fg:w="3"/><text x="9.6551%" y="1279.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (3 samples, 0.04%)</title><rect x="9.4051%" y="1253" width="0.0361%" height="15" fill="rgb(223,47,38)" fg:x="781" fg:w="3"/><text x="9.6551%" y="1263.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (3 samples, 0.04%)</title><rect x="9.4051%" y="1237" width="0.0361%" height="15" fill="rgb(229,179,11)" fg:x="781" fg:w="3"/><text x="9.6551%" y="1247.50"></text></g><g><title>std::collections::hash::map::RandomState::new (3 samples, 0.04%)</title><rect x="9.4051%" y="1221" width="0.0361%" height="15" fill="rgb(231,122,1)" fg:x="781" fg:w="3"/><text x="9.6551%" y="1231.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.04%)</title><rect x="9.4051%" y="1205" width="0.0361%" height="15" fill="rgb(245,119,9)" fg:x="781" fg:w="3"/><text x="9.6551%" y="1215.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.04%)</title><rect x="9.4051%" y="1189" width="0.0361%" height="15" fill="rgb(241,163,25)" fg:x="781" fg:w="3"/><text x="9.6551%" y="1199.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (3 samples, 0.04%)</title><rect x="9.4051%" y="1173" width="0.0361%" height="15" fill="rgb(217,214,3)" fg:x="781" fg:w="3"/><text x="9.6551%" y="1183.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (3 samples, 0.04%)</title><rect x="9.4051%" y="1157" width="0.0361%" height="15" fill="rgb(240,86,28)" fg:x="781" fg:w="3"/><text x="9.6551%" y="1167.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_initialize (3 samples, 0.04%)</title><rect x="9.4051%" y="1141" width="0.0361%" height="15" fill="rgb(215,47,9)" fg:x="781" fg:w="3"/><text x="9.6551%" y="1151.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::initialize (3 samples, 0.04%)</title><rect x="9.4051%" y="1125" width="0.0361%" height="15" fill="rgb(252,25,45)" fg:x="781" fg:w="3"/><text x="9.6551%" y="1135.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit::{{closure}} (3 samples, 0.04%)</title><rect x="9.4051%" y="1109" width="0.0361%" height="15" fill="rgb(251,164,9)" fg:x="781" fg:w="3"/><text x="9.6551%" y="1119.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__init (3 samples, 0.04%)</title><rect x="9.4051%" y="1093" width="0.0361%" height="15" fill="rgb(233,194,0)" fg:x="781" fg:w="3"/><text x="9.6551%" y="1103.50"></text></g><g><title>std::sys::unix::rand::hashmap_random_keys (3 samples, 0.04%)</title><rect x="9.4051%" y="1077" width="0.0361%" height="15" fill="rgb(249,111,24)" fg:x="781" fg:w="3"/><text x="9.6551%" y="1087.50"></text></g><g><title>std::sys::unix::rand::imp::fill_bytes (3 samples, 0.04%)</title><rect x="9.4051%" y="1061" width="0.0361%" height="15" fill="rgb(250,223,3)" fg:x="781" fg:w="3"/><text x="9.6551%" y="1071.50"></text></g><g><title>std::sys::unix::rand::imp::getrandom_fill_bytes (3 samples, 0.04%)</title><rect x="9.4051%" y="1045" width="0.0361%" height="15" fill="rgb(236,178,37)" fg:x="781" fg:w="3"/><text x="9.6551%" y="1055.50"></text></g><g><title>std::sys::unix::rand::imp::getrandom (3 samples, 0.04%)</title><rect x="9.4051%" y="1029" width="0.0361%" height="15" fill="rgb(241,158,50)" fg:x="781" fg:w="3"/><text x="9.6551%" y="1039.50"></text></g><g><title>std::sys::unix::rand::imp::getrandom::getrandom (3 samples, 0.04%)</title><rect x="9.4051%" y="1013" width="0.0361%" height="15" fill="rgb(213,121,41)" fg:x="781" fg:w="3"/><text x="9.6551%" y="1023.50"></text></g><g><title>__GI___getrandom (3 samples, 0.04%)</title><rect x="9.4051%" y="997" width="0.0361%" height="15" fill="rgb(240,92,3)" fg:x="781" fg:w="3"/><text x="9.6551%" y="1007.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="9.4051%" y="981" width="0.0361%" height="15" fill="rgb(205,123,3)" fg:x="781" fg:w="3"/><text x="9.6551%" y="991.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="9.4051%" y="965" width="0.0361%" height="15" fill="rgb(205,97,47)" fg:x="781" fg:w="3"/><text x="9.6551%" y="975.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="9.4051%" y="949" width="0.0361%" height="15" fill="rgb(247,152,14)" fg:x="781" fg:w="3"/><text x="9.6551%" y="959.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="9.4051%" y="933" width="0.0361%" height="15" fill="rgb(248,195,53)" fg:x="781" fg:w="3"/><text x="9.6551%" y="943.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="9.4171%" y="917" width="0.0241%" height="15" fill="rgb(226,201,16)" fg:x="782" fg:w="2"/><text x="9.6671%" y="927.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="9.4171%" y="901" width="0.0241%" height="15" fill="rgb(205,98,0)" fg:x="782" fg:w="2"/><text x="9.6671%" y="911.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="9.4171%" y="885" width="0.0241%" height="15" fill="rgb(214,191,48)" fg:x="782" fg:w="2"/><text x="9.6671%" y="895.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="9.4171%" y="869" width="0.0241%" height="15" fill="rgb(237,112,39)" fg:x="782" fg:w="2"/><text x="9.6671%" y="879.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (67 samples, 0.81%)</title><rect x="8.6464%" y="1477" width="0.8068%" height="15" fill="rgb(247,203,27)" fg:x="718" fg:w="67"/><text x="8.8964%" y="1487.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (67 samples, 0.81%)</title><rect x="8.6464%" y="1461" width="0.8068%" height="15" fill="rgb(235,124,28)" fg:x="718" fg:w="67"/><text x="8.8964%" y="1471.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (37 samples, 0.45%)</title><rect x="9.0077%" y="1445" width="0.4456%" height="15" fill="rgb(208,207,46)" fg:x="748" fg:w="37"/><text x="9.2577%" y="1455.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.43%)</title><rect x="9.0197%" y="1429" width="0.4335%" height="15" fill="rgb(234,176,4)" fg:x="749" fg:w="36"/><text x="9.2697%" y="1439.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (36 samples, 0.43%)</title><rect x="9.0197%" y="1413" width="0.4335%" height="15" fill="rgb(230,133,28)" fg:x="749" fg:w="36"/><text x="9.2697%" y="1423.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (36 samples, 0.43%)</title><rect x="9.0197%" y="1397" width="0.4335%" height="15" fill="rgb(211,137,40)" fg:x="749" fg:w="36"/><text x="9.2697%" y="1407.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (36 samples, 0.43%)</title><rect x="9.0197%" y="1381" width="0.4335%" height="15" fill="rgb(254,35,13)" fg:x="749" fg:w="36"/><text x="9.2697%" y="1391.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::compiler::SinglepassCompiler as wasmer_compiler::compiler::Compiler&gt;::compile_module::{{closure}} (36 samples, 0.43%)</title><rect x="9.0197%" y="1365" width="0.4335%" height="15" fill="rgb(225,49,51)" fg:x="749" fg:w="36"/><text x="9.2697%" y="1375.50"></text></g><g><title>wasmer_compiler_singlepass::machine::gen_std_dynamic_import_trampoline (1 samples, 0.01%)</title><rect x="9.4412%" y="1349" width="0.0120%" height="15" fill="rgb(251,10,15)" fg:x="784" fg:w="1"/><text x="9.6912%" y="1359.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::MachineX86_64 as wasmer_compiler_singlepass::machine::Machine&gt;::gen_std_dynamic_import_trampoline (1 samples, 0.01%)</title><rect x="9.4412%" y="1333" width="0.0120%" height="15" fill="rgb(228,207,15)" fg:x="784" fg:w="1"/><text x="9.6912%" y="1343.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.01%)</title><rect x="9.4412%" y="1317" width="0.0120%" height="15" fill="rgb(241,99,19)" fg:x="784" fg:w="1"/><text x="9.6912%" y="1327.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="9.4412%" y="1301" width="0.0120%" height="15" fill="rgb(207,104,49)" fg:x="784" fg:w="1"/><text x="9.6912%" y="1311.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="9.4412%" y="1285" width="0.0120%" height="15" fill="rgb(234,99,18)" fg:x="784" fg:w="1"/><text x="9.6912%" y="1295.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="9.4412%" y="1269" width="0.0120%" height="15" fill="rgb(213,191,49)" fg:x="784" fg:w="1"/><text x="9.6912%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="9.4412%" y="1253" width="0.0120%" height="15" fill="rgb(210,226,19)" fg:x="784" fg:w="1"/><text x="9.6912%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="9.4412%" y="1237" width="0.0120%" height="15" fill="rgb(229,97,18)" fg:x="784" fg:w="1"/><text x="9.6912%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="9.4412%" y="1221" width="0.0120%" height="15" fill="rgb(211,167,15)" fg:x="784" fg:w="1"/><text x="9.6912%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="9.4412%" y="1205" width="0.0120%" height="15" fill="rgb(210,169,34)" fg:x="784" fg:w="1"/><text x="9.6912%" y="1215.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="9.4412%" y="1189" width="0.0120%" height="15" fill="rgb(241,121,31)" fg:x="784" fg:w="1"/><text x="9.6912%" y="1199.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="9.4412%" y="1173" width="0.0120%" height="15" fill="rgb(232,40,11)" fg:x="784" fg:w="1"/><text x="9.6912%" y="1183.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.01%)</title><rect x="9.4412%" y="1157" width="0.0120%" height="15" fill="rgb(205,86,26)" fg:x="784" fg:w="1"/><text x="9.6912%" y="1167.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.01%)</title><rect x="9.4412%" y="1141" width="0.0120%" height="15" fill="rgb(231,126,28)" fg:x="784" fg:w="1"/><text x="9.6912%" y="1151.50"></text></g><g><title>mi_page_fresh (1 samples, 0.01%)</title><rect x="9.4412%" y="1125" width="0.0120%" height="15" fill="rgb(219,221,18)" fg:x="784" fg:w="1"/><text x="9.6912%" y="1135.50"></text></g><g><title>mi_page_fresh_alloc (1 samples, 0.01%)</title><rect x="9.4412%" y="1109" width="0.0120%" height="15" fill="rgb(211,40,0)" fg:x="784" fg:w="1"/><text x="9.6912%" y="1119.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.01%)</title><rect x="9.4412%" y="1093" width="0.0120%" height="15" fill="rgb(239,85,43)" fg:x="784" fg:w="1"/><text x="9.6912%" y="1103.50"></text></g><g><title>mi_page_free_list_extend_secure (1 samples, 0.01%)</title><rect x="9.4412%" y="1077" width="0.0120%" height="15" fill="rgb(231,55,21)" fg:x="784" fg:w="1"/><text x="9.6912%" y="1087.50"></text></g><g><title>rayon_core::registry::Registry::pop_injected_job (1 samples, 0.01%)</title><rect x="9.4653%" y="1365" width="0.0120%" height="15" fill="rgb(225,184,43)" fg:x="786" fg:w="1"/><text x="9.7153%" y="1375.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1 samples, 0.01%)</title><rect x="9.4774%" y="1285" width="0.0120%" height="15" fill="rgb(251,158,41)" fg:x="787" fg:w="1"/><text x="9.7274%" y="1295.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (1 samples, 0.01%)</title><rect x="9.4774%" y="1269" width="0.0120%" height="15" fill="rgb(234,159,37)" fg:x="787" fg:w="1"/><text x="9.7274%" y="1279.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (1 samples, 0.01%)</title><rect x="9.4774%" y="1253" width="0.0120%" height="15" fill="rgb(216,204,22)" fg:x="787" fg:w="1"/><text x="9.7274%" y="1263.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (1 samples, 0.01%)</title><rect x="9.4774%" y="1237" width="0.0120%" height="15" fill="rgb(214,17,3)" fg:x="787" fg:w="1"/><text x="9.7274%" y="1247.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (3 samples, 0.04%)</title><rect x="9.4774%" y="1349" width="0.0361%" height="15" fill="rgb(212,111,17)" fg:x="787" fg:w="3"/><text x="9.7274%" y="1359.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.04%)</title><rect x="9.4774%" y="1333" width="0.0361%" height="15" fill="rgb(221,157,24)" fg:x="787" fg:w="3"/><text x="9.7274%" y="1343.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.04%)</title><rect x="9.4774%" y="1317" width="0.0361%" height="15" fill="rgb(252,16,13)" fg:x="787" fg:w="3"/><text x="9.7274%" y="1327.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.04%)</title><rect x="9.4774%" y="1301" width="0.0361%" height="15" fill="rgb(221,62,2)" fg:x="787" fg:w="3"/><text x="9.7274%" y="1311.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.02%)</title><rect x="9.4894%" y="1285" width="0.0241%" height="15" fill="rgb(247,87,22)" fg:x="788" fg:w="2"/><text x="9.7394%" y="1295.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (2 samples, 0.02%)</title><rect x="9.4894%" y="1269" width="0.0241%" height="15" fill="rgb(215,73,9)" fg:x="788" fg:w="2"/><text x="9.7394%" y="1279.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (2 samples, 0.02%)</title><rect x="9.4894%" y="1253" width="0.0241%" height="15" fill="rgb(207,175,33)" fg:x="788" fg:w="2"/><text x="9.7394%" y="1263.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (2 samples, 0.02%)</title><rect x="9.4894%" y="1237" width="0.0241%" height="15" fill="rgb(243,129,54)" fg:x="788" fg:w="2"/><text x="9.7394%" y="1247.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (2 samples, 0.02%)</title><rect x="9.4894%" y="1221" width="0.0241%" height="15" fill="rgb(227,119,45)" fg:x="788" fg:w="2"/><text x="9.7394%" y="1231.50"></text></g><g><title>crossbeam_epoch::default::pin (2 samples, 0.02%)</title><rect x="9.4894%" y="1205" width="0.0241%" height="15" fill="rgb(205,109,36)" fg:x="788" fg:w="2"/><text x="9.7394%" y="1215.50"></text></g><g><title>crossbeam_epoch::default::with_handle (2 samples, 0.02%)</title><rect x="9.4894%" y="1189" width="0.0241%" height="15" fill="rgb(205,6,39)" fg:x="788" fg:w="2"/><text x="9.7394%" y="1199.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.02%)</title><rect x="9.4894%" y="1173" width="0.0241%" height="15" fill="rgb(221,32,16)" fg:x="788" fg:w="2"/><text x="9.7394%" y="1183.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (2 samples, 0.02%)</title><rect x="9.4894%" y="1157" width="0.0241%" height="15" fill="rgb(228,144,50)" fg:x="788" fg:w="2"/><text x="9.7394%" y="1167.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (2 samples, 0.02%)</title><rect x="9.4894%" y="1141" width="0.0241%" height="15" fill="rgb(229,201,53)" fg:x="788" fg:w="2"/><text x="9.7394%" y="1151.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (2 samples, 0.02%)</title><rect x="9.4894%" y="1125" width="0.0241%" height="15" fill="rgb(249,153,27)" fg:x="788" fg:w="2"/><text x="9.7394%" y="1135.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (2 samples, 0.02%)</title><rect x="9.4894%" y="1109" width="0.0241%" height="15" fill="rgb(227,106,25)" fg:x="788" fg:w="2"/><text x="9.7394%" y="1119.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::load (1 samples, 0.01%)</title><rect x="9.5014%" y="1093" width="0.0120%" height="15" fill="rgb(230,65,29)" fg:x="789" fg:w="1"/><text x="9.7514%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="9.5014%" y="1077" width="0.0120%" height="15" fill="rgb(221,57,46)" fg:x="789" fg:w="1"/><text x="9.7514%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="9.5014%" y="1061" width="0.0120%" height="15" fill="rgb(229,161,17)" fg:x="789" fg:w="1"/><text x="9.7514%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (5 samples, 0.06%)</title><rect x="9.4653%" y="1397" width="0.0602%" height="15" fill="rgb(222,213,11)" fg:x="786" fg:w="5"/><text x="9.7153%" y="1407.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold::{{closure}} (5 samples, 0.06%)</title><rect x="9.4653%" y="1381" width="0.0602%" height="15" fill="rgb(235,35,13)" fg:x="786" fg:w="5"/><text x="9.7153%" y="1391.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal (4 samples, 0.05%)</title><rect x="9.4774%" y="1365" width="0.0482%" height="15" fill="rgb(233,158,34)" fg:x="787" fg:w="4"/><text x="9.7274%" y="1375.50"></text></g><g><title>rayon_core::registry::XorShift64Star::next_usize (1 samples, 0.01%)</title><rect x="9.5135%" y="1349" width="0.0120%" height="15" fill="rgb(215,151,48)" fg:x="790" fg:w="1"/><text x="9.7635%" y="1359.50"></text></g><g><title>rayon_core::sleep::Sleep::no_work_found (3 samples, 0.04%)</title><rect x="9.5255%" y="1397" width="0.0361%" height="15" fill="rgb(229,84,14)" fg:x="791" fg:w="3"/><text x="9.7755%" y="1407.50"></text></g><g><title>__GI___sched_yield (3 samples, 0.04%)</title><rect x="9.5255%" y="1381" width="0.0361%" height="15" fill="rgb(229,68,14)" fg:x="791" fg:w="3"/><text x="9.7755%" y="1391.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="9.5376%" y="1365" width="0.0241%" height="15" fill="rgb(243,106,26)" fg:x="792" fg:w="2"/><text x="9.7876%" y="1375.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="9.5376%" y="1349" width="0.0241%" height="15" fill="rgb(206,45,38)" fg:x="792" fg:w="2"/><text x="9.7876%" y="1359.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="9.5376%" y="1333" width="0.0241%" height="15" fill="rgb(226,6,15)" fg:x="792" fg:w="2"/><text x="9.7876%" y="1343.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="9.5376%" y="1317" width="0.0241%" height="15" fill="rgb(232,22,54)" fg:x="792" fg:w="2"/><text x="9.7876%" y="1327.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="9.5376%" y="1301" width="0.0241%" height="15" fill="rgb(229,222,32)" fg:x="792" fg:w="2"/><text x="9.7876%" y="1311.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="9.5496%" y="1285" width="0.0120%" height="15" fill="rgb(228,62,29)" fg:x="793" fg:w="1"/><text x="9.7996%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="9.5496%" y="1269" width="0.0120%" height="15" fill="rgb(251,103,34)" fg:x="793" fg:w="1"/><text x="9.7996%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="9.5496%" y="1253" width="0.0120%" height="15" fill="rgb(233,12,30)" fg:x="793" fg:w="1"/><text x="9.7996%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="9.5496%" y="1237" width="0.0120%" height="15" fill="rgb(238,52,0)" fg:x="793" fg:w="1"/><text x="9.7996%" y="1247.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (12 samples, 0.14%)</title><rect x="9.4533%" y="1429" width="0.1445%" height="15" fill="rgb(223,98,5)" fg:x="785" fg:w="12"/><text x="9.7033%" y="1439.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (12 samples, 0.14%)</title><rect x="9.4533%" y="1413" width="0.1445%" height="15" fill="rgb(228,75,37)" fg:x="785" fg:w="12"/><text x="9.7033%" y="1423.50"></text></g><g><title>rayon_core::sleep::Sleep::work_found (3 samples, 0.04%)</title><rect x="9.5617%" y="1397" width="0.0361%" height="15" fill="rgb(205,115,49)" fg:x="794" fg:w="3"/><text x="9.8117%" y="1407.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_any_threads (3 samples, 0.04%)</title><rect x="9.5617%" y="1381" width="0.0361%" height="15" fill="rgb(250,154,43)" fg:x="794" fg:w="3"/><text x="9.8117%" y="1391.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_specific_thread (3 samples, 0.04%)</title><rect x="9.5617%" y="1365" width="0.0361%" height="15" fill="rgb(226,43,29)" fg:x="794" fg:w="3"/><text x="9.8117%" y="1375.50"></text></g><g><title>syscall (3 samples, 0.04%)</title><rect x="9.5617%" y="1349" width="0.0361%" height="15" fill="rgb(249,228,39)" fg:x="794" fg:w="3"/><text x="9.8117%" y="1359.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="9.5737%" y="1333" width="0.0241%" height="15" fill="rgb(216,79,43)" fg:x="795" fg:w="2"/><text x="9.8237%" y="1343.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="9.5737%" y="1317" width="0.0241%" height="15" fill="rgb(228,95,12)" fg:x="795" fg:w="2"/><text x="9.8237%" y="1327.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="9.5857%" y="1301" width="0.0120%" height="15" fill="rgb(249,221,15)" fg:x="796" fg:w="1"/><text x="9.8357%" y="1311.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="9.5857%" y="1285" width="0.0120%" height="15" fill="rgb(233,34,13)" fg:x="796" fg:w="1"/><text x="9.8357%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="9.5857%" y="1269" width="0.0120%" height="15" fill="rgb(214,103,39)" fg:x="796" fg:w="1"/><text x="9.8357%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="9.5857%" y="1253" width="0.0120%" height="15" fill="rgb(251,126,39)" fg:x="796" fg:w="1"/><text x="9.8357%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="9.5857%" y="1237" width="0.0120%" height="15" fill="rgb(214,216,36)" fg:x="796" fg:w="1"/><text x="9.8357%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="9.5857%" y="1221" width="0.0120%" height="15" fill="rgb(220,221,8)" fg:x="796" fg:w="1"/><text x="9.8357%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="9.5857%" y="1205" width="0.0120%" height="15" fill="rgb(240,216,3)" fg:x="796" fg:w="1"/><text x="9.8357%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="9.5857%" y="1189" width="0.0120%" height="15" fill="rgb(232,218,17)" fg:x="796" fg:w="1"/><text x="9.8357%" y="1199.50"></text></g><g><title>mi_page_extend_free (3 samples, 0.04%)</title><rect x="9.6219%" y="837" width="0.0361%" height="15" fill="rgb(229,163,45)" fg:x="799" fg:w="3"/><text x="9.8719%" y="847.50"></text></g><g><title>mi_page_free_list_extend_secure (3 samples, 0.04%)</title><rect x="9.6219%" y="821" width="0.0361%" height="15" fill="rgb(231,110,42)" fg:x="799" fg:w="3"/><text x="9.8719%" y="831.50"></text></g><g><title>mi_block_set_next (3 samples, 0.04%)</title><rect x="9.6219%" y="805" width="0.0361%" height="15" fill="rgb(208,170,48)" fg:x="799" fg:w="3"/><text x="9.8719%" y="815.50"></text></g><g><title>mi_block_set_nextx (3 samples, 0.04%)</title><rect x="9.6219%" y="789" width="0.0361%" height="15" fill="rgb(239,116,25)" fg:x="799" fg:w="3"/><text x="9.8719%" y="799.50"></text></g><g><title>mi_ptr_encode (3 samples, 0.04%)</title><rect x="9.6219%" y="773" width="0.0361%" height="15" fill="rgb(219,200,50)" fg:x="799" fg:w="3"/><text x="9.8719%" y="783.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="9.6219%" y="757" width="0.0361%" height="15" fill="rgb(245,200,0)" fg:x="799" fg:w="3"/><text x="9.8719%" y="767.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="9.6219%" y="741" width="0.0361%" height="15" fill="rgb(245,119,33)" fg:x="799" fg:w="3"/><text x="9.8719%" y="751.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="9.6219%" y="725" width="0.0361%" height="15" fill="rgb(231,125,12)" fg:x="799" fg:w="3"/><text x="9.8719%" y="735.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="9.6219%" y="709" width="0.0361%" height="15" fill="rgb(216,96,41)" fg:x="799" fg:w="3"/><text x="9.8719%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="9.6460%" y="693" width="0.0120%" height="15" fill="rgb(248,43,45)" fg:x="801" fg:w="1"/><text x="9.8960%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="9.6460%" y="677" width="0.0120%" height="15" fill="rgb(217,222,7)" fg:x="801" fg:w="1"/><text x="9.8960%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="9.6460%" y="661" width="0.0120%" height="15" fill="rgb(233,28,6)" fg:x="801" fg:w="1"/><text x="9.8960%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="9.6460%" y="645" width="0.0120%" height="15" fill="rgb(231,218,15)" fg:x="801" fg:w="1"/><text x="9.8960%" y="655.50"></text></g><g><title>wasmer_compiler::translator::middleware::MiddlewareBinaryReader::new_with_offset (5 samples, 0.06%)</title><rect x="9.6219%" y="1045" width="0.0602%" height="15" fill="rgb(226,171,48)" fg:x="799" fg:w="5"/><text x="9.8719%" y="1055.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::new (5 samples, 0.06%)</title><rect x="9.6219%" y="1029" width="0.0602%" height="15" fill="rgb(235,201,9)" fg:x="799" fg:w="5"/><text x="9.8719%" y="1039.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::new_in (5 samples, 0.06%)</title><rect x="9.6219%" y="1013" width="0.0602%" height="15" fill="rgb(217,80,15)" fg:x="799" fg:w="5"/><text x="9.8719%" y="1023.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::with_capacity_in (5 samples, 0.06%)</title><rect x="9.6219%" y="997" width="0.0602%" height="15" fill="rgb(219,152,8)" fg:x="799" fg:w="5"/><text x="9.8719%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.06%)</title><rect x="9.6219%" y="981" width="0.0602%" height="15" fill="rgb(243,107,38)" fg:x="799" fg:w="5"/><text x="9.8719%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.06%)</title><rect x="9.6219%" y="965" width="0.0602%" height="15" fill="rgb(231,17,5)" fg:x="799" fg:w="5"/><text x="9.8719%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.06%)</title><rect x="9.6219%" y="949" width="0.0602%" height="15" fill="rgb(209,25,54)" fg:x="799" fg:w="5"/><text x="9.8719%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.06%)</title><rect x="9.6219%" y="933" width="0.0602%" height="15" fill="rgb(219,0,2)" fg:x="799" fg:w="5"/><text x="9.8719%" y="943.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.06%)</title><rect x="9.6219%" y="917" width="0.0602%" height="15" fill="rgb(246,9,5)" fg:x="799" fg:w="5"/><text x="9.8719%" y="927.50"></text></g><g><title>_mi_malloc_generic (5 samples, 0.06%)</title><rect x="9.6219%" y="901" width="0.0602%" height="15" fill="rgb(226,159,4)" fg:x="799" fg:w="5"/><text x="9.8719%" y="911.50"></text></g><g><title>mi_page_queue_find_free_ex (5 samples, 0.06%)</title><rect x="9.6219%" y="885" width="0.0602%" height="15" fill="rgb(219,175,34)" fg:x="799" fg:w="5"/><text x="9.8719%" y="895.50"></text></g><g><title>mi_page_fresh (5 samples, 0.06%)</title><rect x="9.6219%" y="869" width="0.0602%" height="15" fill="rgb(236,10,46)" fg:x="799" fg:w="5"/><text x="9.8719%" y="879.50"></text></g><g><title>mi_page_fresh_alloc (5 samples, 0.06%)</title><rect x="9.6219%" y="853" width="0.0602%" height="15" fill="rgb(240,211,16)" fg:x="799" fg:w="5"/><text x="9.8719%" y="863.50"></text></g><g><title>mi_page_queue_push (2 samples, 0.02%)</title><rect x="9.6580%" y="837" width="0.0241%" height="15" fill="rgb(205,3,43)" fg:x="802" fg:w="2"/><text x="9.9080%" y="847.50"></text></g><g><title>mi_heap_queue_first_update (2 samples, 0.02%)</title><rect x="9.6580%" y="821" width="0.0241%" height="15" fill="rgb(245,7,22)" fg:x="802" fg:w="2"/><text x="9.9080%" y="831.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::AssemblerX64 as wasmer_compiler_singlepass::emitter_x64::EmitterX64&gt;::emit_and (1 samples, 0.01%)</title><rect x="9.6821%" y="997" width="0.0120%" height="15" fill="rgb(239,132,32)" fg:x="804" fg:w="1"/><text x="9.9321%" y="1007.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::MachineX86_64 as wasmer_compiler_singlepass::machine::Machine&gt;::i64_cmp_lt_u (8 samples, 0.10%)</title><rect x="9.6821%" y="1029" width="0.0963%" height="15" fill="rgb(228,202,34)" fg:x="804" fg:w="8"/><text x="9.9321%" y="1039.50"></text></g><g><title>wasmer_compiler_singlepass::machine_x64::MachineX86_64::emit_cmpop_i64_dynamic_b (8 samples, 0.10%)</title><rect x="9.6821%" y="1013" width="0.0963%" height="15" fill="rgb(254,200,22)" fg:x="804" fg:w="8"/><text x="9.9321%" y="1023.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::MachineX86_64 as wasmer_compiler_singlepass::machine::Machine&gt;::emit_relaxed_cmp (7 samples, 0.08%)</title><rect x="9.6941%" y="997" width="0.0843%" height="15" fill="rgb(219,10,39)" fg:x="805" fg:w="7"/><text x="9.9441%" y="1007.50"></text></g><g><title>wasmer_compiler_singlepass::machine_x64::MachineX86_64::emit_relaxed_binop (7 samples, 0.08%)</title><rect x="9.6941%" y="981" width="0.0843%" height="15" fill="rgb(226,210,39)" fg:x="805" fg:w="7"/><text x="9.9441%" y="991.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::MachineX86_64 as wasmer_compiler_singlepass::machine::Machine&gt;::move_location (7 samples, 0.08%)</title><rect x="9.6941%" y="965" width="0.0843%" height="15" fill="rgb(208,219,16)" fg:x="805" fg:w="7"/><text x="9.9441%" y="975.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::AssemblerX64 as wasmer_compiler_singlepass::emitter_x64::EmitterX64&gt;::emit_mov (7 samples, 0.08%)</title><rect x="9.6941%" y="949" width="0.0843%" height="15" fill="rgb(216,158,51)" fg:x="805" fg:w="7"/><text x="9.9441%" y="959.50"></text></g><g><title>dynasmrt::DynasmApi::push_i64 (7 samples, 0.08%)</title><rect x="9.6941%" y="933" width="0.0843%" height="15" fill="rgb(233,14,44)" fg:x="805" fg:w="7"/><text x="9.9441%" y="943.50"></text></g><g><title>&lt;dynasmrt::VecAssembler&lt;R&gt; as core::iter::traits::collect::Extend&lt;&amp;u8&gt;&gt;::extend (7 samples, 0.08%)</title><rect x="9.6941%" y="917" width="0.0843%" height="15" fill="rgb(237,97,39)" fg:x="805" fg:w="7"/><text x="9.9441%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (7 samples, 0.08%)</title><rect x="9.6941%" y="901" width="0.0843%" height="15" fill="rgb(218,198,43)" fg:x="805" fg:w="7"/><text x="9.9441%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (7 samples, 0.08%)</title><rect x="9.6941%" y="885" width="0.0843%" height="15" fill="rgb(231,104,20)" fg:x="805" fg:w="7"/><text x="9.9441%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (7 samples, 0.08%)</title><rect x="9.6941%" y="869" width="0.0843%" height="15" fill="rgb(254,36,13)" fg:x="805" fg:w="7"/><text x="9.9441%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (7 samples, 0.08%)</title><rect x="9.6941%" y="853" width="0.0843%" height="15" fill="rgb(248,14,50)" fg:x="805" fg:w="7"/><text x="9.9441%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.08%)</title><rect x="9.6941%" y="837" width="0.0843%" height="15" fill="rgb(217,107,29)" fg:x="805" fg:w="7"/><text x="9.9441%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.08%)</title><rect x="9.6941%" y="821" width="0.0843%" height="15" fill="rgb(251,169,33)" fg:x="805" fg:w="7"/><text x="9.9441%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.08%)</title><rect x="9.6941%" y="805" width="0.0843%" height="15" fill="rgb(217,108,32)" fg:x="805" fg:w="7"/><text x="9.9441%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.08%)</title><rect x="9.6941%" y="789" width="0.0843%" height="15" fill="rgb(219,66,42)" fg:x="805" fg:w="7"/><text x="9.9441%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (7 samples, 0.08%)</title><rect x="9.6941%" y="773" width="0.0843%" height="15" fill="rgb(206,180,7)" fg:x="805" fg:w="7"/><text x="9.9441%" y="783.50"></text></g><g><title>alloc::alloc::Global::grow_impl (7 samples, 0.08%)</title><rect x="9.6941%" y="757" width="0.0843%" height="15" fill="rgb(208,226,31)" fg:x="805" fg:w="7"/><text x="9.9441%" y="767.50"></text></g><g><title>alloc::alloc::realloc (7 samples, 0.08%)</title><rect x="9.6941%" y="741" width="0.0843%" height="15" fill="rgb(218,26,49)" fg:x="805" fg:w="7"/><text x="9.9441%" y="751.50"></text></g><g><title>_mi_heap_realloc_zero (7 samples, 0.08%)</title><rect x="9.6941%" y="725" width="0.0843%" height="15" fill="rgb(233,197,48)" fg:x="805" fg:w="7"/><text x="9.9441%" y="735.50"></text></g><g><title>mi_heap_malloc (7 samples, 0.08%)</title><rect x="9.6941%" y="709" width="0.0843%" height="15" fill="rgb(252,181,51)" fg:x="805" fg:w="7"/><text x="9.9441%" y="719.50"></text></g><g><title>_mi_malloc_generic (7 samples, 0.08%)</title><rect x="9.6941%" y="693" width="0.0843%" height="15" fill="rgb(253,90,19)" fg:x="805" fg:w="7"/><text x="9.9441%" y="703.50"></text></g><g><title>mi_page_queue_find_free_ex (7 samples, 0.08%)</title><rect x="9.6941%" y="677" width="0.0843%" height="15" fill="rgb(215,171,30)" fg:x="805" fg:w="7"/><text x="9.9441%" y="687.50"></text></g><g><title>mi_page_fresh (7 samples, 0.08%)</title><rect x="9.6941%" y="661" width="0.0843%" height="15" fill="rgb(214,222,9)" fg:x="805" fg:w="7"/><text x="9.9441%" y="671.50"></text></g><g><title>mi_page_fresh_alloc (7 samples, 0.08%)</title><rect x="9.6941%" y="645" width="0.0843%" height="15" fill="rgb(223,3,22)" fg:x="805" fg:w="7"/><text x="9.9441%" y="655.50"></text></g><g><title>mi_page_extend_free (7 samples, 0.08%)</title><rect x="9.6941%" y="629" width="0.0843%" height="15" fill="rgb(225,196,46)" fg:x="805" fg:w="7"/><text x="9.9441%" y="639.50"></text></g><g><title>mi_page_free_list_extend_secure (7 samples, 0.08%)</title><rect x="9.6941%" y="613" width="0.0843%" height="15" fill="rgb(209,110,37)" fg:x="805" fg:w="7"/><text x="9.9441%" y="623.50"></text></g><g><title>mi_block_set_next (7 samples, 0.08%)</title><rect x="9.6941%" y="597" width="0.0843%" height="15" fill="rgb(249,89,12)" fg:x="805" fg:w="7"/><text x="9.9441%" y="607.50"></text></g><g><title>mi_block_set_nextx (7 samples, 0.08%)</title><rect x="9.6941%" y="581" width="0.0843%" height="15" fill="rgb(226,27,33)" fg:x="805" fg:w="7"/><text x="9.9441%" y="591.50"></text></g><g><title>mi_ptr_encode (7 samples, 0.08%)</title><rect x="9.6941%" y="565" width="0.0843%" height="15" fill="rgb(213,82,22)" fg:x="805" fg:w="7"/><text x="9.9441%" y="575.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="9.6941%" y="549" width="0.0843%" height="15" fill="rgb(248,140,0)" fg:x="805" fg:w="7"/><text x="9.9441%" y="559.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="9.7062%" y="533" width="0.0723%" height="15" fill="rgb(228,106,3)" fg:x="806" fg:w="6"/><text x="9.9562%" y="543.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="9.7062%" y="517" width="0.0723%" height="15" fill="rgb(209,23,37)" fg:x="806" fg:w="6"/><text x="9.9562%" y="527.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="9.7062%" y="501" width="0.0723%" height="15" fill="rgb(241,93,50)" fg:x="806" fg:w="6"/><text x="9.9562%" y="511.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="9.7062%" y="485" width="0.0723%" height="15" fill="rgb(253,46,43)" fg:x="806" fg:w="6"/><text x="9.9562%" y="495.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="9.7062%" y="469" width="0.0723%" height="15" fill="rgb(226,206,43)" fg:x="806" fg:w="6"/><text x="9.9562%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="9.7182%" y="453" width="0.0602%" height="15" fill="rgb(217,54,7)" fg:x="807" fg:w="5"/><text x="9.9682%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="9.7182%" y="437" width="0.0602%" height="15" fill="rgb(223,5,52)" fg:x="807" fg:w="5"/><text x="9.9682%" y="447.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="9.7303%" y="421" width="0.0482%" height="15" fill="rgb(206,52,46)" fg:x="808" fg:w="4"/><text x="9.9803%" y="431.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="9.7303%" y="405" width="0.0482%" height="15" fill="rgb(253,136,11)" fg:x="808" fg:w="4"/><text x="9.9803%" y="415.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="9.7303%" y="389" width="0.0482%" height="15" fill="rgb(208,106,33)" fg:x="808" fg:w="4"/><text x="9.9803%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="9.7784%" y="1029" width="0.0120%" height="15" fill="rgb(206,54,4)" fg:x="812" fg:w="1"/><text x="10.0284%" y="1039.50"></text></g><g><title>wasmer_compiler_singlepass::codegen::FuncGen&lt;M&gt;::emit_call_native (1 samples, 0.01%)</title><rect x="9.7905%" y="1029" width="0.0120%" height="15" fill="rgb(213,3,15)" fg:x="813" fg:w="1"/><text x="10.0405%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.01%)</title><rect x="9.7905%" y="1013" width="0.0120%" height="15" fill="rgb(252,211,39)" fg:x="813" fg:w="1"/><text x="10.0405%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (1 samples, 0.01%)</title><rect x="9.7905%" y="997" width="0.0120%" height="15" fill="rgb(223,6,36)" fg:x="813" fg:w="1"/><text x="10.0405%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1 samples, 0.01%)</title><rect x="9.7905%" y="981" width="0.0120%" height="15" fill="rgb(252,169,45)" fg:x="813" fg:w="1"/><text x="10.0405%" y="991.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1 samples, 0.01%)</title><rect x="9.7905%" y="965" width="0.0120%" height="15" fill="rgb(212,48,26)" fg:x="813" fg:w="1"/><text x="10.0405%" y="975.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1 samples, 0.01%)</title><rect x="9.7905%" y="949" width="0.0120%" height="15" fill="rgb(251,102,48)" fg:x="813" fg:w="1"/><text x="10.0405%" y="959.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.01%)</title><rect x="9.7905%" y="933" width="0.0120%" height="15" fill="rgb(243,208,16)" fg:x="813" fg:w="1"/><text x="10.0405%" y="943.50"></text></g><g><title>wasmer_compiler_singlepass::codegen::FuncGen&lt;M&gt;::feed_operator (11 samples, 0.13%)</title><rect x="9.6821%" y="1045" width="0.1325%" height="15" fill="rgb(219,96,24)" fg:x="804" fg:w="11"/><text x="9.9321%" y="1055.50"></text></g><g><title>wasmer_compiler_singlepass::codegen::FuncGen&lt;M&gt;::get_state_diff (1 samples, 0.01%)</title><rect x="9.8025%" y="1029" width="0.0120%" height="15" fill="rgb(219,33,29)" fg:x="814" fg:w="1"/><text x="10.0525%" y="1039.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::common_decl::MachineState as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="9.8025%" y="1013" width="0.0120%" height="15" fill="rgb(223,176,5)" fg:x="814" fg:w="1"/><text x="10.0525%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="9.8025%" y="997" width="0.0120%" height="15" fill="rgb(228,140,14)" fg:x="814" fg:w="1"/><text x="10.0525%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="9.8025%" y="981" width="0.0120%" height="15" fill="rgb(217,179,31)" fg:x="814" fg:w="1"/><text x="10.0525%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="9.8025%" y="965" width="0.0120%" height="15" fill="rgb(230,9,30)" fg:x="814" fg:w="1"/><text x="10.0525%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="9.8025%" y="949" width="0.0120%" height="15" fill="rgb(230,136,20)" fg:x="814" fg:w="1"/><text x="10.0525%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="9.8025%" y="933" width="0.0120%" height="15" fill="rgb(215,210,22)" fg:x="814" fg:w="1"/><text x="10.0525%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="9.8025%" y="917" width="0.0120%" height="15" fill="rgb(218,43,5)" fg:x="814" fg:w="1"/><text x="10.0525%" y="927.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::MachineX86_64 as wasmer_compiler_singlepass::machine::Machine&gt;::get_label (1 samples, 0.01%)</title><rect x="9.8145%" y="1029" width="0.0120%" height="15" fill="rgb(216,11,5)" fg:x="815" fg:w="1"/><text x="10.0645%" y="1039.50"></text></g><g><title>dynasmrt::VecAssembler&lt;R&gt;::new_dynamic_label (1 samples, 0.01%)</title><rect x="9.8145%" y="1013" width="0.0120%" height="15" fill="rgb(209,82,29)" fg:x="815" fg:w="1"/><text x="10.0645%" y="1023.50"></text></g><g><title>dynasmrt::components::LabelRegistry::new_dynamic_label (1 samples, 0.01%)</title><rect x="9.8145%" y="997" width="0.0120%" height="15" fill="rgb(244,115,12)" fg:x="815" fg:w="1"/><text x="10.0645%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="9.8145%" y="981" width="0.0120%" height="15" fill="rgb(222,82,18)" fg:x="815" fg:w="1"/><text x="10.0645%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="9.8145%" y="965" width="0.0120%" height="15" fill="rgb(249,227,8)" fg:x="815" fg:w="1"/><text x="10.0645%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="9.8145%" y="949" width="0.0120%" height="15" fill="rgb(253,141,45)" fg:x="815" fg:w="1"/><text x="10.0645%" y="959.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="9.8145%" y="933" width="0.0120%" height="15" fill="rgb(234,184,4)" fg:x="815" fg:w="1"/><text x="10.0645%" y="943.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.01%)</title><rect x="9.8145%" y="917" width="0.0120%" height="15" fill="rgb(218,194,23)" fg:x="815" fg:w="1"/><text x="10.0645%" y="927.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.01%)</title><rect x="9.8145%" y="901" width="0.0120%" height="15" fill="rgb(235,66,41)" fg:x="815" fg:w="1"/><text x="10.0645%" y="911.50"></text></g><g><title>mi_page_fresh (1 samples, 0.01%)</title><rect x="9.8145%" y="885" width="0.0120%" height="15" fill="rgb(245,217,1)" fg:x="815" fg:w="1"/><text x="10.0645%" y="895.50"></text></g><g><title>mi_page_fresh_alloc (1 samples, 0.01%)</title><rect x="9.8145%" y="869" width="0.0120%" height="15" fill="rgb(229,91,1)" fg:x="815" fg:w="1"/><text x="10.0645%" y="879.50"></text></g><g><title>mi_segments_page_alloc (1 samples, 0.01%)</title><rect x="9.8145%" y="853" width="0.0120%" height="15" fill="rgb(207,101,30)" fg:x="815" fg:w="1"/><text x="10.0645%" y="863.50"></text></g><g><title>mi_segments_page_find_and_allocate (1 samples, 0.01%)</title><rect x="9.8145%" y="837" width="0.0120%" height="15" fill="rgb(223,82,49)" fg:x="815" fg:w="1"/><text x="10.0645%" y="847.50"></text></g><g><title>mi_segment_slice_split (1 samples, 0.01%)</title><rect x="9.8145%" y="821" width="0.0120%" height="15" fill="rgb(218,167,17)" fg:x="815" fg:w="1"/><text x="10.0645%" y="831.50"></text></g><g><title>mi_segment_span_free (1 samples, 0.01%)</title><rect x="9.8145%" y="805" width="0.0120%" height="15" fill="rgb(208,103,14)" fg:x="815" fg:w="1"/><text x="10.0645%" y="815.50"></text></g><g><title>mi_segment_perhaps_decommit (1 samples, 0.01%)</title><rect x="9.8145%" y="789" width="0.0120%" height="15" fill="rgb(238,20,8)" fg:x="815" fg:w="1"/><text x="10.0645%" y="799.50"></text></g><g><title>mi_segment_commit_mask (1 samples, 0.01%)</title><rect x="9.8145%" y="773" width="0.0120%" height="15" fill="rgb(218,80,54)" fg:x="815" fg:w="1"/><text x="10.0645%" y="783.50"></text></g><g><title>mi_segment_commit_mask (1 samples, 0.01%)</title><rect x="9.8145%" y="757" width="0.0120%" height="15" fill="rgb(240,144,17)" fg:x="815" fg:w="1"/><text x="10.0645%" y="767.50"></text></g><g><title>&lt;wasmer_types::entity::primary_map::PrimaryMap&lt;K,V&gt; as core::ops::index::Index&lt;K&gt;&gt;::index (1 samples, 0.01%)</title><rect x="9.8266%" y="1029" width="0.0120%" height="15" fill="rgb(245,27,50)" fg:x="816" fg:w="1"/><text x="10.0766%" y="1039.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (19 samples, 0.23%)</title><rect x="9.6219%" y="1269" width="0.2288%" height="15" fill="rgb(251,51,7)" fg:x="799" fg:w="19"/><text x="9.8719%" y="1279.50"></text></g><g><title>&lt;rayon::iter::while_some::WhileSomeFolder&lt;C&gt; as rayon::iter::plumbing::Folder&lt;core::option::Option&lt;T&gt;&gt;&gt;::consume_iter (19 samples, 0.23%)</title><rect x="9.6219%" y="1253" width="0.2288%" height="15" fill="rgb(245,217,29)" fg:x="799" fg:w="19"/><text x="9.8719%" y="1263.50"></text></g><g><title>&lt;rayon::iter::extend::ListVecFolder&lt;T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (19 samples, 0.23%)</title><rect x="9.6219%" y="1237" width="0.2288%" height="15" fill="rgb(221,176,29)" fg:x="799" fg:w="19"/><text x="9.8719%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (19 samples, 0.23%)</title><rect x="9.6219%" y="1221" width="0.2288%" height="15" fill="rgb(212,180,24)" fg:x="799" fg:w="19"/><text x="9.8719%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (19 samples, 0.23%)</title><rect x="9.6219%" y="1205" width="0.2288%" height="15" fill="rgb(254,24,2)" fg:x="799" fg:w="19"/><text x="9.8719%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (19 samples, 0.23%)</title><rect x="9.6219%" y="1189" width="0.2288%" height="15" fill="rgb(230,100,2)" fg:x="799" fg:w="19"/><text x="9.8719%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.23%)</title><rect x="9.6219%" y="1173" width="0.2288%" height="15" fill="rgb(219,142,25)" fg:x="799" fg:w="19"/><text x="9.8719%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.23%)</title><rect x="9.6219%" y="1157" width="0.2288%" height="15" fill="rgb(240,73,43)" fg:x="799" fg:w="19"/><text x="9.8719%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.23%)</title><rect x="9.6219%" y="1141" width="0.2288%" height="15" fill="rgb(214,114,15)" fg:x="799" fg:w="19"/><text x="9.8719%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.23%)</title><rect x="9.6219%" y="1125" width="0.2288%" height="15" fill="rgb(207,130,4)" fg:x="799" fg:w="19"/><text x="9.8719%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (19 samples, 0.23%)</title><rect x="9.6219%" y="1109" width="0.2288%" height="15" fill="rgb(221,25,40)" fg:x="799" fg:w="19"/><text x="9.8719%" y="1119.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (19 samples, 0.23%)</title><rect x="9.6219%" y="1093" width="0.2288%" height="15" fill="rgb(241,184,7)" fg:x="799" fg:w="19"/><text x="9.8719%" y="1103.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (19 samples, 0.23%)</title><rect x="9.6219%" y="1077" width="0.2288%" height="15" fill="rgb(235,159,4)" fg:x="799" fg:w="19"/><text x="9.8719%" y="1087.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::compiler::SinglepassCompiler as wasmer_compiler::compiler::Compiler&gt;::compile_module::{{closure}} (19 samples, 0.23%)</title><rect x="9.6219%" y="1061" width="0.2288%" height="15" fill="rgb(214,87,48)" fg:x="799" fg:w="19"/><text x="9.8719%" y="1071.50"></text></g><g><title>wasmer_compiler_singlepass::codegen::FuncGen&lt;M&gt;::new (3 samples, 0.04%)</title><rect x="9.8145%" y="1045" width="0.0361%" height="15" fill="rgb(246,198,24)" fg:x="815" fg:w="3"/><text x="10.0645%" y="1055.50"></text></g><g><title>wasmer_compiler_singlepass::codegen::FuncGen&lt;M&gt;::emit_head (1 samples, 0.01%)</title><rect x="9.8386%" y="1029" width="0.0120%" height="15" fill="rgb(209,66,40)" fg:x="817" fg:w="1"/><text x="10.0886%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="9.8386%" y="1013" width="0.0120%" height="15" fill="rgb(233,147,39)" fg:x="817" fg:w="1"/><text x="10.0886%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="9.8386%" y="997" width="0.0120%" height="15" fill="rgb(231,145,52)" fg:x="817" fg:w="1"/><text x="10.0886%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="9.8386%" y="981" width="0.0120%" height="15" fill="rgb(206,20,26)" fg:x="817" fg:w="1"/><text x="10.0886%" y="991.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="9.8386%" y="965" width="0.0120%" height="15" fill="rgb(238,220,4)" fg:x="817" fg:w="1"/><text x="10.0886%" y="975.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.01%)</title><rect x="9.8386%" y="949" width="0.0120%" height="15" fill="rgb(252,195,42)" fg:x="817" fg:w="1"/><text x="10.0886%" y="959.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.01%)</title><rect x="9.8386%" y="933" width="0.0120%" height="15" fill="rgb(209,10,6)" fg:x="817" fg:w="1"/><text x="10.0886%" y="943.50"></text></g><g><title>mi_page_fresh (1 samples, 0.01%)</title><rect x="9.8386%" y="917" width="0.0120%" height="15" fill="rgb(229,3,52)" fg:x="817" fg:w="1"/><text x="10.0886%" y="927.50"></text></g><g><title>mi_page_fresh_alloc (1 samples, 0.01%)</title><rect x="9.8386%" y="901" width="0.0120%" height="15" fill="rgb(253,49,37)" fg:x="817" fg:w="1"/><text x="10.0886%" y="911.50"></text></g><g><title>mi_segments_page_alloc (1 samples, 0.01%)</title><rect x="9.8386%" y="885" width="0.0120%" height="15" fill="rgb(240,103,49)" fg:x="817" fg:w="1"/><text x="10.0886%" y="895.50"></text></g><g><title>mi_segments_page_find_and_allocate (1 samples, 0.01%)</title><rect x="9.8386%" y="869" width="0.0120%" height="15" fill="rgb(250,182,30)" fg:x="817" fg:w="1"/><text x="10.0886%" y="879.50"></text></g><g><title>mi_segment_span_allocate (1 samples, 0.01%)</title><rect x="9.8386%" y="853" width="0.0120%" height="15" fill="rgb(248,8,30)" fg:x="817" fg:w="1"/><text x="10.0886%" y="863.50"></text></g><g><title>mi_segment_ensure_committed (1 samples, 0.01%)</title><rect x="9.8386%" y="837" width="0.0120%" height="15" fill="rgb(237,120,30)" fg:x="817" fg:w="1"/><text x="10.0886%" y="847.50"></text></g><g><title>mi_segment_commitx (1 samples, 0.01%)</title><rect x="9.8386%" y="821" width="0.0120%" height="15" fill="rgb(221,146,34)" fg:x="817" fg:w="1"/><text x="10.0886%" y="831.50"></text></g><g><title>mi_segment_commit_mask (1 samples, 0.01%)</title><rect x="9.8386%" y="805" width="0.0120%" height="15" fill="rgb(242,55,13)" fg:x="817" fg:w="1"/><text x="10.0886%" y="815.50"></text></g><g><title>mi_commit_mask_create_empty (1 samples, 0.01%)</title><rect x="9.8386%" y="789" width="0.0120%" height="15" fill="rgb(242,112,31)" fg:x="817" fg:w="1"/><text x="10.0886%" y="799.50"></text></g><g><title>_mi_heap_collect_retired (1 samples, 0.01%)</title><rect x="9.8507%" y="917" width="0.0120%" height="15" fill="rgb(249,192,27)" fg:x="818" fg:w="1"/><text x="10.1007%" y="927.50"></text></g><g><title>mi_page_extend_free (7 samples, 0.08%)</title><rect x="9.8627%" y="885" width="0.0843%" height="15" fill="rgb(208,204,44)" fg:x="819" fg:w="7"/><text x="10.1127%" y="895.50"></text></g><g><title>mi_page_free_list_extend_secure (6 samples, 0.07%)</title><rect x="9.8748%" y="869" width="0.0723%" height="15" fill="rgb(208,93,54)" fg:x="820" fg:w="6"/><text x="10.1248%" y="879.50"></text></g><g><title>mi_block_set_next (3 samples, 0.04%)</title><rect x="9.9109%" y="853" width="0.0361%" height="15" fill="rgb(242,1,31)" fg:x="823" fg:w="3"/><text x="10.1609%" y="863.50"></text></g><g><title>mi_block_set_nextx (3 samples, 0.04%)</title><rect x="9.9109%" y="837" width="0.0361%" height="15" fill="rgb(241,83,25)" fg:x="823" fg:w="3"/><text x="10.1609%" y="847.50"></text></g><g><title>mi_ptr_encode (3 samples, 0.04%)</title><rect x="9.9109%" y="821" width="0.0361%" height="15" fill="rgb(205,169,50)" fg:x="823" fg:w="3"/><text x="10.1609%" y="831.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="9.9109%" y="805" width="0.0361%" height="15" fill="rgb(239,186,37)" fg:x="823" fg:w="3"/><text x="10.1609%" y="815.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="9.9109%" y="789" width="0.0361%" height="15" fill="rgb(205,221,10)" fg:x="823" fg:w="3"/><text x="10.1609%" y="799.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="9.9109%" y="773" width="0.0361%" height="15" fill="rgb(218,196,15)" fg:x="823" fg:w="3"/><text x="10.1609%" y="783.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="9.9109%" y="757" width="0.0361%" height="15" fill="rgb(218,196,35)" fg:x="823" fg:w="3"/><text x="10.1609%" y="767.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="9.9229%" y="741" width="0.0241%" height="15" fill="rgb(233,63,24)" fg:x="824" fg:w="2"/><text x="10.1729%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="9.9350%" y="725" width="0.0120%" height="15" fill="rgb(225,8,4)" fg:x="825" fg:w="1"/><text x="10.1850%" y="735.50"></text></g><g><title>mi_segment_perhaps_decommit (1 samples, 0.01%)</title><rect x="9.9470%" y="821" width="0.0120%" height="15" fill="rgb(234,105,35)" fg:x="826" fg:w="1"/><text x="10.1970%" y="831.50"></text></g><g><title>_mi_clock_now (1 samples, 0.01%)</title><rect x="9.9470%" y="805" width="0.0120%" height="15" fill="rgb(236,21,32)" fg:x="826" fg:w="1"/><text x="10.1970%" y="815.50"></text></g><g><title>__clock_gettime_2 (1 samples, 0.01%)</title><rect x="9.9470%" y="789" width="0.0120%" height="15" fill="rgb(228,109,6)" fg:x="826" fg:w="1"/><text x="10.1970%" y="799.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.01%)</title><rect x="9.9470%" y="773" width="0.0120%" height="15" fill="rgb(229,215,31)" fg:x="826" fg:w="1"/><text x="10.1970%" y="783.50"></text></g><g><title>mi_segment_slice_split (2 samples, 0.02%)</title><rect x="9.9470%" y="853" width="0.0241%" height="15" fill="rgb(221,52,54)" fg:x="826" fg:w="2"/><text x="10.1970%" y="863.50"></text></g><g><title>mi_segment_span_free (2 samples, 0.02%)</title><rect x="9.9470%" y="837" width="0.0241%" height="15" fill="rgb(252,129,43)" fg:x="826" fg:w="2"/><text x="10.1970%" y="847.50"></text></g><g><title>mi_span_queue_push (1 samples, 0.01%)</title><rect x="9.9591%" y="821" width="0.0120%" height="15" fill="rgb(248,183,27)" fg:x="827" fg:w="1"/><text x="10.2091%" y="831.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::AssemblerX64 as wasmer_compiler_singlepass::emitter_x64::EmitterX64&gt;::emit_host_redirection (11 samples, 0.13%)</title><rect x="9.8507%" y="1141" width="0.1325%" height="15" fill="rgb(250,0,22)" fg:x="818" fg:w="11"/><text x="10.1007%" y="1151.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::AssemblerX64 as wasmer_compiler_singlepass::emitter_x64::EmitterX64&gt;::emit_jmp_location (11 samples, 0.13%)</title><rect x="9.8507%" y="1125" width="0.1325%" height="15" fill="rgb(213,166,10)" fg:x="818" fg:w="11"/><text x="10.1007%" y="1135.50"></text></g><g><title>&lt;dynasmrt::VecAssembler&lt;R&gt; as dynasmrt::DynasmApi&gt;::push (11 samples, 0.13%)</title><rect x="9.8507%" y="1109" width="0.1325%" height="15" fill="rgb(207,163,36)" fg:x="818" fg:w="11"/><text x="10.1007%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (11 samples, 0.13%)</title><rect x="9.8507%" y="1093" width="0.1325%" height="15" fill="rgb(208,122,22)" fg:x="818" fg:w="11"/><text x="10.1007%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (11 samples, 0.13%)</title><rect x="9.8507%" y="1077" width="0.1325%" height="15" fill="rgb(207,104,49)" fg:x="818" fg:w="11"/><text x="10.1007%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.13%)</title><rect x="9.8507%" y="1061" width="0.1325%" height="15" fill="rgb(248,211,50)" fg:x="818" fg:w="11"/><text x="10.1007%" y="1071.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.13%)</title><rect x="9.8507%" y="1045" width="0.1325%" height="15" fill="rgb(217,13,45)" fg:x="818" fg:w="11"/><text x="10.1007%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (11 samples, 0.13%)</title><rect x="9.8507%" y="1029" width="0.1325%" height="15" fill="rgb(211,216,49)" fg:x="818" fg:w="11"/><text x="10.1007%" y="1039.50"></text></g><g><title>alloc::alloc::Global::grow_impl (11 samples, 0.13%)</title><rect x="9.8507%" y="1013" width="0.1325%" height="15" fill="rgb(221,58,53)" fg:x="818" fg:w="11"/><text x="10.1007%" y="1023.50"></text></g><g><title>alloc::alloc::realloc (11 samples, 0.13%)</title><rect x="9.8507%" y="997" width="0.1325%" height="15" fill="rgb(220,112,41)" fg:x="818" fg:w="11"/><text x="10.1007%" y="1007.50"></text></g><g><title>_mi_heap_realloc_zero (11 samples, 0.13%)</title><rect x="9.8507%" y="981" width="0.1325%" height="15" fill="rgb(236,38,28)" fg:x="818" fg:w="11"/><text x="10.1007%" y="991.50"></text></g><g><title>mi_heap_malloc (11 samples, 0.13%)</title><rect x="9.8507%" y="965" width="0.1325%" height="15" fill="rgb(227,195,22)" fg:x="818" fg:w="11"/><text x="10.1007%" y="975.50"></text></g><g><title>_mi_malloc_generic (11 samples, 0.13%)</title><rect x="9.8507%" y="949" width="0.1325%" height="15" fill="rgb(214,55,33)" fg:x="818" fg:w="11"/><text x="10.1007%" y="959.50"></text></g><g><title>mi_page_queue_find_free_ex (11 samples, 0.13%)</title><rect x="9.8507%" y="933" width="0.1325%" height="15" fill="rgb(248,80,13)" fg:x="818" fg:w="11"/><text x="10.1007%" y="943.50"></text></g><g><title>mi_page_fresh (10 samples, 0.12%)</title><rect x="9.8627%" y="917" width="0.1204%" height="15" fill="rgb(238,52,6)" fg:x="819" fg:w="10"/><text x="10.1127%" y="927.50"></text></g><g><title>mi_page_fresh_alloc (10 samples, 0.12%)</title><rect x="9.8627%" y="901" width="0.1204%" height="15" fill="rgb(224,198,47)" fg:x="819" fg:w="10"/><text x="10.1127%" y="911.50"></text></g><g><title>mi_segments_page_alloc (3 samples, 0.04%)</title><rect x="9.9470%" y="885" width="0.0361%" height="15" fill="rgb(233,171,20)" fg:x="826" fg:w="3"/><text x="10.1970%" y="895.50"></text></g><g><title>mi_segments_page_find_and_allocate (3 samples, 0.04%)</title><rect x="9.9470%" y="869" width="0.0361%" height="15" fill="rgb(241,30,25)" fg:x="826" fg:w="3"/><text x="10.1970%" y="879.50"></text></g><g><title>mi_segment_span_allocate (1 samples, 0.01%)</title><rect x="9.9711%" y="853" width="0.0120%" height="15" fill="rgb(207,171,38)" fg:x="828" fg:w="1"/><text x="10.2211%" y="863.50"></text></g><g><title>mi_segment_ensure_committed (1 samples, 0.01%)</title><rect x="9.9711%" y="837" width="0.0120%" height="15" fill="rgb(234,70,1)" fg:x="828" fg:w="1"/><text x="10.2211%" y="847.50"></text></g><g><title>mi_segment_commitx (1 samples, 0.01%)</title><rect x="9.9711%" y="821" width="0.0120%" height="15" fill="rgb(232,178,18)" fg:x="828" fg:w="1"/><text x="10.2211%" y="831.50"></text></g><g><title>_mi_clock_now (1 samples, 0.01%)</title><rect x="9.9711%" y="805" width="0.0120%" height="15" fill="rgb(241,78,40)" fg:x="828" fg:w="1"/><text x="10.2211%" y="815.50"></text></g><g><title>__clock_gettime_2 (1 samples, 0.01%)</title><rect x="9.9711%" y="789" width="0.0120%" height="15" fill="rgb(222,35,25)" fg:x="828" fg:w="1"/><text x="10.2211%" y="799.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.01%)</title><rect x="9.9711%" y="773" width="0.0120%" height="15" fill="rgb(207,92,16)" fg:x="828" fg:w="1"/><text x="10.2211%" y="783.50"></text></g><g><title>[[vdso]] (1 samples, 0.01%)</title><rect x="9.9711%" y="757" width="0.0120%" height="15" fill="rgb(216,59,51)" fg:x="828" fg:w="1"/><text x="10.2211%" y="767.50"></text></g><g><title>_mi_page_retire (1 samples, 0.01%)</title><rect x="9.9952%" y="981" width="0.0120%" height="15" fill="rgb(213,80,28)" fg:x="830" fg:w="1"/><text x="10.2452%" y="991.50"></text></g><g><title>mi_page_extend_free (5 samples, 0.06%)</title><rect x="10.0072%" y="901" width="0.0602%" height="15" fill="rgb(220,93,7)" fg:x="831" fg:w="5"/><text x="10.2572%" y="911.50"></text></g><g><title>mi_page_free_list_extend_secure (5 samples, 0.06%)</title><rect x="10.0072%" y="885" width="0.0602%" height="15" fill="rgb(225,24,44)" fg:x="831" fg:w="5"/><text x="10.2572%" y="895.50"></text></g><g><title>mi_block_set_next (1 samples, 0.01%)</title><rect x="10.0554%" y="869" width="0.0120%" height="15" fill="rgb(243,74,40)" fg:x="835" fg:w="1"/><text x="10.3054%" y="879.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.01%)</title><rect x="10.0554%" y="853" width="0.0120%" height="15" fill="rgb(228,39,7)" fg:x="835" fg:w="1"/><text x="10.3054%" y="863.50"></text></g><g><title>mi_ptr_encode (1 samples, 0.01%)</title><rect x="10.0554%" y="837" width="0.0120%" height="15" fill="rgb(227,79,8)" fg:x="835" fg:w="1"/><text x="10.3054%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.0554%" y="821" width="0.0120%" height="15" fill="rgb(236,58,11)" fg:x="835" fg:w="1"/><text x="10.3054%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.0554%" y="805" width="0.0120%" height="15" fill="rgb(249,63,35)" fg:x="835" fg:w="1"/><text x="10.3054%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.0554%" y="789" width="0.0120%" height="15" fill="rgb(252,114,16)" fg:x="835" fg:w="1"/><text x="10.3054%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.0554%" y="773" width="0.0120%" height="15" fill="rgb(254,151,24)" fg:x="835" fg:w="1"/><text x="10.3054%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.0554%" y="757" width="0.0120%" height="15" fill="rgb(253,54,39)" fg:x="835" fg:w="1"/><text x="10.3054%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.0554%" y="741" width="0.0120%" height="15" fill="rgb(243,25,45)" fg:x="835" fg:w="1"/><text x="10.3054%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.0554%" y="725" width="0.0120%" height="15" fill="rgb(234,134,9)" fg:x="835" fg:w="1"/><text x="10.3054%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.0554%" y="709" width="0.0120%" height="15" fill="rgb(227,166,31)" fg:x="835" fg:w="1"/><text x="10.3054%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.0554%" y="693" width="0.0120%" height="15" fill="rgb(245,143,41)" fg:x="835" fg:w="1"/><text x="10.3054%" y="703.50"></text></g><g><title>_mi_heap_realloc_zero (7 samples, 0.08%)</title><rect x="9.9952%" y="997" width="0.0843%" height="15" fill="rgb(238,181,32)" fg:x="830" fg:w="7"/><text x="10.2452%" y="1007.50"></text></g><g><title>mi_heap_malloc (6 samples, 0.07%)</title><rect x="10.0072%" y="981" width="0.0723%" height="15" fill="rgb(224,113,18)" fg:x="831" fg:w="6"/><text x="10.2572%" y="991.50"></text></g><g><title>_mi_malloc_generic (6 samples, 0.07%)</title><rect x="10.0072%" y="965" width="0.0723%" height="15" fill="rgb(240,229,28)" fg:x="831" fg:w="6"/><text x="10.2572%" y="975.50"></text></g><g><title>mi_page_queue_find_free_ex (6 samples, 0.07%)</title><rect x="10.0072%" y="949" width="0.0723%" height="15" fill="rgb(250,185,3)" fg:x="831" fg:w="6"/><text x="10.2572%" y="959.50"></text></g><g><title>mi_page_fresh (6 samples, 0.07%)</title><rect x="10.0072%" y="933" width="0.0723%" height="15" fill="rgb(212,59,25)" fg:x="831" fg:w="6"/><text x="10.2572%" y="943.50"></text></g><g><title>mi_page_fresh_alloc (6 samples, 0.07%)</title><rect x="10.0072%" y="917" width="0.0723%" height="15" fill="rgb(221,87,20)" fg:x="831" fg:w="6"/><text x="10.2572%" y="927.50"></text></g><g><title>mi_segments_page_alloc (1 samples, 0.01%)</title><rect x="10.0674%" y="901" width="0.0120%" height="15" fill="rgb(213,74,28)" fg:x="836" fg:w="1"/><text x="10.3174%" y="911.50"></text></g><g><title>mi_segments_page_find_and_allocate (1 samples, 0.01%)</title><rect x="10.0674%" y="885" width="0.0120%" height="15" fill="rgb(224,132,34)" fg:x="836" fg:w="1"/><text x="10.3174%" y="895.50"></text></g><g><title>mi_segment_slice_split (1 samples, 0.01%)</title><rect x="10.0674%" y="869" width="0.0120%" height="15" fill="rgb(222,101,24)" fg:x="836" fg:w="1"/><text x="10.3174%" y="879.50"></text></g><g><title>mi_segment_span_free (1 samples, 0.01%)</title><rect x="10.0674%" y="853" width="0.0120%" height="15" fill="rgb(254,142,4)" fg:x="836" fg:w="1"/><text x="10.3174%" y="863.50"></text></g><g><title>mi_segment_perhaps_decommit (1 samples, 0.01%)</title><rect x="10.0674%" y="837" width="0.0120%" height="15" fill="rgb(230,229,49)" fg:x="836" fg:w="1"/><text x="10.3174%" y="847.50"></text></g><g><title>mi_segment_commit_mask (1 samples, 0.01%)</title><rect x="10.0674%" y="821" width="0.0120%" height="15" fill="rgb(238,70,47)" fg:x="836" fg:w="1"/><text x="10.3174%" y="831.50"></text></g><g><title>mi_segment_commit_mask (1 samples, 0.01%)</title><rect x="10.0674%" y="805" width="0.0120%" height="15" fill="rgb(231,160,17)" fg:x="836" fg:w="1"/><text x="10.3174%" y="815.50"></text></g><g><title>mi_commit_mask_create (1 samples, 0.01%)</title><rect x="10.0674%" y="789" width="0.0120%" height="15" fill="rgb(218,68,53)" fg:x="836" fg:w="1"/><text x="10.3174%" y="799.50"></text></g><g><title>mi_commit_mask_create (1 samples, 0.01%)</title><rect x="10.0674%" y="773" width="0.0120%" height="15" fill="rgb(236,111,10)" fg:x="836" fg:w="1"/><text x="10.3174%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8 samples, 0.10%)</title><rect x="9.9952%" y="1045" width="0.0963%" height="15" fill="rgb(224,34,41)" fg:x="830" fg:w="8"/><text x="10.2452%" y="1055.50"></text></g><g><title>alloc::alloc::Global::grow_impl (8 samples, 0.10%)</title><rect x="9.9952%" y="1029" width="0.0963%" height="15" fill="rgb(241,118,19)" fg:x="830" fg:w="8"/><text x="10.2452%" y="1039.50"></text></g><g><title>alloc::alloc::realloc (8 samples, 0.10%)</title><rect x="9.9952%" y="1013" width="0.0963%" height="15" fill="rgb(238,129,25)" fg:x="830" fg:w="8"/><text x="10.2452%" y="1023.50"></text></g><g><title>mi_realloc (1 samples, 0.01%)</title><rect x="10.0795%" y="997" width="0.0120%" height="15" fill="rgb(238,22,31)" fg:x="837" fg:w="1"/><text x="10.3295%" y="1007.50"></text></g><g><title>mi_find_page (1 samples, 0.01%)</title><rect x="10.0915%" y="1029" width="0.0120%" height="15" fill="rgb(222,174,48)" fg:x="838" fg:w="1"/><text x="10.3415%" y="1039.50"></text></g><g><title>mi_find_free_page (1 samples, 0.01%)</title><rect x="10.0915%" y="1013" width="0.0120%" height="15" fill="rgb(206,152,40)" fg:x="838" fg:w="1"/><text x="10.3415%" y="1023.50"></text></g><g><title>_mi_malloc_generic (11 samples, 0.13%)</title><rect x="10.0915%" y="1045" width="0.1325%" height="15" fill="rgb(218,99,54)" fg:x="838" fg:w="11"/><text x="10.3415%" y="1055.50"></text></g><g><title>mi_page_queue_find_free_ex (10 samples, 0.12%)</title><rect x="10.1036%" y="1029" width="0.1204%" height="15" fill="rgb(220,174,26)" fg:x="839" fg:w="10"/><text x="10.3536%" y="1039.50"></text></g><g><title>mi_page_fresh (10 samples, 0.12%)</title><rect x="10.1036%" y="1013" width="0.1204%" height="15" fill="rgb(245,116,9)" fg:x="839" fg:w="10"/><text x="10.3536%" y="1023.50"></text></g><g><title>mi_page_fresh_alloc (10 samples, 0.12%)</title><rect x="10.1036%" y="997" width="0.1204%" height="15" fill="rgb(209,72,35)" fg:x="839" fg:w="10"/><text x="10.3536%" y="1007.50"></text></g><g><title>mi_page_extend_free (10 samples, 0.12%)</title><rect x="10.1036%" y="981" width="0.1204%" height="15" fill="rgb(226,126,21)" fg:x="839" fg:w="10"/><text x="10.3536%" y="991.50"></text></g><g><title>mi_page_free_list_extend_secure (10 samples, 0.12%)</title><rect x="10.1036%" y="965" width="0.1204%" height="15" fill="rgb(227,192,1)" fg:x="839" fg:w="10"/><text x="10.3536%" y="975.50"></text></g><g><title>mi_block_set_next (4 samples, 0.05%)</title><rect x="10.1758%" y="949" width="0.0482%" height="15" fill="rgb(237,180,29)" fg:x="845" fg:w="4"/><text x="10.4258%" y="959.50"></text></g><g><title>mi_block_set_nextx (4 samples, 0.05%)</title><rect x="10.1758%" y="933" width="0.0482%" height="15" fill="rgb(230,197,35)" fg:x="845" fg:w="4"/><text x="10.4258%" y="943.50"></text></g><g><title>mi_ptr_encode (4 samples, 0.05%)</title><rect x="10.1758%" y="917" width="0.0482%" height="15" fill="rgb(246,193,31)" fg:x="845" fg:w="4"/><text x="10.4258%" y="927.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="10.1999%" y="901" width="0.0241%" height="15" fill="rgb(241,36,4)" fg:x="847" fg:w="2"/><text x="10.4499%" y="911.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="10.1999%" y="885" width="0.0241%" height="15" fill="rgb(241,130,17)" fg:x="847" fg:w="2"/><text x="10.4499%" y="895.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="10.1999%" y="869" width="0.0241%" height="15" fill="rgb(206,137,32)" fg:x="847" fg:w="2"/><text x="10.4499%" y="879.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="10.1999%" y="853" width="0.0241%" height="15" fill="rgb(237,228,51)" fg:x="847" fg:w="2"/><text x="10.4499%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="10.1999%" y="837" width="0.0241%" height="15" fill="rgb(243,6,42)" fg:x="847" fg:w="2"/><text x="10.4499%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.2119%" y="821" width="0.0120%" height="15" fill="rgb(251,74,28)" fg:x="848" fg:w="1"/><text x="10.4619%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.2119%" y="805" width="0.0120%" height="15" fill="rgb(218,20,49)" fg:x="848" fg:w="1"/><text x="10.4619%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.2119%" y="789" width="0.0120%" height="15" fill="rgb(238,28,14)" fg:x="848" fg:w="1"/><text x="10.4619%" y="799.50"></text></g><g><title>&lt;dynasmrt::VecAssembler&lt;R&gt; as dynasmrt::DynasmApi&gt;::push (20 samples, 0.24%)</title><rect x="9.9952%" y="1125" width="0.2408%" height="15" fill="rgb(229,40,46)" fg:x="830" fg:w="20"/><text x="10.2452%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (20 samples, 0.24%)</title><rect x="9.9952%" y="1109" width="0.2408%" height="15" fill="rgb(244,195,20)" fg:x="830" fg:w="20"/><text x="10.2452%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (20 samples, 0.24%)</title><rect x="9.9952%" y="1093" width="0.2408%" height="15" fill="rgb(253,56,35)" fg:x="830" fg:w="20"/><text x="10.2452%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (20 samples, 0.24%)</title><rect x="9.9952%" y="1077" width="0.2408%" height="15" fill="rgb(210,149,44)" fg:x="830" fg:w="20"/><text x="10.2452%" y="1087.50"></text></g><g><title>alloc::raw_vec::finish_grow (20 samples, 0.24%)</title><rect x="9.9952%" y="1061" width="0.2408%" height="15" fill="rgb(240,135,12)" fg:x="830" fg:w="20"/><text x="10.2452%" y="1071.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.01%)</title><rect x="10.2240%" y="1045" width="0.0120%" height="15" fill="rgb(251,24,50)" fg:x="849" fg:w="1"/><text x="10.4740%" y="1055.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::AssemblerX64 as wasmer_compiler_singlepass::emitter_x64::EmitterX64&gt;::emit_mov (22 samples, 0.26%)</title><rect x="9.9831%" y="1141" width="0.2649%" height="15" fill="rgb(243,200,47)" fg:x="829" fg:w="22"/><text x="10.2331%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.2360%" y="1125" width="0.0120%" height="15" fill="rgb(224,166,26)" fg:x="850" fg:w="1"/><text x="10.4860%" y="1135.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::MachineX86_64 as wasmer_compiler_singlepass::machine::Machine&gt;::gen_import_call_trampoline (34 samples, 0.41%)</title><rect x="9.8507%" y="1157" width="0.4094%" height="15" fill="rgb(233,0,47)" fg:x="818" fg:w="34"/><text x="10.1007%" y="1167.50"></text></g><g><title>wasmer_compiler_singlepass::machine_x64::AssemblerX64::finalize (1 samples, 0.01%)</title><rect x="10.2481%" y="1141" width="0.0120%" height="15" fill="rgb(253,80,5)" fg:x="851" fg:w="1"/><text x="10.4981%" y="1151.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="10.2481%" y="1125" width="0.0120%" height="15" fill="rgb(214,133,25)" fg:x="851" fg:w="1"/><text x="10.4981%" y="1135.50"></text></g><g><title>wasmer_compiler_singlepass::machine::gen_import_call_trampoline (35 samples, 0.42%)</title><rect x="9.8507%" y="1173" width="0.4215%" height="15" fill="rgb(209,27,14)" fg:x="818" fg:w="35"/><text x="10.1007%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_compiler_singlepass::machine_x64::MachineX86_64&gt; (1 samples, 0.01%)</title><rect x="10.2601%" y="1157" width="0.0120%" height="15" fill="rgb(219,102,51)" fg:x="852" fg:w="1"/><text x="10.5101%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_compiler_singlepass::machine::TrapTable&gt; (1 samples, 0.01%)</title><rect x="10.2601%" y="1141" width="0.0120%" height="15" fill="rgb(237,18,16)" fg:x="852" fg:w="1"/><text x="10.5101%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;usize,wasmer_types::trapcode::TrapCode&gt;&gt; (1 samples, 0.01%)</title><rect x="10.2601%" y="1125" width="0.0120%" height="15" fill="rgb(241,85,17)" fg:x="852" fg:w="1"/><text x="10.5101%" y="1135.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="10.2601%" y="1109" width="0.0120%" height="15" fill="rgb(236,90,42)" fg:x="852" fg:w="1"/><text x="10.5101%" y="1119.50"></text></g><g><title>core::mem::drop (1 samples, 0.01%)</title><rect x="10.2601%" y="1093" width="0.0120%" height="15" fill="rgb(249,57,21)" fg:x="852" fg:w="1"/><text x="10.5101%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;usize,wasmer_types::trapcode::TrapCode&gt;&gt; (1 samples, 0.01%)</title><rect x="10.2601%" y="1077" width="0.0120%" height="15" fill="rgb(243,12,36)" fg:x="852" fg:w="1"/><text x="10.5101%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="10.2601%" y="1061" width="0.0120%" height="15" fill="rgb(253,128,47)" fg:x="852" fg:w="1"/><text x="10.5101%" y="1071.50"></text></g><g><title>wasmer_compiler_singlepass::machine::gen_std_dynamic_import_trampoline (1 samples, 0.01%)</title><rect x="10.2722%" y="1173" width="0.0120%" height="15" fill="rgb(207,33,20)" fg:x="853" fg:w="1"/><text x="10.5222%" y="1183.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::MachineX86_64 as wasmer_compiler_singlepass::machine::Machine&gt;::gen_std_dynamic_import_trampoline (1 samples, 0.01%)</title><rect x="10.2722%" y="1157" width="0.0120%" height="15" fill="rgb(233,215,35)" fg:x="853" fg:w="1"/><text x="10.5222%" y="1167.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::AssemblerX64 as wasmer_compiler_singlepass::emitter_x64::EmitterX64&gt;::emit_mov (1 samples, 0.01%)</title><rect x="10.2722%" y="1141" width="0.0120%" height="15" fill="rgb(249,188,52)" fg:x="853" fg:w="1"/><text x="10.5222%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="10.2722%" y="1125" width="0.0120%" height="15" fill="rgb(225,12,32)" fg:x="853" fg:w="1"/><text x="10.5222%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="10.2722%" y="1109" width="0.0120%" height="15" fill="rgb(247,98,14)" fg:x="853" fg:w="1"/><text x="10.5222%" y="1119.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="10.2722%" y="1093" width="0.0120%" height="15" fill="rgb(247,219,48)" fg:x="853" fg:w="1"/><text x="10.5222%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="10.2722%" y="1077" width="0.0120%" height="15" fill="rgb(253,60,48)" fg:x="853" fg:w="1"/><text x="10.5222%" y="1087.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="10.2722%" y="1061" width="0.0120%" height="15" fill="rgb(245,15,52)" fg:x="853" fg:w="1"/><text x="10.5222%" y="1071.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="10.2722%" y="1045" width="0.0120%" height="15" fill="rgb(220,133,28)" fg:x="853" fg:w="1"/><text x="10.5222%" y="1055.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.01%)</title><rect x="10.2722%" y="1029" width="0.0120%" height="15" fill="rgb(217,180,4)" fg:x="853" fg:w="1"/><text x="10.5222%" y="1039.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.01%)</title><rect x="10.2722%" y="1013" width="0.0120%" height="15" fill="rgb(251,24,1)" fg:x="853" fg:w="1"/><text x="10.5222%" y="1023.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.01%)</title><rect x="10.2722%" y="997" width="0.0120%" height="15" fill="rgb(212,185,49)" fg:x="853" fg:w="1"/><text x="10.5222%" y="1007.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.01%)</title><rect x="10.2722%" y="981" width="0.0120%" height="15" fill="rgb(215,175,22)" fg:x="853" fg:w="1"/><text x="10.5222%" y="991.50"></text></g><g><title>mi_page_fresh (1 samples, 0.01%)</title><rect x="10.2722%" y="965" width="0.0120%" height="15" fill="rgb(250,205,14)" fg:x="853" fg:w="1"/><text x="10.5222%" y="975.50"></text></g><g><title>mi_page_fresh_alloc (1 samples, 0.01%)</title><rect x="10.2722%" y="949" width="0.0120%" height="15" fill="rgb(225,211,22)" fg:x="853" fg:w="1"/><text x="10.5222%" y="959.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.01%)</title><rect x="10.2722%" y="933" width="0.0120%" height="15" fill="rgb(251,179,42)" fg:x="853" fg:w="1"/><text x="10.5222%" y="943.50"></text></g><g><title>mi_page_free_list_extend_secure (1 samples, 0.01%)</title><rect x="10.2722%" y="917" width="0.0120%" height="15" fill="rgb(208,216,51)" fg:x="853" fg:w="1"/><text x="10.5222%" y="927.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (57 samples, 0.69%)</title><rect x="9.6098%" y="1301" width="0.6864%" height="15" fill="rgb(235,36,11)" fg:x="798" fg:w="57"/><text x="9.8598%" y="1311.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (57 samples, 0.69%)</title><rect x="9.6098%" y="1285" width="0.6864%" height="15" fill="rgb(213,189,28)" fg:x="798" fg:w="57"/><text x="9.8598%" y="1295.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (37 samples, 0.45%)</title><rect x="9.8507%" y="1269" width="0.4456%" height="15" fill="rgb(227,203,42)" fg:x="818" fg:w="37"/><text x="10.1007%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.45%)</title><rect x="9.8507%" y="1253" width="0.4456%" height="15" fill="rgb(244,72,36)" fg:x="818" fg:w="37"/><text x="10.1007%" y="1263.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (37 samples, 0.45%)</title><rect x="9.8507%" y="1237" width="0.4456%" height="15" fill="rgb(213,53,17)" fg:x="818" fg:w="37"/><text x="10.1007%" y="1247.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (37 samples, 0.45%)</title><rect x="9.8507%" y="1221" width="0.4456%" height="15" fill="rgb(207,167,3)" fg:x="818" fg:w="37"/><text x="10.1007%" y="1231.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (37 samples, 0.45%)</title><rect x="9.8507%" y="1205" width="0.4456%" height="15" fill="rgb(216,98,30)" fg:x="818" fg:w="37"/><text x="10.1007%" y="1215.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::compiler::SinglepassCompiler as wasmer_compiler::compiler::Compiler&gt;::compile_module::{{closure}} (37 samples, 0.45%)</title><rect x="9.8507%" y="1189" width="0.4456%" height="15" fill="rgb(236,123,15)" fg:x="818" fg:w="37"/><text x="10.1007%" y="1199.50"></text></g><g><title>wasmer_compiler_singlepass::machine::gen_std_trampoline (1 samples, 0.01%)</title><rect x="10.2842%" y="1173" width="0.0120%" height="15" fill="rgb(248,81,50)" fg:x="854" fg:w="1"/><text x="10.5342%" y="1183.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::MachineX86_64 as wasmer_compiler_singlepass::machine::Machine&gt;::gen_std_trampoline (1 samples, 0.01%)</title><rect x="10.2842%" y="1157" width="0.0120%" height="15" fill="rgb(214,120,4)" fg:x="854" fg:w="1"/><text x="10.5342%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.01%)</title><rect x="10.2842%" y="1141" width="0.0120%" height="15" fill="rgb(208,179,34)" fg:x="854" fg:w="1"/><text x="10.5342%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="10.2842%" y="1125" width="0.0120%" height="15" fill="rgb(227,140,7)" fg:x="854" fg:w="1"/><text x="10.5342%" y="1135.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="10.2842%" y="1109" width="0.0120%" height="15" fill="rgb(214,22,6)" fg:x="854" fg:w="1"/><text x="10.5342%" y="1119.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="10.2842%" y="1093" width="0.0120%" height="15" fill="rgb(207,137,27)" fg:x="854" fg:w="1"/><text x="10.5342%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="10.2842%" y="1077" width="0.0120%" height="15" fill="rgb(210,8,46)" fg:x="854" fg:w="1"/><text x="10.5342%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="10.2842%" y="1061" width="0.0120%" height="15" fill="rgb(240,16,54)" fg:x="854" fg:w="1"/><text x="10.5342%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="10.2842%" y="1045" width="0.0120%" height="15" fill="rgb(211,209,29)" fg:x="854" fg:w="1"/><text x="10.5342%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="10.2842%" y="1029" width="0.0120%" height="15" fill="rgb(226,228,24)" fg:x="854" fg:w="1"/><text x="10.5342%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="10.2842%" y="1013" width="0.0120%" height="15" fill="rgb(222,84,9)" fg:x="854" fg:w="1"/><text x="10.5342%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="10.2842%" y="997" width="0.0120%" height="15" fill="rgb(234,203,30)" fg:x="854" fg:w="1"/><text x="10.5342%" y="1007.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.01%)</title><rect x="10.2842%" y="981" width="0.0120%" height="15" fill="rgb(238,109,14)" fg:x="854" fg:w="1"/><text x="10.5342%" y="991.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.01%)</title><rect x="10.2842%" y="965" width="0.0120%" height="15" fill="rgb(233,206,34)" fg:x="854" fg:w="1"/><text x="10.5342%" y="975.50"></text></g><g><title>mi_page_fresh (1 samples, 0.01%)</title><rect x="10.2842%" y="949" width="0.0120%" height="15" fill="rgb(220,167,47)" fg:x="854" fg:w="1"/><text x="10.5342%" y="959.50"></text></g><g><title>mi_page_fresh_alloc (1 samples, 0.01%)</title><rect x="10.2842%" y="933" width="0.0120%" height="15" fill="rgb(238,105,10)" fg:x="854" fg:w="1"/><text x="10.5342%" y="943.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.01%)</title><rect x="10.2842%" y="917" width="0.0120%" height="15" fill="rgb(213,227,17)" fg:x="854" fg:w="1"/><text x="10.5342%" y="927.50"></text></g><g><title>mi_page_free_list_extend_secure (1 samples, 0.01%)</title><rect x="10.2842%" y="901" width="0.0120%" height="15" fill="rgb(217,132,38)" fg:x="854" fg:w="1"/><text x="10.5342%" y="911.50"></text></g><g><title>rayon_core::registry::WorkerThread::push (1 samples, 0.01%)</title><rect x="10.3083%" y="1253" width="0.0120%" height="15" fill="rgb(242,146,4)" fg:x="856" fg:w="1"/><text x="10.5583%" y="1263.50"></text></g><g><title>rayon_core::sleep::Sleep::new_internal_jobs (1 samples, 0.01%)</title><rect x="10.3083%" y="1237" width="0.0120%" height="15" fill="rgb(212,61,9)" fg:x="856" fg:w="1"/><text x="10.5583%" y="1247.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.01%)</title><rect x="10.3083%" y="1221" width="0.0120%" height="15" fill="rgb(247,126,22)" fg:x="856" fg:w="1"/><text x="10.5583%" y="1231.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_any_threads (1 samples, 0.01%)</title><rect x="10.3083%" y="1205" width="0.0120%" height="15" fill="rgb(220,196,2)" fg:x="856" fg:w="1"/><text x="10.5583%" y="1215.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_specific_thread (1 samples, 0.01%)</title><rect x="10.3083%" y="1189" width="0.0120%" height="15" fill="rgb(208,46,4)" fg:x="856" fg:w="1"/><text x="10.5583%" y="1199.50"></text></g><g><title>&lt;crossbeam_utils::cache_padded::CachePadded&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="10.3083%" y="1173" width="0.0120%" height="15" fill="rgb(252,104,46)" fg:x="856" fg:w="1"/><text x="10.5583%" y="1183.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.01%)</title><rect x="10.3203%" y="1253" width="0.0120%" height="15" fill="rgb(237,152,48)" fg:x="857" fg:w="1"/><text x="10.5703%" y="1263.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.01%)</title><rect x="10.3203%" y="1237" width="0.0120%" height="15" fill="rgb(221,59,37)" fg:x="857" fg:w="1"/><text x="10.5703%" y="1247.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 0.01%)</title><rect x="10.3203%" y="1221" width="0.0120%" height="15" fill="rgb(209,202,51)" fg:x="857" fg:w="1"/><text x="10.5703%" y="1231.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold::{{closure}} (1 samples, 0.01%)</title><rect x="10.3203%" y="1205" width="0.0120%" height="15" fill="rgb(228,81,30)" fg:x="857" fg:w="1"/><text x="10.5703%" y="1215.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal (1 samples, 0.01%)</title><rect x="10.3203%" y="1189" width="0.0120%" height="15" fill="rgb(227,42,39)" fg:x="857" fg:w="1"/><text x="10.5703%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1 samples, 0.01%)</title><rect x="10.3203%" y="1173" width="0.0120%" height="15" fill="rgb(221,26,2)" fg:x="857" fg:w="1"/><text x="10.5703%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.01%)</title><rect x="10.3203%" y="1157" width="0.0120%" height="15" fill="rgb(254,61,31)" fg:x="857" fg:w="1"/><text x="10.5703%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.01%)</title><rect x="10.3203%" y="1141" width="0.0120%" height="15" fill="rgb(222,173,38)" fg:x="857" fg:w="1"/><text x="10.5703%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="10.3203%" y="1125" width="0.0120%" height="15" fill="rgb(218,50,12)" fg:x="857" fg:w="1"/><text x="10.5703%" y="1135.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.01%)</title><rect x="10.3203%" y="1109" width="0.0120%" height="15" fill="rgb(223,88,40)" fg:x="857" fg:w="1"/><text x="10.5703%" y="1119.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1 samples, 0.01%)</title><rect x="10.3203%" y="1093" width="0.0120%" height="15" fill="rgb(237,54,19)" fg:x="857" fg:w="1"/><text x="10.5703%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (1 samples, 0.01%)</title><rect x="10.3203%" y="1077" width="0.0120%" height="15" fill="rgb(251,129,25)" fg:x="857" fg:w="1"/><text x="10.5703%" y="1087.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (1 samples, 0.01%)</title><rect x="10.3203%" y="1061" width="0.0120%" height="15" fill="rgb(238,97,19)" fg:x="857" fg:w="1"/><text x="10.5703%" y="1071.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (1 samples, 0.01%)</title><rect x="10.3203%" y="1045" width="0.0120%" height="15" fill="rgb(240,169,18)" fg:x="857" fg:w="1"/><text x="10.5703%" y="1055.50"></text></g><g><title>&lt;wasmer_compiler::translator::middleware::MiddlewareBinaryReader as wasmer_compiler::translator::environ::FunctionBinaryReader&gt;::read_local_count (1 samples, 0.01%)</title><rect x="10.3444%" y="869" width="0.0120%" height="15" fill="rgb(230,187,49)" fg:x="859" fg:w="1"/><text x="10.5944%" y="879.50"></text></g><g><title>wasmparser::binary_reader::BinaryReader::read_var_u32 (1 samples, 0.01%)</title><rect x="10.3444%" y="853" width="0.0120%" height="15" fill="rgb(209,44,26)" fg:x="859" fg:w="1"/><text x="10.5944%" y="863.50"></text></g><g><title>mi_page_extend_free (6 samples, 0.07%)</title><rect x="10.3565%" y="661" width="0.0723%" height="15" fill="rgb(244,0,6)" fg:x="860" fg:w="6"/><text x="10.6065%" y="671.50"></text></g><g><title>mi_page_free_list_extend_secure (6 samples, 0.07%)</title><rect x="10.3565%" y="645" width="0.0723%" height="15" fill="rgb(248,18,21)" fg:x="860" fg:w="6"/><text x="10.6065%" y="655.50"></text></g><g><title>mi_block_set_next (6 samples, 0.07%)</title><rect x="10.3565%" y="629" width="0.0723%" height="15" fill="rgb(245,180,19)" fg:x="860" fg:w="6"/><text x="10.6065%" y="639.50"></text></g><g><title>mi_block_set_nextx (6 samples, 0.07%)</title><rect x="10.3565%" y="613" width="0.0723%" height="15" fill="rgb(252,118,36)" fg:x="860" fg:w="6"/><text x="10.6065%" y="623.50"></text></g><g><title>mi_ptr_encode (6 samples, 0.07%)</title><rect x="10.3565%" y="597" width="0.0723%" height="15" fill="rgb(210,224,19)" fg:x="860" fg:w="6"/><text x="10.6065%" y="607.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="10.3565%" y="581" width="0.0723%" height="15" fill="rgb(218,30,24)" fg:x="860" fg:w="6"/><text x="10.6065%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="10.3685%" y="565" width="0.0602%" height="15" fill="rgb(219,75,50)" fg:x="861" fg:w="5"/><text x="10.6185%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="10.3685%" y="549" width="0.0602%" height="15" fill="rgb(234,72,50)" fg:x="861" fg:w="5"/><text x="10.6185%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="10.3685%" y="533" width="0.0602%" height="15" fill="rgb(219,100,48)" fg:x="861" fg:w="5"/><text x="10.6185%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="10.4046%" y="517" width="0.0241%" height="15" fill="rgb(253,5,41)" fg:x="864" fg:w="2"/><text x="10.6546%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="10.4046%" y="501" width="0.0241%" height="15" fill="rgb(247,181,11)" fg:x="864" fg:w="2"/><text x="10.6546%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="10.4046%" y="485" width="0.0241%" height="15" fill="rgb(222,223,25)" fg:x="864" fg:w="2"/><text x="10.6546%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="10.4046%" y="469" width="0.0241%" height="15" fill="rgb(214,198,28)" fg:x="864" fg:w="2"/><text x="10.6546%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="10.4046%" y="453" width="0.0241%" height="15" fill="rgb(230,46,43)" fg:x="864" fg:w="2"/><text x="10.6546%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="10.4046%" y="437" width="0.0241%" height="15" fill="rgb(233,65,53)" fg:x="864" fg:w="2"/><text x="10.6546%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.4167%" y="421" width="0.0120%" height="15" fill="rgb(221,121,27)" fg:x="865" fg:w="1"/><text x="10.6667%" y="431.50"></text></g><g><title>wasmer_compiler::translator::middleware::MiddlewareBinaryReader::new_with_offset (7 samples, 0.08%)</title><rect x="10.3565%" y="869" width="0.0843%" height="15" fill="rgb(247,70,47)" fg:x="860" fg:w="7"/><text x="10.6065%" y="879.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::new (7 samples, 0.08%)</title><rect x="10.3565%" y="853" width="0.0843%" height="15" fill="rgb(228,85,35)" fg:x="860" fg:w="7"/><text x="10.6065%" y="863.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::new_in (7 samples, 0.08%)</title><rect x="10.3565%" y="837" width="0.0843%" height="15" fill="rgb(209,50,18)" fg:x="860" fg:w="7"/><text x="10.6065%" y="847.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::with_capacity_in (7 samples, 0.08%)</title><rect x="10.3565%" y="821" width="0.0843%" height="15" fill="rgb(250,19,35)" fg:x="860" fg:w="7"/><text x="10.6065%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.08%)</title><rect x="10.3565%" y="805" width="0.0843%" height="15" fill="rgb(253,107,29)" fg:x="860" fg:w="7"/><text x="10.6065%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.08%)</title><rect x="10.3565%" y="789" width="0.0843%" height="15" fill="rgb(252,179,29)" fg:x="860" fg:w="7"/><text x="10.6065%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.08%)</title><rect x="10.3565%" y="773" width="0.0843%" height="15" fill="rgb(238,194,6)" fg:x="860" fg:w="7"/><text x="10.6065%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.08%)</title><rect x="10.3565%" y="757" width="0.0843%" height="15" fill="rgb(238,164,29)" fg:x="860" fg:w="7"/><text x="10.6065%" y="767.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.08%)</title><rect x="10.3565%" y="741" width="0.0843%" height="15" fill="rgb(224,25,9)" fg:x="860" fg:w="7"/><text x="10.6065%" y="751.50"></text></g><g><title>_mi_malloc_generic (7 samples, 0.08%)</title><rect x="10.3565%" y="725" width="0.0843%" height="15" fill="rgb(244,153,23)" fg:x="860" fg:w="7"/><text x="10.6065%" y="735.50"></text></g><g><title>mi_page_queue_find_free_ex (7 samples, 0.08%)</title><rect x="10.3565%" y="709" width="0.0843%" height="15" fill="rgb(212,203,14)" fg:x="860" fg:w="7"/><text x="10.6065%" y="719.50"></text></g><g><title>mi_page_fresh (7 samples, 0.08%)</title><rect x="10.3565%" y="693" width="0.0843%" height="15" fill="rgb(220,164,20)" fg:x="860" fg:w="7"/><text x="10.6065%" y="703.50"></text></g><g><title>mi_page_fresh_alloc (7 samples, 0.08%)</title><rect x="10.3565%" y="677" width="0.0843%" height="15" fill="rgb(222,203,48)" fg:x="860" fg:w="7"/><text x="10.6065%" y="687.50"></text></g><g><title>mi_page_queue_push (1 samples, 0.01%)</title><rect x="10.4287%" y="661" width="0.0120%" height="15" fill="rgb(215,159,22)" fg:x="866" fg:w="1"/><text x="10.6787%" y="671.50"></text></g><g><title>mi_page_set_in_full (1 samples, 0.01%)</title><rect x="10.4287%" y="645" width="0.0120%" height="15" fill="rgb(216,183,47)" fg:x="866" fg:w="1"/><text x="10.6787%" y="655.50"></text></g><g><title>wasmer_compiler_singlepass::codegen::FuncGen&lt;M&gt;::mark_trappable (1 samples, 0.01%)</title><rect x="10.4408%" y="853" width="0.0120%" height="15" fill="rgb(229,195,25)" fg:x="867" fg:w="1"/><text x="10.6908%" y="863.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.01%)</title><rect x="10.4408%" y="837" width="0.0120%" height="15" fill="rgb(224,132,51)" fg:x="867" fg:w="1"/><text x="10.6908%" y="847.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.01%)</title><rect x="10.4408%" y="821" width="0.0120%" height="15" fill="rgb(240,63,7)" fg:x="867" fg:w="1"/><text x="10.6908%" y="831.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (1 samples, 0.01%)</title><rect x="10.4408%" y="805" width="0.0120%" height="15" fill="rgb(249,182,41)" fg:x="867" fg:w="1"/><text x="10.6908%" y="815.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (1 samples, 0.01%)</title><rect x="10.4408%" y="789" width="0.0120%" height="15" fill="rgb(243,47,26)" fg:x="867" fg:w="1"/><text x="10.6908%" y="799.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1 samples, 0.01%)</title><rect x="10.4408%" y="773" width="0.0120%" height="15" fill="rgb(233,48,2)" fg:x="867" fg:w="1"/><text x="10.6908%" y="783.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1 samples, 0.01%)</title><rect x="10.4408%" y="757" width="0.0120%" height="15" fill="rgb(244,165,34)" fg:x="867" fg:w="1"/><text x="10.6908%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="10.4408%" y="741" width="0.0120%" height="15" fill="rgb(207,89,7)" fg:x="867" fg:w="1"/><text x="10.6908%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="10.4408%" y="725" width="0.0120%" height="15" fill="rgb(244,117,36)" fg:x="867" fg:w="1"/><text x="10.6908%" y="735.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="10.4408%" y="709" width="0.0120%" height="15" fill="rgb(226,144,34)" fg:x="867" fg:w="1"/><text x="10.6908%" y="719.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.01%)</title><rect x="10.4408%" y="693" width="0.0120%" height="15" fill="rgb(213,23,19)" fg:x="867" fg:w="1"/><text x="10.6908%" y="703.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.01%)</title><rect x="10.4408%" y="677" width="0.0120%" height="15" fill="rgb(217,75,12)" fg:x="867" fg:w="1"/><text x="10.6908%" y="687.50"></text></g><g><title>mi_page_fresh (1 samples, 0.01%)</title><rect x="10.4408%" y="661" width="0.0120%" height="15" fill="rgb(224,159,17)" fg:x="867" fg:w="1"/><text x="10.6908%" y="671.50"></text></g><g><title>mi_page_fresh_alloc (1 samples, 0.01%)</title><rect x="10.4408%" y="645" width="0.0120%" height="15" fill="rgb(217,118,1)" fg:x="867" fg:w="1"/><text x="10.6908%" y="655.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.01%)</title><rect x="10.4408%" y="629" width="0.0120%" height="15" fill="rgb(232,180,48)" fg:x="867" fg:w="1"/><text x="10.6908%" y="639.50"></text></g><g><title>mi_page_free_list_extend_secure (1 samples, 0.01%)</title><rect x="10.4408%" y="613" width="0.0120%" height="15" fill="rgb(230,27,33)" fg:x="867" fg:w="1"/><text x="10.6908%" y="623.50"></text></g><g><title>mi_block_set_next (1 samples, 0.01%)</title><rect x="10.4408%" y="597" width="0.0120%" height="15" fill="rgb(205,31,21)" fg:x="867" fg:w="1"/><text x="10.6908%" y="607.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.01%)</title><rect x="10.4408%" y="581" width="0.0120%" height="15" fill="rgb(253,59,4)" fg:x="867" fg:w="1"/><text x="10.6908%" y="591.50"></text></g><g><title>mi_ptr_encode (1 samples, 0.01%)</title><rect x="10.4408%" y="565" width="0.0120%" height="15" fill="rgb(224,201,9)" fg:x="867" fg:w="1"/><text x="10.6908%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.4408%" y="549" width="0.0120%" height="15" fill="rgb(229,206,30)" fg:x="867" fg:w="1"/><text x="10.6908%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.4408%" y="533" width="0.0120%" height="15" fill="rgb(212,67,47)" fg:x="867" fg:w="1"/><text x="10.6908%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.4408%" y="517" width="0.0120%" height="15" fill="rgb(211,96,50)" fg:x="867" fg:w="1"/><text x="10.6908%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.4408%" y="501" width="0.0120%" height="15" fill="rgb(252,114,18)" fg:x="867" fg:w="1"/><text x="10.6908%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.4408%" y="485" width="0.0120%" height="15" fill="rgb(223,58,37)" fg:x="867" fg:w="1"/><text x="10.6908%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.4408%" y="469" width="0.0120%" height="15" fill="rgb(237,70,4)" fg:x="867" fg:w="1"/><text x="10.6908%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.4408%" y="453" width="0.0120%" height="15" fill="rgb(244,85,46)" fg:x="867" fg:w="1"/><text x="10.6908%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.4408%" y="437" width="0.0120%" height="15" fill="rgb(223,39,52)" fg:x="867" fg:w="1"/><text x="10.6908%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.4408%" y="421" width="0.0120%" height="15" fill="rgb(218,200,14)" fg:x="867" fg:w="1"/><text x="10.6908%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.4408%" y="405" width="0.0120%" height="15" fill="rgb(208,171,16)" fg:x="867" fg:w="1"/><text x="10.6908%" y="415.50"></text></g><g><title>wasmer_compiler_singlepass::codegen::FuncGen&lt;M&gt;::feed_operator (2 samples, 0.02%)</title><rect x="10.4408%" y="869" width="0.0241%" height="15" fill="rgb(234,200,18)" fg:x="867" fg:w="2"/><text x="10.6908%" y="879.50"></text></g><g><title>wasmer_compiler_singlepass::machine_x64::MachineX86_64::emit_relaxed_binop (1 samples, 0.01%)</title><rect x="10.4528%" y="853" width="0.0120%" height="15" fill="rgb(228,45,11)" fg:x="868" fg:w="1"/><text x="10.7028%" y="863.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::AssemblerX64 as wasmer_compiler_singlepass::emitter_x64::EmitterX64&gt;::emit_mov (1 samples, 0.01%)</title><rect x="10.4528%" y="837" width="0.0120%" height="15" fill="rgb(237,182,11)" fg:x="868" fg:w="1"/><text x="10.7028%" y="847.50"></text></g><g><title>&lt;dynasmrt::VecAssembler&lt;R&gt; as core::iter::traits::collect::Extend&lt;&amp;u8&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="10.4528%" y="821" width="0.0120%" height="15" fill="rgb(241,175,49)" fg:x="868" fg:w="1"/><text x="10.7028%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="10.4528%" y="805" width="0.0120%" height="15" fill="rgb(247,38,35)" fg:x="868" fg:w="1"/><text x="10.7028%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="10.4528%" y="789" width="0.0120%" height="15" fill="rgb(228,39,49)" fg:x="868" fg:w="1"/><text x="10.7028%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="10.4528%" y="773" width="0.0120%" height="15" fill="rgb(226,101,26)" fg:x="868" fg:w="1"/><text x="10.7028%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="10.4528%" y="757" width="0.0120%" height="15" fill="rgb(206,141,19)" fg:x="868" fg:w="1"/><text x="10.7028%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="10.4528%" y="741" width="0.0120%" height="15" fill="rgb(211,200,13)" fg:x="868" fg:w="1"/><text x="10.7028%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="10.4528%" y="725" width="0.0120%" height="15" fill="rgb(241,121,6)" fg:x="868" fg:w="1"/><text x="10.7028%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="10.4528%" y="709" width="0.0120%" height="15" fill="rgb(234,221,29)" fg:x="868" fg:w="1"/><text x="10.7028%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="10.4528%" y="693" width="0.0120%" height="15" fill="rgb(229,136,5)" fg:x="868" fg:w="1"/><text x="10.7028%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="10.4528%" y="677" width="0.0120%" height="15" fill="rgb(238,36,11)" fg:x="868" fg:w="1"/><text x="10.7028%" y="687.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="10.4528%" y="661" width="0.0120%" height="15" fill="rgb(251,55,41)" fg:x="868" fg:w="1"/><text x="10.7028%" y="671.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="10.4528%" y="645" width="0.0120%" height="15" fill="rgb(242,34,40)" fg:x="868" fg:w="1"/><text x="10.7028%" y="655.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.01%)</title><rect x="10.4528%" y="629" width="0.0120%" height="15" fill="rgb(215,42,17)" fg:x="868" fg:w="1"/><text x="10.7028%" y="639.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.01%)</title><rect x="10.4528%" y="613" width="0.0120%" height="15" fill="rgb(207,44,46)" fg:x="868" fg:w="1"/><text x="10.7028%" y="623.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.01%)</title><rect x="10.4528%" y="597" width="0.0120%" height="15" fill="rgb(211,206,28)" fg:x="868" fg:w="1"/><text x="10.7028%" y="607.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.01%)</title><rect x="10.4528%" y="581" width="0.0120%" height="15" fill="rgb(237,167,16)" fg:x="868" fg:w="1"/><text x="10.7028%" y="591.50"></text></g><g><title>mi_page_fresh (1 samples, 0.01%)</title><rect x="10.4528%" y="565" width="0.0120%" height="15" fill="rgb(233,66,6)" fg:x="868" fg:w="1"/><text x="10.7028%" y="575.50"></text></g><g><title>mi_page_fresh_alloc (1 samples, 0.01%)</title><rect x="10.4528%" y="549" width="0.0120%" height="15" fill="rgb(246,123,29)" fg:x="868" fg:w="1"/><text x="10.7028%" y="559.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.01%)</title><rect x="10.4528%" y="533" width="0.0120%" height="15" fill="rgb(209,62,40)" fg:x="868" fg:w="1"/><text x="10.7028%" y="543.50"></text></g><g><title>mi_page_free_list_extend_secure (1 samples, 0.01%)</title><rect x="10.4528%" y="517" width="0.0120%" height="15" fill="rgb(218,4,25)" fg:x="868" fg:w="1"/><text x="10.7028%" y="527.50"></text></g><g><title>mi_block_set_next (1 samples, 0.01%)</title><rect x="10.4528%" y="501" width="0.0120%" height="15" fill="rgb(253,91,49)" fg:x="868" fg:w="1"/><text x="10.7028%" y="511.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.01%)</title><rect x="10.4528%" y="485" width="0.0120%" height="15" fill="rgb(228,155,29)" fg:x="868" fg:w="1"/><text x="10.7028%" y="495.50"></text></g><g><title>mi_ptr_encode (1 samples, 0.01%)</title><rect x="10.4528%" y="469" width="0.0120%" height="15" fill="rgb(243,57,37)" fg:x="868" fg:w="1"/><text x="10.7028%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.4528%" y="453" width="0.0120%" height="15" fill="rgb(244,167,17)" fg:x="868" fg:w="1"/><text x="10.7028%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.4528%" y="437" width="0.0120%" height="15" fill="rgb(207,181,38)" fg:x="868" fg:w="1"/><text x="10.7028%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.4528%" y="421" width="0.0120%" height="15" fill="rgb(211,8,23)" fg:x="868" fg:w="1"/><text x="10.7028%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.4528%" y="405" width="0.0120%" height="15" fill="rgb(235,11,44)" fg:x="868" fg:w="1"/><text x="10.7028%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.4528%" y="389" width="0.0120%" height="15" fill="rgb(248,18,52)" fg:x="868" fg:w="1"/><text x="10.7028%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.4528%" y="373" width="0.0120%" height="15" fill="rgb(208,4,7)" fg:x="868" fg:w="1"/><text x="10.7028%" y="383.50"></text></g><g><title>wasmer_compiler_singlepass::codegen::FuncGen&lt;M&gt;::finalize (1 samples, 0.01%)</title><rect x="10.4648%" y="869" width="0.0120%" height="15" fill="rgb(240,17,39)" fg:x="869" fg:w="1"/><text x="10.7148%" y="879.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::MachineX86_64 as wasmer_compiler_singlepass::machine::Machine&gt;::gen_dwarf_unwind_info (1 samples, 0.01%)</title><rect x="10.4648%" y="853" width="0.0120%" height="15" fill="rgb(207,170,3)" fg:x="869" fg:w="1"/><text x="10.7148%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="10.4648%" y="837" width="0.0120%" height="15" fill="rgb(236,100,52)" fg:x="869" fg:w="1"/><text x="10.7148%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="10.4648%" y="821" width="0.0120%" height="15" fill="rgb(246,78,51)" fg:x="869" fg:w="1"/><text x="10.7148%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="10.4648%" y="805" width="0.0120%" height="15" fill="rgb(211,17,15)" fg:x="869" fg:w="1"/><text x="10.7148%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="10.4648%" y="789" width="0.0120%" height="15" fill="rgb(209,59,46)" fg:x="869" fg:w="1"/><text x="10.7148%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="10.4648%" y="773" width="0.0120%" height="15" fill="rgb(210,92,25)" fg:x="869" fg:w="1"/><text x="10.7148%" y="783.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="10.4648%" y="757" width="0.0120%" height="15" fill="rgb(238,174,52)" fg:x="869" fg:w="1"/><text x="10.7148%" y="767.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="10.4648%" y="741" width="0.0120%" height="15" fill="rgb(230,73,7)" fg:x="869" fg:w="1"/><text x="10.7148%" y="751.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.01%)</title><rect x="10.4648%" y="725" width="0.0120%" height="15" fill="rgb(243,124,40)" fg:x="869" fg:w="1"/><text x="10.7148%" y="735.50"></text></g><g><title>_mi_usable_size (1 samples, 0.01%)</title><rect x="10.4648%" y="709" width="0.0120%" height="15" fill="rgb(244,170,11)" fg:x="869" fg:w="1"/><text x="10.7148%" y="719.50"></text></g><g><title>mi_find_page (1 samples, 0.01%)</title><rect x="10.4769%" y="725" width="0.0120%" height="15" fill="rgb(207,114,54)" fg:x="870" fg:w="1"/><text x="10.7269%" y="735.50"></text></g><g><title>mi_find_free_page (1 samples, 0.01%)</title><rect x="10.4769%" y="709" width="0.0120%" height="15" fill="rgb(205,42,20)" fg:x="870" fg:w="1"/><text x="10.7269%" y="719.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::MachineX86_64 as wasmer_compiler_singlepass::machine::Machine&gt;::get_label (3 samples, 0.04%)</title><rect x="10.4769%" y="853" width="0.0361%" height="15" fill="rgb(230,30,28)" fg:x="870" fg:w="3"/><text x="10.7269%" y="863.50"></text></g><g><title>dynasmrt::VecAssembler&lt;R&gt;::new_dynamic_label (3 samples, 0.04%)</title><rect x="10.4769%" y="837" width="0.0361%" height="15" fill="rgb(205,73,54)" fg:x="870" fg:w="3"/><text x="10.7269%" y="847.50"></text></g><g><title>dynasmrt::components::LabelRegistry::new_dynamic_label (3 samples, 0.04%)</title><rect x="10.4769%" y="821" width="0.0361%" height="15" fill="rgb(254,227,23)" fg:x="870" fg:w="3"/><text x="10.7269%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.04%)</title><rect x="10.4769%" y="805" width="0.0361%" height="15" fill="rgb(228,202,34)" fg:x="870" fg:w="3"/><text x="10.7269%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.04%)</title><rect x="10.4769%" y="789" width="0.0361%" height="15" fill="rgb(222,225,37)" fg:x="870" fg:w="3"/><text x="10.7269%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.04%)</title><rect x="10.4769%" y="773" width="0.0361%" height="15" fill="rgb(221,14,54)" fg:x="870" fg:w="3"/><text x="10.7269%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.04%)</title><rect x="10.4769%" y="757" width="0.0361%" height="15" fill="rgb(254,102,2)" fg:x="870" fg:w="3"/><text x="10.7269%" y="767.50"></text></g><g><title>_mi_malloc_generic (3 samples, 0.04%)</title><rect x="10.4769%" y="741" width="0.0361%" height="15" fill="rgb(232,104,17)" fg:x="870" fg:w="3"/><text x="10.7269%" y="751.50"></text></g><g><title>mi_page_queue_find_free_ex (2 samples, 0.02%)</title><rect x="10.4889%" y="725" width="0.0241%" height="15" fill="rgb(250,220,14)" fg:x="871" fg:w="2"/><text x="10.7389%" y="735.50"></text></g><g><title>mi_page_fresh (2 samples, 0.02%)</title><rect x="10.4889%" y="709" width="0.0241%" height="15" fill="rgb(241,158,9)" fg:x="871" fg:w="2"/><text x="10.7389%" y="719.50"></text></g><g><title>mi_page_fresh_alloc (2 samples, 0.02%)</title><rect x="10.4889%" y="693" width="0.0241%" height="15" fill="rgb(246,9,43)" fg:x="871" fg:w="2"/><text x="10.7389%" y="703.50"></text></g><g><title>mi_page_extend_free (2 samples, 0.02%)</title><rect x="10.4889%" y="677" width="0.0241%" height="15" fill="rgb(206,73,33)" fg:x="871" fg:w="2"/><text x="10.7389%" y="687.50"></text></g><g><title>mi_page_free_list_extend_secure (2 samples, 0.02%)</title><rect x="10.4889%" y="661" width="0.0241%" height="15" fill="rgb(222,79,8)" fg:x="871" fg:w="2"/><text x="10.7389%" y="671.50"></text></g><g><title>mi_block_set_next (2 samples, 0.02%)</title><rect x="10.4889%" y="645" width="0.0241%" height="15" fill="rgb(234,8,54)" fg:x="871" fg:w="2"/><text x="10.7389%" y="655.50"></text></g><g><title>mi_block_set_nextx (2 samples, 0.02%)</title><rect x="10.4889%" y="629" width="0.0241%" height="15" fill="rgb(209,134,38)" fg:x="871" fg:w="2"/><text x="10.7389%" y="639.50"></text></g><g><title>mi_ptr_encode (2 samples, 0.02%)</title><rect x="10.4889%" y="613" width="0.0241%" height="15" fill="rgb(230,127,29)" fg:x="871" fg:w="2"/><text x="10.7389%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="10.4889%" y="597" width="0.0241%" height="15" fill="rgb(242,44,41)" fg:x="871" fg:w="2"/><text x="10.7389%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="10.4889%" y="581" width="0.0241%" height="15" fill="rgb(222,56,43)" fg:x="871" fg:w="2"/><text x="10.7389%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="10.4889%" y="565" width="0.0241%" height="15" fill="rgb(238,39,47)" fg:x="871" fg:w="2"/><text x="10.7389%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="10.4889%" y="549" width="0.0241%" height="15" fill="rgb(226,79,43)" fg:x="871" fg:w="2"/><text x="10.7389%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="10.4889%" y="533" width="0.0241%" height="15" fill="rgb(242,105,53)" fg:x="871" fg:w="2"/><text x="10.7389%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.5010%" y="517" width="0.0120%" height="15" fill="rgb(251,132,46)" fg:x="872" fg:w="1"/><text x="10.7510%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.5010%" y="501" width="0.0120%" height="15" fill="rgb(231,77,14)" fg:x="872" fg:w="1"/><text x="10.7510%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.5010%" y="485" width="0.0120%" height="15" fill="rgb(240,135,9)" fg:x="872" fg:w="1"/><text x="10.7510%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.5010%" y="469" width="0.0120%" height="15" fill="rgb(248,109,14)" fg:x="872" fg:w="1"/><text x="10.7510%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.5010%" y="453" width="0.0120%" height="15" fill="rgb(227,146,52)" fg:x="872" fg:w="1"/><text x="10.7510%" y="463.50"></text></g><g><title>&lt;wasmer_types::entity::primary_map::PrimaryMap&lt;K,V&gt; as core::ops::index::Index&lt;K&gt;&gt;::index (2 samples, 0.02%)</title><rect x="10.5130%" y="853" width="0.0241%" height="15" fill="rgb(232,54,3)" fg:x="873" fg:w="2"/><text x="10.7630%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.5250%" y="837" width="0.0120%" height="15" fill="rgb(229,201,43)" fg:x="874" fg:w="1"/><text x="10.7750%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.5250%" y="821" width="0.0120%" height="15" fill="rgb(252,161,33)" fg:x="874" fg:w="1"/><text x="10.7750%" y="831.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="10.5371%" y="853" width="0.0120%" height="15" fill="rgb(226,146,40)" fg:x="875" fg:w="1"/><text x="10.7871%" y="863.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::common_decl::MachineState as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="10.5491%" y="837" width="0.0120%" height="15" fill="rgb(219,47,25)" fg:x="876" fg:w="1"/><text x="10.7991%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="10.5491%" y="821" width="0.0120%" height="15" fill="rgb(250,135,13)" fg:x="876" fg:w="1"/><text x="10.7991%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="10.5491%" y="805" width="0.0120%" height="15" fill="rgb(219,229,18)" fg:x="876" fg:w="1"/><text x="10.7991%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="10.5491%" y="789" width="0.0120%" height="15" fill="rgb(217,152,27)" fg:x="876" fg:w="1"/><text x="10.7991%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="10.5491%" y="773" width="0.0120%" height="15" fill="rgb(225,71,47)" fg:x="876" fg:w="1"/><text x="10.7991%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="10.5491%" y="757" width="0.0120%" height="15" fill="rgb(220,139,14)" fg:x="876" fg:w="1"/><text x="10.7991%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="10.5491%" y="741" width="0.0120%" height="15" fill="rgb(247,54,32)" fg:x="876" fg:w="1"/><text x="10.7991%" y="751.50"></text></g><g><title>mi_page_extend_free (2 samples, 0.02%)</title><rect x="10.5612%" y="709" width="0.0241%" height="15" fill="rgb(252,131,39)" fg:x="877" fg:w="2"/><text x="10.8112%" y="719.50"></text></g><g><title>mi_page_free_list_extend_secure (2 samples, 0.02%)</title><rect x="10.5612%" y="693" width="0.0241%" height="15" fill="rgb(210,108,39)" fg:x="877" fg:w="2"/><text x="10.8112%" y="703.50"></text></g><g><title>mi_block_set_next (2 samples, 0.02%)</title><rect x="10.5612%" y="677" width="0.0241%" height="15" fill="rgb(205,23,29)" fg:x="877" fg:w="2"/><text x="10.8112%" y="687.50"></text></g><g><title>mi_block_set_nextx (2 samples, 0.02%)</title><rect x="10.5612%" y="661" width="0.0241%" height="15" fill="rgb(246,139,46)" fg:x="877" fg:w="2"/><text x="10.8112%" y="671.50"></text></g><g><title>mi_ptr_encode (2 samples, 0.02%)</title><rect x="10.5612%" y="645" width="0.0241%" height="15" fill="rgb(250,81,26)" fg:x="877" fg:w="2"/><text x="10.8112%" y="655.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="10.5612%" y="629" width="0.0241%" height="15" fill="rgb(214,104,7)" fg:x="877" fg:w="2"/><text x="10.8112%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="10.5612%" y="613" width="0.0241%" height="15" fill="rgb(233,189,8)" fg:x="877" fg:w="2"/><text x="10.8112%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="10.5612%" y="597" width="0.0241%" height="15" fill="rgb(228,141,17)" fg:x="877" fg:w="2"/><text x="10.8112%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.5732%" y="581" width="0.0120%" height="15" fill="rgb(247,157,1)" fg:x="878" fg:w="1"/><text x="10.8232%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.5732%" y="565" width="0.0120%" height="15" fill="rgb(249,225,5)" fg:x="878" fg:w="1"/><text x="10.8232%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.5732%" y="549" width="0.0120%" height="15" fill="rgb(242,55,13)" fg:x="878" fg:w="1"/><text x="10.8232%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.5732%" y="533" width="0.0120%" height="15" fill="rgb(230,49,50)" fg:x="878" fg:w="1"/><text x="10.8232%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.5732%" y="517" width="0.0120%" height="15" fill="rgb(241,111,38)" fg:x="878" fg:w="1"/><text x="10.8232%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.5732%" y="501" width="0.0120%" height="15" fill="rgb(252,155,4)" fg:x="878" fg:w="1"/><text x="10.8232%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.5732%" y="485" width="0.0120%" height="15" fill="rgb(212,69,32)" fg:x="878" fg:w="1"/><text x="10.8232%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.5732%" y="469" width="0.0120%" height="15" fill="rgb(243,107,47)" fg:x="878" fg:w="1"/><text x="10.8232%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.04%)</title><rect x="10.5612%" y="837" width="0.0361%" height="15" fill="rgb(247,130,12)" fg:x="877" fg:w="3"/><text x="10.8112%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.04%)</title><rect x="10.5612%" y="821" width="0.0361%" height="15" fill="rgb(233,74,16)" fg:x="877" fg:w="3"/><text x="10.8112%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.04%)</title><rect x="10.5612%" y="805" width="0.0361%" height="15" fill="rgb(208,58,18)" fg:x="877" fg:w="3"/><text x="10.8112%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.04%)</title><rect x="10.5612%" y="789" width="0.0361%" height="15" fill="rgb(242,225,1)" fg:x="877" fg:w="3"/><text x="10.8112%" y="799.50"></text></g><g><title>_mi_malloc_generic (3 samples, 0.04%)</title><rect x="10.5612%" y="773" width="0.0361%" height="15" fill="rgb(249,39,40)" fg:x="877" fg:w="3"/><text x="10.8112%" y="783.50"></text></g><g><title>mi_page_queue_find_free_ex (3 samples, 0.04%)</title><rect x="10.5612%" y="757" width="0.0361%" height="15" fill="rgb(207,72,44)" fg:x="877" fg:w="3"/><text x="10.8112%" y="767.50"></text></g><g><title>mi_page_fresh (3 samples, 0.04%)</title><rect x="10.5612%" y="741" width="0.0361%" height="15" fill="rgb(215,193,12)" fg:x="877" fg:w="3"/><text x="10.8112%" y="751.50"></text></g><g><title>mi_page_fresh_alloc (3 samples, 0.04%)</title><rect x="10.5612%" y="725" width="0.0361%" height="15" fill="rgb(248,41,39)" fg:x="877" fg:w="3"/><text x="10.8112%" y="735.50"></text></g><g><title>mi_segments_page_alloc (1 samples, 0.01%)</title><rect x="10.5853%" y="709" width="0.0120%" height="15" fill="rgb(253,85,4)" fg:x="879" fg:w="1"/><text x="10.8353%" y="719.50"></text></g><g><title>mi_segments_page_find_and_allocate (1 samples, 0.01%)</title><rect x="10.5853%" y="693" width="0.0120%" height="15" fill="rgb(243,70,31)" fg:x="879" fg:w="1"/><text x="10.8353%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="10.5973%" y="725" width="0.0120%" height="15" fill="rgb(253,195,26)" fg:x="880" fg:w="1"/><text x="10.8473%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="10.5973%" y="709" width="0.0120%" height="15" fill="rgb(243,42,11)" fg:x="880" fg:w="1"/><text x="10.8473%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.01%)</title><rect x="10.5973%" y="693" width="0.0120%" height="15" fill="rgb(239,66,17)" fg:x="880" fg:w="1"/><text x="10.8473%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.01%)</title><rect x="10.5973%" y="677" width="0.0120%" height="15" fill="rgb(217,132,21)" fg:x="880" fg:w="1"/><text x="10.8473%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="10.5973%" y="661" width="0.0120%" height="15" fill="rgb(252,202,21)" fg:x="880" fg:w="1"/><text x="10.8473%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (1 samples, 0.01%)</title><rect x="10.5973%" y="645" width="0.0120%" height="15" fill="rgb(233,98,36)" fg:x="880" fg:w="1"/><text x="10.8473%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (1 samples, 0.01%)</title><rect x="10.5973%" y="629" width="0.0120%" height="15" fill="rgb(216,153,54)" fg:x="880" fg:w="1"/><text x="10.8473%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.01%)</title><rect x="10.5973%" y="613" width="0.0120%" height="15" fill="rgb(250,99,7)" fg:x="880" fg:w="1"/><text x="10.8473%" y="623.50"></text></g><g><title>wasmer_compiler_singlepass::common_decl::MachineState::diff::{{closure}} (1 samples, 0.01%)</title><rect x="10.5973%" y="597" width="0.0120%" height="15" fill="rgb(207,56,50)" fg:x="880" fg:w="1"/><text x="10.8473%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (1 samples, 0.01%)</title><rect x="10.5973%" y="581" width="0.0120%" height="15" fill="rgb(244,61,34)" fg:x="880" fg:w="1"/><text x="10.8473%" y="591.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::common_decl::MachineValue as core::cmp::PartialEq&gt;::ne (1 samples, 0.01%)</title><rect x="10.5973%" y="565" width="0.0120%" height="15" fill="rgb(241,50,38)" fg:x="880" fg:w="1"/><text x="10.8473%" y="575.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (24 samples, 0.29%)</title><rect x="10.3324%" y="1093" width="0.2890%" height="15" fill="rgb(212,166,30)" fg:x="858" fg:w="24"/><text x="10.5824%" y="1103.50"></text></g><g><title>&lt;rayon::iter::while_some::WhileSomeFolder&lt;C&gt; as rayon::iter::plumbing::Folder&lt;core::option::Option&lt;T&gt;&gt;&gt;::consume_iter (24 samples, 0.29%)</title><rect x="10.3324%" y="1077" width="0.2890%" height="15" fill="rgb(249,127,32)" fg:x="858" fg:w="24"/><text x="10.5824%" y="1087.50"></text></g><g><title>&lt;rayon::iter::extend::ListVecFolder&lt;T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (24 samples, 0.29%)</title><rect x="10.3324%" y="1061" width="0.2890%" height="15" fill="rgb(209,103,0)" fg:x="858" fg:w="24"/><text x="10.5824%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (24 samples, 0.29%)</title><rect x="10.3324%" y="1045" width="0.2890%" height="15" fill="rgb(238,209,51)" fg:x="858" fg:w="24"/><text x="10.5824%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (24 samples, 0.29%)</title><rect x="10.3324%" y="1029" width="0.2890%" height="15" fill="rgb(237,56,23)" fg:x="858" fg:w="24"/><text x="10.5824%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (24 samples, 0.29%)</title><rect x="10.3324%" y="1013" width="0.2890%" height="15" fill="rgb(215,153,46)" fg:x="858" fg:w="24"/><text x="10.5824%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.29%)</title><rect x="10.3324%" y="997" width="0.2890%" height="15" fill="rgb(224,49,31)" fg:x="858" fg:w="24"/><text x="10.5824%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.29%)</title><rect x="10.3324%" y="981" width="0.2890%" height="15" fill="rgb(250,18,42)" fg:x="858" fg:w="24"/><text x="10.5824%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.29%)</title><rect x="10.3324%" y="965" width="0.2890%" height="15" fill="rgb(215,176,39)" fg:x="858" fg:w="24"/><text x="10.5824%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.29%)</title><rect x="10.3324%" y="949" width="0.2890%" height="15" fill="rgb(223,77,29)" fg:x="858" fg:w="24"/><text x="10.5824%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (24 samples, 0.29%)</title><rect x="10.3324%" y="933" width="0.2890%" height="15" fill="rgb(234,94,52)" fg:x="858" fg:w="24"/><text x="10.5824%" y="943.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (24 samples, 0.29%)</title><rect x="10.3324%" y="917" width="0.2890%" height="15" fill="rgb(220,154,50)" fg:x="858" fg:w="24"/><text x="10.5824%" y="927.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (24 samples, 0.29%)</title><rect x="10.3324%" y="901" width="0.2890%" height="15" fill="rgb(212,11,10)" fg:x="858" fg:w="24"/><text x="10.5824%" y="911.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::compiler::SinglepassCompiler as wasmer_compiler::compiler::Compiler&gt;::compile_module::{{closure}} (24 samples, 0.29%)</title><rect x="10.3324%" y="885" width="0.2890%" height="15" fill="rgb(205,166,19)" fg:x="858" fg:w="24"/><text x="10.5824%" y="895.50"></text></g><g><title>wasmer_compiler_singlepass::codegen::FuncGen&lt;M&gt;::new (12 samples, 0.14%)</title><rect x="10.4769%" y="869" width="0.1445%" height="15" fill="rgb(244,198,16)" fg:x="870" fg:w="12"/><text x="10.7269%" y="879.50"></text></g><g><title>wasmer_compiler_singlepass::codegen::FuncGen&lt;M&gt;::emit_head (6 samples, 0.07%)</title><rect x="10.5491%" y="853" width="0.0723%" height="15" fill="rgb(219,69,12)" fg:x="876" fg:w="6"/><text x="10.7991%" y="863.50"></text></g><g><title>wasmer_compiler_singlepass::common_decl::MachineState::diff (2 samples, 0.02%)</title><rect x="10.5973%" y="837" width="0.0241%" height="15" fill="rgb(245,30,7)" fg:x="880" fg:w="2"/><text x="10.8473%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.02%)</title><rect x="10.5973%" y="821" width="0.0241%" height="15" fill="rgb(218,221,48)" fg:x="880" fg:w="2"/><text x="10.8473%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="10.5973%" y="805" width="0.0241%" height="15" fill="rgb(216,66,15)" fg:x="880" fg:w="2"/><text x="10.8473%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="10.5973%" y="789" width="0.0241%" height="15" fill="rgb(226,122,50)" fg:x="880" fg:w="2"/><text x="10.8473%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="10.5973%" y="773" width="0.0241%" height="15" fill="rgb(239,156,16)" fg:x="880" fg:w="2"/><text x="10.8473%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.02%)</title><rect x="10.5973%" y="757" width="0.0241%" height="15" fill="rgb(224,27,38)" fg:x="880" fg:w="2"/><text x="10.8473%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.02%)</title><rect x="10.5973%" y="741" width="0.0241%" height="15" fill="rgb(224,39,27)" fg:x="880" fg:w="2"/><text x="10.8473%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="10.6093%" y="725" width="0.0120%" height="15" fill="rgb(215,92,29)" fg:x="881" fg:w="1"/><text x="10.8593%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="10.6093%" y="709" width="0.0120%" height="15" fill="rgb(207,159,16)" fg:x="881" fg:w="1"/><text x="10.8593%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="10.6093%" y="693" width="0.0120%" height="15" fill="rgb(238,163,47)" fg:x="881" fg:w="1"/><text x="10.8593%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="10.6093%" y="677" width="0.0120%" height="15" fill="rgb(219,91,49)" fg:x="881" fg:w="1"/><text x="10.8593%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="10.6093%" y="661" width="0.0120%" height="15" fill="rgb(227,167,31)" fg:x="881" fg:w="1"/><text x="10.8593%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="10.6093%" y="645" width="0.0120%" height="15" fill="rgb(234,80,54)" fg:x="881" fg:w="1"/><text x="10.8593%" y="655.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="10.6093%" y="629" width="0.0120%" height="15" fill="rgb(212,114,2)" fg:x="881" fg:w="1"/><text x="10.8593%" y="639.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="10.6093%" y="613" width="0.0120%" height="15" fill="rgb(234,50,24)" fg:x="881" fg:w="1"/><text x="10.8593%" y="623.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.01%)</title><rect x="10.6093%" y="597" width="0.0120%" height="15" fill="rgb(221,68,8)" fg:x="881" fg:w="1"/><text x="10.8593%" y="607.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.01%)</title><rect x="10.6093%" y="581" width="0.0120%" height="15" fill="rgb(254,180,31)" fg:x="881" fg:w="1"/><text x="10.8593%" y="591.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.01%)</title><rect x="10.6093%" y="565" width="0.0120%" height="15" fill="rgb(247,130,50)" fg:x="881" fg:w="1"/><text x="10.8593%" y="575.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.01%)</title><rect x="10.6093%" y="549" width="0.0120%" height="15" fill="rgb(211,109,4)" fg:x="881" fg:w="1"/><text x="10.8593%" y="559.50"></text></g><g><title>mi_page_fresh (1 samples, 0.01%)</title><rect x="10.6093%" y="533" width="0.0120%" height="15" fill="rgb(238,50,21)" fg:x="881" fg:w="1"/><text x="10.8593%" y="543.50"></text></g><g><title>mi_page_fresh_alloc (1 samples, 0.01%)</title><rect x="10.6093%" y="517" width="0.0120%" height="15" fill="rgb(225,57,45)" fg:x="881" fg:w="1"/><text x="10.8593%" y="527.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.01%)</title><rect x="10.6093%" y="501" width="0.0120%" height="15" fill="rgb(209,196,50)" fg:x="881" fg:w="1"/><text x="10.8593%" y="511.50"></text></g><g><title>mi_page_free_list_extend_secure (1 samples, 0.01%)</title><rect x="10.6093%" y="485" width="0.0120%" height="15" fill="rgb(242,140,13)" fg:x="881" fg:w="1"/><text x="10.8593%" y="495.50"></text></g><g><title>mi_block_set_next (1 samples, 0.01%)</title><rect x="10.6093%" y="469" width="0.0120%" height="15" fill="rgb(217,111,7)" fg:x="881" fg:w="1"/><text x="10.8593%" y="479.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.01%)</title><rect x="10.6093%" y="453" width="0.0120%" height="15" fill="rgb(253,193,51)" fg:x="881" fg:w="1"/><text x="10.8593%" y="463.50"></text></g><g><title>mi_ptr_encode (1 samples, 0.01%)</title><rect x="10.6093%" y="437" width="0.0120%" height="15" fill="rgb(252,70,29)" fg:x="881" fg:w="1"/><text x="10.8593%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.6093%" y="421" width="0.0120%" height="15" fill="rgb(232,127,12)" fg:x="881" fg:w="1"/><text x="10.8593%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.6093%" y="405" width="0.0120%" height="15" fill="rgb(211,180,21)" fg:x="881" fg:w="1"/><text x="10.8593%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.6093%" y="389" width="0.0120%" height="15" fill="rgb(229,72,13)" fg:x="881" fg:w="1"/><text x="10.8593%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.6093%" y="373" width="0.0120%" height="15" fill="rgb(240,211,49)" fg:x="881" fg:w="1"/><text x="10.8593%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.6093%" y="357" width="0.0120%" height="15" fill="rgb(219,149,40)" fg:x="881" fg:w="1"/><text x="10.8593%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.6093%" y="341" width="0.0120%" height="15" fill="rgb(210,127,46)" fg:x="881" fg:w="1"/><text x="10.8593%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.6093%" y="325" width="0.0120%" height="15" fill="rgb(220,106,7)" fg:x="881" fg:w="1"/><text x="10.8593%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.6093%" y="309" width="0.0120%" height="15" fill="rgb(249,31,22)" fg:x="881" fg:w="1"/><text x="10.8593%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.6093%" y="293" width="0.0120%" height="15" fill="rgb(253,1,49)" fg:x="881" fg:w="1"/><text x="10.8593%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (1 samples, 0.01%)</title><rect x="10.6214%" y="869" width="0.0120%" height="15" fill="rgb(227,144,33)" fg:x="882" fg:w="1"/><text x="10.8714%" y="879.50"></text></g><g><title>_mi_memcpy_aligned (1 samples, 0.01%)</title><rect x="10.6334%" y="789" width="0.0120%" height="15" fill="rgb(249,163,44)" fg:x="883" fg:w="1"/><text x="10.8834%" y="799.50"></text></g><g><title>_mi_memcpy (1 samples, 0.01%)</title><rect x="10.6334%" y="773" width="0.0120%" height="15" fill="rgb(234,15,39)" fg:x="883" fg:w="1"/><text x="10.8834%" y="783.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="10.6334%" y="757" width="0.0120%" height="15" fill="rgb(207,66,16)" fg:x="883" fg:w="1"/><text x="10.8834%" y="767.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::AssemblerX64 as wasmer_compiler_singlepass::emitter_x64::EmitterX64&gt;::emit_host_redirection (4 samples, 0.05%)</title><rect x="10.6214%" y="965" width="0.0482%" height="15" fill="rgb(233,112,24)" fg:x="882" fg:w="4"/><text x="10.8714%" y="975.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::AssemblerX64 as wasmer_compiler_singlepass::emitter_x64::EmitterX64&gt;::emit_jmp_location (4 samples, 0.05%)</title><rect x="10.6214%" y="949" width="0.0482%" height="15" fill="rgb(230,90,22)" fg:x="882" fg:w="4"/><text x="10.8714%" y="959.50"></text></g><g><title>&lt;dynasmrt::VecAssembler&lt;R&gt; as dynasmrt::DynasmApi&gt;::push (4 samples, 0.05%)</title><rect x="10.6214%" y="933" width="0.0482%" height="15" fill="rgb(229,61,13)" fg:x="882" fg:w="4"/><text x="10.8714%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.05%)</title><rect x="10.6214%" y="917" width="0.0482%" height="15" fill="rgb(225,57,24)" fg:x="882" fg:w="4"/><text x="10.8714%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.05%)</title><rect x="10.6214%" y="901" width="0.0482%" height="15" fill="rgb(208,169,48)" fg:x="882" fg:w="4"/><text x="10.8714%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.05%)</title><rect x="10.6214%" y="885" width="0.0482%" height="15" fill="rgb(244,218,51)" fg:x="882" fg:w="4"/><text x="10.8714%" y="895.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.04%)</title><rect x="10.6334%" y="869" width="0.0361%" height="15" fill="rgb(214,148,10)" fg:x="883" fg:w="3"/><text x="10.8834%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.04%)</title><rect x="10.6334%" y="853" width="0.0361%" height="15" fill="rgb(225,174,27)" fg:x="883" fg:w="3"/><text x="10.8834%" y="863.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.04%)</title><rect x="10.6334%" y="837" width="0.0361%" height="15" fill="rgb(230,96,26)" fg:x="883" fg:w="3"/><text x="10.8834%" y="847.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.04%)</title><rect x="10.6334%" y="821" width="0.0361%" height="15" fill="rgb(232,10,30)" fg:x="883" fg:w="3"/><text x="10.8834%" y="831.50"></text></g><g><title>_mi_heap_realloc_zero (3 samples, 0.04%)</title><rect x="10.6334%" y="805" width="0.0361%" height="15" fill="rgb(222,8,50)" fg:x="883" fg:w="3"/><text x="10.8834%" y="815.50"></text></g><g><title>mi_heap_malloc (2 samples, 0.02%)</title><rect x="10.6455%" y="789" width="0.0241%" height="15" fill="rgb(213,81,27)" fg:x="884" fg:w="2"/><text x="10.8955%" y="799.50"></text></g><g><title>_mi_malloc_generic (2 samples, 0.02%)</title><rect x="10.6455%" y="773" width="0.0241%" height="15" fill="rgb(245,50,10)" fg:x="884" fg:w="2"/><text x="10.8955%" y="783.50"></text></g><g><title>mi_page_queue_find_free_ex (2 samples, 0.02%)</title><rect x="10.6455%" y="757" width="0.0241%" height="15" fill="rgb(216,100,18)" fg:x="884" fg:w="2"/><text x="10.8955%" y="767.50"></text></g><g><title>mi_page_fresh (2 samples, 0.02%)</title><rect x="10.6455%" y="741" width="0.0241%" height="15" fill="rgb(236,147,54)" fg:x="884" fg:w="2"/><text x="10.8955%" y="751.50"></text></g><g><title>mi_page_fresh_alloc (2 samples, 0.02%)</title><rect x="10.6455%" y="725" width="0.0241%" height="15" fill="rgb(205,143,26)" fg:x="884" fg:w="2"/><text x="10.8955%" y="735.50"></text></g><g><title>mi_page_extend_free (2 samples, 0.02%)</title><rect x="10.6455%" y="709" width="0.0241%" height="15" fill="rgb(236,26,9)" fg:x="884" fg:w="2"/><text x="10.8955%" y="719.50"></text></g><g><title>mi_page_free_list_extend_secure (2 samples, 0.02%)</title><rect x="10.6455%" y="693" width="0.0241%" height="15" fill="rgb(221,165,53)" fg:x="884" fg:w="2"/><text x="10.8955%" y="703.50"></text></g><g><title>mi_block_set_next (2 samples, 0.02%)</title><rect x="10.6455%" y="677" width="0.0241%" height="15" fill="rgb(214,110,17)" fg:x="884" fg:w="2"/><text x="10.8955%" y="687.50"></text></g><g><title>mi_block_set_nextx (2 samples, 0.02%)</title><rect x="10.6455%" y="661" width="0.0241%" height="15" fill="rgb(237,197,12)" fg:x="884" fg:w="2"/><text x="10.8955%" y="671.50"></text></g><g><title>mi_ptr_encode (2 samples, 0.02%)</title><rect x="10.6455%" y="645" width="0.0241%" height="15" fill="rgb(205,84,17)" fg:x="884" fg:w="2"/><text x="10.8955%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.6575%" y="629" width="0.0120%" height="15" fill="rgb(237,18,45)" fg:x="885" fg:w="1"/><text x="10.9075%" y="639.50"></text></g><g><title>wasmer_compiler_singlepass::machine::gen_import_call_trampoline (10 samples, 0.12%)</title><rect x="10.6214%" y="997" width="0.1204%" height="15" fill="rgb(221,87,14)" fg:x="882" fg:w="10"/><text x="10.8714%" y="1007.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::MachineX86_64 as wasmer_compiler_singlepass::machine::Machine&gt;::gen_import_call_trampoline (10 samples, 0.12%)</title><rect x="10.6214%" y="981" width="0.1204%" height="15" fill="rgb(238,186,15)" fg:x="882" fg:w="10"/><text x="10.8714%" y="991.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::AssemblerX64 as wasmer_compiler_singlepass::emitter_x64::EmitterX64&gt;::emit_mov (6 samples, 0.07%)</title><rect x="10.6696%" y="965" width="0.0723%" height="15" fill="rgb(208,115,11)" fg:x="886" fg:w="6"/><text x="10.9196%" y="975.50"></text></g><g><title>&lt;dynasmrt::VecAssembler&lt;R&gt; as dynasmrt::DynasmApi&gt;::push (6 samples, 0.07%)</title><rect x="10.6696%" y="949" width="0.0723%" height="15" fill="rgb(254,175,0)" fg:x="886" fg:w="6"/><text x="10.9196%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.07%)</title><rect x="10.6696%" y="933" width="0.0723%" height="15" fill="rgb(227,24,42)" fg:x="886" fg:w="6"/><text x="10.9196%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 0.07%)</title><rect x="10.6696%" y="917" width="0.0723%" height="15" fill="rgb(223,211,37)" fg:x="886" fg:w="6"/><text x="10.9196%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.07%)</title><rect x="10.6696%" y="901" width="0.0723%" height="15" fill="rgb(235,49,27)" fg:x="886" fg:w="6"/><text x="10.9196%" y="911.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.07%)</title><rect x="10.6696%" y="885" width="0.0723%" height="15" fill="rgb(254,97,51)" fg:x="886" fg:w="6"/><text x="10.9196%" y="895.50"></text></g><g><title>_mi_malloc_generic (6 samples, 0.07%)</title><rect x="10.6696%" y="869" width="0.0723%" height="15" fill="rgb(249,51,40)" fg:x="886" fg:w="6"/><text x="10.9196%" y="879.50"></text></g><g><title>mi_page_queue_find_free_ex (6 samples, 0.07%)</title><rect x="10.6696%" y="853" width="0.0723%" height="15" fill="rgb(210,128,45)" fg:x="886" fg:w="6"/><text x="10.9196%" y="863.50"></text></g><g><title>mi_page_fresh (6 samples, 0.07%)</title><rect x="10.6696%" y="837" width="0.0723%" height="15" fill="rgb(224,137,50)" fg:x="886" fg:w="6"/><text x="10.9196%" y="847.50"></text></g><g><title>mi_page_fresh_alloc (6 samples, 0.07%)</title><rect x="10.6696%" y="821" width="0.0723%" height="15" fill="rgb(242,15,9)" fg:x="886" fg:w="6"/><text x="10.9196%" y="831.50"></text></g><g><title>mi_page_extend_free (6 samples, 0.07%)</title><rect x="10.6696%" y="805" width="0.0723%" height="15" fill="rgb(233,187,41)" fg:x="886" fg:w="6"/><text x="10.9196%" y="815.50"></text></g><g><title>mi_page_free_list_extend_secure (6 samples, 0.07%)</title><rect x="10.6696%" y="789" width="0.0723%" height="15" fill="rgb(227,2,29)" fg:x="886" fg:w="6"/><text x="10.9196%" y="799.50"></text></g><g><title>mi_block_set_next (2 samples, 0.02%)</title><rect x="10.7177%" y="773" width="0.0241%" height="15" fill="rgb(222,70,3)" fg:x="890" fg:w="2"/><text x="10.9677%" y="783.50"></text></g><g><title>mi_block_set_nextx (2 samples, 0.02%)</title><rect x="10.7177%" y="757" width="0.0241%" height="15" fill="rgb(213,11,42)" fg:x="890" fg:w="2"/><text x="10.9677%" y="767.50"></text></g><g><title>mi_ptr_encode (2 samples, 0.02%)</title><rect x="10.7177%" y="741" width="0.0241%" height="15" fill="rgb(225,150,9)" fg:x="890" fg:w="2"/><text x="10.9677%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.7298%" y="725" width="0.0120%" height="15" fill="rgb(230,162,45)" fg:x="891" fg:w="1"/><text x="10.9798%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.7298%" y="709" width="0.0120%" height="15" fill="rgb(222,14,52)" fg:x="891" fg:w="1"/><text x="10.9798%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.7298%" y="693" width="0.0120%" height="15" fill="rgb(254,198,14)" fg:x="891" fg:w="1"/><text x="10.9798%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.7298%" y="677" width="0.0120%" height="15" fill="rgb(220,217,30)" fg:x="891" fg:w="1"/><text x="10.9798%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.7298%" y="661" width="0.0120%" height="15" fill="rgb(215,146,41)" fg:x="891" fg:w="1"/><text x="10.9798%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.7298%" y="645" width="0.0120%" height="15" fill="rgb(217,27,36)" fg:x="891" fg:w="1"/><text x="10.9798%" y="655.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::AssemblerX64 as wasmer_compiler_singlepass::emitter_x64::EmitterX64&gt;::emit_sub (1 samples, 0.01%)</title><rect x="10.7418%" y="965" width="0.0120%" height="15" fill="rgb(219,218,39)" fg:x="892" fg:w="1"/><text x="10.9918%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="10.7418%" y="949" width="0.0120%" height="15" fill="rgb(219,4,42)" fg:x="892" fg:w="1"/><text x="10.9918%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="10.7418%" y="933" width="0.0120%" height="15" fill="rgb(249,119,36)" fg:x="892" fg:w="1"/><text x="10.9918%" y="943.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="10.7418%" y="917" width="0.0120%" height="15" fill="rgb(209,23,33)" fg:x="892" fg:w="1"/><text x="10.9918%" y="927.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.01%)</title><rect x="10.7418%" y="901" width="0.0120%" height="15" fill="rgb(211,10,0)" fg:x="892" fg:w="1"/><text x="10.9918%" y="911.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.01%)</title><rect x="10.7418%" y="885" width="0.0120%" height="15" fill="rgb(208,99,37)" fg:x="892" fg:w="1"/><text x="10.9918%" y="895.50"></text></g><g><title>mi_page_fresh (1 samples, 0.01%)</title><rect x="10.7418%" y="869" width="0.0120%" height="15" fill="rgb(213,132,31)" fg:x="892" fg:w="1"/><text x="10.9918%" y="879.50"></text></g><g><title>mi_page_fresh_alloc (1 samples, 0.01%)</title><rect x="10.7418%" y="853" width="0.0120%" height="15" fill="rgb(243,129,40)" fg:x="892" fg:w="1"/><text x="10.9918%" y="863.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.01%)</title><rect x="10.7418%" y="837" width="0.0120%" height="15" fill="rgb(210,66,33)" fg:x="892" fg:w="1"/><text x="10.9918%" y="847.50"></text></g><g><title>mi_page_free_list_extend_secure (1 samples, 0.01%)</title><rect x="10.7418%" y="821" width="0.0120%" height="15" fill="rgb(209,189,4)" fg:x="892" fg:w="1"/><text x="10.9918%" y="831.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (36 samples, 0.43%)</title><rect x="10.3324%" y="1125" width="0.4335%" height="15" fill="rgb(214,107,37)" fg:x="858" fg:w="36"/><text x="10.5824%" y="1135.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (36 samples, 0.43%)</title><rect x="10.3324%" y="1109" width="0.4335%" height="15" fill="rgb(245,88,54)" fg:x="858" fg:w="36"/><text x="10.5824%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (12 samples, 0.14%)</title><rect x="10.6214%" y="1093" width="0.1445%" height="15" fill="rgb(205,146,20)" fg:x="882" fg:w="12"/><text x="10.8714%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.14%)</title><rect x="10.6214%" y="1077" width="0.1445%" height="15" fill="rgb(220,161,25)" fg:x="882" fg:w="12"/><text x="10.8714%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (12 samples, 0.14%)</title><rect x="10.6214%" y="1061" width="0.1445%" height="15" fill="rgb(215,152,15)" fg:x="882" fg:w="12"/><text x="10.8714%" y="1071.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (12 samples, 0.14%)</title><rect x="10.6214%" y="1045" width="0.1445%" height="15" fill="rgb(233,192,44)" fg:x="882" fg:w="12"/><text x="10.8714%" y="1055.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (12 samples, 0.14%)</title><rect x="10.6214%" y="1029" width="0.1445%" height="15" fill="rgb(240,170,46)" fg:x="882" fg:w="12"/><text x="10.8714%" y="1039.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::compiler::SinglepassCompiler as wasmer_compiler::compiler::Compiler&gt;::compile_module::{{closure}} (12 samples, 0.14%)</title><rect x="10.6214%" y="1013" width="0.1445%" height="15" fill="rgb(207,104,33)" fg:x="882" fg:w="12"/><text x="10.8714%" y="1023.50"></text></g><g><title>wasmer_compiler_singlepass::machine::gen_std_dynamic_import_trampoline (2 samples, 0.02%)</title><rect x="10.7418%" y="997" width="0.0241%" height="15" fill="rgb(219,21,39)" fg:x="892" fg:w="2"/><text x="10.9918%" y="1007.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::MachineX86_64 as wasmer_compiler_singlepass::machine::Machine&gt;::gen_std_dynamic_import_trampoline (2 samples, 0.02%)</title><rect x="10.7418%" y="981" width="0.0241%" height="15" fill="rgb(214,133,29)" fg:x="892" fg:w="2"/><text x="10.9918%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.01%)</title><rect x="10.7539%" y="965" width="0.0120%" height="15" fill="rgb(226,93,6)" fg:x="893" fg:w="1"/><text x="11.0039%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="10.7539%" y="949" width="0.0120%" height="15" fill="rgb(252,222,34)" fg:x="893" fg:w="1"/><text x="11.0039%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="10.7539%" y="933" width="0.0120%" height="15" fill="rgb(252,92,48)" fg:x="893" fg:w="1"/><text x="11.0039%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="10.7539%" y="917" width="0.0120%" height="15" fill="rgb(245,223,24)" fg:x="893" fg:w="1"/><text x="11.0039%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="10.7539%" y="901" width="0.0120%" height="15" fill="rgb(205,176,3)" fg:x="893" fg:w="1"/><text x="11.0039%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="10.7539%" y="885" width="0.0120%" height="15" fill="rgb(235,151,15)" fg:x="893" fg:w="1"/><text x="11.0039%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="10.7539%" y="869" width="0.0120%" height="15" fill="rgb(237,209,11)" fg:x="893" fg:w="1"/><text x="11.0039%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="10.7539%" y="853" width="0.0120%" height="15" fill="rgb(243,227,24)" fg:x="893" fg:w="1"/><text x="11.0039%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="10.7539%" y="837" width="0.0120%" height="15" fill="rgb(239,193,16)" fg:x="893" fg:w="1"/><text x="11.0039%" y="847.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="10.7539%" y="821" width="0.0120%" height="15" fill="rgb(231,27,9)" fg:x="893" fg:w="1"/><text x="11.0039%" y="831.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.01%)</title><rect x="10.7539%" y="805" width="0.0120%" height="15" fill="rgb(219,169,10)" fg:x="893" fg:w="1"/><text x="11.0039%" y="815.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.01%)</title><rect x="10.7539%" y="789" width="0.0120%" height="15" fill="rgb(244,229,43)" fg:x="893" fg:w="1"/><text x="11.0039%" y="799.50"></text></g><g><title>mi_page_fresh (1 samples, 0.01%)</title><rect x="10.7539%" y="773" width="0.0120%" height="15" fill="rgb(254,38,20)" fg:x="893" fg:w="1"/><text x="11.0039%" y="783.50"></text></g><g><title>mi_page_fresh_alloc (1 samples, 0.01%)</title><rect x="10.7539%" y="757" width="0.0120%" height="15" fill="rgb(250,47,30)" fg:x="893" fg:w="1"/><text x="11.0039%" y="767.50"></text></g><g><title>mi_segments_page_alloc (1 samples, 0.01%)</title><rect x="10.7539%" y="741" width="0.0120%" height="15" fill="rgb(224,124,36)" fg:x="893" fg:w="1"/><text x="11.0039%" y="751.50"></text></g><g><title>mi_segments_page_find_and_allocate (1 samples, 0.01%)</title><rect x="10.7539%" y="725" width="0.0120%" height="15" fill="rgb(246,68,51)" fg:x="893" fg:w="1"/><text x="11.0039%" y="735.50"></text></g><g><title>mi_segment_span_allocate (1 samples, 0.01%)</title><rect x="10.7539%" y="709" width="0.0120%" height="15" fill="rgb(253,43,49)" fg:x="893" fg:w="1"/><text x="11.0039%" y="719.50"></text></g><g><title>mi_segment_ensure_committed (1 samples, 0.01%)</title><rect x="10.7539%" y="693" width="0.0120%" height="15" fill="rgb(219,54,36)" fg:x="893" fg:w="1"/><text x="11.0039%" y="703.50"></text></g><g><title>mi_segment_commitx (1 samples, 0.01%)</title><rect x="10.7539%" y="677" width="0.0120%" height="15" fill="rgb(227,133,34)" fg:x="893" fg:w="1"/><text x="11.0039%" y="687.50"></text></g><g><title>mi_segment_commit_mask (1 samples, 0.01%)</title><rect x="10.7539%" y="661" width="0.0120%" height="15" fill="rgb(247,227,15)" fg:x="893" fg:w="1"/><text x="11.0039%" y="671.50"></text></g><g><title>mi_segment_commit_mask (1 samples, 0.01%)</title><rect x="10.7539%" y="645" width="0.0120%" height="15" fill="rgb(229,96,14)" fg:x="893" fg:w="1"/><text x="11.0039%" y="655.50"></text></g><g><title>mi_commit_mask_create (1 samples, 0.01%)</title><rect x="10.7539%" y="629" width="0.0120%" height="15" fill="rgb(220,79,17)" fg:x="893" fg:w="1"/><text x="11.0039%" y="639.50"></text></g><g><title>mi_commit_mask_create (1 samples, 0.01%)</title><rect x="10.7539%" y="613" width="0.0120%" height="15" fill="rgb(205,131,53)" fg:x="893" fg:w="1"/><text x="11.0039%" y="623.50"></text></g><g><title>mi_commit_mask_create_empty (1 samples, 0.01%)</title><rect x="10.7539%" y="597" width="0.0120%" height="15" fill="rgb(209,50,29)" fg:x="893" fg:w="1"/><text x="11.0039%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 0.01%)</title><rect x="10.7659%" y="1045" width="0.0120%" height="15" fill="rgb(245,86,46)" fg:x="894" fg:w="1"/><text x="11.0159%" y="1055.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold::{{closure}} (1 samples, 0.01%)</title><rect x="10.7659%" y="1029" width="0.0120%" height="15" fill="rgb(235,66,46)" fg:x="894" fg:w="1"/><text x="11.0159%" y="1039.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal (1 samples, 0.01%)</title><rect x="10.7659%" y="1013" width="0.0120%" height="15" fill="rgb(232,148,31)" fg:x="894" fg:w="1"/><text x="11.0159%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1 samples, 0.01%)</title><rect x="10.7659%" y="997" width="0.0120%" height="15" fill="rgb(217,149,8)" fg:x="894" fg:w="1"/><text x="11.0159%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.01%)</title><rect x="10.7659%" y="981" width="0.0120%" height="15" fill="rgb(209,183,11)" fg:x="894" fg:w="1"/><text x="11.0159%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.01%)</title><rect x="10.7659%" y="965" width="0.0120%" height="15" fill="rgb(208,55,20)" fg:x="894" fg:w="1"/><text x="11.0159%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="10.7659%" y="949" width="0.0120%" height="15" fill="rgb(218,39,14)" fg:x="894" fg:w="1"/><text x="11.0159%" y="959.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.01%)</title><rect x="10.7659%" y="933" width="0.0120%" height="15" fill="rgb(216,169,33)" fg:x="894" fg:w="1"/><text x="11.0159%" y="943.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1 samples, 0.01%)</title><rect x="10.7659%" y="917" width="0.0120%" height="15" fill="rgb(233,80,24)" fg:x="894" fg:w="1"/><text x="11.0159%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (1 samples, 0.01%)</title><rect x="10.7659%" y="901" width="0.0120%" height="15" fill="rgb(213,179,31)" fg:x="894" fg:w="1"/><text x="11.0159%" y="911.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (1 samples, 0.01%)</title><rect x="10.7659%" y="885" width="0.0120%" height="15" fill="rgb(209,19,5)" fg:x="894" fg:w="1"/><text x="11.0159%" y="895.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (1 samples, 0.01%)</title><rect x="10.7659%" y="869" width="0.0120%" height="15" fill="rgb(219,18,35)" fg:x="894" fg:w="1"/><text x="11.0159%" y="879.50"></text></g><g><title>crossbeam_epoch::default::pin (1 samples, 0.01%)</title><rect x="10.7659%" y="853" width="0.0120%" height="15" fill="rgb(209,169,16)" fg:x="894" fg:w="1"/><text x="11.0159%" y="863.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1 samples, 0.01%)</title><rect x="10.7659%" y="837" width="0.0120%" height="15" fill="rgb(245,90,51)" fg:x="894" fg:w="1"/><text x="11.0159%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="10.7659%" y="821" width="0.0120%" height="15" fill="rgb(220,99,45)" fg:x="894" fg:w="1"/><text x="11.0159%" y="831.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (1 samples, 0.01%)</title><rect x="10.7659%" y="805" width="0.0120%" height="15" fill="rgb(249,89,25)" fg:x="894" fg:w="1"/><text x="11.0159%" y="815.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (1 samples, 0.01%)</title><rect x="10.7659%" y="789" width="0.0120%" height="15" fill="rgb(239,193,0)" fg:x="894" fg:w="1"/><text x="11.0159%" y="799.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (1 samples, 0.01%)</title><rect x="10.7659%" y="773" width="0.0120%" height="15" fill="rgb(231,126,1)" fg:x="894" fg:w="1"/><text x="11.0159%" y="783.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (1 samples, 0.01%)</title><rect x="10.7659%" y="757" width="0.0120%" height="15" fill="rgb(243,166,3)" fg:x="894" fg:w="1"/><text x="11.0159%" y="767.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (1 samples, 0.01%)</title><rect x="10.7659%" y="741" width="0.0120%" height="15" fill="rgb(223,22,34)" fg:x="894" fg:w="1"/><text x="11.0159%" y="751.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (1 samples, 0.01%)</title><rect x="10.7659%" y="725" width="0.0120%" height="15" fill="rgb(251,52,51)" fg:x="894" fg:w="1"/><text x="11.0159%" y="735.50"></text></g><g><title>&lt;crossbeam_epoch::sync::list::Iter&lt;T,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="10.7659%" y="709" width="0.0120%" height="15" fill="rgb(221,165,28)" fg:x="894" fg:w="1"/><text x="11.0159%" y="719.50"></text></g><g><title>crossbeam_epoch::atomic::Shared&lt;T&gt;::tag (1 samples, 0.01%)</title><rect x="10.7659%" y="693" width="0.0120%" height="15" fill="rgb(218,121,47)" fg:x="894" fg:w="1"/><text x="11.0159%" y="703.50"></text></g><g><title>crossbeam_epoch::atomic::decompose_tag (1 samples, 0.01%)</title><rect x="10.7659%" y="677" width="0.0120%" height="15" fill="rgb(209,120,9)" fg:x="894" fg:w="1"/><text x="11.0159%" y="687.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (2 samples, 0.02%)</title><rect x="10.7659%" y="1077" width="0.0241%" height="15" fill="rgb(236,68,12)" fg:x="894" fg:w="2"/><text x="11.0159%" y="1087.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2 samples, 0.02%)</title><rect x="10.7659%" y="1061" width="0.0241%" height="15" fill="rgb(225,194,26)" fg:x="894" fg:w="2"/><text x="11.0159%" y="1071.50"></text></g><g><title>rayon_core::sleep::Sleep::no_work_found (1 samples, 0.01%)</title><rect x="10.7779%" y="1045" width="0.0120%" height="15" fill="rgb(231,84,39)" fg:x="895" fg:w="1"/><text x="11.0279%" y="1055.50"></text></g><g><title>__GI___sched_yield (1 samples, 0.01%)</title><rect x="10.7779%" y="1029" width="0.0120%" height="15" fill="rgb(210,11,45)" fg:x="895" fg:w="1"/><text x="11.0279%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.7779%" y="1013" width="0.0120%" height="15" fill="rgb(224,54,52)" fg:x="895" fg:w="1"/><text x="11.0279%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.7779%" y="997" width="0.0120%" height="15" fill="rgb(238,102,14)" fg:x="895" fg:w="1"/><text x="11.0279%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.7779%" y="981" width="0.0120%" height="15" fill="rgb(243,160,52)" fg:x="895" fg:w="1"/><text x="11.0279%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.7779%" y="965" width="0.0120%" height="15" fill="rgb(216,114,19)" fg:x="895" fg:w="1"/><text x="11.0279%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.7779%" y="949" width="0.0120%" height="15" fill="rgb(244,166,37)" fg:x="895" fg:w="1"/><text x="11.0279%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.7779%" y="933" width="0.0120%" height="15" fill="rgb(246,29,44)" fg:x="895" fg:w="1"/><text x="11.0279%" y="943.50"></text></g><g><title>_mi_heap_realloc_zero (3 samples, 0.04%)</title><rect x="10.8020%" y="629" width="0.0361%" height="15" fill="rgb(215,56,53)" fg:x="897" fg:w="3"/><text x="11.0520%" y="639.50"></text></g><g><title>mi_heap_malloc (3 samples, 0.04%)</title><rect x="10.8020%" y="613" width="0.0361%" height="15" fill="rgb(217,60,2)" fg:x="897" fg:w="3"/><text x="11.0520%" y="623.50"></text></g><g><title>_mi_malloc_generic (3 samples, 0.04%)</title><rect x="10.8020%" y="597" width="0.0361%" height="15" fill="rgb(207,26,24)" fg:x="897" fg:w="3"/><text x="11.0520%" y="607.50"></text></g><g><title>mi_page_queue_find_free_ex (3 samples, 0.04%)</title><rect x="10.8020%" y="581" width="0.0361%" height="15" fill="rgb(252,210,15)" fg:x="897" fg:w="3"/><text x="11.0520%" y="591.50"></text></g><g><title>mi_page_fresh (3 samples, 0.04%)</title><rect x="10.8020%" y="565" width="0.0361%" height="15" fill="rgb(253,209,26)" fg:x="897" fg:w="3"/><text x="11.0520%" y="575.50"></text></g><g><title>mi_page_fresh_alloc (2 samples, 0.02%)</title><rect x="10.8141%" y="549" width="0.0241%" height="15" fill="rgb(238,170,14)" fg:x="898" fg:w="2"/><text x="11.0641%" y="559.50"></text></g><g><title>mi_page_extend_free (2 samples, 0.02%)</title><rect x="10.8141%" y="533" width="0.0241%" height="15" fill="rgb(216,178,15)" fg:x="898" fg:w="2"/><text x="11.0641%" y="543.50"></text></g><g><title>mi_page_free_list_extend_secure (2 samples, 0.02%)</title><rect x="10.8141%" y="517" width="0.0241%" height="15" fill="rgb(250,197,2)" fg:x="898" fg:w="2"/><text x="11.0641%" y="527.50"></text></g><g><title>mi_block_set_next (1 samples, 0.01%)</title><rect x="10.8261%" y="501" width="0.0120%" height="15" fill="rgb(212,70,42)" fg:x="899" fg:w="1"/><text x="11.0761%" y="511.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.01%)</title><rect x="10.8261%" y="485" width="0.0120%" height="15" fill="rgb(227,213,9)" fg:x="899" fg:w="1"/><text x="11.0761%" y="495.50"></text></g><g><title>mi_ptr_encode (1 samples, 0.01%)</title><rect x="10.8261%" y="469" width="0.0120%" height="15" fill="rgb(245,99,25)" fg:x="899" fg:w="1"/><text x="11.0761%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.8261%" y="453" width="0.0120%" height="15" fill="rgb(250,82,29)" fg:x="899" fg:w="1"/><text x="11.0761%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.8261%" y="437" width="0.0120%" height="15" fill="rgb(241,226,54)" fg:x="899" fg:w="1"/><text x="11.0761%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.8261%" y="421" width="0.0120%" height="15" fill="rgb(221,99,41)" fg:x="899" fg:w="1"/><text x="11.0761%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.8261%" y="405" width="0.0120%" height="15" fill="rgb(213,90,21)" fg:x="899" fg:w="1"/><text x="11.0761%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.8261%" y="389" width="0.0120%" height="15" fill="rgb(205,208,24)" fg:x="899" fg:w="1"/><text x="11.0761%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.8261%" y="373" width="0.0120%" height="15" fill="rgb(246,31,12)" fg:x="899" fg:w="1"/><text x="11.0761%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.8261%" y="357" width="0.0120%" height="15" fill="rgb(213,154,6)" fg:x="899" fg:w="1"/><text x="11.0761%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.8261%" y="341" width="0.0120%" height="15" fill="rgb(222,163,29)" fg:x="899" fg:w="1"/><text x="11.0761%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.8261%" y="325" width="0.0120%" height="15" fill="rgb(227,201,8)" fg:x="899" fg:w="1"/><text x="11.0761%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.8261%" y="309" width="0.0120%" height="15" fill="rgb(233,9,32)" fg:x="899" fg:w="1"/><text x="11.0761%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.8261%" y="293" width="0.0120%" height="15" fill="rgb(217,54,24)" fg:x="899" fg:w="1"/><text x="11.0761%" y="303.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::AssemblerX64 as wasmer_compiler_singlepass::emitter_x64::EmitterX64&gt;::emit_host_redirection (4 samples, 0.05%)</title><rect x="10.8020%" y="789" width="0.0482%" height="15" fill="rgb(235,192,0)" fg:x="897" fg:w="4"/><text x="11.0520%" y="799.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::AssemblerX64 as wasmer_compiler_singlepass::emitter_x64::EmitterX64&gt;::emit_jmp_location (4 samples, 0.05%)</title><rect x="10.8020%" y="773" width="0.0482%" height="15" fill="rgb(235,45,9)" fg:x="897" fg:w="4"/><text x="11.0520%" y="783.50"></text></g><g><title>&lt;dynasmrt::VecAssembler&lt;R&gt; as dynasmrt::DynasmApi&gt;::push (4 samples, 0.05%)</title><rect x="10.8020%" y="757" width="0.0482%" height="15" fill="rgb(246,42,40)" fg:x="897" fg:w="4"/><text x="11.0520%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.05%)</title><rect x="10.8020%" y="741" width="0.0482%" height="15" fill="rgb(248,111,24)" fg:x="897" fg:w="4"/><text x="11.0520%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.05%)</title><rect x="10.8020%" y="725" width="0.0482%" height="15" fill="rgb(249,65,22)" fg:x="897" fg:w="4"/><text x="11.0520%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.05%)</title><rect x="10.8020%" y="709" width="0.0482%" height="15" fill="rgb(238,111,51)" fg:x="897" fg:w="4"/><text x="11.0520%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.05%)</title><rect x="10.8020%" y="693" width="0.0482%" height="15" fill="rgb(250,118,22)" fg:x="897" fg:w="4"/><text x="11.0520%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.05%)</title><rect x="10.8020%" y="677" width="0.0482%" height="15" fill="rgb(234,84,26)" fg:x="897" fg:w="4"/><text x="11.0520%" y="687.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.05%)</title><rect x="10.8020%" y="661" width="0.0482%" height="15" fill="rgb(243,172,12)" fg:x="897" fg:w="4"/><text x="11.0520%" y="671.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.05%)</title><rect x="10.8020%" y="645" width="0.0482%" height="15" fill="rgb(236,150,49)" fg:x="897" fg:w="4"/><text x="11.0520%" y="655.50"></text></g><g><title>mi_realloc (1 samples, 0.01%)</title><rect x="10.8382%" y="629" width="0.0120%" height="15" fill="rgb(225,197,26)" fg:x="900" fg:w="1"/><text x="11.0882%" y="639.50"></text></g><g><title>_mi_deferred_free (2 samples, 0.02%)</title><rect x="10.8502%" y="597" width="0.0241%" height="15" fill="rgb(214,17,42)" fg:x="901" fg:w="2"/><text x="11.1002%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.8622%" y="581" width="0.0120%" height="15" fill="rgb(224,165,40)" fg:x="902" fg:w="1"/><text x="11.1122%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.04%)</title><rect x="10.8502%" y="693" width="0.0361%" height="15" fill="rgb(246,100,4)" fg:x="901" fg:w="3"/><text x="11.1002%" y="703.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.04%)</title><rect x="10.8502%" y="677" width="0.0361%" height="15" fill="rgb(222,103,0)" fg:x="901" fg:w="3"/><text x="11.1002%" y="687.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.04%)</title><rect x="10.8502%" y="661" width="0.0361%" height="15" fill="rgb(227,189,26)" fg:x="901" fg:w="3"/><text x="11.1002%" y="671.50"></text></g><g><title>_mi_heap_realloc_zero (3 samples, 0.04%)</title><rect x="10.8502%" y="645" width="0.0361%" height="15" fill="rgb(214,202,17)" fg:x="901" fg:w="3"/><text x="11.1002%" y="655.50"></text></g><g><title>mi_heap_malloc (3 samples, 0.04%)</title><rect x="10.8502%" y="629" width="0.0361%" height="15" fill="rgb(229,111,3)" fg:x="901" fg:w="3"/><text x="11.1002%" y="639.50"></text></g><g><title>_mi_malloc_generic (3 samples, 0.04%)</title><rect x="10.8502%" y="613" width="0.0361%" height="15" fill="rgb(229,172,15)" fg:x="901" fg:w="3"/><text x="11.1002%" y="623.50"></text></g><g><title>_mi_heap_delayed_free (1 samples, 0.01%)</title><rect x="10.8743%" y="597" width="0.0120%" height="15" fill="rgb(230,224,35)" fg:x="903" fg:w="1"/><text x="11.1243%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.9465%" y="597" width="0.0120%" height="15" fill="rgb(251,141,6)" fg:x="909" fg:w="1"/><text x="11.1965%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.9465%" y="581" width="0.0120%" height="15" fill="rgb(225,208,6)" fg:x="909" fg:w="1"/><text x="11.1965%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.9465%" y="565" width="0.0120%" height="15" fill="rgb(246,181,16)" fg:x="909" fg:w="1"/><text x="11.1965%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.9465%" y="549" width="0.0120%" height="15" fill="rgb(227,129,36)" fg:x="909" fg:w="1"/><text x="11.1965%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.9465%" y="533" width="0.0120%" height="15" fill="rgb(248,117,24)" fg:x="909" fg:w="1"/><text x="11.1965%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.9465%" y="517" width="0.0120%" height="15" fill="rgb(214,185,35)" fg:x="909" fg:w="1"/><text x="11.1965%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.9465%" y="501" width="0.0120%" height="15" fill="rgb(236,150,34)" fg:x="909" fg:w="1"/><text x="11.1965%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.9465%" y="485" width="0.0120%" height="15" fill="rgb(243,228,27)" fg:x="909" fg:w="1"/><text x="11.1965%" y="495.50"></text></g><g><title>_mi_random_shuffle (1 samples, 0.01%)</title><rect x="10.9586%" y="597" width="0.0120%" height="15" fill="rgb(245,77,44)" fg:x="910" fg:w="1"/><text x="11.2086%" y="607.50"></text></g><g><title>mi_page_extend_free (9 samples, 0.11%)</title><rect x="10.8863%" y="629" width="0.1084%" height="15" fill="rgb(235,214,42)" fg:x="904" fg:w="9"/><text x="11.1363%" y="639.50"></text></g><g><title>mi_page_free_list_extend_secure (9 samples, 0.11%)</title><rect x="10.8863%" y="613" width="0.1084%" height="15" fill="rgb(221,74,3)" fg:x="904" fg:w="9"/><text x="11.1363%" y="623.50"></text></g><g><title>mi_block_set_next (2 samples, 0.02%)</title><rect x="10.9706%" y="597" width="0.0241%" height="15" fill="rgb(206,121,29)" fg:x="911" fg:w="2"/><text x="11.2206%" y="607.50"></text></g><g><title>mi_block_set_nextx (2 samples, 0.02%)</title><rect x="10.9706%" y="581" width="0.0241%" height="15" fill="rgb(249,131,53)" fg:x="911" fg:w="2"/><text x="11.2206%" y="591.50"></text></g><g><title>mi_ptr_encode (2 samples, 0.02%)</title><rect x="10.9706%" y="565" width="0.0241%" height="15" fill="rgb(236,170,29)" fg:x="911" fg:w="2"/><text x="11.2206%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.9827%" y="549" width="0.0120%" height="15" fill="rgb(247,96,15)" fg:x="912" fg:w="1"/><text x="11.2327%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.9827%" y="533" width="0.0120%" height="15" fill="rgb(211,210,7)" fg:x="912" fg:w="1"/><text x="11.2327%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.9827%" y="517" width="0.0120%" height="15" fill="rgb(240,88,50)" fg:x="912" fg:w="1"/><text x="11.2327%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.9827%" y="501" width="0.0120%" height="15" fill="rgb(209,229,26)" fg:x="912" fg:w="1"/><text x="11.2327%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.9827%" y="485" width="0.0120%" height="15" fill="rgb(210,68,23)" fg:x="912" fg:w="1"/><text x="11.2327%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.9827%" y="469" width="0.0120%" height="15" fill="rgb(229,180,13)" fg:x="912" fg:w="1"/><text x="11.2327%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="10.9827%" y="453" width="0.0120%" height="15" fill="rgb(236,53,44)" fg:x="912" fg:w="1"/><text x="11.2327%" y="463.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::AssemblerX64 as wasmer_compiler_singlepass::emitter_x64::EmitterX64&gt;::emit_mov (14 samples, 0.17%)</title><rect x="10.8502%" y="789" width="0.1686%" height="15" fill="rgb(244,214,29)" fg:x="901" fg:w="14"/><text x="11.1002%" y="799.50"></text></g><g><title>&lt;dynasmrt::VecAssembler&lt;R&gt; as dynasmrt::DynasmApi&gt;::push (14 samples, 0.17%)</title><rect x="10.8502%" y="773" width="0.1686%" height="15" fill="rgb(220,75,29)" fg:x="901" fg:w="14"/><text x="11.1002%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (14 samples, 0.17%)</title><rect x="10.8502%" y="757" width="0.1686%" height="15" fill="rgb(214,183,37)" fg:x="901" fg:w="14"/><text x="11.1002%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (14 samples, 0.17%)</title><rect x="10.8502%" y="741" width="0.1686%" height="15" fill="rgb(239,117,29)" fg:x="901" fg:w="14"/><text x="11.1002%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (14 samples, 0.17%)</title><rect x="10.8502%" y="725" width="0.1686%" height="15" fill="rgb(237,171,35)" fg:x="901" fg:w="14"/><text x="11.1002%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 0.17%)</title><rect x="10.8502%" y="709" width="0.1686%" height="15" fill="rgb(229,178,53)" fg:x="901" fg:w="14"/><text x="11.1002%" y="719.50"></text></g><g><title>_mi_malloc_generic (11 samples, 0.13%)</title><rect x="10.8863%" y="693" width="0.1325%" height="15" fill="rgb(210,102,19)" fg:x="904" fg:w="11"/><text x="11.1363%" y="703.50"></text></g><g><title>mi_page_queue_find_free_ex (11 samples, 0.13%)</title><rect x="10.8863%" y="677" width="0.1325%" height="15" fill="rgb(235,127,22)" fg:x="904" fg:w="11"/><text x="11.1363%" y="687.50"></text></g><g><title>mi_page_fresh (11 samples, 0.13%)</title><rect x="10.8863%" y="661" width="0.1325%" height="15" fill="rgb(244,31,31)" fg:x="904" fg:w="11"/><text x="11.1363%" y="671.50"></text></g><g><title>mi_page_fresh_alloc (11 samples, 0.13%)</title><rect x="10.8863%" y="645" width="0.1325%" height="15" fill="rgb(231,43,21)" fg:x="904" fg:w="11"/><text x="11.1363%" y="655.50"></text></g><g><title>mi_segments_page_alloc (2 samples, 0.02%)</title><rect x="10.9947%" y="629" width="0.0241%" height="15" fill="rgb(217,131,35)" fg:x="913" fg:w="2"/><text x="11.2447%" y="639.50"></text></g><g><title>mi_segments_page_find_and_allocate (2 samples, 0.02%)</title><rect x="10.9947%" y="613" width="0.0241%" height="15" fill="rgb(221,149,4)" fg:x="913" fg:w="2"/><text x="11.2447%" y="623.50"></text></g><g><title>mi_segment_span_allocate (2 samples, 0.02%)</title><rect x="10.9947%" y="597" width="0.0241%" height="15" fill="rgb(232,170,28)" fg:x="913" fg:w="2"/><text x="11.2447%" y="607.50"></text></g><g><title>mi_segment_ensure_committed (2 samples, 0.02%)</title><rect x="10.9947%" y="581" width="0.0241%" height="15" fill="rgb(238,56,10)" fg:x="913" fg:w="2"/><text x="11.2447%" y="591.50"></text></g><g><title>mi_segment_commitx (2 samples, 0.02%)</title><rect x="10.9947%" y="565" width="0.0241%" height="15" fill="rgb(235,196,14)" fg:x="913" fg:w="2"/><text x="11.2447%" y="575.50"></text></g><g><title>mi_segment_commit_mask (2 samples, 0.02%)</title><rect x="10.9947%" y="549" width="0.0241%" height="15" fill="rgb(216,45,48)" fg:x="913" fg:w="2"/><text x="11.2447%" y="559.50"></text></g><g><title>mi_segment_commit_mask (2 samples, 0.02%)</title><rect x="10.9947%" y="533" width="0.0241%" height="15" fill="rgb(238,213,17)" fg:x="913" fg:w="2"/><text x="11.2447%" y="543.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::MachineX86_64 as wasmer_compiler_singlepass::machine::Machine&gt;::gen_import_call_trampoline (19 samples, 0.23%)</title><rect x="10.8020%" y="805" width="0.2288%" height="15" fill="rgb(212,13,2)" fg:x="897" fg:w="19"/><text x="11.0520%" y="815.50"></text></g><g><title>wasmer_compiler_singlepass::machine_x64::AssemblerX64::finalize (1 samples, 0.01%)</title><rect x="11.0188%" y="789" width="0.0120%" height="15" fill="rgb(240,114,20)" fg:x="915" fg:w="1"/><text x="11.2688%" y="799.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="11.0188%" y="773" width="0.0120%" height="15" fill="rgb(228,41,40)" fg:x="915" fg:w="1"/><text x="11.2688%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_compiler_singlepass::machine_x64::MachineX86_64&gt; (1 samples, 0.01%)</title><rect x="11.0308%" y="805" width="0.0120%" height="15" fill="rgb(244,132,35)" fg:x="916" fg:w="1"/><text x="11.2808%" y="815.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (21 samples, 0.25%)</title><rect x="10.8020%" y="949" width="0.2529%" height="15" fill="rgb(253,189,4)" fg:x="897" fg:w="21"/><text x="11.0520%" y="959.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (21 samples, 0.25%)</title><rect x="10.8020%" y="933" width="0.2529%" height="15" fill="rgb(224,37,19)" fg:x="897" fg:w="21"/><text x="11.0520%" y="943.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (21 samples, 0.25%)</title><rect x="10.8020%" y="917" width="0.2529%" height="15" fill="rgb(235,223,18)" fg:x="897" fg:w="21"/><text x="11.0520%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.25%)</title><rect x="10.8020%" y="901" width="0.2529%" height="15" fill="rgb(235,163,25)" fg:x="897" fg:w="21"/><text x="11.0520%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (21 samples, 0.25%)</title><rect x="10.8020%" y="885" width="0.2529%" height="15" fill="rgb(217,145,28)" fg:x="897" fg:w="21"/><text x="11.0520%" y="895.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (21 samples, 0.25%)</title><rect x="10.8020%" y="869" width="0.2529%" height="15" fill="rgb(223,223,32)" fg:x="897" fg:w="21"/><text x="11.0520%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (21 samples, 0.25%)</title><rect x="10.8020%" y="853" width="0.2529%" height="15" fill="rgb(227,189,39)" fg:x="897" fg:w="21"/><text x="11.0520%" y="863.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::compiler::SinglepassCompiler as wasmer_compiler::compiler::Compiler&gt;::compile_module::{{closure}} (21 samples, 0.25%)</title><rect x="10.8020%" y="837" width="0.2529%" height="15" fill="rgb(248,10,22)" fg:x="897" fg:w="21"/><text x="11.0520%" y="847.50"></text></g><g><title>wasmer_compiler_singlepass::machine::gen_import_call_trampoline (21 samples, 0.25%)</title><rect x="10.8020%" y="821" width="0.2529%" height="15" fill="rgb(248,46,39)" fg:x="897" fg:w="21"/><text x="11.0520%" y="831.50"></text></g><g><title>wasmer_compiler_singlepass::machine_x64::MachineX86_64::new (1 samples, 0.01%)</title><rect x="11.0429%" y="805" width="0.0120%" height="15" fill="rgb(248,113,48)" fg:x="917" fg:w="1"/><text x="11.2929%" y="815.50"></text></g><g><title>wasmer_compiler_singlepass::machine_x64::AssemblerX64::new (1 samples, 0.01%)</title><rect x="11.0429%" y="789" width="0.0120%" height="15" fill="rgb(245,16,25)" fg:x="917" fg:w="1"/><text x="11.2929%" y="799.50"></text></g><g><title>dynasmrt::VecAssembler&lt;R&gt;::new (1 samples, 0.01%)</title><rect x="11.0429%" y="773" width="0.0120%" height="15" fill="rgb(249,152,16)" fg:x="917" fg:w="1"/><text x="11.2929%" y="783.50"></text></g><g><title>dynasmrt::components::LabelRegistry::new (1 samples, 0.01%)</title><rect x="11.0429%" y="757" width="0.0120%" height="15" fill="rgb(250,16,1)" fg:x="917" fg:w="1"/><text x="11.2929%" y="767.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V&gt;::new (1 samples, 0.01%)</title><rect x="11.0429%" y="741" width="0.0120%" height="15" fill="rgb(249,138,3)" fg:x="917" fg:w="1"/><text x="11.2929%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="11.0429%" y="725" width="0.0120%" height="15" fill="rgb(227,71,41)" fg:x="917" fg:w="1"/><text x="11.2929%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="11.0429%" y="709" width="0.0120%" height="15" fill="rgb(209,184,23)" fg:x="917" fg:w="1"/><text x="11.2929%" y="719.50"></text></g><g><title>std::collections::hash::map::RandomState::new (1 samples, 0.01%)</title><rect x="11.0429%" y="693" width="0.0120%" height="15" fill="rgb(223,215,31)" fg:x="917" fg:w="1"/><text x="11.2929%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="11.0429%" y="677" width="0.0120%" height="15" fill="rgb(210,146,28)" fg:x="917" fg:w="1"/><text x="11.2929%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="11.0429%" y="661" width="0.0120%" height="15" fill="rgb(209,183,41)" fg:x="917" fg:w="1"/><text x="11.2929%" y="671.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (1 samples, 0.01%)</title><rect x="11.0429%" y="645" width="0.0120%" height="15" fill="rgb(209,224,45)" fg:x="917" fg:w="1"/><text x="11.2929%" y="655.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="11.0429%" y="629" width="0.0120%" height="15" fill="rgb(224,209,51)" fg:x="917" fg:w="1"/><text x="11.2929%" y="639.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_initialize (1 samples, 0.01%)</title><rect x="11.0429%" y="613" width="0.0120%" height="15" fill="rgb(223,17,39)" fg:x="917" fg:w="1"/><text x="11.2929%" y="623.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::initialize (1 samples, 0.01%)</title><rect x="11.0429%" y="597" width="0.0120%" height="15" fill="rgb(234,204,37)" fg:x="917" fg:w="1"/><text x="11.2929%" y="607.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit::{{closure}} (1 samples, 0.01%)</title><rect x="11.0429%" y="581" width="0.0120%" height="15" fill="rgb(236,120,5)" fg:x="917" fg:w="1"/><text x="11.2929%" y="591.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__init (1 samples, 0.01%)</title><rect x="11.0429%" y="565" width="0.0120%" height="15" fill="rgb(248,97,27)" fg:x="917" fg:w="1"/><text x="11.2929%" y="575.50"></text></g><g><title>std::sys::unix::rand::hashmap_random_keys (1 samples, 0.01%)</title><rect x="11.0429%" y="549" width="0.0120%" height="15" fill="rgb(240,66,17)" fg:x="917" fg:w="1"/><text x="11.2929%" y="559.50"></text></g><g><title>std::sys::unix::rand::imp::fill_bytes (1 samples, 0.01%)</title><rect x="11.0429%" y="533" width="0.0120%" height="15" fill="rgb(210,79,3)" fg:x="917" fg:w="1"/><text x="11.2929%" y="543.50"></text></g><g><title>std::sys::unix::rand::imp::getrandom_fill_bytes (1 samples, 0.01%)</title><rect x="11.0429%" y="517" width="0.0120%" height="15" fill="rgb(214,176,27)" fg:x="917" fg:w="1"/><text x="11.2929%" y="527.50"></text></g><g><title>std::sys::unix::rand::imp::getrandom (1 samples, 0.01%)</title><rect x="11.0429%" y="501" width="0.0120%" height="15" fill="rgb(235,185,3)" fg:x="917" fg:w="1"/><text x="11.2929%" y="511.50"></text></g><g><title>std::sys::unix::rand::imp::getrandom::getrandom (1 samples, 0.01%)</title><rect x="11.0429%" y="485" width="0.0120%" height="15" fill="rgb(227,24,12)" fg:x="917" fg:w="1"/><text x="11.2929%" y="495.50"></text></g><g><title>__GI___getrandom (1 samples, 0.01%)</title><rect x="11.0429%" y="469" width="0.0120%" height="15" fill="rgb(252,169,48)" fg:x="917" fg:w="1"/><text x="11.2929%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.0429%" y="453" width="0.0120%" height="15" fill="rgb(212,65,1)" fg:x="917" fg:w="1"/><text x="11.2929%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.0429%" y="437" width="0.0120%" height="15" fill="rgb(242,39,24)" fg:x="917" fg:w="1"/><text x="11.2929%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.0429%" y="421" width="0.0120%" height="15" fill="rgb(249,32,23)" fg:x="917" fg:w="1"/><text x="11.2929%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.0429%" y="405" width="0.0120%" height="15" fill="rgb(251,195,23)" fg:x="917" fg:w="1"/><text x="11.2929%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.0429%" y="389" width="0.0120%" height="15" fill="rgb(236,174,8)" fg:x="917" fg:w="1"/><text x="11.2929%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.0429%" y="373" width="0.0120%" height="15" fill="rgb(220,197,8)" fg:x="917" fg:w="1"/><text x="11.2929%" y="383.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::AssemblerX64 as wasmer_compiler_singlepass::emitter_x64::EmitterX64&gt;::emit_host_redirection (3 samples, 0.04%)</title><rect x="11.0549%" y="613" width="0.0361%" height="15" fill="rgb(240,108,37)" fg:x="918" fg:w="3"/><text x="11.3049%" y="623.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::AssemblerX64 as wasmer_compiler_singlepass::emitter_x64::EmitterX64&gt;::emit_jmp_location (3 samples, 0.04%)</title><rect x="11.0549%" y="597" width="0.0361%" height="15" fill="rgb(232,176,24)" fg:x="918" fg:w="3"/><text x="11.3049%" y="607.50"></text></g><g><title>&lt;dynasmrt::VecAssembler&lt;R&gt; as dynasmrt::DynasmApi&gt;::push (3 samples, 0.04%)</title><rect x="11.0549%" y="581" width="0.0361%" height="15" fill="rgb(243,35,29)" fg:x="918" fg:w="3"/><text x="11.3049%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.04%)</title><rect x="11.0549%" y="565" width="0.0361%" height="15" fill="rgb(210,37,18)" fg:x="918" fg:w="3"/><text x="11.3049%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.04%)</title><rect x="11.0549%" y="549" width="0.0361%" height="15" fill="rgb(224,184,40)" fg:x="918" fg:w="3"/><text x="11.3049%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.04%)</title><rect x="11.0549%" y="533" width="0.0361%" height="15" fill="rgb(236,39,29)" fg:x="918" fg:w="3"/><text x="11.3049%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.04%)</title><rect x="11.0549%" y="517" width="0.0361%" height="15" fill="rgb(232,48,39)" fg:x="918" fg:w="3"/><text x="11.3049%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.04%)</title><rect x="11.0549%" y="501" width="0.0361%" height="15" fill="rgb(236,34,42)" fg:x="918" fg:w="3"/><text x="11.3049%" y="511.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.04%)</title><rect x="11.0549%" y="485" width="0.0361%" height="15" fill="rgb(243,106,37)" fg:x="918" fg:w="3"/><text x="11.3049%" y="495.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.04%)</title><rect x="11.0549%" y="469" width="0.0361%" height="15" fill="rgb(218,96,6)" fg:x="918" fg:w="3"/><text x="11.3049%" y="479.50"></text></g><g><title>_mi_heap_realloc_zero (3 samples, 0.04%)</title><rect x="11.0549%" y="453" width="0.0361%" height="15" fill="rgb(235,130,12)" fg:x="918" fg:w="3"/><text x="11.3049%" y="463.50"></text></g><g><title>mi_heap_malloc (3 samples, 0.04%)</title><rect x="11.0549%" y="437" width="0.0361%" height="15" fill="rgb(231,95,0)" fg:x="918" fg:w="3"/><text x="11.3049%" y="447.50"></text></g><g><title>_mi_malloc_generic (3 samples, 0.04%)</title><rect x="11.0549%" y="421" width="0.0361%" height="15" fill="rgb(228,12,23)" fg:x="918" fg:w="3"/><text x="11.3049%" y="431.50"></text></g><g><title>mi_page_queue_find_free_ex (3 samples, 0.04%)</title><rect x="11.0549%" y="405" width="0.0361%" height="15" fill="rgb(216,12,1)" fg:x="918" fg:w="3"/><text x="11.3049%" y="415.50"></text></g><g><title>mi_page_fresh (3 samples, 0.04%)</title><rect x="11.0549%" y="389" width="0.0361%" height="15" fill="rgb(219,59,3)" fg:x="918" fg:w="3"/><text x="11.3049%" y="399.50"></text></g><g><title>mi_page_fresh_alloc (2 samples, 0.02%)</title><rect x="11.0670%" y="373" width="0.0241%" height="15" fill="rgb(215,208,46)" fg:x="919" fg:w="2"/><text x="11.3170%" y="383.50"></text></g><g><title>mi_page_extend_free (2 samples, 0.02%)</title><rect x="11.0670%" y="357" width="0.0241%" height="15" fill="rgb(254,224,29)" fg:x="919" fg:w="2"/><text x="11.3170%" y="367.50"></text></g><g><title>mi_page_free_list_extend_secure (2 samples, 0.02%)</title><rect x="11.0670%" y="341" width="0.0241%" height="15" fill="rgb(232,14,29)" fg:x="919" fg:w="2"/><text x="11.3170%" y="351.50"></text></g><g><title>mi_block_set_next (1 samples, 0.01%)</title><rect x="11.0790%" y="325" width="0.0120%" height="15" fill="rgb(208,45,52)" fg:x="920" fg:w="1"/><text x="11.3290%" y="335.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.01%)</title><rect x="11.0790%" y="309" width="0.0120%" height="15" fill="rgb(234,191,28)" fg:x="920" fg:w="1"/><text x="11.3290%" y="319.50"></text></g><g><title>mi_ptr_encode (1 samples, 0.01%)</title><rect x="11.0790%" y="293" width="0.0120%" height="15" fill="rgb(244,67,43)" fg:x="920" fg:w="1"/><text x="11.3290%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.0790%" y="277" width="0.0120%" height="15" fill="rgb(236,189,24)" fg:x="920" fg:w="1"/><text x="11.3290%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.0790%" y="261" width="0.0120%" height="15" fill="rgb(239,214,33)" fg:x="920" fg:w="1"/><text x="11.3290%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.0790%" y="245" width="0.0120%" height="15" fill="rgb(226,176,41)" fg:x="920" fg:w="1"/><text x="11.3290%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.0790%" y="229" width="0.0120%" height="15" fill="rgb(248,47,8)" fg:x="920" fg:w="1"/><text x="11.3290%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.0790%" y="213" width="0.0120%" height="15" fill="rgb(218,81,44)" fg:x="920" fg:w="1"/><text x="11.3290%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.0790%" y="197" width="0.0120%" height="15" fill="rgb(213,98,6)" fg:x="920" fg:w="1"/><text x="11.3290%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.0790%" y="181" width="0.0120%" height="15" fill="rgb(222,85,22)" fg:x="920" fg:w="1"/><text x="11.3290%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.0790%" y="165" width="0.0120%" height="15" fill="rgb(239,46,39)" fg:x="920" fg:w="1"/><text x="11.3290%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.0790%" y="149" width="0.0120%" height="15" fill="rgb(237,12,29)" fg:x="920" fg:w="1"/><text x="11.3290%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.0790%" y="133" width="0.0120%" height="15" fill="rgb(214,77,8)" fg:x="920" fg:w="1"/><text x="11.3290%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.0790%" y="117" width="0.0120%" height="15" fill="rgb(217,168,37)" fg:x="920" fg:w="1"/><text x="11.3290%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.04%)</title><rect x="11.0910%" y="517" width="0.0361%" height="15" fill="rgb(221,217,23)" fg:x="921" fg:w="3"/><text x="11.3410%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.04%)</title><rect x="11.0910%" y="501" width="0.0361%" height="15" fill="rgb(243,229,36)" fg:x="921" fg:w="3"/><text x="11.3410%" y="511.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.04%)</title><rect x="11.0910%" y="485" width="0.0361%" height="15" fill="rgb(251,163,40)" fg:x="921" fg:w="3"/><text x="11.3410%" y="495.50"></text></g><g><title>_mi_heap_realloc_zero (3 samples, 0.04%)</title><rect x="11.0910%" y="469" width="0.0361%" height="15" fill="rgb(237,222,12)" fg:x="921" fg:w="3"/><text x="11.3410%" y="479.50"></text></g><g><title>mi_heap_malloc (3 samples, 0.04%)</title><rect x="11.0910%" y="453" width="0.0361%" height="15" fill="rgb(248,132,6)" fg:x="921" fg:w="3"/><text x="11.3410%" y="463.50"></text></g><g><title>_mi_malloc_generic (3 samples, 0.04%)</title><rect x="11.0910%" y="437" width="0.0361%" height="15" fill="rgb(227,167,50)" fg:x="921" fg:w="3"/><text x="11.3410%" y="447.50"></text></g><g><title>mi_page_queue_find_free_ex (3 samples, 0.04%)</title><rect x="11.0910%" y="421" width="0.0361%" height="15" fill="rgb(242,84,37)" fg:x="921" fg:w="3"/><text x="11.3410%" y="431.50"></text></g><g><title>mi_page_fresh (3 samples, 0.04%)</title><rect x="11.0910%" y="405" width="0.0361%" height="15" fill="rgb(212,4,50)" fg:x="921" fg:w="3"/><text x="11.3410%" y="415.50"></text></g><g><title>mi_page_fresh_alloc (3 samples, 0.04%)</title><rect x="11.0910%" y="389" width="0.0361%" height="15" fill="rgb(230,228,32)" fg:x="921" fg:w="3"/><text x="11.3410%" y="399.50"></text></g><g><title>mi_page_extend_free (3 samples, 0.04%)</title><rect x="11.0910%" y="373" width="0.0361%" height="15" fill="rgb(248,217,23)" fg:x="921" fg:w="3"/><text x="11.3410%" y="383.50"></text></g><g><title>mi_page_free_list_extend_secure (3 samples, 0.04%)</title><rect x="11.0910%" y="357" width="0.0361%" height="15" fill="rgb(238,197,32)" fg:x="921" fg:w="3"/><text x="11.3410%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.1151%" y="341" width="0.0120%" height="15" fill="rgb(236,106,1)" fg:x="923" fg:w="1"/><text x="11.3651%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.1151%" y="325" width="0.0120%" height="15" fill="rgb(219,228,13)" fg:x="923" fg:w="1"/><text x="11.3651%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.1151%" y="309" width="0.0120%" height="15" fill="rgb(238,30,35)" fg:x="923" fg:w="1"/><text x="11.3651%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.1151%" y="293" width="0.0120%" height="15" fill="rgb(236,70,23)" fg:x="923" fg:w="1"/><text x="11.3651%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.1151%" y="277" width="0.0120%" height="15" fill="rgb(249,104,48)" fg:x="923" fg:w="1"/><text x="11.3651%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.1151%" y="261" width="0.0120%" height="15" fill="rgb(254,117,50)" fg:x="923" fg:w="1"/><text x="11.3651%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.1633%" y="421" width="0.0120%" height="15" fill="rgb(223,152,4)" fg:x="927" fg:w="1"/><text x="11.4133%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.1633%" y="405" width="0.0120%" height="15" fill="rgb(245,6,2)" fg:x="927" fg:w="1"/><text x="11.4133%" y="415.50"></text></g><g><title>mi_page_extend_free (6 samples, 0.07%)</title><rect x="11.1272%" y="453" width="0.0723%" height="15" fill="rgb(249,150,24)" fg:x="924" fg:w="6"/><text x="11.3772%" y="463.50"></text></g><g><title>mi_page_free_list_extend_secure (6 samples, 0.07%)</title><rect x="11.1272%" y="437" width="0.0723%" height="15" fill="rgb(228,185,42)" fg:x="924" fg:w="6"/><text x="11.3772%" y="447.50"></text></g><g><title>mi_block_set_next (2 samples, 0.02%)</title><rect x="11.1753%" y="421" width="0.0241%" height="15" fill="rgb(226,39,33)" fg:x="928" fg:w="2"/><text x="11.4253%" y="431.50"></text></g><g><title>mi_block_set_nextx (2 samples, 0.02%)</title><rect x="11.1753%" y="405" width="0.0241%" height="15" fill="rgb(221,166,19)" fg:x="928" fg:w="2"/><text x="11.4253%" y="415.50"></text></g><g><title>mi_ptr_encode (2 samples, 0.02%)</title><rect x="11.1753%" y="389" width="0.0241%" height="15" fill="rgb(209,109,2)" fg:x="928" fg:w="2"/><text x="11.4253%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.1874%" y="373" width="0.0120%" height="15" fill="rgb(252,216,26)" fg:x="929" fg:w="1"/><text x="11.4374%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.1874%" y="357" width="0.0120%" height="15" fill="rgb(227,173,36)" fg:x="929" fg:w="1"/><text x="11.4374%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.1874%" y="341" width="0.0120%" height="15" fill="rgb(209,90,7)" fg:x="929" fg:w="1"/><text x="11.4374%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.1874%" y="325" width="0.0120%" height="15" fill="rgb(250,194,11)" fg:x="929" fg:w="1"/><text x="11.4374%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.1874%" y="309" width="0.0120%" height="15" fill="rgb(220,72,50)" fg:x="929" fg:w="1"/><text x="11.4374%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.1874%" y="293" width="0.0120%" height="15" fill="rgb(222,106,48)" fg:x="929" fg:w="1"/><text x="11.4374%" y="303.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::MachineX86_64 as wasmer_compiler_singlepass::machine::Machine&gt;::gen_import_call_trampoline (13 samples, 0.16%)</title><rect x="11.0549%" y="629" width="0.1566%" height="15" fill="rgb(216,220,45)" fg:x="918" fg:w="13"/><text x="11.3049%" y="639.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::AssemblerX64 as wasmer_compiler_singlepass::emitter_x64::EmitterX64&gt;::emit_mov (10 samples, 0.12%)</title><rect x="11.0910%" y="613" width="0.1204%" height="15" fill="rgb(234,112,18)" fg:x="921" fg:w="10"/><text x="11.3410%" y="623.50"></text></g><g><title>&lt;dynasmrt::VecAssembler&lt;R&gt; as dynasmrt::DynasmApi&gt;::push (10 samples, 0.12%)</title><rect x="11.0910%" y="597" width="0.1204%" height="15" fill="rgb(206,179,9)" fg:x="921" fg:w="10"/><text x="11.3410%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10 samples, 0.12%)</title><rect x="11.0910%" y="581" width="0.1204%" height="15" fill="rgb(215,115,40)" fg:x="921" fg:w="10"/><text x="11.3410%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (10 samples, 0.12%)</title><rect x="11.0910%" y="565" width="0.1204%" height="15" fill="rgb(222,69,34)" fg:x="921" fg:w="10"/><text x="11.3410%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.12%)</title><rect x="11.0910%" y="549" width="0.1204%" height="15" fill="rgb(209,161,10)" fg:x="921" fg:w="10"/><text x="11.3410%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.12%)</title><rect x="11.0910%" y="533" width="0.1204%" height="15" fill="rgb(217,6,38)" fg:x="921" fg:w="10"/><text x="11.3410%" y="543.50"></text></g><g><title>_mi_malloc_generic (7 samples, 0.08%)</title><rect x="11.1272%" y="517" width="0.0843%" height="15" fill="rgb(229,229,48)" fg:x="924" fg:w="7"/><text x="11.3772%" y="527.50"></text></g><g><title>mi_page_queue_find_free_ex (7 samples, 0.08%)</title><rect x="11.1272%" y="501" width="0.0843%" height="15" fill="rgb(225,21,28)" fg:x="924" fg:w="7"/><text x="11.3772%" y="511.50"></text></g><g><title>mi_page_fresh (7 samples, 0.08%)</title><rect x="11.1272%" y="485" width="0.0843%" height="15" fill="rgb(206,33,13)" fg:x="924" fg:w="7"/><text x="11.3772%" y="495.50"></text></g><g><title>mi_page_fresh_alloc (7 samples, 0.08%)</title><rect x="11.1272%" y="469" width="0.0843%" height="15" fill="rgb(242,178,17)" fg:x="924" fg:w="7"/><text x="11.3772%" y="479.50"></text></g><g><title>mi_page_queue_push (1 samples, 0.01%)</title><rect x="11.1994%" y="453" width="0.0120%" height="15" fill="rgb(220,162,5)" fg:x="930" fg:w="1"/><text x="11.4494%" y="463.50"></text></g><g><title>mi_page_set_in_full (1 samples, 0.01%)</title><rect x="11.1994%" y="437" width="0.0120%" height="15" fill="rgb(210,33,43)" fg:x="930" fg:w="1"/><text x="11.4494%" y="447.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (14 samples, 0.17%)</title><rect x="11.0549%" y="773" width="0.1686%" height="15" fill="rgb(216,116,54)" fg:x="918" fg:w="14"/><text x="11.3049%" y="783.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (14 samples, 0.17%)</title><rect x="11.0549%" y="757" width="0.1686%" height="15" fill="rgb(249,92,24)" fg:x="918" fg:w="14"/><text x="11.3049%" y="767.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (14 samples, 0.17%)</title><rect x="11.0549%" y="741" width="0.1686%" height="15" fill="rgb(231,189,14)" fg:x="918" fg:w="14"/><text x="11.3049%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.17%)</title><rect x="11.0549%" y="725" width="0.1686%" height="15" fill="rgb(230,8,41)" fg:x="918" fg:w="14"/><text x="11.3049%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (14 samples, 0.17%)</title><rect x="11.0549%" y="709" width="0.1686%" height="15" fill="rgb(249,7,27)" fg:x="918" fg:w="14"/><text x="11.3049%" y="719.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (14 samples, 0.17%)</title><rect x="11.0549%" y="693" width="0.1686%" height="15" fill="rgb(232,86,5)" fg:x="918" fg:w="14"/><text x="11.3049%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (14 samples, 0.17%)</title><rect x="11.0549%" y="677" width="0.1686%" height="15" fill="rgb(224,175,18)" fg:x="918" fg:w="14"/><text x="11.3049%" y="687.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::compiler::SinglepassCompiler as wasmer_compiler::compiler::Compiler&gt;::compile_module::{{closure}} (14 samples, 0.17%)</title><rect x="11.0549%" y="661" width="0.1686%" height="15" fill="rgb(220,129,12)" fg:x="918" fg:w="14"/><text x="11.3049%" y="671.50"></text></g><g><title>wasmer_compiler_singlepass::machine::gen_import_call_trampoline (14 samples, 0.17%)</title><rect x="11.0549%" y="645" width="0.1686%" height="15" fill="rgb(210,19,36)" fg:x="918" fg:w="14"/><text x="11.3049%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_compiler_singlepass::machine_x64::MachineX86_64&gt; (1 samples, 0.01%)</title><rect x="11.2115%" y="629" width="0.0120%" height="15" fill="rgb(219,96,14)" fg:x="931" fg:w="1"/><text x="11.4615%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_compiler_singlepass::machine::TrapTable&gt; (1 samples, 0.01%)</title><rect x="11.2115%" y="613" width="0.0120%" height="15" fill="rgb(249,106,1)" fg:x="931" fg:w="1"/><text x="11.4615%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;usize,wasmer_types::trapcode::TrapCode&gt;&gt; (1 samples, 0.01%)</title><rect x="11.2115%" y="597" width="0.0120%" height="15" fill="rgb(249,155,20)" fg:x="931" fg:w="1"/><text x="11.4615%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="11.2115%" y="581" width="0.0120%" height="15" fill="rgb(244,168,9)" fg:x="931" fg:w="1"/><text x="11.4615%" y="591.50"></text></g><g><title>core::mem::drop (1 samples, 0.01%)</title><rect x="11.2115%" y="565" width="0.0120%" height="15" fill="rgb(216,23,50)" fg:x="931" fg:w="1"/><text x="11.4615%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;usize,wasmer_types::trapcode::TrapCode&gt;&gt; (1 samples, 0.01%)</title><rect x="11.2115%" y="549" width="0.0120%" height="15" fill="rgb(224,219,20)" fg:x="931" fg:w="1"/><text x="11.4615%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="11.2115%" y="533" width="0.0120%" height="15" fill="rgb(222,156,15)" fg:x="931" fg:w="1"/><text x="11.4615%" y="543.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.01%)</title><rect x="11.2235%" y="181" width="0.0120%" height="15" fill="rgb(231,97,17)" fg:x="932" fg:w="1"/><text x="11.4735%" y="191.50"></text></g><g><title>mi_page_free_list_extend_secure (1 samples, 0.01%)</title><rect x="11.2235%" y="165" width="0.0120%" height="15" fill="rgb(218,70,48)" fg:x="932" fg:w="1"/><text x="11.4735%" y="175.50"></text></g><g><title>mi_block_set_next (1 samples, 0.01%)</title><rect x="11.2235%" y="149" width="0.0120%" height="15" fill="rgb(212,196,52)" fg:x="932" fg:w="1"/><text x="11.4735%" y="159.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.01%)</title><rect x="11.2235%" y="133" width="0.0120%" height="15" fill="rgb(243,203,18)" fg:x="932" fg:w="1"/><text x="11.4735%" y="143.50"></text></g><g><title>mi_ptr_encode (1 samples, 0.01%)</title><rect x="11.2235%" y="117" width="0.0120%" height="15" fill="rgb(252,125,41)" fg:x="932" fg:w="1"/><text x="11.4735%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.2235%" y="101" width="0.0120%" height="15" fill="rgb(223,180,33)" fg:x="932" fg:w="1"/><text x="11.4735%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.2235%" y="85" width="0.0120%" height="15" fill="rgb(254,159,46)" fg:x="932" fg:w="1"/><text x="11.4735%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.2235%" y="69" width="0.0120%" height="15" fill="rgb(254,38,10)" fg:x="932" fg:w="1"/><text x="11.4735%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.2235%" y="53" width="0.0120%" height="15" fill="rgb(208,217,32)" fg:x="932" fg:w="1"/><text x="11.4735%" y="63.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::AssemblerX64 as wasmer_compiler_singlepass::emitter_x64::EmitterX64&gt;::emit_host_redirection (2 samples, 0.02%)</title><rect x="11.2235%" y="437" width="0.0241%" height="15" fill="rgb(221,120,13)" fg:x="932" fg:w="2"/><text x="11.4735%" y="447.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::AssemblerX64 as wasmer_compiler_singlepass::emitter_x64::EmitterX64&gt;::emit_jmp_location (2 samples, 0.02%)</title><rect x="11.2235%" y="421" width="0.0241%" height="15" fill="rgb(246,54,52)" fg:x="932" fg:w="2"/><text x="11.4735%" y="431.50"></text></g><g><title>&lt;dynasmrt::VecAssembler&lt;R&gt; as dynasmrt::DynasmApi&gt;::push (2 samples, 0.02%)</title><rect x="11.2235%" y="405" width="0.0241%" height="15" fill="rgb(242,34,25)" fg:x="932" fg:w="2"/><text x="11.4735%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.02%)</title><rect x="11.2235%" y="389" width="0.0241%" height="15" fill="rgb(247,209,9)" fg:x="932" fg:w="2"/><text x="11.4735%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.02%)</title><rect x="11.2235%" y="373" width="0.0241%" height="15" fill="rgb(228,71,26)" fg:x="932" fg:w="2"/><text x="11.4735%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.02%)</title><rect x="11.2235%" y="357" width="0.0241%" height="15" fill="rgb(222,145,49)" fg:x="932" fg:w="2"/><text x="11.4735%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="11.2235%" y="341" width="0.0241%" height="15" fill="rgb(218,121,17)" fg:x="932" fg:w="2"/><text x="11.4735%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.02%)</title><rect x="11.2235%" y="325" width="0.0241%" height="15" fill="rgb(244,50,7)" fg:x="932" fg:w="2"/><text x="11.4735%" y="335.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.02%)</title><rect x="11.2235%" y="309" width="0.0241%" height="15" fill="rgb(246,229,37)" fg:x="932" fg:w="2"/><text x="11.4735%" y="319.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.02%)</title><rect x="11.2235%" y="293" width="0.0241%" height="15" fill="rgb(225,18,5)" fg:x="932" fg:w="2"/><text x="11.4735%" y="303.50"></text></g><g><title>_mi_heap_realloc_zero (2 samples, 0.02%)</title><rect x="11.2235%" y="277" width="0.0241%" height="15" fill="rgb(213,204,8)" fg:x="932" fg:w="2"/><text x="11.4735%" y="287.50"></text></g><g><title>mi_heap_malloc (2 samples, 0.02%)</title><rect x="11.2235%" y="261" width="0.0241%" height="15" fill="rgb(238,103,6)" fg:x="932" fg:w="2"/><text x="11.4735%" y="271.50"></text></g><g><title>_mi_malloc_generic (2 samples, 0.02%)</title><rect x="11.2235%" y="245" width="0.0241%" height="15" fill="rgb(222,25,35)" fg:x="932" fg:w="2"/><text x="11.4735%" y="255.50"></text></g><g><title>mi_page_queue_find_free_ex (2 samples, 0.02%)</title><rect x="11.2235%" y="229" width="0.0241%" height="15" fill="rgb(213,203,35)" fg:x="932" fg:w="2"/><text x="11.4735%" y="239.50"></text></g><g><title>mi_page_fresh (2 samples, 0.02%)</title><rect x="11.2235%" y="213" width="0.0241%" height="15" fill="rgb(221,79,53)" fg:x="932" fg:w="2"/><text x="11.4735%" y="223.50"></text></g><g><title>mi_page_fresh_alloc (2 samples, 0.02%)</title><rect x="11.2235%" y="197" width="0.0241%" height="15" fill="rgb(243,200,35)" fg:x="932" fg:w="2"/><text x="11.4735%" y="207.50"></text></g><g><title>mi_segments_page_alloc (1 samples, 0.01%)</title><rect x="11.2355%" y="181" width="0.0120%" height="15" fill="rgb(248,60,25)" fg:x="933" fg:w="1"/><text x="11.4855%" y="191.50"></text></g><g><title>mi_segments_page_find_and_allocate (1 samples, 0.01%)</title><rect x="11.2355%" y="165" width="0.0120%" height="15" fill="rgb(227,53,46)" fg:x="933" fg:w="1"/><text x="11.4855%" y="175.50"></text></g><g><title>mi_segment_slice_split (1 samples, 0.01%)</title><rect x="11.2355%" y="149" width="0.0120%" height="15" fill="rgb(216,120,32)" fg:x="933" fg:w="1"/><text x="11.4855%" y="159.50"></text></g><g><title>mi_segment_span_free (1 samples, 0.01%)</title><rect x="11.2355%" y="133" width="0.0120%" height="15" fill="rgb(220,134,1)" fg:x="933" fg:w="1"/><text x="11.4855%" y="143.50"></text></g><g><title>mi_segment_perhaps_decommit (1 samples, 0.01%)</title><rect x="11.2355%" y="117" width="0.0120%" height="15" fill="rgb(237,168,5)" fg:x="933" fg:w="1"/><text x="11.4855%" y="127.50"></text></g><g><title>mi_option_get (1 samples, 0.01%)</title><rect x="11.2355%" y="101" width="0.0120%" height="15" fill="rgb(231,100,33)" fg:x="933" fg:w="1"/><text x="11.4855%" y="111.50"></text></g><g><title>_mi_memcpy_aligned (1 samples, 0.01%)</title><rect x="11.2476%" y="277" width="0.0120%" height="15" fill="rgb(236,177,47)" fg:x="934" fg:w="1"/><text x="11.4976%" y="287.50"></text></g><g><title>_mi_memcpy (1 samples, 0.01%)</title><rect x="11.2476%" y="261" width="0.0120%" height="15" fill="rgb(235,7,49)" fg:x="934" fg:w="1"/><text x="11.4976%" y="271.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="11.2476%" y="245" width="0.0120%" height="15" fill="rgb(232,119,22)" fg:x="934" fg:w="1"/><text x="11.4976%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.2717%" y="165" width="0.0120%" height="15" fill="rgb(254,73,53)" fg:x="936" fg:w="1"/><text x="11.5217%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.2717%" y="149" width="0.0120%" height="15" fill="rgb(251,35,20)" fg:x="936" fg:w="1"/><text x="11.5217%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.2717%" y="133" width="0.0120%" height="15" fill="rgb(241,119,20)" fg:x="936" fg:w="1"/><text x="11.5217%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.2717%" y="117" width="0.0120%" height="15" fill="rgb(207,102,14)" fg:x="936" fg:w="1"/><text x="11.5217%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.2717%" y="101" width="0.0120%" height="15" fill="rgb(248,201,50)" fg:x="936" fg:w="1"/><text x="11.5217%" y="111.50"></text></g><g><title>_mi_heap_realloc_zero (4 samples, 0.05%)</title><rect x="11.2476%" y="293" width="0.0482%" height="15" fill="rgb(222,185,44)" fg:x="934" fg:w="4"/><text x="11.4976%" y="303.50"></text></g><g><title>mi_heap_malloc (3 samples, 0.04%)</title><rect x="11.2596%" y="277" width="0.0361%" height="15" fill="rgb(218,107,18)" fg:x="935" fg:w="3"/><text x="11.5096%" y="287.50"></text></g><g><title>_mi_malloc_generic (3 samples, 0.04%)</title><rect x="11.2596%" y="261" width="0.0361%" height="15" fill="rgb(237,177,39)" fg:x="935" fg:w="3"/><text x="11.5096%" y="271.50"></text></g><g><title>mi_page_queue_find_free_ex (3 samples, 0.04%)</title><rect x="11.2596%" y="245" width="0.0361%" height="15" fill="rgb(246,69,6)" fg:x="935" fg:w="3"/><text x="11.5096%" y="255.50"></text></g><g><title>mi_page_fresh (3 samples, 0.04%)</title><rect x="11.2596%" y="229" width="0.0361%" height="15" fill="rgb(234,208,37)" fg:x="935" fg:w="3"/><text x="11.5096%" y="239.50"></text></g><g><title>mi_page_fresh_alloc (3 samples, 0.04%)</title><rect x="11.2596%" y="213" width="0.0361%" height="15" fill="rgb(225,4,6)" fg:x="935" fg:w="3"/><text x="11.5096%" y="223.50"></text></g><g><title>mi_page_extend_free (3 samples, 0.04%)</title><rect x="11.2596%" y="197" width="0.0361%" height="15" fill="rgb(233,45,0)" fg:x="935" fg:w="3"/><text x="11.5096%" y="207.50"></text></g><g><title>mi_page_free_list_extend_secure (3 samples, 0.04%)</title><rect x="11.2596%" y="181" width="0.0361%" height="15" fill="rgb(226,136,5)" fg:x="935" fg:w="3"/><text x="11.5096%" y="191.50"></text></g><g><title>mi_block_set_next (1 samples, 0.01%)</title><rect x="11.2837%" y="165" width="0.0120%" height="15" fill="rgb(211,91,47)" fg:x="937" fg:w="1"/><text x="11.5337%" y="175.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.01%)</title><rect x="11.2837%" y="149" width="0.0120%" height="15" fill="rgb(242,88,51)" fg:x="937" fg:w="1"/><text x="11.5337%" y="159.50"></text></g><g><title>mi_ptr_encode (1 samples, 0.01%)</title><rect x="11.2837%" y="133" width="0.0120%" height="15" fill="rgb(230,91,28)" fg:x="937" fg:w="1"/><text x="11.5337%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.2837%" y="117" width="0.0120%" height="15" fill="rgb(254,186,29)" fg:x="937" fg:w="1"/><text x="11.5337%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.2837%" y="101" width="0.0120%" height="15" fill="rgb(238,6,4)" fg:x="937" fg:w="1"/><text x="11.5337%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.2837%" y="85" width="0.0120%" height="15" fill="rgb(221,151,16)" fg:x="937" fg:w="1"/><text x="11.5337%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.2837%" y="69" width="0.0120%" height="15" fill="rgb(251,143,52)" fg:x="937" fg:w="1"/><text x="11.5337%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.2837%" y="53" width="0.0120%" height="15" fill="rgb(206,90,15)" fg:x="937" fg:w="1"/><text x="11.5337%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.2837%" y="37" width="0.0120%" height="15" fill="rgb(218,35,8)" fg:x="937" fg:w="1"/><text x="11.5337%" y="47.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5 samples, 0.06%)</title><rect x="11.2476%" y="341" width="0.0602%" height="15" fill="rgb(239,215,6)" fg:x="934" fg:w="5"/><text x="11.4976%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (5 samples, 0.06%)</title><rect x="11.2476%" y="325" width="0.0602%" height="15" fill="rgb(245,116,39)" fg:x="934" fg:w="5"/><text x="11.4976%" y="335.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.06%)</title><rect x="11.2476%" y="309" width="0.0602%" height="15" fill="rgb(242,65,28)" fg:x="934" fg:w="5"/><text x="11.4976%" y="319.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.01%)</title><rect x="11.2958%" y="293" width="0.0120%" height="15" fill="rgb(252,132,53)" fg:x="938" fg:w="1"/><text x="11.5458%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.2958%" y="277" width="0.0120%" height="15" fill="rgb(224,159,50)" fg:x="938" fg:w="1"/><text x="11.5458%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.2958%" y="261" width="0.0120%" height="15" fill="rgb(224,93,4)" fg:x="938" fg:w="1"/><text x="11.5458%" y="271.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (227 samples, 2.73%)</title><rect x="8.6344%" y="1525" width="2.7336%" height="15" fill="rgb(208,81,34)" fg:x="717" fg:w="227"/><text x="8.8844%" y="1535.50">ra..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (227 samples, 2.73%)</title><rect x="8.6344%" y="1509" width="2.7336%" height="15" fill="rgb(233,92,54)" fg:x="717" fg:w="227"/><text x="8.8844%" y="1519.50">ra..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (226 samples, 2.72%)</title><rect x="8.6464%" y="1493" width="2.7216%" height="15" fill="rgb(237,21,14)" fg:x="718" fg:w="226"/><text x="8.8964%" y="1503.50">ra..</text></g><g><title>rayon_core::join::join_context (159 samples, 1.91%)</title><rect x="9.4533%" y="1477" width="1.9147%" height="15" fill="rgb(249,128,51)" fg:x="785" fg:w="159"/><text x="9.7033%" y="1487.50">r..</text></g><g><title>rayon_core::registry::in_worker (159 samples, 1.91%)</title><rect x="9.4533%" y="1461" width="1.9147%" height="15" fill="rgb(223,129,24)" fg:x="785" fg:w="159"/><text x="9.7033%" y="1471.50">r..</text></g><g><title>rayon_core::join::join_context::{{closure}} (159 samples, 1.91%)</title><rect x="9.4533%" y="1445" width="1.9147%" height="15" fill="rgb(231,168,25)" fg:x="785" fg:w="159"/><text x="9.7033%" y="1455.50">r..</text></g><g><title>rayon_core::unwind::halt_unwinding (147 samples, 1.77%)</title><rect x="9.5978%" y="1429" width="1.7702%" height="15" fill="rgb(224,39,20)" fg:x="797" fg:w="147"/><text x="9.8478%" y="1439.50">r..</text></g><g><title>std::panic::catch_unwind (147 samples, 1.77%)</title><rect x="9.5978%" y="1413" width="1.7702%" height="15" fill="rgb(225,152,53)" fg:x="797" fg:w="147"/><text x="9.8478%" y="1423.50">s..</text></g><g><title>std::panicking::try (147 samples, 1.77%)</title><rect x="9.5978%" y="1397" width="1.7702%" height="15" fill="rgb(252,17,24)" fg:x="797" fg:w="147"/><text x="9.8478%" y="1407.50">s..</text></g><g><title>std::panicking::try::do_call (147 samples, 1.77%)</title><rect x="9.5978%" y="1381" width="1.7702%" height="15" fill="rgb(250,114,30)" fg:x="797" fg:w="147"/><text x="9.8478%" y="1391.50">s..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (146 samples, 1.76%)</title><rect x="9.6098%" y="1365" width="1.7582%" height="15" fill="rgb(229,5,4)" fg:x="798" fg:w="146"/><text x="9.8598%" y="1375.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (146 samples, 1.76%)</title><rect x="9.6098%" y="1349" width="1.7582%" height="15" fill="rgb(225,176,49)" fg:x="798" fg:w="146"/><text x="9.8598%" y="1359.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (146 samples, 1.76%)</title><rect x="9.6098%" y="1333" width="1.7582%" height="15" fill="rgb(224,221,49)" fg:x="798" fg:w="146"/><text x="9.8598%" y="1343.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (146 samples, 1.76%)</title><rect x="9.6098%" y="1317" width="1.7582%" height="15" fill="rgb(253,169,27)" fg:x="798" fg:w="146"/><text x="9.8598%" y="1327.50"></text></g><g><title>rayon_core::join::join_context (89 samples, 1.07%)</title><rect x="10.2962%" y="1301" width="1.0718%" height="15" fill="rgb(211,206,16)" fg:x="855" fg:w="89"/><text x="10.5462%" y="1311.50"></text></g><g><title>rayon_core::registry::in_worker (89 samples, 1.07%)</title><rect x="10.2962%" y="1285" width="1.0718%" height="15" fill="rgb(244,87,35)" fg:x="855" fg:w="89"/><text x="10.5462%" y="1295.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (89 samples, 1.07%)</title><rect x="10.2962%" y="1269" width="1.0718%" height="15" fill="rgb(246,28,10)" fg:x="855" fg:w="89"/><text x="10.5462%" y="1279.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (86 samples, 1.04%)</title><rect x="10.3324%" y="1253" width="1.0356%" height="15" fill="rgb(229,12,44)" fg:x="858" fg:w="86"/><text x="10.5824%" y="1263.50"></text></g><g><title>std::panic::catch_unwind (86 samples, 1.04%)</title><rect x="10.3324%" y="1237" width="1.0356%" height="15" fill="rgb(210,145,37)" fg:x="858" fg:w="86"/><text x="10.5824%" y="1247.50"></text></g><g><title>std::panicking::try (86 samples, 1.04%)</title><rect x="10.3324%" y="1221" width="1.0356%" height="15" fill="rgb(227,112,52)" fg:x="858" fg:w="86"/><text x="10.5824%" y="1231.50"></text></g><g><title>std::panicking::try::do_call (86 samples, 1.04%)</title><rect x="10.3324%" y="1205" width="1.0356%" height="15" fill="rgb(238,155,34)" fg:x="858" fg:w="86"/><text x="10.5824%" y="1215.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (86 samples, 1.04%)</title><rect x="10.3324%" y="1189" width="1.0356%" height="15" fill="rgb(239,226,36)" fg:x="858" fg:w="86"/><text x="10.5824%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (86 samples, 1.04%)</title><rect x="10.3324%" y="1173" width="1.0356%" height="15" fill="rgb(230,16,23)" fg:x="858" fg:w="86"/><text x="10.5824%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (86 samples, 1.04%)</title><rect x="10.3324%" y="1157" width="1.0356%" height="15" fill="rgb(236,171,36)" fg:x="858" fg:w="86"/><text x="10.5824%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (86 samples, 1.04%)</title><rect x="10.3324%" y="1141" width="1.0356%" height="15" fill="rgb(221,22,14)" fg:x="858" fg:w="86"/><text x="10.5824%" y="1151.50"></text></g><g><title>rayon_core::join::join_context (50 samples, 0.60%)</title><rect x="10.7659%" y="1125" width="0.6021%" height="15" fill="rgb(242,43,11)" fg:x="894" fg:w="50"/><text x="11.0159%" y="1135.50"></text></g><g><title>rayon_core::registry::in_worker (50 samples, 0.60%)</title><rect x="10.7659%" y="1109" width="0.6021%" height="15" fill="rgb(232,69,23)" fg:x="894" fg:w="50"/><text x="11.0159%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (50 samples, 0.60%)</title><rect x="10.7659%" y="1093" width="0.6021%" height="15" fill="rgb(216,180,54)" fg:x="894" fg:w="50"/><text x="11.0159%" y="1103.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (48 samples, 0.58%)</title><rect x="10.7900%" y="1077" width="0.5780%" height="15" fill="rgb(216,5,24)" fg:x="896" fg:w="48"/><text x="11.0400%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (48 samples, 0.58%)</title><rect x="10.7900%" y="1061" width="0.5780%" height="15" fill="rgb(225,89,9)" fg:x="896" fg:w="48"/><text x="11.0400%" y="1071.50"></text></g><g><title>std::panicking::try (47 samples, 0.57%)</title><rect x="10.8020%" y="1045" width="0.5660%" height="15" fill="rgb(243,75,33)" fg:x="897" fg:w="47"/><text x="11.0520%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (47 samples, 0.57%)</title><rect x="10.8020%" y="1029" width="0.5660%" height="15" fill="rgb(247,141,45)" fg:x="897" fg:w="47"/><text x="11.0520%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (47 samples, 0.57%)</title><rect x="10.8020%" y="1013" width="0.5660%" height="15" fill="rgb(232,177,36)" fg:x="897" fg:w="47"/><text x="11.0520%" y="1023.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (47 samples, 0.57%)</title><rect x="10.8020%" y="997" width="0.5660%" height="15" fill="rgb(219,125,36)" fg:x="897" fg:w="47"/><text x="11.0520%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (47 samples, 0.57%)</title><rect x="10.8020%" y="981" width="0.5660%" height="15" fill="rgb(227,94,9)" fg:x="897" fg:w="47"/><text x="11.0520%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (47 samples, 0.57%)</title><rect x="10.8020%" y="965" width="0.5660%" height="15" fill="rgb(240,34,52)" fg:x="897" fg:w="47"/><text x="11.0520%" y="975.50"></text></g><g><title>rayon_core::join::join_context (26 samples, 0.31%)</title><rect x="11.0549%" y="949" width="0.3131%" height="15" fill="rgb(216,45,12)" fg:x="918" fg:w="26"/><text x="11.3049%" y="959.50"></text></g><g><title>rayon_core::registry::in_worker (26 samples, 0.31%)</title><rect x="11.0549%" y="933" width="0.3131%" height="15" fill="rgb(246,21,19)" fg:x="918" fg:w="26"/><text x="11.3049%" y="943.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (26 samples, 0.31%)</title><rect x="11.0549%" y="917" width="0.3131%" height="15" fill="rgb(213,98,42)" fg:x="918" fg:w="26"/><text x="11.3049%" y="927.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (26 samples, 0.31%)</title><rect x="11.0549%" y="901" width="0.3131%" height="15" fill="rgb(250,136,47)" fg:x="918" fg:w="26"/><text x="11.3049%" y="911.50"></text></g><g><title>std::panic::catch_unwind (26 samples, 0.31%)</title><rect x="11.0549%" y="885" width="0.3131%" height="15" fill="rgb(251,124,27)" fg:x="918" fg:w="26"/><text x="11.3049%" y="895.50"></text></g><g><title>std::panicking::try (26 samples, 0.31%)</title><rect x="11.0549%" y="869" width="0.3131%" height="15" fill="rgb(229,180,14)" fg:x="918" fg:w="26"/><text x="11.3049%" y="879.50"></text></g><g><title>std::panicking::try::do_call (26 samples, 0.31%)</title><rect x="11.0549%" y="853" width="0.3131%" height="15" fill="rgb(245,216,25)" fg:x="918" fg:w="26"/><text x="11.3049%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (26 samples, 0.31%)</title><rect x="11.0549%" y="837" width="0.3131%" height="15" fill="rgb(251,43,5)" fg:x="918" fg:w="26"/><text x="11.3049%" y="847.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (26 samples, 0.31%)</title><rect x="11.0549%" y="821" width="0.3131%" height="15" fill="rgb(250,128,24)" fg:x="918" fg:w="26"/><text x="11.3049%" y="831.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (26 samples, 0.31%)</title><rect x="11.0549%" y="805" width="0.3131%" height="15" fill="rgb(217,117,27)" fg:x="918" fg:w="26"/><text x="11.3049%" y="815.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (26 samples, 0.31%)</title><rect x="11.0549%" y="789" width="0.3131%" height="15" fill="rgb(245,147,4)" fg:x="918" fg:w="26"/><text x="11.3049%" y="799.50"></text></g><g><title>rayon_core::join::join_context (12 samples, 0.14%)</title><rect x="11.2235%" y="773" width="0.1445%" height="15" fill="rgb(242,201,35)" fg:x="932" fg:w="12"/><text x="11.4735%" y="783.50"></text></g><g><title>rayon_core::registry::in_worker (12 samples, 0.14%)</title><rect x="11.2235%" y="757" width="0.1445%" height="15" fill="rgb(218,181,1)" fg:x="932" fg:w="12"/><text x="11.4735%" y="767.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (12 samples, 0.14%)</title><rect x="11.2235%" y="741" width="0.1445%" height="15" fill="rgb(222,6,29)" fg:x="932" fg:w="12"/><text x="11.4735%" y="751.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (12 samples, 0.14%)</title><rect x="11.2235%" y="725" width="0.1445%" height="15" fill="rgb(208,186,3)" fg:x="932" fg:w="12"/><text x="11.4735%" y="735.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.14%)</title><rect x="11.2235%" y="709" width="0.1445%" height="15" fill="rgb(216,36,26)" fg:x="932" fg:w="12"/><text x="11.4735%" y="719.50"></text></g><g><title>std::panicking::try (12 samples, 0.14%)</title><rect x="11.2235%" y="693" width="0.1445%" height="15" fill="rgb(248,201,23)" fg:x="932" fg:w="12"/><text x="11.4735%" y="703.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.14%)</title><rect x="11.2235%" y="677" width="0.1445%" height="15" fill="rgb(251,170,31)" fg:x="932" fg:w="12"/><text x="11.4735%" y="687.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12 samples, 0.14%)</title><rect x="11.2235%" y="661" width="0.1445%" height="15" fill="rgb(207,110,25)" fg:x="932" fg:w="12"/><text x="11.4735%" y="671.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (12 samples, 0.14%)</title><rect x="11.2235%" y="645" width="0.1445%" height="15" fill="rgb(250,54,15)" fg:x="932" fg:w="12"/><text x="11.4735%" y="655.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (12 samples, 0.14%)</title><rect x="11.2235%" y="629" width="0.1445%" height="15" fill="rgb(227,68,33)" fg:x="932" fg:w="12"/><text x="11.4735%" y="639.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.14%)</title><rect x="11.2235%" y="613" width="0.1445%" height="15" fill="rgb(238,34,41)" fg:x="932" fg:w="12"/><text x="11.4735%" y="623.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (12 samples, 0.14%)</title><rect x="11.2235%" y="597" width="0.1445%" height="15" fill="rgb(220,11,15)" fg:x="932" fg:w="12"/><text x="11.4735%" y="607.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (12 samples, 0.14%)</title><rect x="11.2235%" y="581" width="0.1445%" height="15" fill="rgb(246,111,35)" fg:x="932" fg:w="12"/><text x="11.4735%" y="591.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (12 samples, 0.14%)</title><rect x="11.2235%" y="565" width="0.1445%" height="15" fill="rgb(209,88,53)" fg:x="932" fg:w="12"/><text x="11.4735%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.14%)</title><rect x="11.2235%" y="549" width="0.1445%" height="15" fill="rgb(231,185,47)" fg:x="932" fg:w="12"/><text x="11.4735%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (12 samples, 0.14%)</title><rect x="11.2235%" y="533" width="0.1445%" height="15" fill="rgb(233,154,1)" fg:x="932" fg:w="12"/><text x="11.4735%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (12 samples, 0.14%)</title><rect x="11.2235%" y="517" width="0.1445%" height="15" fill="rgb(225,15,46)" fg:x="932" fg:w="12"/><text x="11.4735%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (12 samples, 0.14%)</title><rect x="11.2235%" y="501" width="0.1445%" height="15" fill="rgb(211,135,41)" fg:x="932" fg:w="12"/><text x="11.4735%" y="511.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::compiler::SinglepassCompiler as wasmer_compiler::compiler::Compiler&gt;::compile_module::{{closure}} (12 samples, 0.14%)</title><rect x="11.2235%" y="485" width="0.1445%" height="15" fill="rgb(208,54,0)" fg:x="932" fg:w="12"/><text x="11.4735%" y="495.50"></text></g><g><title>wasmer_compiler_singlepass::machine::gen_import_call_trampoline (12 samples, 0.14%)</title><rect x="11.2235%" y="469" width="0.1445%" height="15" fill="rgb(244,136,14)" fg:x="932" fg:w="12"/><text x="11.4735%" y="479.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::MachineX86_64 as wasmer_compiler_singlepass::machine::Machine&gt;::gen_import_call_trampoline (12 samples, 0.14%)</title><rect x="11.2235%" y="453" width="0.1445%" height="15" fill="rgb(241,56,14)" fg:x="932" fg:w="12"/><text x="11.4735%" y="463.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::machine_x64::AssemblerX64 as wasmer_compiler_singlepass::emitter_x64::EmitterX64&gt;::emit_mov (10 samples, 0.12%)</title><rect x="11.2476%" y="437" width="0.1204%" height="15" fill="rgb(205,80,24)" fg:x="934" fg:w="10"/><text x="11.4976%" y="447.50"></text></g><g><title>&lt;dynasmrt::VecAssembler&lt;R&gt; as dynasmrt::DynasmApi&gt;::push (10 samples, 0.12%)</title><rect x="11.2476%" y="421" width="0.1204%" height="15" fill="rgb(220,57,4)" fg:x="934" fg:w="10"/><text x="11.4976%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10 samples, 0.12%)</title><rect x="11.2476%" y="405" width="0.1204%" height="15" fill="rgb(226,193,50)" fg:x="934" fg:w="10"/><text x="11.4976%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (10 samples, 0.12%)</title><rect x="11.2476%" y="389" width="0.1204%" height="15" fill="rgb(231,168,22)" fg:x="934" fg:w="10"/><text x="11.4976%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.12%)</title><rect x="11.2476%" y="373" width="0.1204%" height="15" fill="rgb(254,215,14)" fg:x="934" fg:w="10"/><text x="11.4976%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.12%)</title><rect x="11.2476%" y="357" width="0.1204%" height="15" fill="rgb(211,115,16)" fg:x="934" fg:w="10"/><text x="11.4976%" y="367.50"></text></g><g><title>_mi_malloc_generic (5 samples, 0.06%)</title><rect x="11.3078%" y="341" width="0.0602%" height="15" fill="rgb(236,210,16)" fg:x="939" fg:w="5"/><text x="11.5578%" y="351.50"></text></g><g><title>mi_page_queue_find_free_ex (4 samples, 0.05%)</title><rect x="11.3198%" y="325" width="0.0482%" height="15" fill="rgb(221,94,12)" fg:x="940" fg:w="4"/><text x="11.5698%" y="335.50"></text></g><g><title>mi_page_fresh (4 samples, 0.05%)</title><rect x="11.3198%" y="309" width="0.0482%" height="15" fill="rgb(235,218,49)" fg:x="940" fg:w="4"/><text x="11.5698%" y="319.50"></text></g><g><title>mi_page_fresh_alloc (4 samples, 0.05%)</title><rect x="11.3198%" y="293" width="0.0482%" height="15" fill="rgb(217,114,14)" fg:x="940" fg:w="4"/><text x="11.5698%" y="303.50"></text></g><g><title>mi_page_extend_free (4 samples, 0.05%)</title><rect x="11.3198%" y="277" width="0.0482%" height="15" fill="rgb(216,145,22)" fg:x="940" fg:w="4"/><text x="11.5698%" y="287.50"></text></g><g><title>mi_page_free_list_extend_secure (4 samples, 0.05%)</title><rect x="11.3198%" y="261" width="0.0482%" height="15" fill="rgb(217,112,39)" fg:x="940" fg:w="4"/><text x="11.5698%" y="271.50"></text></g><g><title>rayon_core::registry::WorkerThread::push (1 samples, 0.01%)</title><rect x="11.3680%" y="1317" width="0.0120%" height="15" fill="rgb(225,85,32)" fg:x="944" fg:w="1"/><text x="11.6180%" y="1327.50"></text></g><g><title>rayon_core::sleep::Sleep::new_internal_jobs (1 samples, 0.01%)</title><rect x="11.3680%" y="1301" width="0.0120%" height="15" fill="rgb(245,209,47)" fg:x="944" fg:w="1"/><text x="11.6180%" y="1311.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.01%)</title><rect x="11.3680%" y="1285" width="0.0120%" height="15" fill="rgb(218,220,15)" fg:x="944" fg:w="1"/><text x="11.6180%" y="1295.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_any_threads (1 samples, 0.01%)</title><rect x="11.3680%" y="1269" width="0.0120%" height="15" fill="rgb(222,202,31)" fg:x="944" fg:w="1"/><text x="11.6180%" y="1279.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_specific_thread (1 samples, 0.01%)</title><rect x="11.3680%" y="1253" width="0.0120%" height="15" fill="rgb(243,203,4)" fg:x="944" fg:w="1"/><text x="11.6180%" y="1263.50"></text></g><g><title>syscall (1 samples, 0.01%)</title><rect x="11.3680%" y="1237" width="0.0120%" height="15" fill="rgb(237,92,17)" fg:x="944" fg:w="1"/><text x="11.6180%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.3680%" y="1221" width="0.0120%" height="15" fill="rgb(231,119,7)" fg:x="944" fg:w="1"/><text x="11.6180%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.3680%" y="1205" width="0.0120%" height="15" fill="rgb(237,82,41)" fg:x="944" fg:w="1"/><text x="11.6180%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.3680%" y="1189" width="0.0120%" height="15" fill="rgb(226,81,48)" fg:x="944" fg:w="1"/><text x="11.6180%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.3680%" y="1173" width="0.0120%" height="15" fill="rgb(234,70,51)" fg:x="944" fg:w="1"/><text x="11.6180%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.3680%" y="1157" width="0.0120%" height="15" fill="rgb(251,86,4)" fg:x="944" fg:w="1"/><text x="11.6180%" y="1167.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.01%)</title><rect x="11.3801%" y="1141" width="0.0120%" height="15" fill="rgb(244,144,28)" fg:x="945" fg:w="1"/><text x="11.6301%" y="1151.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.01%)</title><rect x="11.3801%" y="1125" width="0.0120%" height="15" fill="rgb(232,161,39)" fg:x="945" fg:w="1"/><text x="11.6301%" y="1135.50"></text></g><g><title>rayon_core::sleep::Sleep::no_work_found (1 samples, 0.01%)</title><rect x="11.3801%" y="1109" width="0.0120%" height="15" fill="rgb(247,34,51)" fg:x="945" fg:w="1"/><text x="11.6301%" y="1119.50"></text></g><g><title>__GI___sched_yield (1 samples, 0.01%)</title><rect x="11.3801%" y="1093" width="0.0120%" height="15" fill="rgb(225,132,2)" fg:x="945" fg:w="1"/><text x="11.6301%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.3801%" y="1077" width="0.0120%" height="15" fill="rgb(209,159,44)" fg:x="945" fg:w="1"/><text x="11.6301%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.3801%" y="1061" width="0.0120%" height="15" fill="rgb(251,214,1)" fg:x="945" fg:w="1"/><text x="11.6301%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.3801%" y="1045" width="0.0120%" height="15" fill="rgb(247,84,47)" fg:x="945" fg:w="1"/><text x="11.6301%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.3801%" y="1029" width="0.0120%" height="15" fill="rgb(240,111,43)" fg:x="945" fg:w="1"/><text x="11.6301%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.3801%" y="1013" width="0.0120%" height="15" fill="rgb(215,214,35)" fg:x="945" fg:w="1"/><text x="11.6301%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.3801%" y="997" width="0.0120%" height="15" fill="rgb(248,207,23)" fg:x="945" fg:w="1"/><text x="11.6301%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="11.3801%" y="981" width="0.0120%" height="15" fill="rgb(214,186,4)" fg:x="945" fg:w="1"/><text x="11.6301%" y="991.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::complete (1 samples, 0.01%)</title><rect x="11.3921%" y="1013" width="0.0120%" height="15" fill="rgb(220,133,22)" fg:x="946" fg:w="1"/><text x="11.6421%" y="1023.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::complete (1 samples, 0.01%)</title><rect x="11.3921%" y="997" width="0.0120%" height="15" fill="rgb(239,134,19)" fg:x="946" fg:w="1"/><text x="11.6421%" y="1007.50"></text></g><g><title>&lt;rayon::iter::while_some::WhileSomeFolder&lt;C&gt; as rayon::iter::plumbing::Folder&lt;core::option::Option&lt;T&gt;&gt;&gt;::complete (1 samples, 0.01%)</title><rect x="11.3921%" y="981" width="0.0120%" height="15" fill="rgb(250,140,9)" fg:x="946" fg:w="1"/><text x="11.6421%" y="991.50"></text></g><g><title>&lt;rayon::iter::extend::ListVecFolder&lt;T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::complete (1 samples, 0.01%)</title><rect x="11.3921%" y="965" width="0.0120%" height="15" fill="rgb(225,59,14)" fg:x="946" fg:w="1"/><text x="11.6421%" y="975.50"></text></g><g><title>alloc::collections::linked_list::LinkedList&lt;T&gt;::push_back (1 samples, 0.01%)</title><rect x="11.3921%" y="949" width="0.0120%" height="15" fill="rgb(214,152,51)" fg:x="946" fg:w="1"/><text x="11.6421%" y="959.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="11.3921%" y="933" width="0.0120%" height="15" fill="rgb(251,227,43)" fg:x="946" fg:w="1"/><text x="11.6421%" y="943.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="11.3921%" y="917" width="0.0120%" height="15" fill="rgb(241,96,17)" fg:x="946" fg:w="1"/><text x="11.6421%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="11.3921%" y="901" width="0.0120%" height="15" fill="rgb(234,198,43)" fg:x="946" fg:w="1"/><text x="11.6421%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="11.3921%" y="885" width="0.0120%" height="15" fill="rgb(220,108,29)" fg:x="946" fg:w="1"/><text x="11.6421%" y="895.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="11.3921%" y="869" width="0.0120%" height="15" fill="rgb(226,163,33)" fg:x="946" fg:w="1"/><text x="11.6421%" y="879.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.01%)</title><rect x="11.3921%" y="853" width="0.0120%" height="15" fill="rgb(205,194,45)" fg:x="946" fg:w="1"/><text x="11.6421%" y="863.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.01%)</title><rect x="11.3921%" y="837" width="0.0120%" height="15" fill="rgb(206,143,44)" fg:x="946" fg:w="1"/><text x="11.6421%" y="847.50"></text></g><g><title>mi_page_fresh (1 samples, 0.01%)</title><rect x="11.3921%" y="821" width="0.0120%" height="15" fill="rgb(236,136,36)" fg:x="946" fg:w="1"/><text x="11.6421%" y="831.50"></text></g><g><title>mi_page_fresh_alloc (1 samples, 0.01%)</title><rect x="11.3921%" y="805" width="0.0120%" height="15" fill="rgb(249,172,42)" fg:x="946" fg:w="1"/><text x="11.6421%" y="815.50"></text></g><g><title>mi_page_init (1 samples, 0.01%)</title><rect x="11.3921%" y="789" width="0.0120%" height="15" fill="rgb(216,139,23)" fg:x="946" fg:w="1"/><text x="11.6421%" y="799.50"></text></g><g><title>_mi_random_next (1 samples, 0.01%)</title><rect x="11.3921%" y="773" width="0.0120%" height="15" fill="rgb(207,166,20)" fg:x="946" fg:w="1"/><text x="11.6421%" y="783.50"></text></g><g><title>chacha_next32 (1 samples, 0.01%)</title><rect x="11.3921%" y="757" width="0.0120%" height="15" fill="rgb(210,209,22)" fg:x="946" fg:w="1"/><text x="11.6421%" y="767.50"></text></g><g><title>chacha_block (1 samples, 0.01%)</title><rect x="11.3921%" y="741" width="0.0120%" height="15" fill="rgb(232,118,20)" fg:x="946" fg:w="1"/><text x="11.6421%" y="751.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (6 samples, 0.07%)</title><rect x="11.4041%" y="1013" width="0.0723%" height="15" fill="rgb(238,113,42)" fg:x="947" fg:w="6"/><text x="11.6541%" y="1023.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (6 samples, 0.07%)</title><rect x="11.4041%" y="997" width="0.0723%" height="15" fill="rgb(231,42,5)" fg:x="947" fg:w="6"/><text x="11.6541%" y="1007.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (6 samples, 0.07%)</title><rect x="11.4041%" y="981" width="0.0723%" height="15" fill="rgb(243,166,24)" fg:x="947" fg:w="6"/><text x="11.6541%" y="991.50"></text></g><g><title>&lt;rayon::iter::while_some::WhileSomeFolder&lt;C&gt; as rayon::iter::plumbing::Folder&lt;core::option::Option&lt;T&gt;&gt;&gt;::consume_iter (6 samples, 0.07%)</title><rect x="11.4041%" y="965" width="0.0723%" height="15" fill="rgb(237,226,12)" fg:x="947" fg:w="6"/><text x="11.6541%" y="975.50"></text></g><g><title>&lt;rayon::iter::extend::ListVecFolder&lt;T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (6 samples, 0.07%)</title><rect x="11.4041%" y="949" width="0.0723%" height="15" fill="rgb(229,133,24)" fg:x="947" fg:w="6"/><text x="11.6541%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (6 samples, 0.07%)</title><rect x="11.4041%" y="933" width="0.0723%" height="15" fill="rgb(238,33,43)" fg:x="947" fg:w="6"/><text x="11.6541%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 0.07%)</title><rect x="11.4041%" y="917" width="0.0723%" height="15" fill="rgb(227,59,38)" fg:x="947" fg:w="6"/><text x="11.6541%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (6 samples, 0.07%)</title><rect x="11.4041%" y="901" width="0.0723%" height="15" fill="rgb(230,97,0)" fg:x="947" fg:w="6"/><text x="11.6541%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.07%)</title><rect x="11.4041%" y="885" width="0.0723%" height="15" fill="rgb(250,173,50)" fg:x="947" fg:w="6"/><text x="11.6541%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.07%)</title><rect x="11.4041%" y="869" width="0.0723%" height="15" fill="rgb(240,15,50)" fg:x="947" fg:w="6"/><text x="11.6541%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.07%)</title><rect x="11.4041%" y="853" width="0.0723%" height="15" fill="rgb(221,93,22)" fg:x="947" fg:w="6"/><text x="11.6541%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.07%)</title><rect x="11.4041%" y="837" width="0.0723%" height="15" fill="rgb(245,180,53)" fg:x="947" fg:w="6"/><text x="11.6541%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.07%)</title><rect x="11.4041%" y="821" width="0.0723%" height="15" fill="rgb(231,88,51)" fg:x="947" fg:w="6"/><text x="11.6541%" y="831.50"></text></g><g><title>_mi_malloc_generic (6 samples, 0.07%)</title><rect x="11.4041%" y="805" width="0.0723%" height="15" fill="rgb(240,58,21)" fg:x="947" fg:w="6"/><text x="11.6541%" y="815.50"></text></g><g><title>mi_page_queue_find_free_ex (6 samples, 0.07%)</title><rect x="11.4041%" y="789" width="0.0723%" height="15" fill="rgb(237,21,10)" fg:x="947" fg:w="6"/><text x="11.6541%" y="799.50"></text></g><g><title>mi_page_fresh (6 samples, 0.07%)</title><rect x="11.4041%" y="773" width="0.0723%" height="15" fill="rgb(218,43,11)" fg:x="947" fg:w="6"/><text x="11.6541%" y="783.50"></text></g><g><title>mi_page_fresh_alloc (6 samples, 0.07%)</title><rect x="11.4041%" y="757" width="0.0723%" height="15" fill="rgb(218,221,29)" fg:x="947" fg:w="6"/><text x="11.6541%" y="767.50"></text></g><g><title>mi_page_extend_free (6 samples, 0.07%)</title><rect x="11.4041%" y="741" width="0.0723%" height="15" fill="rgb(214,118,42)" fg:x="947" fg:w="6"/><text x="11.6541%" y="751.50"></text></g><g><title>mi_page_free_list_extend_secure (6 samples, 0.07%)</title><rect x="11.4041%" y="725" width="0.0723%" height="15" fill="rgb(251,200,26)" fg:x="947" fg:w="6"/><text x="11.6541%" y="735.50"></text></g><g><title>mi_block_set_next (6 samples, 0.07%)</title><rect x="11.4041%" y="709" width="0.0723%" height="15" fill="rgb(237,101,39)" fg:x="947" fg:w="6"/><text x="11.6541%" y="719.50"></text></g><g><title>mi_block_set_nextx (6 samples, 0.07%)</title><rect x="11.4041%" y="693" width="0.0723%" height="15" fill="rgb(251,117,11)" fg:x="947" fg:w="6"/><text x="11.6541%" y="703.50"></text></g><g><title>mi_ptr_encode (6 samples, 0.07%)</title><rect x="11.4041%" y="677" width="0.0723%" height="15" fill="rgb(216,223,23)" fg:x="947" fg:w="6"/><text x="11.6541%" y="687.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="11.4041%" y="661" width="0.0723%" height="15" fill="rgb(251,54,12)" fg:x="947" fg:w="6"/><text x="11.6541%" y="671.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="11.4041%" y="645" width="0.0723%" height="15" fill="rgb(254,176,54)" fg:x="947" fg:w="6"/><text x="11.6541%" y="655.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="11.4041%" y="629" width="0.0723%" height="15" fill="rgb(210,32,8)" fg:x="947" fg:w="6"/><text x="11.6541%" y="639.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="11.4041%" y="613" width="0.0723%" height="15" fill="rgb(235,52,38)" fg:x="947" fg:w="6"/><text x="11.6541%" y="623.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="11.4041%" y="597" width="0.0723%" height="15" fill="rgb(231,4,44)" fg:x="947" fg:w="6"/><text x="11.6541%" y="607.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="11.4282%" y="581" width="0.0482%" height="15" fill="rgb(249,2,32)" fg:x="949" fg:w="4"/><text x="11.6782%" y="591.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="11.4282%" y="565" width="0.0482%" height="15" fill="rgb(224,65,26)" fg:x="949" fg:w="4"/><text x="11.6782%" y="575.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="11.4282%" y="549" width="0.0482%" height="15" fill="rgb(250,73,40)" fg:x="949" fg:w="4"/><text x="11.6782%" y="559.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="11.4282%" y="533" width="0.0482%" height="15" fill="rgb(253,177,16)" fg:x="949" fg:w="4"/><text x="11.6782%" y="543.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="11.4282%" y="517" width="0.0482%" height="15" fill="rgb(217,32,34)" fg:x="949" fg:w="4"/><text x="11.6782%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="11.4523%" y="501" width="0.0241%" height="15" fill="rgb(212,7,10)" fg:x="951" fg:w="2"/><text x="11.7023%" y="511.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (1 samples, 0.01%)</title><rect x="11.4764%" y="757" width="0.0120%" height="15" fill="rgb(245,89,8)" fg:x="953" fg:w="1"/><text x="11.7264%" y="767.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.01%)</title><rect x="11.4764%" y="741" width="0.0120%" height="15" fill="rgb(237,16,53)" fg:x="953" fg:w="1"/><text x="11.7264%" y="751.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1 samples, 0.01%)</title><rect x="11.4764%" y="725" width="0.0120%" height="15" fill="rgb(250,204,30)" fg:x="953" fg:w="1"/><text x="11.7264%" y="735.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.01%)</title><rect x="11.4764%" y="709" width="0.0120%" height="15" fill="rgb(208,77,27)" fg:x="953" fg:w="1"/><text x="11.7264%" y="719.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.01%)</title><rect x="11.4764%" y="693" width="0.0120%" height="15" fill="rgb(250,204,28)" fg:x="953" fg:w="1"/><text x="11.7264%" y="703.50"></text></g><g><title>std::panicking::try (1 samples, 0.01%)</title><rect x="11.4764%" y="677" width="0.0120%" height="15" fill="rgb(244,63,21)" fg:x="953" fg:w="1"/><text x="11.7264%" y="687.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.01%)</title><rect x="11.4764%" y="661" width="0.0120%" height="15" fill="rgb(236,85,44)" fg:x="953" fg:w="1"/><text x="11.7264%" y="671.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.01%)</title><rect x="11.4764%" y="645" width="0.0120%" height="15" fill="rgb(215,98,4)" fg:x="953" fg:w="1"/><text x="11.7264%" y="655.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (1 samples, 0.01%)</title><rect x="11.4764%" y="629" width="0.0120%" height="15" fill="rgb(235,38,11)" fg:x="953" fg:w="1"/><text x="11.7264%" y="639.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.01%)</title><rect x="11.4764%" y="613" width="0.0120%" height="15" fill="rgb(254,186,25)" fg:x="953" fg:w="1"/><text x="11.7264%" y="623.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.01%)</title><rect x="11.4764%" y="597" width="0.0120%" height="15" fill="rgb(225,55,31)" fg:x="953" fg:w="1"/><text x="11.7264%" y="607.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.01%)</title><rect x="11.4764%" y="581" width="0.0120%" height="15" fill="rgb(211,15,21)" fg:x="953" fg:w="1"/><text x="11.7264%" y="591.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.01%)</title><rect x="11.4764%" y="565" width="0.0120%" height="15" fill="rgb(215,187,41)" fg:x="953" fg:w="1"/><text x="11.7264%" y="575.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.01%)</title><rect x="11.4764%" y="549" width="0.0120%" height="15" fill="rgb(248,69,32)" fg:x="953" fg:w="1"/><text x="11.7264%" y="559.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.01%)</title><rect x="11.4764%" y="533" width="0.0120%" height="15" fill="rgb(252,102,52)" fg:x="953" fg:w="1"/><text x="11.7264%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="11.4764%" y="517" width="0.0120%" height="15" fill="rgb(253,140,32)" fg:x="953" fg:w="1"/><text x="11.7264%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="11.4764%" y="501" width="0.0120%" height="15" fill="rgb(216,56,42)" fg:x="953" fg:w="1"/><text x="11.7264%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="11.4764%" y="485" width="0.0120%" height="15" fill="rgb(216,184,14)" fg:x="953" fg:w="1"/><text x="11.7264%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.01%)</title><rect x="11.4764%" y="469" width="0.0120%" height="15" fill="rgb(237,187,27)" fg:x="953" fg:w="1"/><text x="11.7264%" y="479.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::compiler::SinglepassCompiler as wasmer_compiler::compiler::Compiler&gt;::compile_module::{{closure}} (1 samples, 0.01%)</title><rect x="11.4764%" y="453" width="0.0120%" height="15" fill="rgb(219,65,3)" fg:x="953" fg:w="1"/><text x="11.7264%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_types::types::FunctionType&gt; (1 samples, 0.01%)</title><rect x="11.4764%" y="437" width="0.0120%" height="15" fill="rgb(245,83,25)" fg:x="953" fg:w="1"/><text x="11.7264%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[wasmer_types::types::Type]&gt;&gt; (1 samples, 0.01%)</title><rect x="11.4764%" y="421" width="0.0120%" height="15" fill="rgb(214,205,45)" fg:x="953" fg:w="1"/><text x="11.7264%" y="431.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.01%)</title><rect x="11.4764%" y="405" width="0.0120%" height="15" fill="rgb(241,20,18)" fg:x="953" fg:w="1"/><text x="11.7264%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="11.4764%" y="389" width="0.0120%" height="15" fill="rgb(232,163,23)" fg:x="953" fg:w="1"/><text x="11.7264%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="11.4764%" y="373" width="0.0120%" height="15" fill="rgb(214,5,46)" fg:x="953" fg:w="1"/><text x="11.7264%" y="383.50"></text></g><g><title>_mi_free_block_mt (1 samples, 0.01%)</title><rect x="11.4764%" y="357" width="0.0120%" height="15" fill="rgb(229,78,17)" fg:x="953" fg:w="1"/><text x="11.7264%" y="367.50"></text></g><g><title>mi_block_set_next (1 samples, 0.01%)</title><rect x="11.4764%" y="341" width="0.0120%" height="15" fill="rgb(248,89,10)" fg:x="953" fg:w="1"/><text x="11.7264%" y="351.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.01%)</title><rect x="11.4764%" y="325" width="0.0120%" height="15" fill="rgb(248,54,15)" fg:x="953" fg:w="1"/><text x="11.7264%" y="335.50"></text></g><g><title>mi_ptr_encode (1 samples, 0.01%)</title><rect x="11.4764%" y="309" width="0.0120%" height="15" fill="rgb(223,116,6)" fg:x="953" fg:w="1"/><text x="11.7264%" y="319.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (240 samples, 2.89%)</title><rect x="8.6103%" y="1669" width="2.8902%" height="15" fill="rgb(205,125,38)" fg:x="715" fg:w="240"/><text x="8.8603%" y="1679.50">ra..</text></g><g><title>rayon_core::job::JobRef::execute (240 samples, 2.89%)</title><rect x="8.6103%" y="1653" width="2.8902%" height="15" fill="rgb(251,78,38)" fg:x="715" fg:w="240"/><text x="8.8603%" y="1663.50">ra..</text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (240 samples, 2.89%)</title><rect x="8.6103%" y="1637" width="2.8902%" height="15" fill="rgb(253,78,28)" fg:x="715" fg:w="240"/><text x="8.8603%" y="1647.50">&lt;r..</text></g><g><title>rayon_core::unwind::halt_unwinding (239 samples, 2.88%)</title><rect x="8.6224%" y="1621" width="2.8781%" height="15" fill="rgb(209,120,3)" fg:x="716" fg:w="239"/><text x="8.8724%" y="1631.50">ra..</text></g><g><title>std::panic::catch_unwind (239 samples, 2.88%)</title><rect x="8.6224%" y="1605" width="2.8781%" height="15" fill="rgb(238,229,9)" fg:x="716" fg:w="239"/><text x="8.8724%" y="1615.50">st..</text></g><g><title>std::panicking::try (239 samples, 2.88%)</title><rect x="8.6224%" y="1589" width="2.8781%" height="15" fill="rgb(253,159,18)" fg:x="716" fg:w="239"/><text x="8.8724%" y="1599.50">st..</text></g><g><title>std::panicking::try::do_call (238 samples, 2.87%)</title><rect x="8.6344%" y="1573" width="2.8661%" height="15" fill="rgb(244,42,34)" fg:x="717" fg:w="238"/><text x="8.8844%" y="1583.50">st..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (238 samples, 2.87%)</title><rect x="8.6344%" y="1557" width="2.8661%" height="15" fill="rgb(224,8,7)" fg:x="717" fg:w="238"/><text x="8.8844%" y="1567.50">&lt;c..</text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (238 samples, 2.87%)</title><rect x="8.6344%" y="1541" width="2.8661%" height="15" fill="rgb(210,201,45)" fg:x="717" fg:w="238"/><text x="8.8844%" y="1551.50">&lt;r..</text></g><g><title>rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (11 samples, 0.13%)</title><rect x="11.3680%" y="1525" width="0.1325%" height="15" fill="rgb(252,185,21)" fg:x="944" fg:w="11"/><text x="11.6180%" y="1535.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (11 samples, 0.13%)</title><rect x="11.3680%" y="1509" width="0.1325%" height="15" fill="rgb(223,131,1)" fg:x="944" fg:w="11"/><text x="11.6180%" y="1519.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (11 samples, 0.13%)</title><rect x="11.3680%" y="1493" width="0.1325%" height="15" fill="rgb(245,141,16)" fg:x="944" fg:w="11"/><text x="11.6180%" y="1503.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.13%)</title><rect x="11.3680%" y="1477" width="0.1325%" height="15" fill="rgb(229,55,45)" fg:x="944" fg:w="11"/><text x="11.6180%" y="1487.50"></text></g><g><title>std::panicking::try (11 samples, 0.13%)</title><rect x="11.3680%" y="1461" width="0.1325%" height="15" fill="rgb(208,92,15)" fg:x="944" fg:w="11"/><text x="11.6180%" y="1471.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.13%)</title><rect x="11.3680%" y="1445" width="0.1325%" height="15" fill="rgb(234,185,47)" fg:x="944" fg:w="11"/><text x="11.6180%" y="1455.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (11 samples, 0.13%)</title><rect x="11.3680%" y="1429" width="0.1325%" height="15" fill="rgb(253,104,50)" fg:x="944" fg:w="11"/><text x="11.6180%" y="1439.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (11 samples, 0.13%)</title><rect x="11.3680%" y="1413" width="0.1325%" height="15" fill="rgb(205,70,7)" fg:x="944" fg:w="11"/><text x="11.6180%" y="1423.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (11 samples, 0.13%)</title><rect x="11.3680%" y="1397" width="0.1325%" height="15" fill="rgb(240,178,43)" fg:x="944" fg:w="11"/><text x="11.6180%" y="1407.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.13%)</title><rect x="11.3680%" y="1381" width="0.1325%" height="15" fill="rgb(214,112,2)" fg:x="944" fg:w="11"/><text x="11.6180%" y="1391.50"></text></g><g><title>rayon_core::join::join_context (11 samples, 0.13%)</title><rect x="11.3680%" y="1365" width="0.1325%" height="15" fill="rgb(206,46,17)" fg:x="944" fg:w="11"/><text x="11.6180%" y="1375.50"></text></g><g><title>rayon_core::registry::in_worker (11 samples, 0.13%)</title><rect x="11.3680%" y="1349" width="0.1325%" height="15" fill="rgb(225,220,16)" fg:x="944" fg:w="11"/><text x="11.6180%" y="1359.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (11 samples, 0.13%)</title><rect x="11.3680%" y="1333" width="0.1325%" height="15" fill="rgb(238,65,40)" fg:x="944" fg:w="11"/><text x="11.6180%" y="1343.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (10 samples, 0.12%)</title><rect x="11.3801%" y="1317" width="0.1204%" height="15" fill="rgb(230,151,21)" fg:x="945" fg:w="10"/><text x="11.6301%" y="1327.50"></text></g><g><title>std::panic::catch_unwind (10 samples, 0.12%)</title><rect x="11.3801%" y="1301" width="0.1204%" height="15" fill="rgb(218,58,49)" fg:x="945" fg:w="10"/><text x="11.6301%" y="1311.50"></text></g><g><title>std::panicking::try (10 samples, 0.12%)</title><rect x="11.3801%" y="1285" width="0.1204%" height="15" fill="rgb(219,179,14)" fg:x="945" fg:w="10"/><text x="11.6301%" y="1295.50"></text></g><g><title>std::panicking::try::do_call (10 samples, 0.12%)</title><rect x="11.3801%" y="1269" width="0.1204%" height="15" fill="rgb(223,72,1)" fg:x="945" fg:w="10"/><text x="11.6301%" y="1279.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (10 samples, 0.12%)</title><rect x="11.3801%" y="1253" width="0.1204%" height="15" fill="rgb(238,126,10)" fg:x="945" fg:w="10"/><text x="11.6301%" y="1263.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (10 samples, 0.12%)</title><rect x="11.3801%" y="1237" width="0.1204%" height="15" fill="rgb(224,206,38)" fg:x="945" fg:w="10"/><text x="11.6301%" y="1247.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (10 samples, 0.12%)</title><rect x="11.3801%" y="1221" width="0.1204%" height="15" fill="rgb(212,201,54)" fg:x="945" fg:w="10"/><text x="11.6301%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.12%)</title><rect x="11.3801%" y="1205" width="0.1204%" height="15" fill="rgb(218,154,48)" fg:x="945" fg:w="10"/><text x="11.6301%" y="1215.50"></text></g><g><title>rayon_core::join::join_context (10 samples, 0.12%)</title><rect x="11.3801%" y="1189" width="0.1204%" height="15" fill="rgb(232,93,24)" fg:x="945" fg:w="10"/><text x="11.6301%" y="1199.50"></text></g><g><title>rayon_core::registry::in_worker (10 samples, 0.12%)</title><rect x="11.3801%" y="1173" width="0.1204%" height="15" fill="rgb(245,30,21)" fg:x="945" fg:w="10"/><text x="11.6301%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (10 samples, 0.12%)</title><rect x="11.3801%" y="1157" width="0.1204%" height="15" fill="rgb(242,148,29)" fg:x="945" fg:w="10"/><text x="11.6301%" y="1167.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (9 samples, 0.11%)</title><rect x="11.3921%" y="1141" width="0.1084%" height="15" fill="rgb(244,153,54)" fg:x="946" fg:w="9"/><text x="11.6421%" y="1151.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.11%)</title><rect x="11.3921%" y="1125" width="0.1084%" height="15" fill="rgb(252,87,22)" fg:x="946" fg:w="9"/><text x="11.6421%" y="1135.50"></text></g><g><title>std::panicking::try (9 samples, 0.11%)</title><rect x="11.3921%" y="1109" width="0.1084%" height="15" fill="rgb(210,51,29)" fg:x="946" fg:w="9"/><text x="11.6421%" y="1119.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.11%)</title><rect x="11.3921%" y="1093" width="0.1084%" height="15" fill="rgb(242,136,47)" fg:x="946" fg:w="9"/><text x="11.6421%" y="1103.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9 samples, 0.11%)</title><rect x="11.3921%" y="1077" width="0.1084%" height="15" fill="rgb(238,68,4)" fg:x="946" fg:w="9"/><text x="11.6421%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (9 samples, 0.11%)</title><rect x="11.3921%" y="1061" width="0.1084%" height="15" fill="rgb(242,161,30)" fg:x="946" fg:w="9"/><text x="11.6421%" y="1071.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.11%)</title><rect x="11.3921%" y="1045" width="0.1084%" height="15" fill="rgb(218,58,44)" fg:x="946" fg:w="9"/><text x="11.6421%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.11%)</title><rect x="11.3921%" y="1029" width="0.1084%" height="15" fill="rgb(252,125,32)" fg:x="946" fg:w="9"/><text x="11.6421%" y="1039.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.02%)</title><rect x="11.4764%" y="1013" width="0.0241%" height="15" fill="rgb(219,178,0)" fg:x="953" fg:w="2"/><text x="11.7264%" y="1023.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.02%)</title><rect x="11.4764%" y="997" width="0.0241%" height="15" fill="rgb(213,152,7)" fg:x="953" fg:w="2"/><text x="11.7264%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.02%)</title><rect x="11.4764%" y="981" width="0.0241%" height="15" fill="rgb(249,109,34)" fg:x="953" fg:w="2"/><text x="11.7264%" y="991.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (2 samples, 0.02%)</title><rect x="11.4764%" y="965" width="0.0241%" height="15" fill="rgb(232,96,21)" fg:x="953" fg:w="2"/><text x="11.7264%" y="975.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.02%)</title><rect x="11.4764%" y="949" width="0.0241%" height="15" fill="rgb(228,27,39)" fg:x="953" fg:w="2"/><text x="11.7264%" y="959.50"></text></g><g><title>std::panicking::try (2 samples, 0.02%)</title><rect x="11.4764%" y="933" width="0.0241%" height="15" fill="rgb(211,182,52)" fg:x="953" fg:w="2"/><text x="11.7264%" y="943.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.02%)</title><rect x="11.4764%" y="917" width="0.0241%" height="15" fill="rgb(234,178,38)" fg:x="953" fg:w="2"/><text x="11.7264%" y="927.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.02%)</title><rect x="11.4764%" y="901" width="0.0241%" height="15" fill="rgb(221,111,3)" fg:x="953" fg:w="2"/><text x="11.7264%" y="911.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (2 samples, 0.02%)</title><rect x="11.4764%" y="885" width="0.0241%" height="15" fill="rgb(228,175,21)" fg:x="953" fg:w="2"/><text x="11.7264%" y="895.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2 samples, 0.02%)</title><rect x="11.4764%" y="869" width="0.0241%" height="15" fill="rgb(228,174,43)" fg:x="953" fg:w="2"/><text x="11.7264%" y="879.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.02%)</title><rect x="11.4764%" y="853" width="0.0241%" height="15" fill="rgb(211,191,0)" fg:x="953" fg:w="2"/><text x="11.7264%" y="863.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.02%)</title><rect x="11.4764%" y="837" width="0.0241%" height="15" fill="rgb(253,117,3)" fg:x="953" fg:w="2"/><text x="11.7264%" y="847.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.02%)</title><rect x="11.4764%" y="821" width="0.0241%" height="15" fill="rgb(241,127,19)" fg:x="953" fg:w="2"/><text x="11.7264%" y="831.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.02%)</title><rect x="11.4764%" y="805" width="0.0241%" height="15" fill="rgb(218,103,12)" fg:x="953" fg:w="2"/><text x="11.7264%" y="815.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (2 samples, 0.02%)</title><rect x="11.4764%" y="789" width="0.0241%" height="15" fill="rgb(236,214,43)" fg:x="953" fg:w="2"/><text x="11.7264%" y="799.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2 samples, 0.02%)</title><rect x="11.4764%" y="773" width="0.0241%" height="15" fill="rgb(244,144,19)" fg:x="953" fg:w="2"/><text x="11.7264%" y="783.50"></text></g><g><title>rayon_core::sleep::Sleep::no_work_found (1 samples, 0.01%)</title><rect x="11.4884%" y="757" width="0.0120%" height="15" fill="rgb(246,188,10)" fg:x="954" fg:w="1"/><text x="11.7384%" y="767.50"></text></g><g><title>__GI___sched_yield (1 samples, 0.01%)</title><rect x="11.4884%" y="741" width="0.0120%" height="15" fill="rgb(212,193,33)" fg:x="954" fg:w="1"/><text x="11.7384%" y="751.50"></text></g><g><title>__GI___sched_yield (47 samples, 0.57%)</title><rect x="11.5005%" y="1653" width="0.5660%" height="15" fill="rgb(241,51,29)" fg:x="955" fg:w="47"/><text x="11.7505%" y="1663.50"></text></g><g><title>[unknown] (47 samples, 0.57%)</title><rect x="11.5005%" y="1637" width="0.5660%" height="15" fill="rgb(211,58,19)" fg:x="955" fg:w="47"/><text x="11.7505%" y="1647.50"></text></g><g><title>[unknown] (45 samples, 0.54%)</title><rect x="11.5246%" y="1621" width="0.5419%" height="15" fill="rgb(229,111,26)" fg:x="957" fg:w="45"/><text x="11.7746%" y="1631.50"></text></g><g><title>[unknown] (45 samples, 0.54%)</title><rect x="11.5246%" y="1605" width="0.5419%" height="15" fill="rgb(213,115,40)" fg:x="957" fg:w="45"/><text x="11.7746%" y="1615.50"></text></g><g><title>[unknown] (42 samples, 0.51%)</title><rect x="11.5607%" y="1589" width="0.5058%" height="15" fill="rgb(209,56,44)" fg:x="960" fg:w="42"/><text x="11.8107%" y="1599.50"></text></g><g><title>[unknown] (40 samples, 0.48%)</title><rect x="11.5848%" y="1573" width="0.4817%" height="15" fill="rgb(230,108,32)" fg:x="962" fg:w="40"/><text x="11.8348%" y="1583.50"></text></g><g><title>[unknown] (34 samples, 0.41%)</title><rect x="11.6570%" y="1557" width="0.4094%" height="15" fill="rgb(216,165,31)" fg:x="968" fg:w="34"/><text x="11.9070%" y="1567.50"></text></g><g><title>[unknown] (21 samples, 0.25%)</title><rect x="11.8136%" y="1541" width="0.2529%" height="15" fill="rgb(218,122,21)" fg:x="981" fg:w="21"/><text x="12.0636%" y="1551.50"></text></g><g><title>[unknown] (10 samples, 0.12%)</title><rect x="11.9461%" y="1525" width="0.1204%" height="15" fill="rgb(223,224,47)" fg:x="992" fg:w="10"/><text x="12.1961%" y="1535.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="12.0424%" y="1509" width="0.0241%" height="15" fill="rgb(238,102,44)" fg:x="1000" fg:w="2"/><text x="12.2924%" y="1519.50"></text></g><g><title>rayon_core::sleep::Sleep::no_work_found (49 samples, 0.59%)</title><rect x="11.5005%" y="1669" width="0.5901%" height="15" fill="rgb(236,46,40)" fg:x="955" fg:w="49"/><text x="11.7505%" y="1679.50"></text></g><g><title>rayon_core::sleep::Sleep::sleep (2 samples, 0.02%)</title><rect x="12.0665%" y="1653" width="0.0241%" height="15" fill="rgb(247,202,50)" fg:x="1002" fg:w="2"/><text x="12.3165%" y="1663.50"></text></g><g><title>std::sync::condvar::Condvar::wait (1 samples, 0.01%)</title><rect x="12.0785%" y="1637" width="0.0120%" height="15" fill="rgb(209,99,20)" fg:x="1003" fg:w="1"/><text x="12.3285%" y="1647.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (1 samples, 0.01%)</title><rect x="12.0785%" y="1621" width="0.0120%" height="15" fill="rgb(252,27,34)" fg:x="1003" fg:w="1"/><text x="12.3285%" y="1631.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (1 samples, 0.01%)</title><rect x="12.0785%" y="1605" width="0.0120%" height="15" fill="rgb(215,206,23)" fg:x="1003" fg:w="1"/><text x="12.3285%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.01%)</title><rect x="12.0906%" y="1621" width="0.0120%" height="15" fill="rgb(212,135,36)" fg:x="1004" fg:w="1"/><text x="12.3406%" y="1631.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.01%)</title><rect x="12.0906%" y="1605" width="0.0120%" height="15" fill="rgb(240,189,1)" fg:x="1004" fg:w="1"/><text x="12.3406%" y="1615.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.01%)</title><rect x="12.0906%" y="1589" width="0.0120%" height="15" fill="rgb(242,56,20)" fg:x="1004" fg:w="1"/><text x="12.3406%" y="1599.50"></text></g><g><title>&lt;crossbeam_utils::cache_padded::CachePadded&lt;T&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.04%)</title><rect x="12.1026%" y="1621" width="0.0361%" height="15" fill="rgb(247,132,33)" fg:x="1005" fg:w="3"/><text x="12.3526%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;bool&gt;&gt; (1 samples, 0.01%)</title><rect x="12.1387%" y="1621" width="0.0120%" height="15" fill="rgb(208,149,11)" fg:x="1008" fg:w="1"/><text x="12.3887%" y="1631.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="12.1387%" y="1605" width="0.0120%" height="15" fill="rgb(211,33,11)" fg:x="1008" fg:w="1"/><text x="12.3887%" y="1615.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.01%)</title><rect x="12.1387%" y="1589" width="0.0120%" height="15" fill="rgb(221,29,38)" fg:x="1008" fg:w="1"/><text x="12.3887%" y="1599.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (1 samples, 0.01%)</title><rect x="12.1387%" y="1573" width="0.0120%" height="15" fill="rgb(206,182,49)" fg:x="1008" fg:w="1"/><text x="12.3887%" y="1583.50"></text></g><g><title>syscall (1 samples, 0.01%)</title><rect x="12.1387%" y="1557" width="0.0120%" height="15" fill="rgb(216,140,1)" fg:x="1008" fg:w="1"/><text x="12.3887%" y="1567.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="12.1387%" y="1541" width="0.0120%" height="15" fill="rgb(232,57,40)" fg:x="1008" fg:w="1"/><text x="12.3887%" y="1551.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="12.1387%" y="1525" width="0.0120%" height="15" fill="rgb(224,186,18)" fg:x="1008" fg:w="1"/><text x="12.3887%" y="1535.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="12.1387%" y="1509" width="0.0120%" height="15" fill="rgb(215,121,11)" fg:x="1008" fg:w="1"/><text x="12.3887%" y="1519.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="12.1387%" y="1493" width="0.0120%" height="15" fill="rgb(245,147,10)" fg:x="1008" fg:w="1"/><text x="12.3887%" y="1503.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="12.1387%" y="1477" width="0.0120%" height="15" fill="rgb(238,153,13)" fg:x="1008" fg:w="1"/><text x="12.3887%" y="1487.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="12.1387%" y="1461" width="0.0120%" height="15" fill="rgb(233,108,0)" fg:x="1008" fg:w="1"/><text x="12.3887%" y="1471.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="12.1387%" y="1445" width="0.0120%" height="15" fill="rgb(212,157,17)" fg:x="1008" fg:w="1"/><text x="12.3887%" y="1455.50"></text></g><g><title>std::panic::catch_unwind (695 samples, 8.37%)</title><rect x="3.7934%" y="1845" width="8.3695%" height="15" fill="rgb(225,213,38)" fg:x="315" fg:w="695"/><text x="4.0434%" y="1855.50">std::panic::..</text></g><g><title>std::panicking::try (695 samples, 8.37%)</title><rect x="3.7934%" y="1829" width="8.3695%" height="15" fill="rgb(248,16,11)" fg:x="315" fg:w="695"/><text x="4.0434%" y="1839.50">std::panicki..</text></g><g><title>std::panicking::try::do_call (695 samples, 8.37%)</title><rect x="3.7934%" y="1813" width="8.3695%" height="15" fill="rgb(241,33,4)" fg:x="315" fg:w="695"/><text x="4.0434%" y="1823.50">std::panicki..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (695 samples, 8.37%)</title><rect x="3.7934%" y="1797" width="8.3695%" height="15" fill="rgb(222,26,43)" fg:x="315" fg:w="695"/><text x="4.0434%" y="1807.50">&lt;core::panic..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (695 samples, 8.37%)</title><rect x="3.7934%" y="1781" width="8.3695%" height="15" fill="rgb(243,29,36)" fg:x="315" fg:w="695"/><text x="4.0434%" y="1791.50">std::thread:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (695 samples, 8.37%)</title><rect x="3.7934%" y="1765" width="8.3695%" height="15" fill="rgb(241,9,27)" fg:x="315" fg:w="695"/><text x="4.0434%" y="1775.50">std::sys_com..</text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (695 samples, 8.37%)</title><rect x="3.7934%" y="1749" width="8.3695%" height="15" fill="rgb(205,117,26)" fg:x="315" fg:w="695"/><text x="4.0434%" y="1759.50">&lt;rayon_core:..</text></g><g><title>rayon_core::registry::ThreadBuilder::run (694 samples, 8.36%)</title><rect x="3.8054%" y="1733" width="8.3574%" height="15" fill="rgb(209,80,39)" fg:x="316" fg:w="694"/><text x="4.0554%" y="1743.50">rayon_core::..</text></g><g><title>rayon_core::registry::main_loop (694 samples, 8.36%)</title><rect x="3.8054%" y="1717" width="8.3574%" height="15" fill="rgb(239,155,6)" fg:x="316" fg:w="694"/><text x="4.0554%" y="1727.50">rayon_core::..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (478 samples, 5.76%)</title><rect x="6.4066%" y="1701" width="5.7563%" height="15" fill="rgb(212,104,12)" fg:x="532" fg:w="478"/><text x="6.6566%" y="1711.50">rayon_c..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (478 samples, 5.76%)</title><rect x="6.4066%" y="1685" width="5.7563%" height="15" fill="rgb(234,204,3)" fg:x="532" fg:w="478"/><text x="6.6566%" y="1695.50">rayon_c..</text></g><g><title>rayon_core::sleep::Sleep::work_found (6 samples, 0.07%)</title><rect x="12.0906%" y="1669" width="0.0723%" height="15" fill="rgb(251,218,7)" fg:x="1004" fg:w="6"/><text x="12.3406%" y="1679.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_any_threads (6 samples, 0.07%)</title><rect x="12.0906%" y="1653" width="0.0723%" height="15" fill="rgb(221,81,32)" fg:x="1004" fg:w="6"/><text x="12.3406%" y="1663.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_specific_thread (6 samples, 0.07%)</title><rect x="12.0906%" y="1637" width="0.0723%" height="15" fill="rgb(214,152,26)" fg:x="1004" fg:w="6"/><text x="12.3406%" y="1647.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="12.1508%" y="1621" width="0.0120%" height="15" fill="rgb(223,22,3)" fg:x="1009" fg:w="1"/><text x="12.4008%" y="1631.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.01%)</title><rect x="12.1508%" y="1605" width="0.0120%" height="15" fill="rgb(207,174,7)" fg:x="1009" fg:w="1"/><text x="12.4008%" y="1615.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (1 samples, 0.01%)</title><rect x="12.1508%" y="1589" width="0.0120%" height="15" fill="rgb(224,19,52)" fg:x="1009" fg:w="1"/><text x="12.4008%" y="1599.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock_contended (1 samples, 0.01%)</title><rect x="12.1508%" y="1573" width="0.0120%" height="15" fill="rgb(228,24,14)" fg:x="1009" fg:w="1"/><text x="12.4008%" y="1583.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::spin (1 samples, 0.01%)</title><rect x="12.1508%" y="1557" width="0.0120%" height="15" fill="rgb(230,153,43)" fg:x="1009" fg:w="1"/><text x="12.4008%" y="1567.50"></text></g><g><title>__GI___pthread_self (2 samples, 0.02%)</title><rect x="12.1628%" y="1829" width="0.0241%" height="15" fill="rgb(231,106,12)" fg:x="1010" fg:w="2"/><text x="12.4128%" y="1839.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="12.2592%" y="1765" width="0.0120%" height="15" fill="rgb(215,92,2)" fg:x="1018" fg:w="1"/><text x="12.5092%" y="1775.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="12.2592%" y="1749" width="0.0120%" height="15" fill="rgb(249,143,25)" fg:x="1018" fg:w="1"/><text x="12.5092%" y="1759.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="12.2592%" y="1733" width="0.0120%" height="15" fill="rgb(252,7,35)" fg:x="1018" fg:w="1"/><text x="12.5092%" y="1743.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="12.2592%" y="1717" width="0.0120%" height="15" fill="rgb(216,69,40)" fg:x="1018" fg:w="1"/><text x="12.5092%" y="1727.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="12.2832%" y="1749" width="0.0241%" height="15" fill="rgb(240,36,33)" fg:x="1020" fg:w="2"/><text x="12.5332%" y="1759.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="12.2832%" y="1733" width="0.0241%" height="15" fill="rgb(231,128,14)" fg:x="1020" fg:w="2"/><text x="12.5332%" y="1743.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="12.2832%" y="1717" width="0.0241%" height="15" fill="rgb(245,143,14)" fg:x="1020" fg:w="2"/><text x="12.5332%" y="1727.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="12.2832%" y="1701" width="0.0241%" height="15" fill="rgb(222,130,28)" fg:x="1020" fg:w="2"/><text x="12.5332%" y="1711.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="12.2832%" y="1685" width="0.0241%" height="15" fill="rgb(212,10,48)" fg:x="1020" fg:w="2"/><text x="12.5332%" y="1695.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="12.2832%" y="1669" width="0.0241%" height="15" fill="rgb(254,118,45)" fg:x="1020" fg:w="2"/><text x="12.5332%" y="1679.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="12.2832%" y="1653" width="0.0241%" height="15" fill="rgb(228,6,45)" fg:x="1020" fg:w="2"/><text x="12.5332%" y="1663.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="12.2832%" y="1637" width="0.0241%" height="15" fill="rgb(241,18,35)" fg:x="1020" fg:w="2"/><text x="12.5332%" y="1647.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="12.2832%" y="1621" width="0.0241%" height="15" fill="rgb(227,214,53)" fg:x="1020" fg:w="2"/><text x="12.5332%" y="1631.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="12.2953%" y="1605" width="0.0120%" height="15" fill="rgb(224,107,51)" fg:x="1021" fg:w="1"/><text x="12.5453%" y="1615.50"></text></g><g><title>__GI___mmap64 (10 samples, 0.12%)</title><rect x="12.3073%" y="1749" width="0.1204%" height="15" fill="rgb(248,60,28)" fg:x="1022" fg:w="10"/><text x="12.5573%" y="1759.50"></text></g><g><title>[unknown] (10 samples, 0.12%)</title><rect x="12.3073%" y="1733" width="0.1204%" height="15" fill="rgb(249,101,23)" fg:x="1022" fg:w="10"/><text x="12.5573%" y="1743.50"></text></g><g><title>[unknown] (10 samples, 0.12%)</title><rect x="12.3073%" y="1717" width="0.1204%" height="15" fill="rgb(228,51,19)" fg:x="1022" fg:w="10"/><text x="12.5573%" y="1727.50"></text></g><g><title>[unknown] (10 samples, 0.12%)</title><rect x="12.3073%" y="1701" width="0.1204%" height="15" fill="rgb(213,20,6)" fg:x="1022" fg:w="10"/><text x="12.5573%" y="1711.50"></text></g><g><title>[unknown] (10 samples, 0.12%)</title><rect x="12.3073%" y="1685" width="0.1204%" height="15" fill="rgb(212,124,10)" fg:x="1022" fg:w="10"/><text x="12.5573%" y="1695.50"></text></g><g><title>[unknown] (9 samples, 0.11%)</title><rect x="12.3194%" y="1669" width="0.1084%" height="15" fill="rgb(248,3,40)" fg:x="1023" fg:w="9"/><text x="12.5694%" y="1679.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="12.3555%" y="1653" width="0.0723%" height="15" fill="rgb(223,178,23)" fg:x="1026" fg:w="6"/><text x="12.6055%" y="1663.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="12.4037%" y="1637" width="0.0241%" height="15" fill="rgb(240,132,45)" fg:x="1030" fg:w="2"/><text x="12.6537%" y="1647.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="12.4157%" y="1621" width="0.0120%" height="15" fill="rgb(245,164,36)" fg:x="1031" fg:w="1"/><text x="12.6657%" y="1631.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="12.4157%" y="1605" width="0.0120%" height="15" fill="rgb(231,188,53)" fg:x="1031" fg:w="1"/><text x="12.6657%" y="1615.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="12.4157%" y="1589" width="0.0120%" height="15" fill="rgb(237,198,39)" fg:x="1031" fg:w="1"/><text x="12.6657%" y="1599.50"></text></g><g><title>__GI___libc_malloc (20 samples, 0.24%)</title><rect x="12.1989%" y="1813" width="0.2408%" height="15" fill="rgb(223,120,35)" fg:x="1013" fg:w="20"/><text x="12.4489%" y="1823.50"></text></g><g><title>tcache_init.part.0 (19 samples, 0.23%)</title><rect x="12.2110%" y="1797" width="0.2288%" height="15" fill="rgb(253,107,49)" fg:x="1014" fg:w="19"/><text x="12.4610%" y="1807.50"></text></g><g><title>arena_get2.part.0 (17 samples, 0.20%)</title><rect x="12.2351%" y="1781" width="0.2047%" height="15" fill="rgb(216,44,31)" fg:x="1016" fg:w="17"/><text x="12.4851%" y="1791.50"></text></g><g><title>alloc_new_heap (14 samples, 0.17%)</title><rect x="12.2712%" y="1765" width="0.1686%" height="15" fill="rgb(253,87,21)" fg:x="1019" fg:w="14"/><text x="12.5212%" y="1775.50"></text></g><g><title>__GI___mprotect (1 samples, 0.01%)</title><rect x="12.4277%" y="1749" width="0.0120%" height="15" fill="rgb(226,18,2)" fg:x="1032" fg:w="1"/><text x="12.6777%" y="1759.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="12.4277%" y="1733" width="0.0120%" height="15" fill="rgb(216,8,46)" fg:x="1032" fg:w="1"/><text x="12.6777%" y="1743.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="12.4277%" y="1717" width="0.0120%" height="15" fill="rgb(226,140,39)" fg:x="1032" fg:w="1"/><text x="12.6777%" y="1727.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="12.4277%" y="1701" width="0.0120%" height="15" fill="rgb(221,194,54)" fg:x="1032" fg:w="1"/><text x="12.6777%" y="1711.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="12.4277%" y="1685" width="0.0120%" height="15" fill="rgb(213,92,11)" fg:x="1032" fg:w="1"/><text x="12.6777%" y="1695.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="12.4277%" y="1669" width="0.0120%" height="15" fill="rgb(229,162,46)" fg:x="1032" fg:w="1"/><text x="12.6777%" y="1679.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="12.4277%" y="1653" width="0.0120%" height="15" fill="rgb(214,111,36)" fg:x="1032" fg:w="1"/><text x="12.6777%" y="1663.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="12.4277%" y="1637" width="0.0120%" height="15" fill="rgb(207,6,21)" fg:x="1032" fg:w="1"/><text x="12.6777%" y="1647.50"></text></g><g><title>__GI___pthread_attr_init (2 samples, 0.02%)</title><rect x="12.4398%" y="1813" width="0.0241%" height="15" fill="rgb(213,127,38)" fg:x="1033" fg:w="2"/><text x="12.6898%" y="1823.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="12.4639%" y="1797" width="0.0120%" height="15" fill="rgb(238,118,32)" fg:x="1035" fg:w="1"/><text x="12.7139%" y="1807.50"></text></g><g><title>__pthread_getaffinity_alias (11 samples, 0.13%)</title><rect x="12.4639%" y="1813" width="0.1325%" height="15" fill="rgb(240,139,39)" fg:x="1035" fg:w="11"/><text x="12.7139%" y="1823.50"></text></g><g><title>[unknown] (10 samples, 0.12%)</title><rect x="12.4759%" y="1797" width="0.1204%" height="15" fill="rgb(235,10,37)" fg:x="1036" fg:w="10"/><text x="12.7259%" y="1807.50"></text></g><g><title>[unknown] (10 samples, 0.12%)</title><rect x="12.4759%" y="1781" width="0.1204%" height="15" fill="rgb(249,171,38)" fg:x="1036" fg:w="10"/><text x="12.7259%" y="1791.50"></text></g><g><title>[unknown] (10 samples, 0.12%)</title><rect x="12.4759%" y="1765" width="0.1204%" height="15" fill="rgb(242,144,32)" fg:x="1036" fg:w="10"/><text x="12.7259%" y="1775.50"></text></g><g><title>[unknown] (10 samples, 0.12%)</title><rect x="12.4759%" y="1749" width="0.1204%" height="15" fill="rgb(217,117,21)" fg:x="1036" fg:w="10"/><text x="12.7259%" y="1759.50"></text></g><g><title>[unknown] (9 samples, 0.11%)</title><rect x="12.4880%" y="1733" width="0.1084%" height="15" fill="rgb(249,87,1)" fg:x="1037" fg:w="9"/><text x="12.7380%" y="1743.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="12.5482%" y="1717" width="0.0482%" height="15" fill="rgb(248,196,48)" fg:x="1042" fg:w="4"/><text x="12.7982%" y="1727.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="12.5843%" y="1701" width="0.0120%" height="15" fill="rgb(251,206,33)" fg:x="1045" fg:w="1"/><text x="12.8343%" y="1711.50"></text></g><g><title>std::sys::unix::thread::guard::current (38 samples, 0.46%)</title><rect x="12.1628%" y="1845" width="0.4576%" height="15" fill="rgb(232,141,28)" fg:x="1010" fg:w="38"/><text x="12.4128%" y="1855.50"></text></g><g><title>__pthread_getattr_np (36 samples, 0.43%)</title><rect x="12.1869%" y="1829" width="0.4335%" height="15" fill="rgb(209,167,14)" fg:x="1012" fg:w="36"/><text x="12.4369%" y="1839.50"></text></g><g><title>__realloc (2 samples, 0.02%)</title><rect x="12.5963%" y="1813" width="0.0241%" height="15" fill="rgb(225,11,50)" fg:x="1046" fg:w="2"/><text x="12.8463%" y="1823.50"></text></g><g><title>__GI__dl_find_dso_for_object (1 samples, 0.01%)</title><rect x="12.6325%" y="1749" width="0.0120%" height="15" fill="rgb(209,50,20)" fg:x="1049" fg:w="1"/><text x="12.8825%" y="1759.50"></text></g><g><title>_dl_addr_inside_object (1 samples, 0.01%)</title><rect x="12.6325%" y="1733" width="0.0120%" height="15" fill="rgb(212,17,46)" fg:x="1049" fg:w="1"/><text x="12.8825%" y="1743.50"></text></g><g><title>std::sys_common::thread_info::set (4 samples, 0.05%)</title><rect x="12.6204%" y="1845" width="0.0482%" height="15" fill="rgb(216,101,39)" fg:x="1048" fg:w="4"/><text x="12.8704%" y="1855.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.05%)</title><rect x="12.6204%" y="1829" width="0.0482%" height="15" fill="rgb(212,228,48)" fg:x="1048" fg:w="4"/><text x="12.8704%" y="1839.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.05%)</title><rect x="12.6204%" y="1813" width="0.0482%" height="15" fill="rgb(250,6,50)" fg:x="1048" fg:w="4"/><text x="12.8704%" y="1823.50"></text></g><g><title>std::sys_common::thread_info::THREAD_INFO::__getit (4 samples, 0.05%)</title><rect x="12.6204%" y="1797" width="0.0482%" height="15" fill="rgb(250,160,48)" fg:x="1048" fg:w="4"/><text x="12.8704%" y="1807.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::register_dtor (4 samples, 0.05%)</title><rect x="12.6204%" y="1781" width="0.0482%" height="15" fill="rgb(244,216,33)" fg:x="1048" fg:w="4"/><text x="12.8704%" y="1791.50"></text></g><g><title>__cxa_thread_atexit_impl (4 samples, 0.05%)</title><rect x="12.6204%" y="1765" width="0.0482%" height="15" fill="rgb(207,157,5)" fg:x="1048" fg:w="4"/><text x="12.8704%" y="1775.50"></text></g><g><title>___pthread_mutex_lock (2 samples, 0.02%)</title><rect x="12.6445%" y="1749" width="0.0241%" height="15" fill="rgb(228,199,8)" fg:x="1050" fg:w="2"/><text x="12.8945%" y="1759.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (747 samples, 9.00%)</title><rect x="3.7091%" y="1909" width="8.9957%" height="15" fill="rgb(227,80,20)" fg:x="308" fg:w="747"/><text x="3.9591%" y="1919.50">&lt;alloc::boxed..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (747 samples, 9.00%)</title><rect x="3.7091%" y="1893" width="8.9957%" height="15" fill="rgb(222,9,33)" fg:x="308" fg:w="747"/><text x="3.9591%" y="1903.50">&lt;alloc::boxed..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (747 samples, 9.00%)</title><rect x="3.7091%" y="1877" width="8.9957%" height="15" fill="rgb(239,44,28)" fg:x="308" fg:w="747"/><text x="3.9591%" y="1887.50">core::ops::fu..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (747 samples, 9.00%)</title><rect x="3.7091%" y="1861" width="8.9957%" height="15" fill="rgb(249,187,43)" fg:x="308" fg:w="747"/><text x="3.9591%" y="1871.50">std::thread::..</text></g><g><title>std::thread::Thread::cname (3 samples, 0.04%)</title><rect x="12.6686%" y="1845" width="0.0361%" height="15" fill="rgb(216,141,28)" fg:x="1052" fg:w="3"/><text x="12.9186%" y="1855.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_deref (3 samples, 0.04%)</title><rect x="12.6686%" y="1829" width="0.0361%" height="15" fill="rgb(230,154,53)" fg:x="1052" fg:w="3"/><text x="12.9186%" y="1839.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (3 samples, 0.04%)</title><rect x="12.6686%" y="1813" width="0.0361%" height="15" fill="rgb(227,82,4)" fg:x="1052" fg:w="3"/><text x="12.9186%" y="1823.50"></text></g><g><title>__GI___sigaltstack (6 samples, 0.07%)</title><rect x="12.7047%" y="1877" width="0.0723%" height="15" fill="rgb(220,107,16)" fg:x="1055" fg:w="6"/><text x="12.9547%" y="1887.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="12.7288%" y="1861" width="0.0482%" height="15" fill="rgb(207,187,2)" fg:x="1057" fg:w="4"/><text x="12.9788%" y="1871.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="12.7288%" y="1845" width="0.0482%" height="15" fill="rgb(210,162,52)" fg:x="1057" fg:w="4"/><text x="12.9788%" y="1855.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="12.7288%" y="1829" width="0.0482%" height="15" fill="rgb(217,216,49)" fg:x="1057" fg:w="4"/><text x="12.9788%" y="1839.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="12.7529%" y="1813" width="0.0241%" height="15" fill="rgb(218,146,49)" fg:x="1059" fg:w="2"/><text x="13.0029%" y="1823.50"></text></g><g><title>__GI___mmap64 (22 samples, 0.26%)</title><rect x="12.7770%" y="1845" width="0.2649%" height="15" fill="rgb(216,55,40)" fg:x="1061" fg:w="22"/><text x="13.0270%" y="1855.50"></text></g><g><title>[unknown] (22 samples, 0.26%)</title><rect x="12.7770%" y="1829" width="0.2649%" height="15" fill="rgb(208,196,21)" fg:x="1061" fg:w="22"/><text x="13.0270%" y="1839.50"></text></g><g><title>[unknown] (22 samples, 0.26%)</title><rect x="12.7770%" y="1813" width="0.2649%" height="15" fill="rgb(242,117,42)" fg:x="1061" fg:w="22"/><text x="13.0270%" y="1823.50"></text></g><g><title>[unknown] (22 samples, 0.26%)</title><rect x="12.7770%" y="1797" width="0.2649%" height="15" fill="rgb(210,11,23)" fg:x="1061" fg:w="22"/><text x="13.0270%" y="1807.50"></text></g><g><title>[unknown] (18 samples, 0.22%)</title><rect x="12.8251%" y="1781" width="0.2168%" height="15" fill="rgb(217,110,2)" fg:x="1065" fg:w="18"/><text x="13.0751%" y="1791.50"></text></g><g><title>[unknown] (13 samples, 0.16%)</title><rect x="12.8854%" y="1765" width="0.1566%" height="15" fill="rgb(229,77,54)" fg:x="1070" fg:w="13"/><text x="13.1354%" y="1775.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="12.9576%" y="1749" width="0.0843%" height="15" fill="rgb(218,53,16)" fg:x="1076" fg:w="7"/><text x="13.2076%" y="1759.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.0299%" y="1733" width="0.0120%" height="15" fill="rgb(215,38,13)" fg:x="1082" fg:w="1"/><text x="13.2799%" y="1743.50"></text></g><g><title>__GI___mprotect (21 samples, 0.25%)</title><rect x="13.0419%" y="1845" width="0.2529%" height="15" fill="rgb(235,42,18)" fg:x="1083" fg:w="21"/><text x="13.2919%" y="1855.50"></text></g><g><title>[unknown] (21 samples, 0.25%)</title><rect x="13.0419%" y="1829" width="0.2529%" height="15" fill="rgb(219,66,54)" fg:x="1083" fg:w="21"/><text x="13.2919%" y="1839.50"></text></g><g><title>[unknown] (21 samples, 0.25%)</title><rect x="13.0419%" y="1813" width="0.2529%" height="15" fill="rgb(222,205,4)" fg:x="1083" fg:w="21"/><text x="13.2919%" y="1823.50"></text></g><g><title>[unknown] (21 samples, 0.25%)</title><rect x="13.0419%" y="1797" width="0.2529%" height="15" fill="rgb(227,213,46)" fg:x="1083" fg:w="21"/><text x="13.2919%" y="1807.50"></text></g><g><title>[unknown] (21 samples, 0.25%)</title><rect x="13.0419%" y="1781" width="0.2529%" height="15" fill="rgb(250,145,42)" fg:x="1083" fg:w="21"/><text x="13.2919%" y="1791.50"></text></g><g><title>[unknown] (21 samples, 0.25%)</title><rect x="13.0419%" y="1765" width="0.2529%" height="15" fill="rgb(219,15,2)" fg:x="1083" fg:w="21"/><text x="13.2919%" y="1775.50"></text></g><g><title>[unknown] (21 samples, 0.25%)</title><rect x="13.0419%" y="1749" width="0.2529%" height="15" fill="rgb(231,181,52)" fg:x="1083" fg:w="21"/><text x="13.2919%" y="1759.50"></text></g><g><title>[unknown] (16 samples, 0.19%)</title><rect x="13.1021%" y="1733" width="0.1927%" height="15" fill="rgb(235,1,42)" fg:x="1088" fg:w="16"/><text x="13.3521%" y="1743.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="13.2346%" y="1717" width="0.0602%" height="15" fill="rgb(249,88,27)" fg:x="1099" fg:w="5"/><text x="13.4846%" y="1727.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="13.2346%" y="1701" width="0.0602%" height="15" fill="rgb(235,145,16)" fg:x="1099" fg:w="5"/><text x="13.4846%" y="1711.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="13.2466%" y="1685" width="0.0482%" height="15" fill="rgb(237,114,19)" fg:x="1100" fg:w="4"/><text x="13.4966%" y="1695.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.2707%" y="1669" width="0.0241%" height="15" fill="rgb(238,51,50)" fg:x="1102" fg:w="2"/><text x="13.5207%" y="1679.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.2828%" y="1653" width="0.0120%" height="15" fill="rgb(205,194,25)" fg:x="1103" fg:w="1"/><text x="13.5328%" y="1663.50"></text></g><g><title>__clone3 (824 samples, 9.92%)</title><rect x="3.3960%" y="1957" width="9.9229%" height="15" fill="rgb(215,203,17)" fg:x="282" fg:w="824"/><text x="3.6460%" y="1967.50">__clone3</text></g><g><title>start_thread (822 samples, 9.90%)</title><rect x="3.4200%" y="1941" width="9.8988%" height="15" fill="rgb(233,112,49)" fg:x="284" fg:w="822"/><text x="3.6700%" y="1951.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (799 samples, 9.62%)</title><rect x="3.6970%" y="1925" width="9.6219%" height="15" fill="rgb(241,130,26)" fg:x="307" fg:w="799"/><text x="3.9470%" y="1935.50">std::sys::unix..</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (51 samples, 0.61%)</title><rect x="12.7047%" y="1909" width="0.6142%" height="15" fill="rgb(252,223,19)" fg:x="1055" fg:w="51"/><text x="12.9547%" y="1919.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (51 samples, 0.61%)</title><rect x="12.7047%" y="1893" width="0.6142%" height="15" fill="rgb(211,95,25)" fg:x="1055" fg:w="51"/><text x="12.9547%" y="1903.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (45 samples, 0.54%)</title><rect x="12.7770%" y="1877" width="0.5419%" height="15" fill="rgb(251,182,27)" fg:x="1061" fg:w="45"/><text x="13.0270%" y="1887.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (45 samples, 0.54%)</title><rect x="12.7770%" y="1861" width="0.5419%" height="15" fill="rgb(238,24,4)" fg:x="1061" fg:w="45"/><text x="13.0270%" y="1871.50"></text></g><g><title>std::sys::unix::os::page_size (2 samples, 0.02%)</title><rect x="13.2948%" y="1845" width="0.0241%" height="15" fill="rgb(224,220,25)" fg:x="1104" fg:w="2"/><text x="13.5448%" y="1855.50"></text></g><g><title>__GI___sysconf (2 samples, 0.02%)</title><rect x="13.2948%" y="1829" width="0.0241%" height="15" fill="rgb(239,133,26)" fg:x="1104" fg:w="2"/><text x="13.5448%" y="1839.50"></text></g><g><title>__GI___getpagesize (1 samples, 0.01%)</title><rect x="13.3068%" y="1813" width="0.0120%" height="15" fill="rgb(211,94,48)" fg:x="1105" fg:w="1"/><text x="13.5568%" y="1823.50"></text></g><g><title>__gmpn_add_n (2 samples, 0.02%)</title><rect x="13.3189%" y="1957" width="0.0241%" height="15" fill="rgb(239,87,6)" fg:x="1106" fg:w="2"/><text x="13.5689%" y="1967.50"></text></g><g><title>__gmpn_add_n_x86_64 (2 samples, 0.02%)</title><rect x="13.3430%" y="1957" width="0.0241%" height="15" fill="rgb(227,62,0)" fg:x="1108" fg:w="2"/><text x="13.5930%" y="1967.50"></text></g><g><title>__gmpn_copyi_zen (4 samples, 0.05%)</title><rect x="13.3671%" y="1957" width="0.0482%" height="15" fill="rgb(211,226,4)" fg:x="1110" fg:w="4"/><text x="13.6171%" y="1967.50"></text></g><g><title>__libc_read (1 samples, 0.01%)</title><rect x="13.4152%" y="1957" width="0.0120%" height="15" fill="rgb(253,38,52)" fg:x="1114" fg:w="1"/><text x="13.6652%" y="1967.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.4152%" y="1941" width="0.0120%" height="15" fill="rgb(229,126,40)" fg:x="1114" fg:w="1"/><text x="13.6652%" y="1951.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="13.4273%" y="1957" width="0.0120%" height="15" fill="rgb(229,165,44)" fg:x="1115" fg:w="1"/><text x="13.6773%" y="1967.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.4273%" y="1941" width="0.0120%" height="15" fill="rgb(247,95,47)" fg:x="1115" fg:w="1"/><text x="13.6773%" y="1951.50"></text></g><g><title>__rust_probestack (13 samples, 0.16%)</title><rect x="13.4393%" y="1957" width="0.1566%" height="15" fill="rgb(216,140,30)" fg:x="1116" fg:w="13"/><text x="13.6893%" y="1967.50"></text></g><g><title>_dl_start (1 samples, 0.01%)</title><rect x="13.5959%" y="1957" width="0.0120%" height="15" fill="rgb(246,214,8)" fg:x="1129" fg:w="1"/><text x="13.8459%" y="1967.50"></text></g><g><title>_dl_start_final (1 samples, 0.01%)</title><rect x="13.5959%" y="1941" width="0.0120%" height="15" fill="rgb(227,224,15)" fg:x="1129" fg:w="1"/><text x="13.8459%" y="1951.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.01%)</title><rect x="13.5959%" y="1925" width="0.0120%" height="15" fill="rgb(233,175,4)" fg:x="1129" fg:w="1"/><text x="13.8459%" y="1935.50"></text></g><g><title>_dl_sysdep_parse_arguments (1 samples, 0.01%)</title><rect x="13.5959%" y="1909" width="0.0120%" height="15" fill="rgb(221,66,45)" fg:x="1129" fg:w="1"/><text x="13.8459%" y="1919.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.5959%" y="1893" width="0.0120%" height="15" fill="rgb(221,178,18)" fg:x="1129" fg:w="1"/><text x="13.8459%" y="1903.50"></text></g><g><title>_mi_malloc_generic (2 samples, 0.02%)</title><rect x="13.6079%" y="1957" width="0.0241%" height="15" fill="rgb(213,81,29)" fg:x="1130" fg:w="2"/><text x="13.8579%" y="1967.50"></text></g><g><title>mi_page_queue_find_free_ex (2 samples, 0.02%)</title><rect x="13.6079%" y="1941" width="0.0241%" height="15" fill="rgb(220,89,49)" fg:x="1130" fg:w="2"/><text x="13.8579%" y="1951.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6199%" y="1925" width="0.0120%" height="15" fill="rgb(227,60,33)" fg:x="1131" fg:w="1"/><text x="13.8699%" y="1935.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6199%" y="1909" width="0.0120%" height="15" fill="rgb(205,113,12)" fg:x="1131" fg:w="1"/><text x="13.8699%" y="1919.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6199%" y="1893" width="0.0120%" height="15" fill="rgb(211,32,1)" fg:x="1131" fg:w="1"/><text x="13.8699%" y="1903.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6199%" y="1877" width="0.0120%" height="15" fill="rgb(246,2,12)" fg:x="1131" fg:w="1"/><text x="13.8699%" y="1887.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6199%" y="1861" width="0.0120%" height="15" fill="rgb(243,37,27)" fg:x="1131" fg:w="1"/><text x="13.8699%" y="1871.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6199%" y="1845" width="0.0120%" height="15" fill="rgb(248,211,31)" fg:x="1131" fg:w="1"/><text x="13.8699%" y="1855.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6320%" y="1941" width="0.0120%" height="15" fill="rgb(242,146,47)" fg:x="1132" fg:w="1"/><text x="13.8820%" y="1951.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6320%" y="1925" width="0.0120%" height="15" fill="rgb(206,70,20)" fg:x="1132" fg:w="1"/><text x="13.8820%" y="1935.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6320%" y="1909" width="0.0120%" height="15" fill="rgb(215,10,51)" fg:x="1132" fg:w="1"/><text x="13.8820%" y="1919.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6320%" y="1893" width="0.0120%" height="15" fill="rgb(243,178,53)" fg:x="1132" fg:w="1"/><text x="13.8820%" y="1903.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6320%" y="1877" width="0.0120%" height="15" fill="rgb(233,221,20)" fg:x="1132" fg:w="1"/><text x="13.8820%" y="1887.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6320%" y="1861" width="0.0120%" height="15" fill="rgb(218,95,35)" fg:x="1132" fg:w="1"/><text x="13.8820%" y="1871.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6320%" y="1845" width="0.0120%" height="15" fill="rgb(229,13,5)" fg:x="1132" fg:w="1"/><text x="13.8820%" y="1855.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6320%" y="1829" width="0.0120%" height="15" fill="rgb(252,164,30)" fg:x="1132" fg:w="1"/><text x="13.8820%" y="1839.50"></text></g><g><title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::le (1 samples, 0.01%)</title><rect x="13.6561%" y="1605" width="0.0120%" height="15" fill="rgb(232,68,36)" fg:x="1134" fg:w="1"/><text x="13.9061%" y="1615.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::consume_with (1 samples, 0.01%)</title><rect x="13.6681%" y="1573" width="0.0120%" height="15" fill="rgb(219,59,54)" fg:x="1135" fg:w="1"/><text x="13.9181%" y="1583.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact::{{closure}} (1 samples, 0.01%)</title><rect x="13.6681%" y="1557" width="0.0120%" height="15" fill="rgb(250,92,33)" fg:x="1135" fg:w="1"/><text x="13.9181%" y="1567.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.01%)</title><rect x="13.6681%" y="1541" width="0.0120%" height="15" fill="rgb(229,162,54)" fg:x="1135" fg:w="1"/><text x="13.9181%" y="1551.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="13.6681%" y="1525" width="0.0120%" height="15" fill="rgb(244,114,52)" fg:x="1135" fg:w="1"/><text x="13.9181%" y="1535.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="13.6681%" y="1509" width="0.0120%" height="15" fill="rgb(212,211,43)" fg:x="1135" fg:w="1"/><text x="13.9181%" y="1519.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (18 samples, 0.22%)</title><rect x="13.6681%" y="1589" width="0.2168%" height="15" fill="rgb(226,147,8)" fg:x="1135" fg:w="18"/><text x="13.9181%" y="1599.50"></text></g><g><title>std::io::default_read_exact (17 samples, 0.20%)</title><rect x="13.6802%" y="1573" width="0.2047%" height="15" fill="rgb(226,23,13)" fg:x="1136" fg:w="17"/><text x="13.9302%" y="1583.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (17 samples, 0.20%)</title><rect x="13.6802%" y="1557" width="0.2047%" height="15" fill="rgb(240,63,4)" fg:x="1136" fg:w="17"/><text x="13.9302%" y="1567.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (17 samples, 0.20%)</title><rect x="13.6802%" y="1541" width="0.2047%" height="15" fill="rgb(221,1,32)" fg:x="1136" fg:w="17"/><text x="13.9302%" y="1551.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::fill_buf (17 samples, 0.20%)</title><rect x="13.6802%" y="1525" width="0.2047%" height="15" fill="rgb(242,117,10)" fg:x="1136" fg:w="17"/><text x="13.9302%" y="1535.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read_buf (17 samples, 0.20%)</title><rect x="13.6802%" y="1509" width="0.2047%" height="15" fill="rgb(249,172,44)" fg:x="1136" fg:w="17"/><text x="13.9302%" y="1519.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (17 samples, 0.20%)</title><rect x="13.6802%" y="1493" width="0.2047%" height="15" fill="rgb(244,46,45)" fg:x="1136" fg:w="17"/><text x="13.9302%" y="1503.50"></text></g><g><title>std::sys::unix::fs::File::read_buf (17 samples, 0.20%)</title><rect x="13.6802%" y="1477" width="0.2047%" height="15" fill="rgb(206,43,17)" fg:x="1136" fg:w="17"/><text x="13.9302%" y="1487.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read_buf (17 samples, 0.20%)</title><rect x="13.6802%" y="1461" width="0.2047%" height="15" fill="rgb(239,218,39)" fg:x="1136" fg:w="17"/><text x="13.9302%" y="1471.50"></text></g><g><title>__libc_read (17 samples, 0.20%)</title><rect x="13.6802%" y="1445" width="0.2047%" height="15" fill="rgb(208,169,54)" fg:x="1136" fg:w="17"/><text x="13.9302%" y="1455.50"></text></g><g><title>[unknown] (17 samples, 0.20%)</title><rect x="13.6802%" y="1429" width="0.2047%" height="15" fill="rgb(247,25,42)" fg:x="1136" fg:w="17"/><text x="13.9302%" y="1439.50"></text></g><g><title>[unknown] (17 samples, 0.20%)</title><rect x="13.6802%" y="1413" width="0.2047%" height="15" fill="rgb(226,23,31)" fg:x="1136" fg:w="17"/><text x="13.9302%" y="1423.50"></text></g><g><title>[unknown] (17 samples, 0.20%)</title><rect x="13.6802%" y="1397" width="0.2047%" height="15" fill="rgb(247,16,28)" fg:x="1136" fg:w="17"/><text x="13.9302%" y="1407.50"></text></g><g><title>[unknown] (17 samples, 0.20%)</title><rect x="13.6802%" y="1381" width="0.2047%" height="15" fill="rgb(231,147,38)" fg:x="1136" fg:w="17"/><text x="13.9302%" y="1391.50"></text></g><g><title>[unknown] (17 samples, 0.20%)</title><rect x="13.6802%" y="1365" width="0.2047%" height="15" fill="rgb(253,81,48)" fg:x="1136" fg:w="17"/><text x="13.9302%" y="1375.50"></text></g><g><title>[unknown] (15 samples, 0.18%)</title><rect x="13.7042%" y="1349" width="0.1806%" height="15" fill="rgb(249,222,43)" fg:x="1138" fg:w="15"/><text x="13.9542%" y="1359.50"></text></g><g><title>[unknown] (14 samples, 0.17%)</title><rect x="13.7163%" y="1333" width="0.1686%" height="15" fill="rgb(221,3,27)" fg:x="1139" fg:w="14"/><text x="13.9663%" y="1343.50"></text></g><g><title>[unknown] (11 samples, 0.13%)</title><rect x="13.7524%" y="1317" width="0.1325%" height="15" fill="rgb(228,180,5)" fg:x="1142" fg:w="11"/><text x="14.0024%" y="1327.50"></text></g><g><title>[unknown] (9 samples, 0.11%)</title><rect x="13.7765%" y="1301" width="0.1084%" height="15" fill="rgb(227,131,42)" fg:x="1144" fg:w="9"/><text x="14.0265%" y="1311.50"></text></g><g><title>[unknown] (8 samples, 0.10%)</title><rect x="13.7885%" y="1285" width="0.0963%" height="15" fill="rgb(212,3,39)" fg:x="1145" fg:w="8"/><text x="14.0385%" y="1295.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="13.8126%" y="1269" width="0.0723%" height="15" fill="rgb(226,45,5)" fg:x="1147" fg:w="6"/><text x="14.0626%" y="1279.50"></text></g><g><title>_mi_block_zero_init (1 samples, 0.01%)</title><rect x="13.8849%" y="1461" width="0.0120%" height="15" fill="rgb(215,167,45)" fg:x="1153" fg:w="1"/><text x="14.1349%" y="1471.50"></text></g><g><title>_mi_block_zero_init (1 samples, 0.01%)</title><rect x="13.8849%" y="1445" width="0.0120%" height="15" fill="rgb(250,218,53)" fg:x="1153" fg:w="1"/><text x="14.1349%" y="1455.50"></text></g><g><title>mi_usable_size (1 samples, 0.01%)</title><rect x="13.8849%" y="1429" width="0.0120%" height="15" fill="rgb(207,140,0)" fg:x="1153" fg:w="1"/><text x="14.1349%" y="1439.50"></text></g><g><title>_mi_usable_size (1 samples, 0.01%)</title><rect x="13.8849%" y="1413" width="0.0120%" height="15" fill="rgb(238,133,51)" fg:x="1153" fg:w="1"/><text x="14.1349%" y="1423.50"></text></g><g><title>mi_checked_ptr_segment (1 samples, 0.01%)</title><rect x="13.8849%" y="1397" width="0.0120%" height="15" fill="rgb(218,203,53)" fg:x="1153" fg:w="1"/><text x="14.1349%" y="1407.50"></text></g><g><title>_mi_ptr_cookie (1 samples, 0.01%)</title><rect x="13.8849%" y="1381" width="0.0120%" height="15" fill="rgb(226,184,25)" fg:x="1153" fg:w="1"/><text x="14.1349%" y="1391.50"></text></g><g><title>mi_block_nextx (1 samples, 0.01%)</title><rect x="13.9090%" y="1397" width="0.0120%" height="15" fill="rgb(231,121,21)" fg:x="1155" fg:w="1"/><text x="14.1590%" y="1407.50"></text></g><g><title>mi_ptr_decode (1 samples, 0.01%)</title><rect x="13.9090%" y="1381" width="0.0120%" height="15" fill="rgb(251,14,34)" fg:x="1155" fg:w="1"/><text x="14.1590%" y="1391.50"></text></g><g><title>alloc::vec::from_elem (5 samples, 0.06%)</title><rect x="13.8849%" y="1589" width="0.0602%" height="15" fill="rgb(249,193,11)" fg:x="1153" fg:w="5"/><text x="14.1349%" y="1599.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (5 samples, 0.06%)</title><rect x="13.8849%" y="1573" width="0.0602%" height="15" fill="rgb(220,172,37)" fg:x="1153" fg:w="5"/><text x="14.1349%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (5 samples, 0.06%)</title><rect x="13.8849%" y="1557" width="0.0602%" height="15" fill="rgb(231,229,43)" fg:x="1153" fg:w="5"/><text x="14.1349%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.06%)</title><rect x="13.8849%" y="1541" width="0.0602%" height="15" fill="rgb(250,161,5)" fg:x="1153" fg:w="5"/><text x="14.1349%" y="1551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (5 samples, 0.06%)</title><rect x="13.8849%" y="1525" width="0.0602%" height="15" fill="rgb(218,225,18)" fg:x="1153" fg:w="5"/><text x="14.1349%" y="1535.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.06%)</title><rect x="13.8849%" y="1509" width="0.0602%" height="15" fill="rgb(245,45,42)" fg:x="1153" fg:w="5"/><text x="14.1349%" y="1519.50"></text></g><g><title>alloc::alloc::alloc_zeroed (5 samples, 0.06%)</title><rect x="13.8849%" y="1493" width="0.0602%" height="15" fill="rgb(211,115,1)" fg:x="1153" fg:w="5"/><text x="14.1349%" y="1503.50"></text></g><g><title>_mi_heap_malloc_zero (5 samples, 0.06%)</title><rect x="13.8849%" y="1477" width="0.0602%" height="15" fill="rgb(248,133,52)" fg:x="1153" fg:w="5"/><text x="14.1349%" y="1487.50"></text></g><g><title>mi_heap_malloc (4 samples, 0.05%)</title><rect x="13.8969%" y="1461" width="0.0482%" height="15" fill="rgb(238,100,21)" fg:x="1154" fg:w="4"/><text x="14.1469%" y="1471.50"></text></g><g><title>mi_heap_malloc_small (4 samples, 0.05%)</title><rect x="13.8969%" y="1445" width="0.0482%" height="15" fill="rgb(247,144,11)" fg:x="1154" fg:w="4"/><text x="14.1469%" y="1455.50"></text></g><g><title>_mi_page_malloc (4 samples, 0.05%)</title><rect x="13.8969%" y="1429" width="0.0482%" height="15" fill="rgb(206,164,16)" fg:x="1154" fg:w="4"/><text x="14.1469%" y="1439.50"></text></g><g><title>mi_block_next (3 samples, 0.04%)</title><rect x="13.9090%" y="1413" width="0.0361%" height="15" fill="rgb(222,34,3)" fg:x="1155" fg:w="3"/><text x="14.1590%" y="1423.50"></text></g><g><title>mi_is_in_same_page (2 samples, 0.02%)</title><rect x="13.9210%" y="1397" width="0.0241%" height="15" fill="rgb(248,82,4)" fg:x="1156" fg:w="2"/><text x="14.1710%" y="1407.50"></text></g><g><title>_mi_segment_page_start (2 samples, 0.02%)</title><rect x="13.9210%" y="1381" width="0.0241%" height="15" fill="rgb(228,81,46)" fg:x="1156" fg:w="2"/><text x="14.1710%" y="1391.50"></text></g><g><title>_mi_segment_page_start_from_slice (1 samples, 0.01%)</title><rect x="13.9330%" y="1365" width="0.0120%" height="15" fill="rgb(227,67,47)" fg:x="1157" fg:w="1"/><text x="14.1830%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.01%)</title><rect x="13.9451%" y="1589" width="0.0120%" height="15" fill="rgb(215,93,53)" fg:x="1158" fg:w="1"/><text x="14.1951%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.01%)</title><rect x="13.9451%" y="1573" width="0.0120%" height="15" fill="rgb(248,194,39)" fg:x="1158" fg:w="1"/><text x="14.1951%" y="1583.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="13.9451%" y="1557" width="0.0120%" height="15" fill="rgb(215,5,19)" fg:x="1158" fg:w="1"/><text x="14.1951%" y="1567.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="13.9451%" y="1541" width="0.0120%" height="15" fill="rgb(226,215,51)" fg:x="1158" fg:w="1"/><text x="14.1951%" y="1551.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="13.9451%" y="1525" width="0.0120%" height="15" fill="rgb(225,56,26)" fg:x="1158" fg:w="1"/><text x="14.1951%" y="1535.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="13.9451%" y="1509" width="0.0120%" height="15" fill="rgb(222,75,29)" fg:x="1158" fg:w="1"/><text x="14.1951%" y="1519.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.02%)</title><rect x="13.9571%" y="1461" width="0.0241%" height="15" fill="rgb(236,139,6)" fg:x="1159" fg:w="2"/><text x="14.2071%" y="1471.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.02%)</title><rect x="13.9571%" y="1445" width="0.0241%" height="15" fill="rgb(223,137,36)" fg:x="1159" fg:w="2"/><text x="14.2071%" y="1455.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.02%)</title><rect x="13.9571%" y="1429" width="0.0241%" height="15" fill="rgb(226,99,2)" fg:x="1159" fg:w="2"/><text x="14.2071%" y="1439.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.02%)</title><rect x="13.9571%" y="1413" width="0.0241%" height="15" fill="rgb(206,133,23)" fg:x="1159" fg:w="2"/><text x="14.2071%" y="1423.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.02%)</title><rect x="13.9571%" y="1397" width="0.0241%" height="15" fill="rgb(243,173,15)" fg:x="1159" fg:w="2"/><text x="14.2071%" y="1407.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.04%)</title><rect x="14.0535%" y="1205" width="0.0361%" height="15" fill="rgb(228,69,28)" fg:x="1167" fg:w="3"/><text x="14.3035%" y="1215.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (4 samples, 0.05%)</title><rect x="14.0535%" y="1285" width="0.0482%" height="15" fill="rgb(212,51,22)" fg:x="1167" fg:w="4"/><text x="14.3035%" y="1295.50"></text></g><g><title>&lt;vm_library::vm_client::_::&lt;impl serde::de::Deserialize for vm_library::vm_client::Transaction&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (4 samples, 0.05%)</title><rect x="14.0535%" y="1269" width="0.0482%" height="15" fill="rgb(227,113,0)" fg:x="1167" fg:w="4"/><text x="14.3035%" y="1279.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (4 samples, 0.05%)</title><rect x="14.0535%" y="1253" width="0.0482%" height="15" fill="rgb(252,84,27)" fg:x="1167" fg:w="4"/><text x="14.3035%" y="1263.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.05%)</title><rect x="14.0535%" y="1237" width="0.0482%" height="15" fill="rgb(223,145,39)" fg:x="1167" fg:w="4"/><text x="14.3035%" y="1247.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.05%)</title><rect x="14.0535%" y="1221" width="0.0482%" height="15" fill="rgb(239,219,30)" fg:x="1167" fg:w="4"/><text x="14.3035%" y="1231.50"></text></g><g><title>&lt;vm_library::vm_client::_::&lt;impl serde::de::Deserialize for vm_library::vm_client::Transaction&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.01%)</title><rect x="14.0896%" y="1205" width="0.0120%" height="15" fill="rgb(224,196,39)" fg:x="1170" fg:w="1"/><text x="14.3396%" y="1215.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.01%)</title><rect x="14.1016%" y="1253" width="0.0120%" height="15" fill="rgb(205,35,43)" fg:x="1171" fg:w="1"/><text x="14.3516%" y="1263.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9 samples, 0.11%)</title><rect x="14.0535%" y="1333" width="0.1084%" height="15" fill="rgb(228,201,21)" fg:x="1167" fg:w="9"/><text x="14.3035%" y="1343.50"></text></g><g><title>&lt;vm_library::vm_client::_::&lt;impl serde::de::Deserialize for vm_library::vm_client::Transaction&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (9 samples, 0.11%)</title><rect x="14.0535%" y="1317" width="0.1084%" height="15" fill="rgb(237,118,16)" fg:x="1167" fg:w="9"/><text x="14.3035%" y="1327.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (9 samples, 0.11%)</title><rect x="14.0535%" y="1301" width="0.1084%" height="15" fill="rgb(241,17,19)" fg:x="1167" fg:w="9"/><text x="14.3035%" y="1311.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.06%)</title><rect x="14.1016%" y="1285" width="0.0602%" height="15" fill="rgb(214,10,25)" fg:x="1171" fg:w="5"/><text x="14.3516%" y="1295.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (5 samples, 0.06%)</title><rect x="14.1016%" y="1269" width="0.0602%" height="15" fill="rgb(238,37,29)" fg:x="1171" fg:w="5"/><text x="14.3516%" y="1279.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (4 samples, 0.05%)</title><rect x="14.1137%" y="1253" width="0.0482%" height="15" fill="rgb(253,83,25)" fg:x="1172" fg:w="4"/><text x="14.3637%" y="1263.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.01%)</title><rect x="14.1498%" y="1237" width="0.0120%" height="15" fill="rgb(234,192,12)" fg:x="1175" fg:w="1"/><text x="14.3998%" y="1247.50"></text></g><g><title>serde_json::read::as_str (1 samples, 0.01%)</title><rect x="14.1498%" y="1221" width="0.0120%" height="15" fill="rgb(241,216,45)" fg:x="1175" fg:w="1"/><text x="14.3998%" y="1231.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.01%)</title><rect x="14.1498%" y="1205" width="0.0120%" height="15" fill="rgb(242,22,33)" fg:x="1175" fg:w="1"/><text x="14.3998%" y="1215.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.01%)</title><rect x="14.1498%" y="1189" width="0.0120%" height="15" fill="rgb(231,105,49)" fg:x="1175" fg:w="1"/><text x="14.3998%" y="1199.50"></text></g><g><title>serde::de::MapAccess::next_key (11 samples, 0.13%)</title><rect x="14.0535%" y="1365" width="0.1325%" height="15" fill="rgb(218,204,15)" fg:x="1167" fg:w="11"/><text x="14.3035%" y="1375.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (11 samples, 0.13%)</title><rect x="14.0535%" y="1349" width="0.1325%" height="15" fill="rgb(235,138,41)" fg:x="1167" fg:w="11"/><text x="14.3035%" y="1359.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (2 samples, 0.02%)</title><rect x="14.1618%" y="1333" width="0.0241%" height="15" fill="rgb(246,0,9)" fg:x="1176" fg:w="2"/><text x="14.4118%" y="1343.50"></text></g><g><title>mi_get_default_heap (1 samples, 0.01%)</title><rect x="14.1980%" y="1045" width="0.0120%" height="15" fill="rgb(210,74,4)" fg:x="1179" fg:w="1"/><text x="14.4480%" y="1055.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (6 samples, 0.07%)</title><rect x="14.1859%" y="1269" width="0.0723%" height="15" fill="rgb(250,60,41)" fg:x="1178" fg:w="6"/><text x="14.4359%" y="1279.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (6 samples, 0.07%)</title><rect x="14.1859%" y="1253" width="0.0723%" height="15" fill="rgb(220,115,12)" fg:x="1178" fg:w="6"/><text x="14.4359%" y="1263.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (6 samples, 0.07%)</title><rect x="14.1859%" y="1237" width="0.0723%" height="15" fill="rgb(237,100,13)" fg:x="1178" fg:w="6"/><text x="14.4359%" y="1247.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (6 samples, 0.07%)</title><rect x="14.1859%" y="1221" width="0.0723%" height="15" fill="rgb(213,55,26)" fg:x="1178" fg:w="6"/><text x="14.4359%" y="1231.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.07%)</title><rect x="14.1859%" y="1205" width="0.0723%" height="15" fill="rgb(216,17,4)" fg:x="1178" fg:w="6"/><text x="14.4359%" y="1215.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.07%)</title><rect x="14.1859%" y="1189" width="0.0723%" height="15" fill="rgb(220,153,47)" fg:x="1178" fg:w="6"/><text x="14.4359%" y="1199.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.07%)</title><rect x="14.1859%" y="1173" width="0.0723%" height="15" fill="rgb(215,131,9)" fg:x="1178" fg:w="6"/><text x="14.4359%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.07%)</title><rect x="14.1859%" y="1157" width="0.0723%" height="15" fill="rgb(233,46,42)" fg:x="1178" fg:w="6"/><text x="14.4359%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.07%)</title><rect x="14.1859%" y="1141" width="0.0723%" height="15" fill="rgb(226,86,7)" fg:x="1178" fg:w="6"/><text x="14.4359%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.07%)</title><rect x="14.1859%" y="1125" width="0.0723%" height="15" fill="rgb(239,226,21)" fg:x="1178" fg:w="6"/><text x="14.4359%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.07%)</title><rect x="14.1859%" y="1109" width="0.0723%" height="15" fill="rgb(244,137,22)" fg:x="1178" fg:w="6"/><text x="14.4359%" y="1119.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.07%)</title><rect x="14.1859%" y="1093" width="0.0723%" height="15" fill="rgb(211,139,35)" fg:x="1178" fg:w="6"/><text x="14.4359%" y="1103.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.07%)</title><rect x="14.1859%" y="1077" width="0.0723%" height="15" fill="rgb(214,62,50)" fg:x="1178" fg:w="6"/><text x="14.4359%" y="1087.50"></text></g><g><title>mi_malloc (6 samples, 0.07%)</title><rect x="14.1859%" y="1061" width="0.0723%" height="15" fill="rgb(212,113,44)" fg:x="1178" fg:w="6"/><text x="14.4359%" y="1071.50"></text></g><g><title>mi_heap_malloc (4 samples, 0.05%)</title><rect x="14.2100%" y="1045" width="0.0482%" height="15" fill="rgb(226,150,43)" fg:x="1180" fg:w="4"/><text x="14.4600%" y="1055.50"></text></g><g><title>mi_heap_malloc_small (4 samples, 0.05%)</title><rect x="14.2100%" y="1029" width="0.0482%" height="15" fill="rgb(250,71,37)" fg:x="1180" fg:w="4"/><text x="14.4600%" y="1039.50"></text></g><g><title>_mi_page_malloc (4 samples, 0.05%)</title><rect x="14.2100%" y="1013" width="0.0482%" height="15" fill="rgb(219,76,19)" fg:x="1180" fg:w="4"/><text x="14.4600%" y="1023.50"></text></g><g><title>mi_block_next (3 samples, 0.04%)</title><rect x="14.2221%" y="997" width="0.0361%" height="15" fill="rgb(250,39,11)" fg:x="1181" fg:w="3"/><text x="14.4721%" y="1007.50"></text></g><g><title>mi_block_nextx (3 samples, 0.04%)</title><rect x="14.2221%" y="981" width="0.0361%" height="15" fill="rgb(230,64,31)" fg:x="1181" fg:w="3"/><text x="14.4721%" y="991.50"></text></g><g><title>mi_ptr_decode (3 samples, 0.04%)</title><rect x="14.2221%" y="965" width="0.0361%" height="15" fill="rgb(208,222,23)" fg:x="1181" fg:w="3"/><text x="14.4721%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.01%)</title><rect x="14.3545%" y="1157" width="0.0120%" height="15" fill="rgb(227,125,18)" fg:x="1192" fg:w="1"/><text x="14.6045%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (10 samples, 0.12%)</title><rect x="14.3666%" y="1109" width="0.1204%" height="15" fill="rgb(234,210,9)" fg:x="1193" fg:w="10"/><text x="14.6166%" y="1119.50"></text></g><g><title>alloc::alloc::Global::grow_impl (10 samples, 0.12%)</title><rect x="14.3666%" y="1093" width="0.1204%" height="15" fill="rgb(217,127,24)" fg:x="1193" fg:w="10"/><text x="14.6166%" y="1103.50"></text></g><g><title>alloc::alloc::realloc (10 samples, 0.12%)</title><rect x="14.3666%" y="1077" width="0.1204%" height="15" fill="rgb(239,141,48)" fg:x="1193" fg:w="10"/><text x="14.6166%" y="1087.50"></text></g><g><title>_mi_heap_realloc_zero (10 samples, 0.12%)</title><rect x="14.3666%" y="1061" width="0.1204%" height="15" fill="rgb(227,109,8)" fg:x="1193" fg:w="10"/><text x="14.6166%" y="1071.50"></text></g><g><title>mi_heap_malloc (10 samples, 0.12%)</title><rect x="14.3666%" y="1045" width="0.1204%" height="15" fill="rgb(235,184,23)" fg:x="1193" fg:w="10"/><text x="14.6166%" y="1055.50"></text></g><g><title>mi_heap_malloc_small (10 samples, 0.12%)</title><rect x="14.3666%" y="1029" width="0.1204%" height="15" fill="rgb(227,226,48)" fg:x="1193" fg:w="10"/><text x="14.6166%" y="1039.50"></text></g><g><title>_mi_page_malloc (10 samples, 0.12%)</title><rect x="14.3666%" y="1013" width="0.1204%" height="15" fill="rgb(206,150,11)" fg:x="1193" fg:w="10"/><text x="14.6166%" y="1023.50"></text></g><g><title>mi_block_next (9 samples, 0.11%)</title><rect x="14.3786%" y="997" width="0.1084%" height="15" fill="rgb(254,2,33)" fg:x="1194" fg:w="9"/><text x="14.6286%" y="1007.50"></text></g><g><title>mi_block_nextx (9 samples, 0.11%)</title><rect x="14.3786%" y="981" width="0.1084%" height="15" fill="rgb(243,160,20)" fg:x="1194" fg:w="9"/><text x="14.6286%" y="991.50"></text></g><g><title>mi_ptr_decode (9 samples, 0.11%)</title><rect x="14.3786%" y="965" width="0.1084%" height="15" fill="rgb(218,208,30)" fg:x="1194" fg:w="9"/><text x="14.6286%" y="975.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.13%)</title><rect x="14.3666%" y="1125" width="0.1325%" height="15" fill="rgb(224,120,49)" fg:x="1193" fg:w="11"/><text x="14.6166%" y="1135.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.01%)</title><rect x="14.4870%" y="1109" width="0.0120%" height="15" fill="rgb(246,12,2)" fg:x="1203" fg:w="1"/><text x="14.7370%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (12 samples, 0.14%)</title><rect x="14.3666%" y="1141" width="0.1445%" height="15" fill="rgb(236,117,3)" fg:x="1193" fg:w="12"/><text x="14.6166%" y="1151.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.01%)</title><rect x="14.4990%" y="1125" width="0.0120%" height="15" fill="rgb(216,128,52)" fg:x="1204" fg:w="1"/><text x="14.7490%" y="1135.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.01%)</title><rect x="14.4990%" y="1109" width="0.0120%" height="15" fill="rgb(246,145,19)" fg:x="1204" fg:w="1"/><text x="14.7490%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (14 samples, 0.17%)</title><rect x="14.3545%" y="1189" width="0.1686%" height="15" fill="rgb(222,11,46)" fg:x="1192" fg:w="14"/><text x="14.6045%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (14 samples, 0.17%)</title><rect x="14.3545%" y="1173" width="0.1686%" height="15" fill="rgb(245,82,36)" fg:x="1192" fg:w="14"/><text x="14.6045%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (13 samples, 0.16%)</title><rect x="14.3666%" y="1157" width="0.1566%" height="15" fill="rgb(250,73,51)" fg:x="1193" fg:w="13"/><text x="14.6166%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="14.5111%" y="1141" width="0.0120%" height="15" fill="rgb(221,189,23)" fg:x="1205" fg:w="1"/><text x="14.7611%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (15 samples, 0.18%)</title><rect x="14.3545%" y="1237" width="0.1806%" height="15" fill="rgb(210,33,7)" fg:x="1192" fg:w="15"/><text x="14.6045%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (15 samples, 0.18%)</title><rect x="14.3545%" y="1221" width="0.1806%" height="15" fill="rgb(210,107,22)" fg:x="1192" fg:w="15"/><text x="14.6045%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (15 samples, 0.18%)</title><rect x="14.3545%" y="1205" width="0.1806%" height="15" fill="rgb(222,116,37)" fg:x="1192" fg:w="15"/><text x="14.6045%" y="1215.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="14.5231%" y="1189" width="0.0120%" height="15" fill="rgb(254,17,48)" fg:x="1206" fg:w="1"/><text x="14.7731%" y="1199.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="14.5231%" y="1173" width="0.0120%" height="15" fill="rgb(224,36,32)" fg:x="1206" fg:w="1"/><text x="14.7731%" y="1183.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.02%)</title><rect x="14.5352%" y="1237" width="0.0241%" height="15" fill="rgb(232,90,46)" fg:x="1207" fg:w="2"/><text x="14.7852%" y="1247.50"></text></g><g><title>serde_json::read::as_str (2 samples, 0.02%)</title><rect x="14.5352%" y="1221" width="0.0241%" height="15" fill="rgb(241,66,40)" fg:x="1207" fg:w="2"/><text x="14.7852%" y="1231.50"></text></g><g><title>core::str::converts::from_utf8 (2 samples, 0.02%)</title><rect x="14.5352%" y="1205" width="0.0241%" height="15" fill="rgb(249,184,29)" fg:x="1207" fg:w="2"/><text x="14.7852%" y="1215.50"></text></g><g><title>core::str::validations::run_utf8_validation (2 samples, 0.02%)</title><rect x="14.5352%" y="1189" width="0.0241%" height="15" fill="rgb(231,181,1)" fg:x="1207" fg:w="2"/><text x="14.7852%" y="1199.50"></text></g><g><title>_mi_heap_realloc_zero (2 samples, 0.02%)</title><rect x="14.6797%" y="1109" width="0.0241%" height="15" fill="rgb(224,94,2)" fg:x="1219" fg:w="2"/><text x="14.9297%" y="1119.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.01%)</title><rect x="14.6917%" y="1093" width="0.0120%" height="15" fill="rgb(229,170,15)" fg:x="1220" fg:w="1"/><text x="14.9417%" y="1103.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.01%)</title><rect x="14.6917%" y="1077" width="0.0120%" height="15" fill="rgb(240,127,35)" fg:x="1220" fg:w="1"/><text x="14.9417%" y="1087.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.01%)</title><rect x="14.6917%" y="1061" width="0.0120%" height="15" fill="rgb(248,196,34)" fg:x="1220" fg:w="1"/><text x="14.9417%" y="1071.50"></text></g><g><title>mi_block_next (1 samples, 0.01%)</title><rect x="14.6917%" y="1045" width="0.0120%" height="15" fill="rgb(236,137,7)" fg:x="1220" fg:w="1"/><text x="14.9417%" y="1055.50"></text></g><g><title>mi_block_nextx (1 samples, 0.01%)</title><rect x="14.6917%" y="1029" width="0.0120%" height="15" fill="rgb(235,127,16)" fg:x="1220" fg:w="1"/><text x="14.9417%" y="1039.50"></text></g><g><title>mi_ptr_decode (1 samples, 0.01%)</title><rect x="14.6917%" y="1013" width="0.0120%" height="15" fill="rgb(250,192,54)" fg:x="1220" fg:w="1"/><text x="14.9417%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.06%)</title><rect x="14.6797%" y="1205" width="0.0602%" height="15" fill="rgb(218,98,20)" fg:x="1219" fg:w="5"/><text x="14.9297%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.06%)</title><rect x="14.6797%" y="1189" width="0.0602%" height="15" fill="rgb(230,176,47)" fg:x="1219" fg:w="5"/><text x="14.9297%" y="1199.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.06%)</title><rect x="14.6797%" y="1173" width="0.0602%" height="15" fill="rgb(244,2,33)" fg:x="1219" fg:w="5"/><text x="14.9297%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5 samples, 0.06%)</title><rect x="14.6797%" y="1157" width="0.0602%" height="15" fill="rgb(231,100,17)" fg:x="1219" fg:w="5"/><text x="14.9297%" y="1167.50"></text></g><g><title>alloc::alloc::Global::grow_impl (5 samples, 0.06%)</title><rect x="14.6797%" y="1141" width="0.0602%" height="15" fill="rgb(245,23,12)" fg:x="1219" fg:w="5"/><text x="14.9297%" y="1151.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.06%)</title><rect x="14.6797%" y="1125" width="0.0602%" height="15" fill="rgb(249,55,22)" fg:x="1219" fg:w="5"/><text x="14.9297%" y="1135.50"></text></g><g><title>mi_realloc (3 samples, 0.04%)</title><rect x="14.7038%" y="1109" width="0.0361%" height="15" fill="rgb(207,134,9)" fg:x="1221" fg:w="3"/><text x="14.9538%" y="1119.50"></text></g><g><title>mi_get_default_heap (2 samples, 0.02%)</title><rect x="14.7158%" y="1093" width="0.0241%" height="15" fill="rgb(218,134,0)" fg:x="1222" fg:w="2"/><text x="14.9658%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8 samples, 0.10%)</title><rect x="14.6556%" y="1221" width="0.0963%" height="15" fill="rgb(213,212,33)" fg:x="1217" fg:w="8"/><text x="14.9056%" y="1231.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="14.7399%" y="1205" width="0.0120%" height="15" fill="rgb(252,106,18)" fg:x="1224" fg:w="1"/><text x="14.9899%" y="1215.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (50 samples, 0.60%)</title><rect x="14.1859%" y="1317" width="0.6021%" height="15" fill="rgb(208,126,42)" fg:x="1178" fg:w="50"/><text x="14.4359%" y="1327.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (50 samples, 0.60%)</title><rect x="14.1859%" y="1301" width="0.6021%" height="15" fill="rgb(246,175,29)" fg:x="1178" fg:w="50"/><text x="14.4359%" y="1311.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (50 samples, 0.60%)</title><rect x="14.1859%" y="1285" width="0.6021%" height="15" fill="rgb(215,13,50)" fg:x="1178" fg:w="50"/><text x="14.4359%" y="1295.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (44 samples, 0.53%)</title><rect x="14.2582%" y="1269" width="0.5299%" height="15" fill="rgb(216,172,15)" fg:x="1184" fg:w="44"/><text x="14.5082%" y="1279.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (44 samples, 0.53%)</title><rect x="14.2582%" y="1253" width="0.5299%" height="15" fill="rgb(212,103,13)" fg:x="1184" fg:w="44"/><text x="14.5082%" y="1263.50"></text></g><g><title>serde_json::read::parse_escape (19 samples, 0.23%)</title><rect x="14.5592%" y="1237" width="0.2288%" height="15" fill="rgb(231,171,36)" fg:x="1209" fg:w="19"/><text x="14.8092%" y="1247.50"></text></g><g><title>serde_json::read::next_or_eof (3 samples, 0.04%)</title><rect x="14.7519%" y="1221" width="0.0361%" height="15" fill="rgb(250,123,20)" fg:x="1225" fg:w="3"/><text x="15.0019%" y="1231.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::next (1 samples, 0.01%)</title><rect x="14.7760%" y="1205" width="0.0120%" height="15" fill="rgb(212,53,50)" fg:x="1227" fg:w="1"/><text x="15.0260%" y="1215.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (2 samples, 0.02%)</title><rect x="14.7881%" y="1317" width="0.0241%" height="15" fill="rgb(243,54,12)" fg:x="1228" fg:w="2"/><text x="15.0381%" y="1327.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (2 samples, 0.02%)</title><rect x="14.7881%" y="1301" width="0.0241%" height="15" fill="rgb(234,101,34)" fg:x="1228" fg:w="2"/><text x="15.0381%" y="1311.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.02%)</title><rect x="14.7881%" y="1285" width="0.0241%" height="15" fill="rgb(254,67,22)" fg:x="1228" fg:w="2"/><text x="15.0381%" y="1295.50"></text></g><g><title>serde::de::SeqAccess::next_element (1 samples, 0.01%)</title><rect x="14.8001%" y="1269" width="0.0120%" height="15" fill="rgb(250,35,47)" fg:x="1229" fg:w="1"/><text x="15.0501%" y="1279.50"></text></g><g><title>&lt;vm_library::vm_client::_::&lt;impl serde::de::Deserialize for vm_library::vm_client::Transaction&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (70 samples, 0.84%)</title><rect x="14.0173%" y="1381" width="0.8430%" height="15" fill="rgb(226,126,38)" fg:x="1164" fg:w="70"/><text x="14.2673%" y="1391.50"></text></g><g><title>serde::de::MapAccess::next_value (56 samples, 0.67%)</title><rect x="14.1859%" y="1365" width="0.6744%" height="15" fill="rgb(216,138,53)" fg:x="1178" fg:w="56"/><text x="14.4359%" y="1375.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (56 samples, 0.67%)</title><rect x="14.1859%" y="1349" width="0.6744%" height="15" fill="rgb(246,199,43)" fg:x="1178" fg:w="56"/><text x="14.4359%" y="1359.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (56 samples, 0.67%)</title><rect x="14.1859%" y="1333" width="0.6744%" height="15" fill="rgb(232,125,11)" fg:x="1178" fg:w="56"/><text x="14.4359%" y="1343.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (4 samples, 0.05%)</title><rect x="14.8121%" y="1317" width="0.0482%" height="15" fill="rgb(218,219,45)" fg:x="1230" fg:w="4"/><text x="15.0621%" y="1327.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_option (2 samples, 0.02%)</title><rect x="14.8362%" y="1301" width="0.0241%" height="15" fill="rgb(216,102,54)" fg:x="1232" fg:w="2"/><text x="15.0862%" y="1311.50"></text></g><g><title>&lt;serde::de::impls::OptionVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_some (2 samples, 0.02%)</title><rect x="14.8362%" y="1285" width="0.0241%" height="15" fill="rgb(250,228,7)" fg:x="1232" fg:w="2"/><text x="15.0862%" y="1295.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (2 samples, 0.02%)</title><rect x="14.8362%" y="1269" width="0.0241%" height="15" fill="rgb(226,125,25)" fg:x="1232" fg:w="2"/><text x="15.0862%" y="1279.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (2 samples, 0.02%)</title><rect x="14.8362%" y="1253" width="0.0241%" height="15" fill="rgb(224,165,27)" fg:x="1232" fg:w="2"/><text x="15.0862%" y="1263.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.01%)</title><rect x="14.8483%" y="1237" width="0.0120%" height="15" fill="rgb(233,86,3)" fg:x="1233" fg:w="1"/><text x="15.0983%" y="1247.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.01%)</title><rect x="14.8483%" y="1221" width="0.0120%" height="15" fill="rgb(228,116,20)" fg:x="1233" fg:w="1"/><text x="15.0983%" y="1231.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1 samples, 0.01%)</title><rect x="14.8483%" y="1205" width="0.0120%" height="15" fill="rgb(209,192,17)" fg:x="1233" fg:w="1"/><text x="15.0983%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.8603%" y="1381" width="0.0120%" height="15" fill="rgb(224,88,34)" fg:x="1234" fg:w="1"/><text x="15.1103%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.8603%" y="1365" width="0.0120%" height="15" fill="rgb(233,38,6)" fg:x="1234" fg:w="1"/><text x="15.1103%" y="1375.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.8603%" y="1349" width="0.0120%" height="15" fill="rgb(212,59,30)" fg:x="1234" fg:w="1"/><text x="15.1103%" y="1359.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.8603%" y="1333" width="0.0120%" height="15" fill="rgb(213,80,3)" fg:x="1234" fg:w="1"/><text x="15.1103%" y="1343.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.8603%" y="1317" width="0.0120%" height="15" fill="rgb(251,178,7)" fg:x="1234" fg:w="1"/><text x="15.1103%" y="1327.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.8603%" y="1301" width="0.0120%" height="15" fill="rgb(213,154,26)" fg:x="1234" fg:w="1"/><text x="15.1103%" y="1311.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.8603%" y="1285" width="0.0120%" height="15" fill="rgb(238,165,49)" fg:x="1234" fg:w="1"/><text x="15.1103%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.8603%" y="1269" width="0.0120%" height="15" fill="rgb(248,91,46)" fg:x="1234" fg:w="1"/><text x="15.1103%" y="1279.50"></text></g><g><title>vm_library::pipe::IO::read (102 samples, 1.23%)</title><rect x="13.6681%" y="1605" width="1.2283%" height="15" fill="rgb(244,21,52)" fg:x="1135" fg:w="102"/><text x="13.9181%" y="1615.50"></text></g><g><title>serde_json::de::from_slice (78 samples, 0.94%)</title><rect x="13.9571%" y="1589" width="0.9393%" height="15" fill="rgb(247,122,20)" fg:x="1159" fg:w="78"/><text x="14.2071%" y="1599.50"></text></g><g><title>serde_json::de::from_trait (78 samples, 0.94%)</title><rect x="13.9571%" y="1573" width="0.9393%" height="15" fill="rgb(218,27,9)" fg:x="1159" fg:w="78"/><text x="14.2071%" y="1583.50"></text></g><g><title>&lt;vm_library::vm_client::ClientMessage as serde::de::Deserialize&gt;::deserialize (78 samples, 0.94%)</title><rect x="13.9571%" y="1557" width="0.9393%" height="15" fill="rgb(246,7,6)" fg:x="1159" fg:w="78"/><text x="14.2071%" y="1567.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_tuple (78 samples, 0.94%)</title><rect x="13.9571%" y="1541" width="0.9393%" height="15" fill="rgb(227,135,54)" fg:x="1159" fg:w="78"/><text x="14.2071%" y="1551.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (78 samples, 0.94%)</title><rect x="13.9571%" y="1525" width="0.9393%" height="15" fill="rgb(247,14,11)" fg:x="1159" fg:w="78"/><text x="14.2071%" y="1535.50"></text></g><g><title>&lt;vm_library::vm_client::ClientVisitor as serde::de::Visitor&gt;::visit_seq (78 samples, 0.94%)</title><rect x="13.9571%" y="1509" width="0.9393%" height="15" fill="rgb(206,149,34)" fg:x="1159" fg:w="78"/><text x="14.2071%" y="1519.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (78 samples, 0.94%)</title><rect x="13.9571%" y="1493" width="0.9393%" height="15" fill="rgb(227,228,4)" fg:x="1159" fg:w="78"/><text x="14.2071%" y="1503.50"></text></g><g><title>&lt;vm_library::vm_client::ClientVisitor as serde::de::Visitor&gt;::visit_seq::{{closure}} (78 samples, 0.94%)</title><rect x="13.9571%" y="1477" width="0.9393%" height="15" fill="rgb(238,218,28)" fg:x="1159" fg:w="78"/><text x="14.2071%" y="1487.50"></text></g><g><title>serde::de::SeqAccess::next_element (76 samples, 0.92%)</title><rect x="13.9812%" y="1461" width="0.9152%" height="15" fill="rgb(252,86,40)" fg:x="1161" fg:w="76"/><text x="14.2312%" y="1471.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (76 samples, 0.92%)</title><rect x="13.9812%" y="1445" width="0.9152%" height="15" fill="rgb(251,225,11)" fg:x="1161" fg:w="76"/><text x="14.2312%" y="1455.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (75 samples, 0.90%)</title><rect x="13.9933%" y="1429" width="0.9032%" height="15" fill="rgb(206,46,49)" fg:x="1162" fg:w="75"/><text x="14.2433%" y="1439.50"></text></g><g><title>vm_library::vm_client::_::&lt;impl serde::de::Deserialize for vm_library::vm_client::Transaction&gt;::deserialize (75 samples, 0.90%)</title><rect x="13.9933%" y="1413" width="0.9032%" height="15" fill="rgb(245,128,24)" fg:x="1162" fg:w="75"/><text x="14.2433%" y="1423.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (75 samples, 0.90%)</title><rect x="13.9933%" y="1397" width="0.9032%" height="15" fill="rgb(219,177,34)" fg:x="1162" fg:w="75"/><text x="14.2433%" y="1407.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::end_map (2 samples, 0.02%)</title><rect x="14.8724%" y="1381" width="0.0241%" height="15" fill="rgb(218,60,48)" fg:x="1235" fg:w="2"/><text x="15.1224%" y="1391.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf::BufGuard::remaining (1 samples, 0.01%)</title><rect x="14.9205%" y="1557" width="0.0120%" height="15" fill="rgb(221,11,5)" fg:x="1239" fg:w="1"/><text x="15.1705%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.01%)</title><rect x="14.9205%" y="1541" width="0.0120%" height="15" fill="rgb(220,148,13)" fg:x="1239" fg:w="1"/><text x="15.1705%" y="1551.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.01%)</title><rect x="14.9205%" y="1525" width="0.0120%" height="15" fill="rgb(210,16,3)" fg:x="1239" fg:w="1"/><text x="15.1705%" y="1535.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.01%)</title><rect x="14.9205%" y="1509" width="0.0120%" height="15" fill="rgb(236,80,2)" fg:x="1239" fg:w="1"/><text x="15.1705%" y="1519.50"></text></g><g><title>[unknown] (25 samples, 0.30%)</title><rect x="14.9326%" y="1493" width="0.3011%" height="15" fill="rgb(239,129,19)" fg:x="1240" fg:w="25"/><text x="15.1826%" y="1503.50"></text></g><g><title>[unknown] (25 samples, 0.30%)</title><rect x="14.9326%" y="1477" width="0.3011%" height="15" fill="rgb(220,106,35)" fg:x="1240" fg:w="25"/><text x="15.1826%" y="1487.50"></text></g><g><title>[unknown] (25 samples, 0.30%)</title><rect x="14.9326%" y="1461" width="0.3011%" height="15" fill="rgb(252,139,45)" fg:x="1240" fg:w="25"/><text x="15.1826%" y="1471.50"></text></g><g><title>[unknown] (24 samples, 0.29%)</title><rect x="14.9446%" y="1445" width="0.2890%" height="15" fill="rgb(229,8,36)" fg:x="1241" fg:w="24"/><text x="15.1946%" y="1455.50"></text></g><g><title>[unknown] (20 samples, 0.24%)</title><rect x="14.9928%" y="1429" width="0.2408%" height="15" fill="rgb(230,126,33)" fg:x="1245" fg:w="20"/><text x="15.2428%" y="1439.50"></text></g><g><title>[unknown] (19 samples, 0.23%)</title><rect x="15.0048%" y="1413" width="0.2288%" height="15" fill="rgb(239,140,21)" fg:x="1246" fg:w="19"/><text x="15.2548%" y="1423.50"></text></g><g><title>[unknown] (15 samples, 0.18%)</title><rect x="15.0530%" y="1397" width="0.1806%" height="15" fill="rgb(254,104,9)" fg:x="1250" fg:w="15"/><text x="15.3030%" y="1407.50"></text></g><g><title>[unknown] (11 samples, 0.13%)</title><rect x="15.1012%" y="1381" width="0.1325%" height="15" fill="rgb(239,52,14)" fg:x="1254" fg:w="11"/><text x="15.3512%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="15.2216%" y="1365" width="0.0120%" height="15" fill="rgb(208,227,44)" fg:x="1264" fg:w="1"/><text x="15.4716%" y="1375.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::flush (27 samples, 0.33%)</title><rect x="14.9205%" y="1589" width="0.3251%" height="15" fill="rgb(246,18,19)" fg:x="1239" fg:w="27"/><text x="15.1705%" y="1599.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (27 samples, 0.33%)</title><rect x="14.9205%" y="1573" width="0.3251%" height="15" fill="rgb(235,228,25)" fg:x="1239" fg:w="27"/><text x="15.1705%" y="1583.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (26 samples, 0.31%)</title><rect x="14.9326%" y="1557" width="0.3131%" height="15" fill="rgb(240,156,20)" fg:x="1240" fg:w="26"/><text x="15.1826%" y="1567.50"></text></g><g><title>std::sys::unix::net::Socket::write (26 samples, 0.31%)</title><rect x="14.9326%" y="1541" width="0.3131%" height="15" fill="rgb(224,8,20)" fg:x="1240" fg:w="26"/><text x="15.1826%" y="1551.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (26 samples, 0.31%)</title><rect x="14.9326%" y="1525" width="0.3131%" height="15" fill="rgb(214,12,52)" fg:x="1240" fg:w="26"/><text x="15.1826%" y="1535.50"></text></g><g><title>__GI___write (26 samples, 0.31%)</title><rect x="14.9326%" y="1509" width="0.3131%" height="15" fill="rgb(211,220,47)" fg:x="1240" fg:w="26"/><text x="15.1826%" y="1519.50"></text></g><g><title>__GI___pthread_enable_asynccancel (1 samples, 0.01%)</title><rect x="15.2336%" y="1493" width="0.0120%" height="15" fill="rgb(250,173,5)" fg:x="1265" fg:w="1"/><text x="15.4836%" y="1503.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.01%)</title><rect x="15.2457%" y="1589" width="0.0120%" height="15" fill="rgb(250,125,52)" fg:x="1266" fg:w="1"/><text x="15.4957%" y="1599.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::spare_capacity (1 samples, 0.01%)</title><rect x="15.2457%" y="1573" width="0.0120%" height="15" fill="rgb(209,133,18)" fg:x="1266" fg:w="1"/><text x="15.4957%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::capacity (1 samples, 0.01%)</title><rect x="15.2457%" y="1557" width="0.0120%" height="15" fill="rgb(216,173,22)" fg:x="1266" fg:w="1"/><text x="15.4957%" y="1567.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.02%)</title><rect x="15.2577%" y="1557" width="0.0241%" height="15" fill="rgb(205,3,22)" fg:x="1267" fg:w="2"/><text x="15.5077%" y="1567.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="15.2577%" y="1541" width="0.0241%" height="15" fill="rgb(248,22,20)" fg:x="1267" fg:w="2"/><text x="15.5077%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="15.2577%" y="1525" width="0.0241%" height="15" fill="rgb(233,6,29)" fg:x="1267" fg:w="2"/><text x="15.5077%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="15.2577%" y="1509" width="0.0241%" height="15" fill="rgb(240,22,54)" fg:x="1267" fg:w="2"/><text x="15.5077%" y="1519.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="15.2577%" y="1493" width="0.0241%" height="15" fill="rgb(231,133,32)" fg:x="1267" fg:w="2"/><text x="15.5077%" y="1503.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="15.2577%" y="1477" width="0.0241%" height="15" fill="rgb(248,193,4)" fg:x="1267" fg:w="2"/><text x="15.5077%" y="1487.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="15.2577%" y="1461" width="0.0241%" height="15" fill="rgb(211,178,46)" fg:x="1267" fg:w="2"/><text x="15.5077%" y="1471.50"></text></g><g><title>mi_malloc (2 samples, 0.02%)</title><rect x="15.2577%" y="1445" width="0.0241%" height="15" fill="rgb(224,5,42)" fg:x="1267" fg:w="2"/><text x="15.5077%" y="1455.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.01%)</title><rect x="15.2697%" y="1429" width="0.0120%" height="15" fill="rgb(239,176,25)" fg:x="1268" fg:w="1"/><text x="15.5197%" y="1439.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.01%)</title><rect x="15.2697%" y="1413" width="0.0120%" height="15" fill="rgb(245,187,50)" fg:x="1268" fg:w="1"/><text x="15.5197%" y="1423.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.01%)</title><rect x="15.2697%" y="1397" width="0.0120%" height="15" fill="rgb(248,24,15)" fg:x="1268" fg:w="1"/><text x="15.5197%" y="1407.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_tuple (1 samples, 0.01%)</title><rect x="15.2818%" y="1525" width="0.0120%" height="15" fill="rgb(205,166,13)" fg:x="1269" fg:w="1"/><text x="15.5318%" y="1535.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.01%)</title><rect x="15.2818%" y="1509" width="0.0120%" height="15" fill="rgb(208,114,23)" fg:x="1269" fg:w="1"/><text x="15.5318%" y="1519.50"></text></g><g><title>serde_json::ser::Formatter::begin_array (1 samples, 0.01%)</title><rect x="15.2818%" y="1493" width="0.0120%" height="15" fill="rgb(239,127,18)" fg:x="1269" fg:w="1"/><text x="15.5318%" y="1503.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.01%)</title><rect x="15.2818%" y="1477" width="0.0120%" height="15" fill="rgb(219,154,28)" fg:x="1269" fg:w="1"/><text x="15.5318%" y="1487.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.01%)</title><rect x="15.2818%" y="1461" width="0.0120%" height="15" fill="rgb(225,157,23)" fg:x="1269" fg:w="1"/><text x="15.5318%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="15.2818%" y="1445" width="0.0120%" height="15" fill="rgb(219,8,6)" fg:x="1269" fg:w="1"/><text x="15.5318%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="15.2818%" y="1429" width="0.0120%" height="15" fill="rgb(212,47,6)" fg:x="1269" fg:w="1"/><text x="15.5318%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="15.2818%" y="1413" width="0.0120%" height="15" fill="rgb(224,190,4)" fg:x="1269" fg:w="1"/><text x="15.5318%" y="1423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="15.2818%" y="1397" width="0.0120%" height="15" fill="rgb(239,183,29)" fg:x="1269" fg:w="1"/><text x="15.5318%" y="1407.50"></text></g><g><title>vm_library::pipe::IO::write (34 samples, 0.41%)</title><rect x="14.8964%" y="1605" width="0.4094%" height="15" fill="rgb(213,57,7)" fg:x="1237" fg:w="34"/><text x="15.1464%" y="1615.50"></text></g><g><title>serde_json::ser::to_string (4 samples, 0.05%)</title><rect x="15.2577%" y="1589" width="0.0482%" height="15" fill="rgb(216,148,1)" fg:x="1267" fg:w="4"/><text x="15.5077%" y="1599.50"></text></g><g><title>serde_json::ser::to_vec (4 samples, 0.05%)</title><rect x="15.2577%" y="1573" width="0.0482%" height="15" fill="rgb(236,182,29)" fg:x="1267" fg:w="4"/><text x="15.5077%" y="1583.50"></text></g><g><title>serde_json::ser::to_writer (2 samples, 0.02%)</title><rect x="15.2818%" y="1557" width="0.0241%" height="15" fill="rgb(244,120,48)" fg:x="1269" fg:w="2"/><text x="15.5318%" y="1567.50"></text></g><g><title>&lt;vm_library::vm_server::ServerMessage as serde::ser::Serialize&gt;::serialize (2 samples, 0.02%)</title><rect x="15.2818%" y="1541" width="0.0241%" height="15" fill="rgb(206,71,34)" fg:x="1269" fg:w="2"/><text x="15.5318%" y="1551.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.01%)</title><rect x="15.2938%" y="1525" width="0.0120%" height="15" fill="rgb(242,32,6)" fg:x="1270" fg:w="1"/><text x="15.5438%" y="1535.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (1 samples, 0.01%)</title><rect x="15.2938%" y="1509" width="0.0120%" height="15" fill="rgb(241,35,3)" fg:x="1270" fg:w="1"/><text x="15.5438%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="15.3420%" y="1589" width="0.0241%" height="15" fill="rgb(222,62,19)" fg:x="1274" fg:w="2"/><text x="15.5920%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.02%)</title><rect x="15.3420%" y="1573" width="0.0241%" height="15" fill="rgb(223,110,41)" fg:x="1274" fg:w="2"/><text x="15.5920%" y="1583.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.02%)</title><rect x="15.3661%" y="1589" width="0.0241%" height="15" fill="rgb(208,224,4)" fg:x="1276" fg:w="2"/><text x="15.6161%" y="1599.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="15.3661%" y="1573" width="0.0241%" height="15" fill="rgb(241,137,19)" fg:x="1276" fg:w="2"/><text x="15.6161%" y="1583.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.02%)</title><rect x="15.3661%" y="1557" width="0.0241%" height="15" fill="rgb(244,24,17)" fg:x="1276" fg:w="2"/><text x="15.6161%" y="1567.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.02%)</title><rect x="15.3661%" y="1541" width="0.0241%" height="15" fill="rgb(245,178,49)" fg:x="1276" fg:w="2"/><text x="15.6161%" y="1551.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.02%)</title><rect x="15.3661%" y="1525" width="0.0241%" height="15" fill="rgb(219,160,38)" fg:x="1276" fg:w="2"/><text x="15.6161%" y="1535.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.02%)</title><rect x="15.3661%" y="1509" width="0.0241%" height="15" fill="rgb(228,137,14)" fg:x="1276" fg:w="2"/><text x="15.6161%" y="1519.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.02%)</title><rect x="15.3661%" y="1493" width="0.0241%" height="15" fill="rgb(237,134,11)" fg:x="1276" fg:w="2"/><text x="15.6161%" y="1503.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.02%)</title><rect x="15.3661%" y="1477" width="0.0241%" height="15" fill="rgb(211,126,44)" fg:x="1276" fg:w="2"/><text x="15.6161%" y="1487.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="15.3781%" y="1461" width="0.0120%" height="15" fill="rgb(226,171,33)" fg:x="1277" fg:w="1"/><text x="15.6281%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(vm_library::ticket_table::TicketId,usize)&gt;&gt; (1 samples, 0.01%)</title><rect x="15.3781%" y="1445" width="0.0120%" height="15" fill="rgb(253,99,13)" fg:x="1277" fg:w="1"/><text x="15.6281%" y="1455.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="15.3781%" y="1429" width="0.0120%" height="15" fill="rgb(244,48,7)" fg:x="1277" fg:w="1"/><text x="15.6281%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(vm_library::ticket_table::TicketId,usize),alloc::alloc::Global&gt;&gt; (1 samples, 0.01%)</title><rect x="15.3781%" y="1413" width="0.0120%" height="15" fill="rgb(244,217,54)" fg:x="1277" fg:w="1"/><text x="15.6281%" y="1423.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="15.3781%" y="1397" width="0.0120%" height="15" fill="rgb(224,15,18)" fg:x="1277" fg:w="1"/><text x="15.6281%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(vm_library::ticket_table::TicketId,usize)&gt;&gt; (1 samples, 0.01%)</title><rect x="15.3781%" y="1381" width="0.0120%" height="15" fill="rgb(244,99,12)" fg:x="1277" fg:w="1"/><text x="15.6281%" y="1391.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="15.3781%" y="1365" width="0.0120%" height="15" fill="rgb(233,226,8)" fg:x="1277" fg:w="1"/><text x="15.6281%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="15.3781%" y="1349" width="0.0120%" height="15" fill="rgb(229,211,3)" fg:x="1277" fg:w="1"/><text x="15.6281%" y="1359.50"></text></g><g><title>&lt;serde::__private::de::content::TagContentOtherFieldVisitor as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.01%)</title><rect x="15.4504%" y="1493" width="0.0120%" height="15" fill="rgb(216,140,21)" fg:x="1283" fg:w="1"/><text x="15.7004%" y="1503.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.01%)</title><rect x="15.4504%" y="1477" width="0.0120%" height="15" fill="rgb(234,122,30)" fg:x="1283" fg:w="1"/><text x="15.7004%" y="1487.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.01%)</title><rect x="15.4504%" y="1461" width="0.0120%" height="15" fill="rgb(236,25,46)" fg:x="1283" fg:w="1"/><text x="15.7004%" y="1471.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.01%)</title><rect x="15.4504%" y="1445" width="0.0120%" height="15" fill="rgb(217,52,54)" fg:x="1283" fg:w="1"/><text x="15.7004%" y="1455.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (5 samples, 0.06%)</title><rect x="15.4263%" y="1509" width="0.0602%" height="15" fill="rgb(222,29,26)" fg:x="1281" fg:w="5"/><text x="15.6763%" y="1519.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (2 samples, 0.02%)</title><rect x="15.4624%" y="1493" width="0.0241%" height="15" fill="rgb(216,177,29)" fg:x="1284" fg:w="2"/><text x="15.7124%" y="1503.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (2 samples, 0.02%)</title><rect x="15.4624%" y="1477" width="0.0241%" height="15" fill="rgb(247,136,51)" fg:x="1284" fg:w="2"/><text x="15.7124%" y="1487.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (2 samples, 0.02%)</title><rect x="15.4624%" y="1461" width="0.0241%" height="15" fill="rgb(231,47,47)" fg:x="1284" fg:w="2"/><text x="15.7124%" y="1471.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (2 samples, 0.02%)</title><rect x="15.4624%" y="1445" width="0.0241%" height="15" fill="rgb(211,192,36)" fg:x="1284" fg:w="2"/><text x="15.7124%" y="1455.50"></text></g><g><title>serde::de::MapAccess::next_key (5 samples, 0.06%)</title><rect x="15.5467%" y="1445" width="0.0602%" height="15" fill="rgb(229,156,32)" fg:x="1291" fg:w="5"/><text x="15.7967%" y="1455.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (5 samples, 0.06%)</title><rect x="15.5467%" y="1429" width="0.0602%" height="15" fill="rgb(248,213,20)" fg:x="1291" fg:w="5"/><text x="15.7967%" y="1439.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.04%)</title><rect x="15.5708%" y="1413" width="0.0361%" height="15" fill="rgb(217,64,7)" fg:x="1293" fg:w="3"/><text x="15.8208%" y="1423.50"></text></g><g><title>&lt;&lt;vm_library::vm_client::_::&lt;impl serde::de::Deserialize for vm_library::vm_client::Operation&gt;::deserialize::__Seed as serde::de::DeserializeSeed&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (3 samples, 0.04%)</title><rect x="15.5708%" y="1397" width="0.0361%" height="15" fill="rgb(232,142,8)" fg:x="1293" fg:w="3"/><text x="15.8208%" y="1407.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (3 samples, 0.04%)</title><rect x="15.5708%" y="1381" width="0.0361%" height="15" fill="rgb(224,92,44)" fg:x="1293" fg:w="3"/><text x="15.8208%" y="1391.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.04%)</title><rect x="15.5708%" y="1365" width="0.0361%" height="15" fill="rgb(214,169,17)" fg:x="1293" fg:w="3"/><text x="15.8208%" y="1375.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (3 samples, 0.04%)</title><rect x="15.5708%" y="1349" width="0.0361%" height="15" fill="rgb(210,59,37)" fg:x="1293" fg:w="3"/><text x="15.8208%" y="1359.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (3 samples, 0.04%)</title><rect x="15.5708%" y="1333" width="0.0361%" height="15" fill="rgb(214,116,48)" fg:x="1293" fg:w="3"/><text x="15.8208%" y="1343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (3 samples, 0.04%)</title><rect x="15.5708%" y="1317" width="0.0361%" height="15" fill="rgb(244,191,6)" fg:x="1293" fg:w="3"/><text x="15.8208%" y="1327.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.02%)</title><rect x="15.6069%" y="1365" width="0.0241%" height="15" fill="rgb(241,50,52)" fg:x="1296" fg:w="2"/><text x="15.8569%" y="1375.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1 samples, 0.01%)</title><rect x="15.6190%" y="1349" width="0.0120%" height="15" fill="rgb(236,75,39)" fg:x="1297" fg:w="1"/><text x="15.8690%" y="1359.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (3 samples, 0.04%)</title><rect x="15.6310%" y="1349" width="0.0361%" height="15" fill="rgb(236,99,0)" fg:x="1298" fg:w="3"/><text x="15.8810%" y="1359.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (3 samples, 0.04%)</title><rect x="15.6310%" y="1333" width="0.0361%" height="15" fill="rgb(207,202,15)" fg:x="1298" fg:w="3"/><text x="15.8810%" y="1343.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.04%)</title><rect x="15.6310%" y="1317" width="0.0361%" height="15" fill="rgb(233,207,14)" fg:x="1298" fg:w="3"/><text x="15.8810%" y="1327.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.04%)</title><rect x="15.6310%" y="1301" width="0.0361%" height="15" fill="rgb(226,27,51)" fg:x="1298" fg:w="3"/><text x="15.8810%" y="1311.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.04%)</title><rect x="15.6310%" y="1285" width="0.0361%" height="15" fill="rgb(206,104,42)" fg:x="1298" fg:w="3"/><text x="15.8810%" y="1295.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.04%)</title><rect x="15.6310%" y="1269" width="0.0361%" height="15" fill="rgb(212,225,4)" fg:x="1298" fg:w="3"/><text x="15.8810%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="15.6310%" y="1253" width="0.0361%" height="15" fill="rgb(233,96,42)" fg:x="1298" fg:w="3"/><text x="15.8810%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="15.6310%" y="1237" width="0.0361%" height="15" fill="rgb(229,21,32)" fg:x="1298" fg:w="3"/><text x="15.8810%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.04%)</title><rect x="15.6310%" y="1221" width="0.0361%" height="15" fill="rgb(226,216,24)" fg:x="1298" fg:w="3"/><text x="15.8810%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="15.6310%" y="1205" width="0.0361%" height="15" fill="rgb(221,163,17)" fg:x="1298" fg:w="3"/><text x="15.8810%" y="1215.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.04%)</title><rect x="15.6310%" y="1189" width="0.0361%" height="15" fill="rgb(216,216,42)" fg:x="1298" fg:w="3"/><text x="15.8810%" y="1199.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="15.6310%" y="1173" width="0.0361%" height="15" fill="rgb(240,118,7)" fg:x="1298" fg:w="3"/><text x="15.8810%" y="1183.50"></text></g><g><title>mi_malloc (3 samples, 0.04%)</title><rect x="15.6310%" y="1157" width="0.0361%" height="15" fill="rgb(221,67,37)" fg:x="1298" fg:w="3"/><text x="15.8810%" y="1167.50"></text></g><g><title>mi_heap_malloc (3 samples, 0.04%)</title><rect x="15.6310%" y="1141" width="0.0361%" height="15" fill="rgb(241,32,44)" fg:x="1298" fg:w="3"/><text x="15.8810%" y="1151.50"></text></g><g><title>mi_heap_malloc_small (3 samples, 0.04%)</title><rect x="15.6310%" y="1125" width="0.0361%" height="15" fill="rgb(235,204,43)" fg:x="1298" fg:w="3"/><text x="15.8810%" y="1135.50"></text></g><g><title>_mi_page_malloc (3 samples, 0.04%)</title><rect x="15.6310%" y="1109" width="0.0361%" height="15" fill="rgb(213,116,10)" fg:x="1298" fg:w="3"/><text x="15.8810%" y="1119.50"></text></g><g><title>mi_block_next (3 samples, 0.04%)</title><rect x="15.6310%" y="1093" width="0.0361%" height="15" fill="rgb(239,15,48)" fg:x="1298" fg:w="3"/><text x="15.8810%" y="1103.50"></text></g><g><title>mi_block_nextx (3 samples, 0.04%)</title><rect x="15.6310%" y="1077" width="0.0361%" height="15" fill="rgb(207,123,36)" fg:x="1298" fg:w="3"/><text x="15.8810%" y="1087.50"></text></g><g><title>mi_ptr_decode (3 samples, 0.04%)</title><rect x="15.6310%" y="1061" width="0.0361%" height="15" fill="rgb(209,103,30)" fg:x="1298" fg:w="3"/><text x="15.8810%" y="1071.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.01%)</title><rect x="15.6912%" y="1317" width="0.0120%" height="15" fill="rgb(238,100,19)" fg:x="1303" fg:w="1"/><text x="15.9412%" y="1327.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.01%)</title><rect x="15.6912%" y="1301" width="0.0120%" height="15" fill="rgb(244,30,14)" fg:x="1303" fg:w="1"/><text x="15.9412%" y="1311.50"></text></g><g><title>&lt;vm_library::contract_address::ContractAddress as serde::de::Deserialize&gt;::deserialize (11 samples, 0.13%)</title><rect x="15.6069%" y="1397" width="0.1325%" height="15" fill="rgb(249,174,6)" fg:x="1296" fg:w="11"/><text x="15.8569%" y="1407.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (11 samples, 0.13%)</title><rect x="15.6069%" y="1381" width="0.1325%" height="15" fill="rgb(235,213,41)" fg:x="1296" fg:w="11"/><text x="15.8569%" y="1391.50"></text></g><g><title>&lt;vm_library::contract_address::ContractVisitor as serde::de::Visitor&gt;::visit_str (9 samples, 0.11%)</title><rect x="15.6310%" y="1365" width="0.1084%" height="15" fill="rgb(213,118,6)" fg:x="1298" fg:w="9"/><text x="15.8810%" y="1375.50"></text></g><g><title>core::str::&lt;impl str&gt;::split_once (6 samples, 0.07%)</title><rect x="15.6671%" y="1349" width="0.0723%" height="15" fill="rgb(235,44,51)" fg:x="1301" fg:w="6"/><text x="15.9171%" y="1359.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (6 samples, 0.07%)</title><rect x="15.6671%" y="1333" width="0.0723%" height="15" fill="rgb(217,9,53)" fg:x="1301" fg:w="6"/><text x="15.9171%" y="1343.50"></text></g><g><title>core::slice::memchr::memchr (3 samples, 0.04%)</title><rect x="15.7033%" y="1317" width="0.0361%" height="15" fill="rgb(237,172,34)" fg:x="1304" fg:w="3"/><text x="15.9533%" y="1327.50"></text></g><g><title>core::slice::memchr::memchr_general_case (3 samples, 0.04%)</title><rect x="15.7033%" y="1301" width="0.0361%" height="15" fill="rgb(206,206,11)" fg:x="1304" fg:w="3"/><text x="15.9533%" y="1311.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (2 samples, 0.02%)</title><rect x="15.7153%" y="1285" width="0.0241%" height="15" fill="rgb(214,149,29)" fg:x="1305" fg:w="2"/><text x="15.9653%" y="1295.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="15.7635%" y="1301" width="0.0120%" height="15" fill="rgb(208,123,3)" fg:x="1309" fg:w="1"/><text x="16.0135%" y="1311.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (1 samples, 0.01%)</title><rect x="15.7755%" y="1301" width="0.0120%" height="15" fill="rgb(229,126,4)" fg:x="1310" fg:w="1"/><text x="16.0255%" y="1311.50"></text></g><g><title>&lt;vm_library::managed::value::ValueVisitor as serde::de::Visitor&gt;::visit_seq::{{closure}}::{{closure}} (1 samples, 0.01%)</title><rect x="15.7755%" y="1285" width="0.0120%" height="15" fill="rgb(222,92,36)" fg:x="1310" fg:w="1"/><text x="16.0255%" y="1295.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::convert::From&lt;T&gt;&gt;::from (1 samples, 0.01%)</title><rect x="15.7755%" y="1269" width="0.0120%" height="15" fill="rgb(216,39,41)" fg:x="1310" fg:w="1"/><text x="16.0255%" y="1279.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="15.7755%" y="1253" width="0.0120%" height="15" fill="rgb(253,127,28)" fg:x="1310" fg:w="1"/><text x="16.0255%" y="1263.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="15.7755%" y="1237" width="0.0120%" height="15" fill="rgb(249,152,51)" fg:x="1310" fg:w="1"/><text x="16.0255%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="15.7755%" y="1221" width="0.0120%" height="15" fill="rgb(209,123,42)" fg:x="1310" fg:w="1"/><text x="16.0255%" y="1231.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="15.7755%" y="1205" width="0.0120%" height="15" fill="rgb(241,118,22)" fg:x="1310" fg:w="1"/><text x="16.0255%" y="1215.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="15.7755%" y="1189" width="0.0120%" height="15" fill="rgb(208,25,7)" fg:x="1310" fg:w="1"/><text x="16.0255%" y="1199.50"></text></g><g><title>mi_malloc (1 samples, 0.01%)</title><rect x="15.7755%" y="1173" width="0.0120%" height="15" fill="rgb(243,144,39)" fg:x="1310" fg:w="1"/><text x="16.0255%" y="1183.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.01%)</title><rect x="15.7755%" y="1157" width="0.0120%" height="15" fill="rgb(250,50,5)" fg:x="1310" fg:w="1"/><text x="16.0255%" y="1167.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.01%)</title><rect x="15.7755%" y="1141" width="0.0120%" height="15" fill="rgb(207,67,11)" fg:x="1310" fg:w="1"/><text x="16.0255%" y="1151.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.01%)</title><rect x="15.7755%" y="1125" width="0.0120%" height="15" fill="rgb(245,204,40)" fg:x="1310" fg:w="1"/><text x="16.0255%" y="1135.50"></text></g><g><title>mi_block_next (1 samples, 0.01%)</title><rect x="15.7755%" y="1109" width="0.0120%" height="15" fill="rgb(238,228,24)" fg:x="1310" fg:w="1"/><text x="16.0255%" y="1119.50"></text></g><g><title>mi_block_nextx (1 samples, 0.01%)</title><rect x="15.7755%" y="1093" width="0.0120%" height="15" fill="rgb(217,116,22)" fg:x="1310" fg:w="1"/><text x="16.0255%" y="1103.50"></text></g><g><title>mi_ptr_decode (1 samples, 0.01%)</title><rect x="15.7755%" y="1077" width="0.0120%" height="15" fill="rgb(234,98,12)" fg:x="1310" fg:w="1"/><text x="16.0255%" y="1087.50"></text></g><g><title>&lt;vm_library::managed::value::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.01%)</title><rect x="15.8237%" y="1173" width="0.0120%" height="15" fill="rgb(242,170,50)" fg:x="1314" fg:w="1"/><text x="16.0737%" y="1183.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (1 samples, 0.01%)</title><rect x="15.8357%" y="1157" width="0.0120%" height="15" fill="rgb(235,7,5)" fg:x="1315" fg:w="1"/><text x="16.0857%" y="1167.50"></text></g><g><title>&lt;vm_library::managed::value::ValueVisitor as serde::de::Visitor&gt;::visit_seq::{{closure}}::{{closure}} (1 samples, 0.01%)</title><rect x="15.8357%" y="1141" width="0.0120%" height="15" fill="rgb(241,114,28)" fg:x="1315" fg:w="1"/><text x="16.0857%" y="1151.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.01%)</title><rect x="15.8357%" y="1125" width="0.0120%" height="15" fill="rgb(246,112,42)" fg:x="1315" fg:w="1"/><text x="16.0857%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.01%)</title><rect x="15.8357%" y="1109" width="0.0120%" height="15" fill="rgb(248,228,14)" fg:x="1315" fg:w="1"/><text x="16.0857%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.01%)</title><rect x="15.8357%" y="1093" width="0.0120%" height="15" fill="rgb(208,133,18)" fg:x="1315" fg:w="1"/><text x="16.0857%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="15.8357%" y="1077" width="0.0120%" height="15" fill="rgb(207,35,49)" fg:x="1315" fg:w="1"/><text x="16.0857%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="15.8357%" y="1061" width="0.0120%" height="15" fill="rgb(205,68,36)" fg:x="1315" fg:w="1"/><text x="16.0857%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="15.8357%" y="1045" width="0.0120%" height="15" fill="rgb(245,62,40)" fg:x="1315" fg:w="1"/><text x="16.0857%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="15.8357%" y="1029" width="0.0120%" height="15" fill="rgb(228,27,24)" fg:x="1315" fg:w="1"/><text x="16.0857%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="15.8357%" y="1013" width="0.0120%" height="15" fill="rgb(253,19,12)" fg:x="1315" fg:w="1"/><text x="16.0857%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="15.8357%" y="997" width="0.0120%" height="15" fill="rgb(232,28,20)" fg:x="1315" fg:w="1"/><text x="16.0857%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="15.8357%" y="981" width="0.0120%" height="15" fill="rgb(218,35,51)" fg:x="1315" fg:w="1"/><text x="16.0857%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="15.8357%" y="965" width="0.0120%" height="15" fill="rgb(212,90,40)" fg:x="1315" fg:w="1"/><text x="16.0857%" y="975.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="15.8357%" y="949" width="0.0120%" height="15" fill="rgb(220,172,12)" fg:x="1315" fg:w="1"/><text x="16.0857%" y="959.50"></text></g><g><title>mi_malloc (1 samples, 0.01%)</title><rect x="15.8357%" y="933" width="0.0120%" height="15" fill="rgb(226,159,20)" fg:x="1315" fg:w="1"/><text x="16.0857%" y="943.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.01%)</title><rect x="15.8357%" y="917" width="0.0120%" height="15" fill="rgb(234,205,16)" fg:x="1315" fg:w="1"/><text x="16.0857%" y="927.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.01%)</title><rect x="15.8357%" y="901" width="0.0120%" height="15" fill="rgb(207,9,39)" fg:x="1315" fg:w="1"/><text x="16.0857%" y="911.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.01%)</title><rect x="15.8357%" y="885" width="0.0120%" height="15" fill="rgb(249,143,15)" fg:x="1315" fg:w="1"/><text x="16.0857%" y="895.50"></text></g><g><title>__gmpn_bc_set_str (2 samples, 0.02%)</title><rect x="15.8719%" y="917" width="0.0241%" height="15" fill="rgb(253,133,29)" fg:x="1318" fg:w="2"/><text x="16.1219%" y="927.50"></text></g><g><title>__gmpz_realloc (1 samples, 0.01%)</title><rect x="15.8960%" y="901" width="0.0120%" height="15" fill="rgb(221,187,0)" fg:x="1320" fg:w="1"/><text x="16.1460%" y="911.50"></text></g><g><title>az::int::&lt;impl az::UnwrappedCast&lt;i64&gt; for f64&gt;::unwrapped_cast (2 samples, 0.02%)</title><rect x="15.9080%" y="901" width="0.0241%" height="15" fill="rgb(205,204,26)" fg:x="1321" fg:w="2"/><text x="16.1580%" y="911.50"></text></g><g><title>az::overflowing_cast (2 samples, 0.02%)</title><rect x="15.9080%" y="885" width="0.0241%" height="15" fill="rgb(224,68,54)" fg:x="1321" fg:w="2"/><text x="16.1580%" y="895.50"></text></g><g><title>az::int::&lt;impl az::OverflowingCast&lt;i64&gt; for f64&gt;::overflowing_cast (2 samples, 0.02%)</title><rect x="15.9080%" y="869" width="0.0241%" height="15" fill="rgb(209,67,4)" fg:x="1321" fg:w="2"/><text x="16.1580%" y="879.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.02%)</title><rect x="15.9080%" y="853" width="0.0241%" height="15" fill="rgb(228,229,18)" fg:x="1321" fg:w="2"/><text x="16.1580%" y="863.50"></text></g><g><title>&lt;az::int::Float&lt;u64&gt; as core::convert::From&lt;f64&gt;&gt;::from (2 samples, 0.02%)</title><rect x="15.9080%" y="837" width="0.0241%" height="15" fill="rgb(231,89,13)" fg:x="1321" fg:w="2"/><text x="16.1580%" y="847.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::to_bits (1 samples, 0.01%)</title><rect x="15.9200%" y="821" width="0.0120%" height="15" fill="rgb(210,182,18)" fg:x="1322" fg:w="1"/><text x="16.1700%" y="831.50"></text></g><g><title>core::intrinsics::const_eval_select (1 samples, 0.01%)</title><rect x="15.9200%" y="805" width="0.0120%" height="15" fill="rgb(240,105,2)" fg:x="1322" fg:w="1"/><text x="16.1700%" y="815.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.01%)</title><rect x="15.9200%" y="789" width="0.0120%" height="15" fill="rgb(207,170,50)" fg:x="1322" fg:w="1"/><text x="16.1700%" y="799.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::to_bits::{{closure}} (1 samples, 0.01%)</title><rect x="15.9200%" y="773" width="0.0120%" height="15" fill="rgb(232,133,24)" fg:x="1322" fg:w="1"/><text x="16.1700%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7 samples, 0.08%)</title><rect x="15.8598%" y="1013" width="0.0843%" height="15" fill="rgb(235,166,27)" fg:x="1317" fg:w="7"/><text x="16.1098%" y="1023.50"></text></g><g><title>&lt;vm_library::managed::value::ValueVisitor as serde::de::Visitor&gt;::visit_seq::{{closure}}::{{closure}} (7 samples, 0.08%)</title><rect x="15.8598%" y="997" width="0.0843%" height="15" fill="rgb(209,19,13)" fg:x="1317" fg:w="7"/><text x="16.1098%" y="1007.50"></text></g><g><title>rug::integer::big::Integer::from_str_radix (7 samples, 0.08%)</title><rect x="15.8598%" y="981" width="0.0843%" height="15" fill="rgb(226,79,39)" fg:x="1317" fg:w="7"/><text x="16.1098%" y="991.50"></text></g><g><title>&lt;rug::integer::big::Integer as core::convert::From&lt;rug::integer::big::ParseIncomplete&gt;&gt;::from (7 samples, 0.08%)</title><rect x="15.8598%" y="965" width="0.0843%" height="15" fill="rgb(222,163,10)" fg:x="1317" fg:w="7"/><text x="16.1098%" y="975.50"></text></g><g><title>&lt;rug::integer::big::Integer as rug::Assign&lt;rug::integer::big::ParseIncomplete&gt;&gt;::assign (7 samples, 0.08%)</title><rect x="15.8598%" y="949" width="0.0843%" height="15" fill="rgb(214,44,19)" fg:x="1317" fg:w="7"/><text x="16.1098%" y="959.50"></text></g><g><title>rug::integer::big::Integer::assign_bytes_radix_unchecked (7 samples, 0.08%)</title><rect x="15.8598%" y="933" width="0.0843%" height="15" fill="rgb(210,217,13)" fg:x="1317" fg:w="7"/><text x="16.1098%" y="943.50"></text></g><g><title>rug::ext::xmpz::realloc_for_mpn_set_str (4 samples, 0.05%)</title><rect x="15.8960%" y="917" width="0.0482%" height="15" fill="rgb(237,61,54)" fg:x="1320" fg:w="4"/><text x="16.1460%" y="927.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::ceil (1 samples, 0.01%)</title><rect x="15.9321%" y="901" width="0.0120%" height="15" fill="rgb(226,184,24)" fg:x="1323" fg:w="1"/><text x="16.1821%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (1 samples, 0.01%)</title><rect x="15.9441%" y="1013" width="0.0120%" height="15" fill="rgb(223,226,4)" fg:x="1324" fg:w="1"/><text x="16.1941%" y="1023.50"></text></g><g><title>&lt;vm_library::managed::value::ValueVisitor as serde::de::Visitor&gt;::visit_seq::{{closure}}::{{closure}} (1 samples, 0.01%)</title><rect x="15.9441%" y="997" width="0.0120%" height="15" fill="rgb(210,26,41)" fg:x="1324" fg:w="1"/><text x="16.1941%" y="1007.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.01%)</title><rect x="15.9441%" y="981" width="0.0120%" height="15" fill="rgb(220,221,6)" fg:x="1324" fg:w="1"/><text x="16.1941%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.01%)</title><rect x="15.9441%" y="965" width="0.0120%" height="15" fill="rgb(225,89,49)" fg:x="1324" fg:w="1"/><text x="16.1941%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.01%)</title><rect x="15.9441%" y="949" width="0.0120%" height="15" fill="rgb(218,70,45)" fg:x="1324" fg:w="1"/><text x="16.1941%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="15.9441%" y="933" width="0.0120%" height="15" fill="rgb(238,166,21)" fg:x="1324" fg:w="1"/><text x="16.1941%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="15.9441%" y="917" width="0.0120%" height="15" fill="rgb(224,141,44)" fg:x="1324" fg:w="1"/><text x="16.1941%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="15.9441%" y="901" width="0.0120%" height="15" fill="rgb(230,12,49)" fg:x="1324" fg:w="1"/><text x="16.1941%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="15.9441%" y="885" width="0.0120%" height="15" fill="rgb(212,174,12)" fg:x="1324" fg:w="1"/><text x="16.1941%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="15.9441%" y="869" width="0.0120%" height="15" fill="rgb(246,67,9)" fg:x="1324" fg:w="1"/><text x="16.1941%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="15.9441%" y="853" width="0.0120%" height="15" fill="rgb(239,35,23)" fg:x="1324" fg:w="1"/><text x="16.1941%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="15.9441%" y="837" width="0.0120%" height="15" fill="rgb(211,167,0)" fg:x="1324" fg:w="1"/><text x="16.1941%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="15.9441%" y="821" width="0.0120%" height="15" fill="rgb(225,119,45)" fg:x="1324" fg:w="1"/><text x="16.1941%" y="831.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="15.9441%" y="805" width="0.0120%" height="15" fill="rgb(210,162,6)" fg:x="1324" fg:w="1"/><text x="16.1941%" y="815.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="15.9441%" y="789" width="0.0120%" height="15" fill="rgb(208,118,35)" fg:x="1324" fg:w="1"/><text x="16.1941%" y="799.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.01%)</title><rect x="15.9562%" y="981" width="0.0120%" height="15" fill="rgb(239,4,53)" fg:x="1325" fg:w="1"/><text x="16.2062%" y="991.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for &amp;str&gt;::deserialize (1 samples, 0.01%)</title><rect x="15.9562%" y="965" width="0.0120%" height="15" fill="rgb(213,130,21)" fg:x="1325" fg:w="1"/><text x="16.2062%" y="975.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.01%)</title><rect x="15.9562%" y="949" width="0.0120%" height="15" fill="rgb(235,148,0)" fg:x="1325" fg:w="1"/><text x="16.2062%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (10 samples, 0.12%)</title><rect x="15.8598%" y="1045" width="0.1204%" height="15" fill="rgb(244,224,18)" fg:x="1317" fg:w="10"/><text x="16.1098%" y="1055.50"></text></g><g><title>&lt;vm_library::managed::value::ValueVisitor as serde::de::Visitor&gt;::visit_seq::{{closure}} (10 samples, 0.12%)</title><rect x="15.8598%" y="1029" width="0.1204%" height="15" fill="rgb(211,214,4)" fg:x="1317" fg:w="10"/><text x="16.1098%" y="1039.50"></text></g><g><title>serde::de::SeqAccess::next_element (2 samples, 0.02%)</title><rect x="15.9562%" y="1013" width="0.0241%" height="15" fill="rgb(206,119,25)" fg:x="1325" fg:w="2"/><text x="16.2062%" y="1023.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2 samples, 0.02%)</title><rect x="15.9562%" y="997" width="0.0241%" height="15" fill="rgb(243,93,47)" fg:x="1325" fg:w="2"/><text x="16.2062%" y="1007.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (1 samples, 0.01%)</title><rect x="15.9682%" y="981" width="0.0120%" height="15" fill="rgb(224,194,6)" fg:x="1326" fg:w="1"/><text x="16.2182%" y="991.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (1 samples, 0.01%)</title><rect x="15.9682%" y="965" width="0.0120%" height="15" fill="rgb(243,229,6)" fg:x="1326" fg:w="1"/><text x="16.2182%" y="975.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (1 samples, 0.01%)</title><rect x="15.9682%" y="949" width="0.0120%" height="15" fill="rgb(207,23,50)" fg:x="1326" fg:w="1"/><text x="16.2182%" y="959.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (1 samples, 0.01%)</title><rect x="15.9682%" y="933" width="0.0120%" height="15" fill="rgb(253,192,32)" fg:x="1326" fg:w="1"/><text x="16.2182%" y="943.50"></text></g><g><title>&lt;vm_library::managed::value::FromOcamlV as serde::de::Deserialize&gt;::deserialize (12 samples, 0.14%)</title><rect x="15.8598%" y="1109" width="0.1445%" height="15" fill="rgb(213,21,6)" fg:x="1317" fg:w="12"/><text x="16.1098%" y="1119.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_tuple (12 samples, 0.14%)</title><rect x="15.8598%" y="1093" width="0.1445%" height="15" fill="rgb(243,151,13)" fg:x="1317" fg:w="12"/><text x="16.1098%" y="1103.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (12 samples, 0.14%)</title><rect x="15.8598%" y="1077" width="0.1445%" height="15" fill="rgb(233,165,41)" fg:x="1317" fg:w="12"/><text x="16.1098%" y="1087.50"></text></g><g><title>&lt;vm_library::managed::value::ValueVisitor as serde::de::Visitor&gt;::visit_seq (12 samples, 0.14%)</title><rect x="15.8598%" y="1061" width="0.1445%" height="15" fill="rgb(246,176,45)" fg:x="1317" fg:w="12"/><text x="16.1098%" y="1071.50"></text></g><g><title>serde::de::SeqAccess::next_element (2 samples, 0.02%)</title><rect x="15.9803%" y="1045" width="0.0241%" height="15" fill="rgb(217,170,52)" fg:x="1327" fg:w="2"/><text x="16.2303%" y="1055.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2 samples, 0.02%)</title><rect x="15.9803%" y="1029" width="0.0241%" height="15" fill="rgb(214,203,54)" fg:x="1327" fg:w="2"/><text x="16.2303%" y="1039.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.01%)</title><rect x="15.9923%" y="1013" width="0.0120%" height="15" fill="rgb(248,215,49)" fg:x="1328" fg:w="1"/><text x="16.2423%" y="1023.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for &amp;str&gt;::deserialize (1 samples, 0.01%)</title><rect x="15.9923%" y="997" width="0.0120%" height="15" fill="rgb(208,46,10)" fg:x="1328" fg:w="1"/><text x="16.2423%" y="1007.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.01%)</title><rect x="15.9923%" y="981" width="0.0120%" height="15" fill="rgb(254,5,31)" fg:x="1328" fg:w="1"/><text x="16.2423%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (1 samples, 0.01%)</title><rect x="15.9923%" y="965" width="0.0120%" height="15" fill="rgb(222,104,33)" fg:x="1328" fg:w="1"/><text x="16.2423%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (16 samples, 0.19%)</title><rect x="15.8237%" y="1189" width="0.1927%" height="15" fill="rgb(248,49,16)" fg:x="1314" fg:w="16"/><text x="16.0737%" y="1199.50"></text></g><g><title>&lt;vm_library::managed::value::ValueVisitor as serde::de::Visitor&gt;::visit_seq::{{closure}} (15 samples, 0.18%)</title><rect x="15.8357%" y="1173" width="0.1806%" height="15" fill="rgb(232,198,41)" fg:x="1315" fg:w="15"/><text x="16.0857%" y="1183.50"></text></g><g><title>serde::de::SeqAccess::next_element (14 samples, 0.17%)</title><rect x="15.8478%" y="1157" width="0.1686%" height="15" fill="rgb(214,125,3)" fg:x="1316" fg:w="14"/><text x="16.0978%" y="1167.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (14 samples, 0.17%)</title><rect x="15.8478%" y="1141" width="0.1686%" height="15" fill="rgb(229,220,28)" fg:x="1316" fg:w="14"/><text x="16.0978%" y="1151.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (13 samples, 0.16%)</title><rect x="15.8598%" y="1125" width="0.1566%" height="15" fill="rgb(222,64,37)" fg:x="1317" fg:w="13"/><text x="16.1098%" y="1135.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for &amp;str&gt;::deserialize (1 samples, 0.01%)</title><rect x="16.0043%" y="1109" width="0.0120%" height="15" fill="rgb(249,184,13)" fg:x="1329" fg:w="1"/><text x="16.2543%" y="1119.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.01%)</title><rect x="16.0043%" y="1093" width="0.0120%" height="15" fill="rgb(252,176,6)" fg:x="1329" fg:w="1"/><text x="16.2543%" y="1103.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.01%)</title><rect x="16.0043%" y="1077" width="0.0120%" height="15" fill="rgb(228,153,7)" fg:x="1329" fg:w="1"/><text x="16.2543%" y="1087.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1 samples, 0.01%)</title><rect x="16.0043%" y="1061" width="0.0120%" height="15" fill="rgb(242,193,5)" fg:x="1329" fg:w="1"/><text x="16.2543%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (22 samples, 0.26%)</title><rect x="15.7635%" y="1333" width="0.2649%" height="15" fill="rgb(232,140,9)" fg:x="1309" fg:w="22"/><text x="16.0135%" y="1343.50"></text></g><g><title>&lt;vm_library::managed::value::ValueVisitor as serde::de::Visitor&gt;::visit_seq::{{closure}} (22 samples, 0.26%)</title><rect x="15.7635%" y="1317" width="0.2649%" height="15" fill="rgb(213,222,16)" fg:x="1309" fg:w="22"/><text x="16.0135%" y="1327.50"></text></g><g><title>serde::de::SeqAccess::next_element (20 samples, 0.24%)</title><rect x="15.7876%" y="1301" width="0.2408%" height="15" fill="rgb(222,75,50)" fg:x="1311" fg:w="20"/><text x="16.0376%" y="1311.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (20 samples, 0.24%)</title><rect x="15.7876%" y="1285" width="0.2408%" height="15" fill="rgb(205,180,2)" fg:x="1311" fg:w="20"/><text x="16.0376%" y="1295.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (20 samples, 0.24%)</title><rect x="15.7876%" y="1269" width="0.2408%" height="15" fill="rgb(216,34,7)" fg:x="1311" fg:w="20"/><text x="16.0376%" y="1279.50"></text></g><g><title>&lt;vm_library::managed::value::FromOcamlV as serde::de::Deserialize&gt;::deserialize (20 samples, 0.24%)</title><rect x="15.7876%" y="1253" width="0.2408%" height="15" fill="rgb(253,16,32)" fg:x="1311" fg:w="20"/><text x="16.0376%" y="1263.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_tuple (20 samples, 0.24%)</title><rect x="15.7876%" y="1237" width="0.2408%" height="15" fill="rgb(208,97,28)" fg:x="1311" fg:w="20"/><text x="16.0376%" y="1247.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (20 samples, 0.24%)</title><rect x="15.7876%" y="1221" width="0.2408%" height="15" fill="rgb(225,92,11)" fg:x="1311" fg:w="20"/><text x="16.0376%" y="1231.50"></text></g><g><title>&lt;vm_library::managed::value::ValueVisitor as serde::de::Visitor&gt;::visit_seq (17 samples, 0.20%)</title><rect x="15.8237%" y="1205" width="0.2047%" height="15" fill="rgb(243,38,12)" fg:x="1314" fg:w="17"/><text x="16.0737%" y="1215.50"></text></g><g><title>serde::de::SeqAccess::next_element (1 samples, 0.01%)</title><rect x="16.0164%" y="1189" width="0.0120%" height="15" fill="rgb(208,139,16)" fg:x="1330" fg:w="1"/><text x="16.2664%" y="1199.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 0.01%)</title><rect x="16.0164%" y="1173" width="0.0120%" height="15" fill="rgb(227,24,9)" fg:x="1330" fg:w="1"/><text x="16.2664%" y="1183.50"></text></g><g><title>&lt;vm_library::managed::value::ValueVisitor as serde::de::Visitor&gt;::visit_seq (24 samples, 0.29%)</title><rect x="15.7635%" y="1349" width="0.2890%" height="15" fill="rgb(206,62,11)" fg:x="1309" fg:w="24"/><text x="16.0135%" y="1359.50"></text></g><g><title>serde::de::SeqAccess::next_element (2 samples, 0.02%)</title><rect x="16.0284%" y="1333" width="0.0241%" height="15" fill="rgb(228,134,27)" fg:x="1331" fg:w="2"/><text x="16.2784%" y="1343.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2 samples, 0.02%)</title><rect x="16.0284%" y="1317" width="0.0241%" height="15" fill="rgb(205,55,33)" fg:x="1331" fg:w="2"/><text x="16.2784%" y="1327.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (1 samples, 0.01%)</title><rect x="16.0405%" y="1301" width="0.0120%" height="15" fill="rgb(243,75,43)" fg:x="1332" fg:w="1"/><text x="16.2905%" y="1311.50"></text></g><g><title>&lt;&lt;vm_library::vm_client::_::&lt;impl serde::de::Deserialize for vm_library::vm_client::Operation&gt;::deserialize::__Seed as serde::de::DeserializeSeed&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (46 samples, 0.55%)</title><rect x="15.5106%" y="1461" width="0.5539%" height="15" fill="rgb(223,27,42)" fg:x="1288" fg:w="46"/><text x="15.7606%" y="1471.50"></text></g><g><title>serde::de::MapAccess::next_value (38 samples, 0.46%)</title><rect x="15.6069%" y="1445" width="0.4576%" height="15" fill="rgb(232,189,33)" fg:x="1296" fg:w="38"/><text x="15.8569%" y="1455.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (38 samples, 0.46%)</title><rect x="15.6069%" y="1429" width="0.4576%" height="15" fill="rgb(210,9,39)" fg:x="1296" fg:w="38"/><text x="15.8569%" y="1439.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (38 samples, 0.46%)</title><rect x="15.6069%" y="1413" width="0.4576%" height="15" fill="rgb(242,85,26)" fg:x="1296" fg:w="38"/><text x="15.8569%" y="1423.50"></text></g><g><title>&lt;vm_library::managed::value::FromOcamlV as serde::de::Deserialize&gt;::deserialize (27 samples, 0.33%)</title><rect x="15.7394%" y="1397" width="0.3251%" height="15" fill="rgb(248,44,4)" fg:x="1307" fg:w="27"/><text x="15.9894%" y="1407.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_tuple (27 samples, 0.33%)</title><rect x="15.7394%" y="1381" width="0.3251%" height="15" fill="rgb(250,96,46)" fg:x="1307" fg:w="27"/><text x="15.9894%" y="1391.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (27 samples, 0.33%)</title><rect x="15.7394%" y="1365" width="0.3251%" height="15" fill="rgb(229,116,26)" fg:x="1307" fg:w="27"/><text x="15.9894%" y="1375.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (1 samples, 0.01%)</title><rect x="16.0525%" y="1349" width="0.0120%" height="15" fill="rgb(246,94,34)" fg:x="1333" fg:w="1"/><text x="16.3025%" y="1359.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (49 samples, 0.59%)</title><rect x="15.4865%" y="1509" width="0.5901%" height="15" fill="rgb(251,73,21)" fg:x="1286" fg:w="49"/><text x="15.7365%" y="1519.50"></text></g><g><title>&lt;vm_library::vm_client::_::&lt;impl serde::de::Deserialize for vm_library::vm_client::Operation&gt;::deserialize::__Seed as serde::de::DeserializeSeed&gt;::deserialize (49 samples, 0.59%)</title><rect x="15.4865%" y="1493" width="0.5901%" height="15" fill="rgb(254,121,25)" fg:x="1286" fg:w="49"/><text x="15.7365%" y="1503.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (47 samples, 0.57%)</title><rect x="15.5106%" y="1477" width="0.5660%" height="15" fill="rgb(215,161,49)" fg:x="1288" fg:w="47"/><text x="15.7606%" y="1487.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::eat_char (1 samples, 0.01%)</title><rect x="16.0645%" y="1461" width="0.0120%" height="15" fill="rgb(221,43,13)" fg:x="1334" fg:w="1"/><text x="16.3145%" y="1471.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::discard (1 samples, 0.01%)</title><rect x="16.0645%" y="1445" width="0.0120%" height="15" fill="rgb(249,5,37)" fg:x="1334" fg:w="1"/><text x="16.3145%" y="1455.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::discard (1 samples, 0.01%)</title><rect x="16.0645%" y="1429" width="0.0120%" height="15" fill="rgb(226,25,44)" fg:x="1334" fg:w="1"/><text x="16.3145%" y="1439.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.01%)</title><rect x="16.1007%" y="1413" width="0.0120%" height="15" fill="rgb(238,189,16)" fg:x="1337" fg:w="1"/><text x="16.3507%" y="1423.50"></text></g><g><title>serde_json::de::from_trait (60 samples, 0.72%)</title><rect x="15.4022%" y="1573" width="0.7225%" height="15" fill="rgb(251,186,8)" fg:x="1279" fg:w="60"/><text x="15.6522%" y="1583.50"></text></g><g><title>vm_library::vm_client::_::&lt;impl serde::de::Deserialize for vm_library::vm_client::Operation&gt;::deserialize (60 samples, 0.72%)</title><rect x="15.4022%" y="1557" width="0.7225%" height="15" fill="rgb(254,34,31)" fg:x="1279" fg:w="60"/><text x="15.6522%" y="1567.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (60 samples, 0.72%)</title><rect x="15.4022%" y="1541" width="0.7225%" height="15" fill="rgb(225,215,27)" fg:x="1279" fg:w="60"/><text x="15.6522%" y="1551.50"></text></g><g><title>&lt;vm_library::vm_client::_::&lt;impl serde::de::Deserialize for vm_library::vm_client::Operation&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (60 samples, 0.72%)</title><rect x="15.4022%" y="1525" width="0.7225%" height="15" fill="rgb(221,192,48)" fg:x="1279" fg:w="60"/><text x="15.6522%" y="1535.50"></text></g><g><title>serde::de::MapAccess::next_value (4 samples, 0.05%)</title><rect x="16.0766%" y="1509" width="0.0482%" height="15" fill="rgb(219,137,20)" fg:x="1335" fg:w="4"/><text x="16.3266%" y="1519.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.05%)</title><rect x="16.0766%" y="1493" width="0.0482%" height="15" fill="rgb(219,84,11)" fg:x="1335" fg:w="4"/><text x="16.3266%" y="1503.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.05%)</title><rect x="16.0766%" y="1477" width="0.0482%" height="15" fill="rgb(224,10,23)" fg:x="1335" fg:w="4"/><text x="16.3266%" y="1487.50"></text></g><g><title>&lt;vm_library::vm_client::_::&lt;impl serde::de::Deserialize for vm_library::vm_client::Operation&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (2 samples, 0.02%)</title><rect x="16.1007%" y="1461" width="0.0241%" height="15" fill="rgb(248,22,39)" fg:x="1337" fg:w="2"/><text x="16.3507%" y="1471.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (2 samples, 0.02%)</title><rect x="16.1007%" y="1445" width="0.0241%" height="15" fill="rgb(212,154,20)" fg:x="1337" fg:w="2"/><text x="16.3507%" y="1455.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (2 samples, 0.02%)</title><rect x="16.1007%" y="1429" width="0.0241%" height="15" fill="rgb(236,199,50)" fg:x="1337" fg:w="2"/><text x="16.3507%" y="1439.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (1 samples, 0.01%)</title><rect x="16.1127%" y="1413" width="0.0120%" height="15" fill="rgb(211,9,17)" fg:x="1338" fg:w="1"/><text x="16.3627%" y="1423.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (1 samples, 0.01%)</title><rect x="16.1127%" y="1397" width="0.0120%" height="15" fill="rgb(243,216,36)" fg:x="1338" fg:w="1"/><text x="16.3627%" y="1407.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (1 samples, 0.01%)</title><rect x="16.1127%" y="1381" width="0.0120%" height="15" fill="rgb(250,2,10)" fg:x="1338" fg:w="1"/><text x="16.3627%" y="1391.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (1 samples, 0.01%)</title><rect x="16.1127%" y="1365" width="0.0120%" height="15" fill="rgb(226,50,48)" fg:x="1338" fg:w="1"/><text x="16.3627%" y="1375.50"></text></g><g><title>serde_json::de::from_str (62 samples, 0.75%)</title><rect x="15.3902%" y="1589" width="0.7466%" height="15" fill="rgb(243,81,16)" fg:x="1278" fg:w="62"/><text x="15.6402%" y="1599.50"></text></g><g><title>serde_json::read::StrRead::new (1 samples, 0.01%)</title><rect x="16.1248%" y="1573" width="0.0120%" height="15" fill="rgb(250,14,2)" fg:x="1339" fg:w="1"/><text x="16.3748%" y="1583.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (4 samples, 0.05%)</title><rect x="16.1368%" y="1573" width="0.0482%" height="15" fill="rgb(233,135,29)" fg:x="1340" fg:w="4"/><text x="16.3868%" y="1583.50"></text></g><g><title>std::io::default_read_exact (4 samples, 0.05%)</title><rect x="16.1368%" y="1557" width="0.0482%" height="15" fill="rgb(224,64,43)" fg:x="1340" fg:w="4"/><text x="16.3868%" y="1567.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (4 samples, 0.05%)</title><rect x="16.1368%" y="1541" width="0.0482%" height="15" fill="rgb(238,84,13)" fg:x="1340" fg:w="4"/><text x="16.3868%" y="1551.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (4 samples, 0.05%)</title><rect x="16.1368%" y="1525" width="0.0482%" height="15" fill="rgb(253,48,26)" fg:x="1340" fg:w="4"/><text x="16.3868%" y="1535.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::fill_buf (4 samples, 0.05%)</title><rect x="16.1368%" y="1509" width="0.0482%" height="15" fill="rgb(205,223,31)" fg:x="1340" fg:w="4"/><text x="16.3868%" y="1519.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read_buf (4 samples, 0.05%)</title><rect x="16.1368%" y="1493" width="0.0482%" height="15" fill="rgb(221,41,32)" fg:x="1340" fg:w="4"/><text x="16.3868%" y="1503.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (4 samples, 0.05%)</title><rect x="16.1368%" y="1477" width="0.0482%" height="15" fill="rgb(213,158,31)" fg:x="1340" fg:w="4"/><text x="16.3868%" y="1487.50"></text></g><g><title>std::sys::unix::fs::File::read_buf (4 samples, 0.05%)</title><rect x="16.1368%" y="1461" width="0.0482%" height="15" fill="rgb(245,126,43)" fg:x="1340" fg:w="4"/><text x="16.3868%" y="1471.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read_buf (4 samples, 0.05%)</title><rect x="16.1368%" y="1445" width="0.0482%" height="15" fill="rgb(227,7,22)" fg:x="1340" fg:w="4"/><text x="16.3868%" y="1455.50"></text></g><g><title>__libc_read (4 samples, 0.05%)</title><rect x="16.1368%" y="1429" width="0.0482%" height="15" fill="rgb(252,90,44)" fg:x="1340" fg:w="4"/><text x="16.3868%" y="1439.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="16.1368%" y="1413" width="0.0482%" height="15" fill="rgb(253,91,0)" fg:x="1340" fg:w="4"/><text x="16.3868%" y="1423.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="16.1368%" y="1397" width="0.0482%" height="15" fill="rgb(252,175,49)" fg:x="1340" fg:w="4"/><text x="16.3868%" y="1407.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="16.1368%" y="1381" width="0.0482%" height="15" fill="rgb(246,150,1)" fg:x="1340" fg:w="4"/><text x="16.3868%" y="1391.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="16.1368%" y="1365" width="0.0482%" height="15" fill="rgb(241,192,25)" fg:x="1340" fg:w="4"/><text x="16.3868%" y="1375.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="16.1368%" y="1349" width="0.0482%" height="15" fill="rgb(239,187,11)" fg:x="1340" fg:w="4"/><text x="16.3868%" y="1359.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="16.1368%" y="1333" width="0.0482%" height="15" fill="rgb(218,202,51)" fg:x="1340" fg:w="4"/><text x="16.3868%" y="1343.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="16.1368%" y="1317" width="0.0482%" height="15" fill="rgb(225,176,8)" fg:x="1340" fg:w="4"/><text x="16.3868%" y="1327.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="16.1368%" y="1301" width="0.0482%" height="15" fill="rgb(219,122,41)" fg:x="1340" fg:w="4"/><text x="16.3868%" y="1311.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="16.1368%" y="1285" width="0.0482%" height="15" fill="rgb(248,140,20)" fg:x="1340" fg:w="4"/><text x="16.3868%" y="1295.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="16.1368%" y="1269" width="0.0482%" height="15" fill="rgb(245,41,37)" fg:x="1340" fg:w="4"/><text x="16.3868%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="16.1729%" y="1253" width="0.0120%" height="15" fill="rgb(235,82,39)" fg:x="1343" fg:w="1"/><text x="16.4229%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="16.1729%" y="1237" width="0.0120%" height="15" fill="rgb(230,108,42)" fg:x="1343" fg:w="1"/><text x="16.4229%" y="1247.50"></text></g><g><title>_mi_heap_malloc_zero (1 samples, 0.01%)</title><rect x="16.1850%" y="1461" width="0.0120%" height="15" fill="rgb(215,150,50)" fg:x="1344" fg:w="1"/><text x="16.4350%" y="1471.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.01%)</title><rect x="16.1850%" y="1445" width="0.0120%" height="15" fill="rgb(233,212,5)" fg:x="1344" fg:w="1"/><text x="16.4350%" y="1455.50"></text></g><g><title>alloc::vec::from_elem (2 samples, 0.02%)</title><rect x="16.1850%" y="1573" width="0.0241%" height="15" fill="rgb(245,80,22)" fg:x="1344" fg:w="2"/><text x="16.4350%" y="1583.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (2 samples, 0.02%)</title><rect x="16.1850%" y="1557" width="0.0241%" height="15" fill="rgb(238,129,16)" fg:x="1344" fg:w="2"/><text x="16.4350%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (2 samples, 0.02%)</title><rect x="16.1850%" y="1541" width="0.0241%" height="15" fill="rgb(240,19,0)" fg:x="1344" fg:w="2"/><text x="16.4350%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="16.1850%" y="1525" width="0.0241%" height="15" fill="rgb(232,42,35)" fg:x="1344" fg:w="2"/><text x="16.4350%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (2 samples, 0.02%)</title><rect x="16.1850%" y="1509" width="0.0241%" height="15" fill="rgb(223,130,24)" fg:x="1344" fg:w="2"/><text x="16.4350%" y="1519.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="16.1850%" y="1493" width="0.0241%" height="15" fill="rgb(237,16,22)" fg:x="1344" fg:w="2"/><text x="16.4350%" y="1503.50"></text></g><g><title>alloc::alloc::alloc_zeroed (2 samples, 0.02%)</title><rect x="16.1850%" y="1477" width="0.0241%" height="15" fill="rgb(248,192,20)" fg:x="1344" fg:w="2"/><text x="16.4350%" y="1487.50"></text></g><g><title>mi_zalloc (1 samples, 0.01%)</title><rect x="16.1970%" y="1461" width="0.0120%" height="15" fill="rgb(233,167,2)" fg:x="1345" fg:w="1"/><text x="16.4470%" y="1471.50"></text></g><g><title>mi_heap_zalloc (1 samples, 0.01%)</title><rect x="16.1970%" y="1445" width="0.0120%" height="15" fill="rgb(252,71,44)" fg:x="1345" fg:w="1"/><text x="16.4470%" y="1455.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (1 samples, 0.01%)</title><rect x="16.2091%" y="1477" width="0.0120%" height="15" fill="rgb(238,37,47)" fg:x="1346" fg:w="1"/><text x="16.4591%" y="1487.50"></text></g><g><title>&lt;vm_library::vm_client::ClientVisitor as serde::de::Visitor&gt;::visit_seq::{{closure}} (1 samples, 0.01%)</title><rect x="16.2091%" y="1461" width="0.0120%" height="15" fill="rgb(214,202,54)" fg:x="1346" fg:w="1"/><text x="16.4591%" y="1471.50"></text></g><g><title>serde::de::SeqAccess::next_element (1 samples, 0.01%)</title><rect x="16.2091%" y="1445" width="0.0120%" height="15" fill="rgb(254,165,40)" fg:x="1346" fg:w="1"/><text x="16.4591%" y="1455.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 0.01%)</title><rect x="16.2091%" y="1429" width="0.0120%" height="15" fill="rgb(246,173,38)" fg:x="1346" fg:w="1"/><text x="16.4591%" y="1439.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.01%)</title><rect x="16.2091%" y="1413" width="0.0120%" height="15" fill="rgb(215,3,27)" fg:x="1346" fg:w="1"/><text x="16.4591%" y="1423.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (1 samples, 0.01%)</title><rect x="16.2091%" y="1397" width="0.0120%" height="15" fill="rgb(239,169,51)" fg:x="1346" fg:w="1"/><text x="16.4591%" y="1407.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (1 samples, 0.01%)</title><rect x="16.2091%" y="1381" width="0.0120%" height="15" fill="rgb(212,5,25)" fg:x="1346" fg:w="1"/><text x="16.4591%" y="1391.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.01%)</title><rect x="16.2091%" y="1365" width="0.0120%" height="15" fill="rgb(243,45,17)" fg:x="1346" fg:w="1"/><text x="16.4591%" y="1375.50"></text></g><g><title>vm_library::pipe::IO::read (8 samples, 0.10%)</title><rect x="16.1368%" y="1589" width="0.0963%" height="15" fill="rgb(242,97,9)" fg:x="1340" fg:w="8"/><text x="16.3868%" y="1599.50"></text></g><g><title>serde_json::de::from_slice (2 samples, 0.02%)</title><rect x="16.2091%" y="1573" width="0.0241%" height="15" fill="rgb(228,71,31)" fg:x="1346" fg:w="2"/><text x="16.4591%" y="1583.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.02%)</title><rect x="16.2091%" y="1557" width="0.0241%" height="15" fill="rgb(252,184,16)" fg:x="1346" fg:w="2"/><text x="16.4591%" y="1567.50"></text></g><g><title>&lt;vm_library::vm_client::ClientMessage as serde::de::Deserialize&gt;::deserialize (2 samples, 0.02%)</title><rect x="16.2091%" y="1541" width="0.0241%" height="15" fill="rgb(236,169,46)" fg:x="1346" fg:w="2"/><text x="16.4591%" y="1551.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_tuple (2 samples, 0.02%)</title><rect x="16.2091%" y="1525" width="0.0241%" height="15" fill="rgb(207,17,47)" fg:x="1346" fg:w="2"/><text x="16.4591%" y="1535.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (2 samples, 0.02%)</title><rect x="16.2091%" y="1509" width="0.0241%" height="15" fill="rgb(206,201,28)" fg:x="1346" fg:w="2"/><text x="16.4591%" y="1519.50"></text></g><g><title>&lt;vm_library::vm_client::ClientVisitor as serde::de::Visitor&gt;::visit_seq (2 samples, 0.02%)</title><rect x="16.2091%" y="1493" width="0.0241%" height="15" fill="rgb(224,184,23)" fg:x="1346" fg:w="2"/><text x="16.4591%" y="1503.50"></text></g><g><title>serde::de::SeqAccess::next_element (1 samples, 0.01%)</title><rect x="16.2211%" y="1477" width="0.0120%" height="15" fill="rgb(208,139,48)" fg:x="1347" fg:w="1"/><text x="16.4711%" y="1487.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 0.01%)</title><rect x="16.2211%" y="1461" width="0.0120%" height="15" fill="rgb(208,130,10)" fg:x="1347" fg:w="1"/><text x="16.4711%" y="1471.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.01%)</title><rect x="16.2211%" y="1445" width="0.0120%" height="15" fill="rgb(211,213,45)" fg:x="1347" fg:w="1"/><text x="16.4711%" y="1455.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for &amp;str&gt;::deserialize (1 samples, 0.01%)</title><rect x="16.2211%" y="1429" width="0.0120%" height="15" fill="rgb(235,100,30)" fg:x="1347" fg:w="1"/><text x="16.4711%" y="1439.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.01%)</title><rect x="16.2211%" y="1413" width="0.0120%" height="15" fill="rgb(206,144,31)" fg:x="1347" fg:w="1"/><text x="16.4711%" y="1423.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.01%)</title><rect x="16.2211%" y="1397" width="0.0120%" height="15" fill="rgb(224,200,26)" fg:x="1347" fg:w="1"/><text x="16.4711%" y="1407.50"></text></g><g><title>[unknown] (16 samples, 0.19%)</title><rect x="16.2452%" y="1477" width="0.1927%" height="15" fill="rgb(247,104,53)" fg:x="1349" fg:w="16"/><text x="16.4952%" y="1487.50"></text></g><g><title>[unknown] (16 samples, 0.19%)</title><rect x="16.2452%" y="1461" width="0.1927%" height="15" fill="rgb(220,14,17)" fg:x="1349" fg:w="16"/><text x="16.4952%" y="1471.50"></text></g><g><title>[unknown] (16 samples, 0.19%)</title><rect x="16.2452%" y="1445" width="0.1927%" height="15" fill="rgb(230,140,40)" fg:x="1349" fg:w="16"/><text x="16.4952%" y="1455.50"></text></g><g><title>[unknown] (16 samples, 0.19%)</title><rect x="16.2452%" y="1429" width="0.1927%" height="15" fill="rgb(229,2,41)" fg:x="1349" fg:w="16"/><text x="16.4952%" y="1439.50"></text></g><g><title>[unknown] (16 samples, 0.19%)</title><rect x="16.2452%" y="1413" width="0.1927%" height="15" fill="rgb(232,89,16)" fg:x="1349" fg:w="16"/><text x="16.4952%" y="1423.50"></text></g><g><title>[unknown] (15 samples, 0.18%)</title><rect x="16.2572%" y="1397" width="0.1806%" height="15" fill="rgb(247,59,52)" fg:x="1350" fg:w="15"/><text x="16.5072%" y="1407.50"></text></g><g><title>[unknown] (15 samples, 0.18%)</title><rect x="16.2572%" y="1381" width="0.1806%" height="15" fill="rgb(226,110,21)" fg:x="1350" fg:w="15"/><text x="16.5072%" y="1391.50"></text></g><g><title>[unknown] (11 samples, 0.13%)</title><rect x="16.3054%" y="1365" width="0.1325%" height="15" fill="rgb(224,176,43)" fg:x="1354" fg:w="11"/><text x="16.5554%" y="1375.50"></text></g><g><title>[unknown] (10 samples, 0.12%)</title><rect x="16.3174%" y="1349" width="0.1204%" height="15" fill="rgb(221,73,6)" fg:x="1355" fg:w="10"/><text x="16.5674%" y="1359.50"></text></g><g><title>[unknown] (8 samples, 0.10%)</title><rect x="16.3415%" y="1333" width="0.0963%" height="15" fill="rgb(232,78,19)" fg:x="1357" fg:w="8"/><text x="16.5915%" y="1343.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="16.3656%" y="1317" width="0.0723%" height="15" fill="rgb(233,112,48)" fg:x="1359" fg:w="6"/><text x="16.6156%" y="1327.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="16.3897%" y="1301" width="0.0482%" height="15" fill="rgb(243,131,47)" fg:x="1361" fg:w="4"/><text x="16.6397%" y="1311.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="16.4138%" y="1285" width="0.0241%" height="15" fill="rgb(226,51,1)" fg:x="1363" fg:w="2"/><text x="16.6638%" y="1295.50"></text></g><g><title>vm_library::pipe::IO::write (18 samples, 0.22%)</title><rect x="16.2331%" y="1589" width="0.2168%" height="15" fill="rgb(247,58,7)" fg:x="1348" fg:w="18"/><text x="16.4831%" y="1599.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::flush (18 samples, 0.22%)</title><rect x="16.2331%" y="1573" width="0.2168%" height="15" fill="rgb(209,7,32)" fg:x="1348" fg:w="18"/><text x="16.4831%" y="1583.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (18 samples, 0.22%)</title><rect x="16.2331%" y="1557" width="0.2168%" height="15" fill="rgb(209,39,41)" fg:x="1348" fg:w="18"/><text x="16.4831%" y="1567.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (18 samples, 0.22%)</title><rect x="16.2331%" y="1541" width="0.2168%" height="15" fill="rgb(226,182,46)" fg:x="1348" fg:w="18"/><text x="16.4831%" y="1551.50"></text></g><g><title>std::sys::unix::net::Socket::write (17 samples, 0.20%)</title><rect x="16.2452%" y="1525" width="0.2047%" height="15" fill="rgb(230,219,10)" fg:x="1349" fg:w="17"/><text x="16.4952%" y="1535.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (17 samples, 0.20%)</title><rect x="16.2452%" y="1509" width="0.2047%" height="15" fill="rgb(227,175,30)" fg:x="1349" fg:w="17"/><text x="16.4952%" y="1519.50"></text></g><g><title>__GI___write (17 samples, 0.20%)</title><rect x="16.2452%" y="1493" width="0.2047%" height="15" fill="rgb(217,2,50)" fg:x="1349" fg:w="17"/><text x="16.4952%" y="1503.50"></text></g><g><title>__GI___pthread_enable_asynccancel (1 samples, 0.01%)</title><rect x="16.4379%" y="1477" width="0.0120%" height="15" fill="rgb(229,160,0)" fg:x="1365" fg:w="1"/><text x="16.6879%" y="1487.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::convert::From&lt;T&gt;&gt;::from (1 samples, 0.01%)</title><rect x="16.4499%" y="1573" width="0.0120%" height="15" fill="rgb(207,78,37)" fg:x="1366" fg:w="1"/><text x="16.6999%" y="1583.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="16.4619%" y="1573" width="0.0361%" height="15" fill="rgb(225,57,0)" fg:x="1367" fg:w="3"/><text x="16.7119%" y="1583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="16.4860%" y="1557" width="0.0120%" height="15" fill="rgb(232,154,2)" fg:x="1369" fg:w="1"/><text x="16.7360%" y="1567.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="16.4860%" y="1541" width="0.0120%" height="15" fill="rgb(241,212,25)" fg:x="1369" fg:w="1"/><text x="16.7360%" y="1551.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="16.4860%" y="1525" width="0.0120%" height="15" fill="rgb(226,69,20)" fg:x="1369" fg:w="1"/><text x="16.7360%" y="1535.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="16.4860%" y="1509" width="0.0120%" height="15" fill="rgb(247,184,54)" fg:x="1369" fg:w="1"/><text x="16.7360%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="16.4860%" y="1493" width="0.0120%" height="15" fill="rgb(210,145,0)" fg:x="1369" fg:w="1"/><text x="16.7360%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="16.4860%" y="1477" width="0.0120%" height="15" fill="rgb(253,82,12)" fg:x="1369" fg:w="1"/><text x="16.7360%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="16.4860%" y="1461" width="0.0120%" height="15" fill="rgb(245,42,11)" fg:x="1369" fg:w="1"/><text x="16.7360%" y="1471.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="16.4860%" y="1445" width="0.0120%" height="15" fill="rgb(219,147,32)" fg:x="1369" fg:w="1"/><text x="16.7360%" y="1455.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="16.4860%" y="1429" width="0.0120%" height="15" fill="rgb(246,12,7)" fg:x="1369" fg:w="1"/><text x="16.7360%" y="1439.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="16.4860%" y="1413" width="0.0120%" height="15" fill="rgb(243,50,9)" fg:x="1369" fg:w="1"/><text x="16.7360%" y="1423.50"></text></g><g><title>mi_malloc (1 samples, 0.01%)</title><rect x="16.4860%" y="1397" width="0.0120%" height="15" fill="rgb(219,149,6)" fg:x="1369" fg:w="1"/><text x="16.7360%" y="1407.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.01%)</title><rect x="16.4860%" y="1381" width="0.0120%" height="15" fill="rgb(241,51,42)" fg:x="1369" fg:w="1"/><text x="16.7360%" y="1391.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.01%)</title><rect x="16.4860%" y="1365" width="0.0120%" height="15" fill="rgb(226,128,27)" fg:x="1369" fg:w="1"/><text x="16.7360%" y="1375.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.01%)</title><rect x="16.4860%" y="1349" width="0.0120%" height="15" fill="rgb(244,144,4)" fg:x="1369" fg:w="1"/><text x="16.7360%" y="1359.50"></text></g><g><title>mi_block_next (1 samples, 0.01%)</title><rect x="16.4860%" y="1333" width="0.0120%" height="15" fill="rgb(221,4,13)" fg:x="1369" fg:w="1"/><text x="16.7360%" y="1343.50"></text></g><g><title>mi_block_nextx (1 samples, 0.01%)</title><rect x="16.4860%" y="1317" width="0.0120%" height="15" fill="rgb(208,170,28)" fg:x="1369" fg:w="1"/><text x="16.7360%" y="1327.50"></text></g><g><title>mi_ptr_decode (1 samples, 0.01%)</title><rect x="16.4860%" y="1301" width="0.0120%" height="15" fill="rgb(226,131,13)" fg:x="1369" fg:w="1"/><text x="16.7360%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="16.4981%" y="1573" width="0.0120%" height="15" fill="rgb(215,72,41)" fg:x="1370" fg:w="1"/><text x="16.7481%" y="1583.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="16.4981%" y="1557" width="0.0120%" height="15" fill="rgb(243,108,20)" fg:x="1370" fg:w="1"/><text x="16.7481%" y="1567.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="16.4981%" y="1541" width="0.0120%" height="15" fill="rgb(230,189,17)" fg:x="1370" fg:w="1"/><text x="16.7481%" y="1551.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="16.4981%" y="1525" width="0.0120%" height="15" fill="rgb(220,50,17)" fg:x="1370" fg:w="1"/><text x="16.7481%" y="1535.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="16.4981%" y="1509" width="0.0120%" height="15" fill="rgb(248,152,48)" fg:x="1370" fg:w="1"/><text x="16.7481%" y="1519.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="16.5101%" y="1573" width="0.0120%" height="15" fill="rgb(244,91,11)" fg:x="1371" fg:w="1"/><text x="16.7601%" y="1583.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="16.5222%" y="1573" width="0.0241%" height="15" fill="rgb(220,157,5)" fg:x="1372" fg:w="2"/><text x="16.7722%" y="1583.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.02%)</title><rect x="16.5222%" y="1557" width="0.0241%" height="15" fill="rgb(253,137,8)" fg:x="1372" fg:w="2"/><text x="16.7722%" y="1567.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.02%)</title><rect x="16.5222%" y="1541" width="0.0241%" height="15" fill="rgb(217,137,51)" fg:x="1372" fg:w="2"/><text x="16.7722%" y="1551.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.02%)</title><rect x="16.5222%" y="1525" width="0.0241%" height="15" fill="rgb(218,209,53)" fg:x="1372" fg:w="2"/><text x="16.7722%" y="1535.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.02%)</title><rect x="16.5222%" y="1509" width="0.0241%" height="15" fill="rgb(249,137,25)" fg:x="1372" fg:w="2"/><text x="16.7722%" y="1519.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.02%)</title><rect x="16.5222%" y="1493" width="0.0241%" height="15" fill="rgb(239,155,26)" fg:x="1372" fg:w="2"/><text x="16.7722%" y="1503.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.02%)</title><rect x="16.5222%" y="1477" width="0.0241%" height="15" fill="rgb(227,85,46)" fg:x="1372" fg:w="2"/><text x="16.7722%" y="1487.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="16.5222%" y="1461" width="0.0241%" height="15" fill="rgb(251,107,43)" fg:x="1372" fg:w="2"/><text x="16.7722%" y="1471.50"></text></g><g><title>&lt;vm_library::contract_address::ContractAddress as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="16.5462%" y="1573" width="0.0120%" height="15" fill="rgb(234,170,33)" fg:x="1374" fg:w="1"/><text x="16.7962%" y="1583.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="16.5462%" y="1557" width="0.0120%" height="15" fill="rgb(206,29,35)" fg:x="1374" fg:w="1"/><text x="16.7962%" y="1567.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="16.5462%" y="1541" width="0.0120%" height="15" fill="rgb(227,138,25)" fg:x="1374" fg:w="1"/><text x="16.7962%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="16.5462%" y="1525" width="0.0120%" height="15" fill="rgb(249,131,35)" fg:x="1374" fg:w="1"/><text x="16.7962%" y="1535.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="16.5462%" y="1509" width="0.0120%" height="15" fill="rgb(239,6,40)" fg:x="1374" fg:w="1"/><text x="16.7962%" y="1519.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="16.5462%" y="1493" width="0.0120%" height="15" fill="rgb(246,136,47)" fg:x="1374" fg:w="1"/><text x="16.7962%" y="1503.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="16.5462%" y="1477" width="0.0120%" height="15" fill="rgb(253,58,26)" fg:x="1374" fg:w="1"/><text x="16.7962%" y="1487.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="16.5462%" y="1461" width="0.0120%" height="15" fill="rgb(237,141,10)" fg:x="1374" fg:w="1"/><text x="16.7962%" y="1471.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="16.5462%" y="1445" width="0.0120%" height="15" fill="rgb(234,156,12)" fg:x="1374" fg:w="1"/><text x="16.7962%" y="1455.50"></text></g><g><title>&lt;vm_library::managed::value::Value as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="16.5583%" y="1525" width="0.0241%" height="15" fill="rgb(243,224,36)" fg:x="1375" fg:w="2"/><text x="16.8083%" y="1535.50"></text></g><g><title>rug::integer::traits::&lt;impl core::clone::Clone for rug::integer::big::Integer&gt;::clone (2 samples, 0.02%)</title><rect x="16.5583%" y="1509" width="0.0241%" height="15" fill="rgb(205,229,51)" fg:x="1375" fg:w="2"/><text x="16.8083%" y="1519.50"></text></g><g><title>rug::ext::xmpz::init_set (2 samples, 0.02%)</title><rect x="16.5583%" y="1493" width="0.0241%" height="15" fill="rgb(223,189,4)" fg:x="1375" fg:w="2"/><text x="16.8083%" y="1503.50"></text></g><g><title>__gmpz_init_set (2 samples, 0.02%)</title><rect x="16.5583%" y="1477" width="0.0241%" height="15" fill="rgb(249,167,54)" fg:x="1375" fg:w="2"/><text x="16.8083%" y="1487.50"></text></g><g><title>__gmp_default_allocate (2 samples, 0.02%)</title><rect x="16.5583%" y="1461" width="0.0241%" height="15" fill="rgb(218,34,28)" fg:x="1375" fg:w="2"/><text x="16.8083%" y="1471.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="16.5583%" y="1445" width="0.0241%" height="15" fill="rgb(232,109,42)" fg:x="1375" fg:w="2"/><text x="16.8083%" y="1455.50"></text></g><g><title>&lt;vm_library::managed::value::Value as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="16.5583%" y="1573" width="0.0361%" height="15" fill="rgb(248,214,46)" fg:x="1375" fg:w="3"/><text x="16.8083%" y="1583.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="16.5583%" y="1557" width="0.0361%" height="15" fill="rgb(244,216,40)" fg:x="1375" fg:w="3"/><text x="16.8083%" y="1567.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (3 samples, 0.04%)</title><rect x="16.5583%" y="1541" width="0.0361%" height="15" fill="rgb(231,226,31)" fg:x="1375" fg:w="3"/><text x="16.8083%" y="1551.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.01%)</title><rect x="16.5824%" y="1525" width="0.0120%" height="15" fill="rgb(238,38,43)" fg:x="1377" fg:w="1"/><text x="16.8324%" y="1535.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="16.5824%" y="1509" width="0.0120%" height="15" fill="rgb(208,88,43)" fg:x="1377" fg:w="1"/><text x="16.8324%" y="1519.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.01%)</title><rect x="16.5944%" y="1573" width="0.0120%" height="15" fill="rgb(205,136,37)" fg:x="1378" fg:w="1"/><text x="16.8444%" y="1583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="16.5944%" y="1557" width="0.0120%" height="15" fill="rgb(237,34,14)" fg:x="1378" fg:w="1"/><text x="16.8444%" y="1567.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="16.5944%" y="1541" width="0.0120%" height="15" fill="rgb(236,193,44)" fg:x="1378" fg:w="1"/><text x="16.8444%" y="1551.50"></text></g><g><title>mi_free (1 samples, 0.01%)</title><rect x="16.5944%" y="1525" width="0.0120%" height="15" fill="rgb(231,48,10)" fg:x="1378" fg:w="1"/><text x="16.8444%" y="1535.50"></text></g><g><title>mi_block_set_next (1 samples, 0.01%)</title><rect x="16.5944%" y="1509" width="0.0120%" height="15" fill="rgb(213,141,34)" fg:x="1378" fg:w="1"/><text x="16.8444%" y="1519.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.01%)</title><rect x="16.5944%" y="1493" width="0.0120%" height="15" fill="rgb(249,130,34)" fg:x="1378" fg:w="1"/><text x="16.8444%" y="1503.50"></text></g><g><title>mi_ptr_encode (1 samples, 0.01%)</title><rect x="16.5944%" y="1477" width="0.0120%" height="15" fill="rgb(219,42,41)" fg:x="1378" fg:w="1"/><text x="16.8444%" y="1487.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.01%)</title><rect x="16.6185%" y="1477" width="0.0120%" height="15" fill="rgb(224,100,54)" fg:x="1380" fg:w="1"/><text x="16.8685%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.01%)</title><rect x="16.6185%" y="1461" width="0.0120%" height="15" fill="rgb(229,200,27)" fg:x="1380" fg:w="1"/><text x="16.8685%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="16.6185%" y="1445" width="0.0120%" height="15" fill="rgb(217,118,10)" fg:x="1380" fg:w="1"/><text x="16.8685%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="16.6185%" y="1429" width="0.0120%" height="15" fill="rgb(206,22,3)" fg:x="1380" fg:w="1"/><text x="16.8685%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="16.6185%" y="1413" width="0.0120%" height="15" fill="rgb(232,163,46)" fg:x="1380" fg:w="1"/><text x="16.8685%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="16.6185%" y="1397" width="0.0120%" height="15" fill="rgb(206,95,13)" fg:x="1380" fg:w="1"/><text x="16.8685%" y="1407.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="16.6185%" y="1381" width="0.0120%" height="15" fill="rgb(253,154,18)" fg:x="1380" fg:w="1"/><text x="16.8685%" y="1391.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="16.6185%" y="1365" width="0.0120%" height="15" fill="rgb(219,32,23)" fg:x="1380" fg:w="1"/><text x="16.8685%" y="1375.50"></text></g><g><title>mi_malloc (1 samples, 0.01%)</title><rect x="16.6185%" y="1349" width="0.0120%" height="15" fill="rgb(230,191,45)" fg:x="1380" fg:w="1"/><text x="16.8685%" y="1359.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.01%)</title><rect x="16.6185%" y="1333" width="0.0120%" height="15" fill="rgb(229,64,36)" fg:x="1380" fg:w="1"/><text x="16.8685%" y="1343.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.01%)</title><rect x="16.6185%" y="1317" width="0.0120%" height="15" fill="rgb(205,129,25)" fg:x="1380" fg:w="1"/><text x="16.8685%" y="1327.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.01%)</title><rect x="16.6185%" y="1301" width="0.0120%" height="15" fill="rgb(254,112,7)" fg:x="1380" fg:w="1"/><text x="16.8685%" y="1311.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.01%)</title><rect x="16.6305%" y="1445" width="0.0120%" height="15" fill="rgb(226,53,48)" fg:x="1381" fg:w="1"/><text x="16.8805%" y="1455.50"></text></g><g><title>__rg_realloc (1 samples, 0.01%)</title><rect x="16.6787%" y="1221" width="0.0120%" height="15" fill="rgb(214,153,38)" fg:x="1385" fg:w="1"/><text x="16.9287%" y="1231.50"></text></g><g><title>&lt;mimalloc::MiMalloc as core::alloc::global::GlobalAlloc&gt;::realloc (1 samples, 0.01%)</title><rect x="16.6787%" y="1205" width="0.0120%" height="15" fill="rgb(243,101,7)" fg:x="1385" fg:w="1"/><text x="16.9287%" y="1215.50"></text></g><g><title>mimalloc::may_use_unaligned_api (1 samples, 0.01%)</title><rect x="16.6787%" y="1189" width="0.0120%" height="15" fill="rgb(240,140,22)" fg:x="1385" fg:w="1"/><text x="16.9287%" y="1199.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (6 samples, 0.07%)</title><rect x="16.6426%" y="1445" width="0.0723%" height="15" fill="rgb(235,114,2)" fg:x="1382" fg:w="6"/><text x="16.8926%" y="1455.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.04%)</title><rect x="16.6787%" y="1429" width="0.0361%" height="15" fill="rgb(242,59,12)" fg:x="1385" fg:w="3"/><text x="16.9287%" y="1439.50"></text></g><g><title>alloc::string::String::push_str (3 samples, 0.04%)</title><rect x="16.6787%" y="1413" width="0.0361%" height="15" fill="rgb(252,134,9)" fg:x="1385" fg:w="3"/><text x="16.9287%" y="1423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.04%)</title><rect x="16.6787%" y="1397" width="0.0361%" height="15" fill="rgb(236,4,44)" fg:x="1385" fg:w="3"/><text x="16.9287%" y="1407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.04%)</title><rect x="16.6787%" y="1381" width="0.0361%" height="15" fill="rgb(254,172,41)" fg:x="1385" fg:w="3"/><text x="16.9287%" y="1391.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.04%)</title><rect x="16.6787%" y="1365" width="0.0361%" height="15" fill="rgb(244,63,20)" fg:x="1385" fg:w="3"/><text x="16.9287%" y="1375.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.04%)</title><rect x="16.6787%" y="1349" width="0.0361%" height="15" fill="rgb(250,73,31)" fg:x="1385" fg:w="3"/><text x="16.9287%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.04%)</title><rect x="16.6787%" y="1333" width="0.0361%" height="15" fill="rgb(241,38,36)" fg:x="1385" fg:w="3"/><text x="16.9287%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.04%)</title><rect x="16.6787%" y="1317" width="0.0361%" height="15" fill="rgb(245,211,2)" fg:x="1385" fg:w="3"/><text x="16.9287%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.04%)</title><rect x="16.6787%" y="1301" width="0.0361%" height="15" fill="rgb(206,120,28)" fg:x="1385" fg:w="3"/><text x="16.9287%" y="1311.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.04%)</title><rect x="16.6787%" y="1285" width="0.0361%" height="15" fill="rgb(211,59,34)" fg:x="1385" fg:w="3"/><text x="16.9287%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.04%)</title><rect x="16.6787%" y="1269" width="0.0361%" height="15" fill="rgb(233,168,5)" fg:x="1385" fg:w="3"/><text x="16.9287%" y="1279.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.04%)</title><rect x="16.6787%" y="1253" width="0.0361%" height="15" fill="rgb(234,33,13)" fg:x="1385" fg:w="3"/><text x="16.9287%" y="1263.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.04%)</title><rect x="16.6787%" y="1237" width="0.0361%" height="15" fill="rgb(231,150,26)" fg:x="1385" fg:w="3"/><text x="16.9287%" y="1247.50"></text></g><g><title>_mi_heap_realloc_zero (2 samples, 0.02%)</title><rect x="16.6908%" y="1221" width="0.0241%" height="15" fill="rgb(217,191,4)" fg:x="1386" fg:w="2"/><text x="16.9408%" y="1231.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.01%)</title><rect x="16.7028%" y="1205" width="0.0120%" height="15" fill="rgb(246,198,38)" fg:x="1387" fg:w="1"/><text x="16.9528%" y="1215.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.01%)</title><rect x="16.7028%" y="1189" width="0.0120%" height="15" fill="rgb(245,64,37)" fg:x="1387" fg:w="1"/><text x="16.9528%" y="1199.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.01%)</title><rect x="16.7028%" y="1173" width="0.0120%" height="15" fill="rgb(250,30,36)" fg:x="1387" fg:w="1"/><text x="16.9528%" y="1183.50"></text></g><g><title>mi_block_next (1 samples, 0.01%)</title><rect x="16.7028%" y="1157" width="0.0120%" height="15" fill="rgb(217,86,53)" fg:x="1387" fg:w="1"/><text x="16.9528%" y="1167.50"></text></g><g><title>mi_block_nextx (1 samples, 0.01%)</title><rect x="16.7028%" y="1141" width="0.0120%" height="15" fill="rgb(228,157,16)" fg:x="1387" fg:w="1"/><text x="16.9528%" y="1151.50"></text></g><g><title>mi_ptr_decode (1 samples, 0.01%)</title><rect x="16.7028%" y="1125" width="0.0120%" height="15" fill="rgb(217,59,31)" fg:x="1387" fg:w="1"/><text x="16.9528%" y="1135.50"></text></g><g><title>alloc::fmt::format (10 samples, 0.12%)</title><rect x="16.6065%" y="1541" width="0.1204%" height="15" fill="rgb(237,138,41)" fg:x="1379" fg:w="10"/><text x="16.8565%" y="1551.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (10 samples, 0.12%)</title><rect x="16.6065%" y="1525" width="0.1204%" height="15" fill="rgb(227,91,49)" fg:x="1379" fg:w="10"/><text x="16.8565%" y="1535.50"></text></g><g><title>alloc::fmt::format::{{closure}} (10 samples, 0.12%)</title><rect x="16.6065%" y="1509" width="0.1204%" height="15" fill="rgb(247,21,44)" fg:x="1379" fg:w="10"/><text x="16.8565%" y="1519.50"></text></g><g><title>alloc::fmt::format::format_inner (10 samples, 0.12%)</title><rect x="16.6065%" y="1493" width="0.1204%" height="15" fill="rgb(219,210,51)" fg:x="1379" fg:w="10"/><text x="16.8565%" y="1503.50"></text></g><g><title>core::fmt::Write::write_fmt (8 samples, 0.10%)</title><rect x="16.6305%" y="1477" width="0.0963%" height="15" fill="rgb(209,140,6)" fg:x="1381" fg:w="8"/><text x="16.8805%" y="1487.50"></text></g><g><title>core::fmt::write (8 samples, 0.10%)</title><rect x="16.6305%" y="1461" width="0.0963%" height="15" fill="rgb(221,188,24)" fg:x="1381" fg:w="8"/><text x="16.8805%" y="1471.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.01%)</title><rect x="16.7148%" y="1445" width="0.0120%" height="15" fill="rgb(232,154,20)" fg:x="1388" fg:w="1"/><text x="16.9648%" y="1455.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (11 samples, 0.13%)</title><rect x="16.6065%" y="1573" width="0.1325%" height="15" fill="rgb(244,137,50)" fg:x="1379" fg:w="11"/><text x="16.8565%" y="1583.50"></text></g><g><title>vm_library::run_loop::handle_invoke::{{closure}} (11 samples, 0.13%)</title><rect x="16.6065%" y="1557" width="0.1325%" height="15" fill="rgb(225,185,43)" fg:x="1379" fg:w="11"/><text x="16.8565%" y="1567.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="16.7269%" y="1541" width="0.0120%" height="15" fill="rgb(213,205,38)" fg:x="1389" fg:w="1"/><text x="16.9769%" y="1551.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="16.7269%" y="1525" width="0.0120%" height="15" fill="rgb(236,73,12)" fg:x="1389" fg:w="1"/><text x="16.9769%" y="1535.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="16.7269%" y="1509" width="0.0120%" height="15" fill="rgb(235,219,13)" fg:x="1389" fg:w="1"/><text x="16.9769%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="16.7269%" y="1493" width="0.0120%" height="15" fill="rgb(218,59,36)" fg:x="1389" fg:w="1"/><text x="16.9769%" y="1503.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="16.7269%" y="1477" width="0.0120%" height="15" fill="rgb(205,110,39)" fg:x="1389" fg:w="1"/><text x="16.9769%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.01%)</title><rect x="16.7269%" y="1461" width="0.0120%" height="15" fill="rgb(218,206,42)" fg:x="1389" fg:w="1"/><text x="16.9769%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.01%)</title><rect x="16.7269%" y="1445" width="0.0120%" height="15" fill="rgb(248,125,24)" fg:x="1389" fg:w="1"/><text x="16.9769%" y="1455.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.01%)</title><rect x="16.7269%" y="1429" width="0.0120%" height="15" fill="rgb(242,28,27)" fg:x="1389" fg:w="1"/><text x="16.9769%" y="1439.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="16.7269%" y="1413" width="0.0120%" height="15" fill="rgb(216,228,15)" fg:x="1389" fg:w="1"/><text x="16.9769%" y="1423.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.01%)</title><rect x="16.7269%" y="1397" width="0.0120%" height="15" fill="rgb(235,116,46)" fg:x="1389" fg:w="1"/><text x="16.9769%" y="1407.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="16.7269%" y="1381" width="0.0120%" height="15" fill="rgb(224,18,32)" fg:x="1389" fg:w="1"/><text x="16.9769%" y="1391.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="16.7269%" y="1365" width="0.0120%" height="15" fill="rgb(252,5,12)" fg:x="1389" fg:w="1"/><text x="16.9769%" y="1375.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="16.7269%" y="1349" width="0.0120%" height="15" fill="rgb(251,36,5)" fg:x="1389" fg:w="1"/><text x="16.9769%" y="1359.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="16.7269%" y="1333" width="0.0120%" height="15" fill="rgb(217,53,14)" fg:x="1389" fg:w="1"/><text x="16.9769%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.01%)</title><rect x="16.7389%" y="1573" width="0.0120%" height="15" fill="rgb(215,86,45)" fg:x="1390" fg:w="1"/><text x="16.9889%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.01%)</title><rect x="16.7389%" y="1557" width="0.0120%" height="15" fill="rgb(242,169,11)" fg:x="1390" fg:w="1"/><text x="16.9889%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.01%)</title><rect x="16.7389%" y="1541" width="0.0120%" height="15" fill="rgb(211,213,45)" fg:x="1390" fg:w="1"/><text x="16.9889%" y="1551.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="16.7389%" y="1525" width="0.0120%" height="15" fill="rgb(205,88,11)" fg:x="1390" fg:w="1"/><text x="16.9889%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="16.7389%" y="1509" width="0.0120%" height="15" fill="rgb(252,69,26)" fg:x="1390" fg:w="1"/><text x="16.9889%" y="1519.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="16.7389%" y="1493" width="0.0120%" height="15" fill="rgb(246,123,37)" fg:x="1390" fg:w="1"/><text x="16.9889%" y="1503.50"></text></g><g><title>mi_free (1 samples, 0.01%)</title><rect x="16.7389%" y="1477" width="0.0120%" height="15" fill="rgb(212,205,5)" fg:x="1390" fg:w="1"/><text x="16.9889%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(vm_library::ticket_table::TicketId,usize)&gt;&gt; (1 samples, 0.01%)</title><rect x="16.7510%" y="1573" width="0.0120%" height="15" fill="rgb(253,148,0)" fg:x="1391" fg:w="1"/><text x="17.0010%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;&amp;vm_library::ticket_table::Ticket,core::hash::BuildHasherDefault&lt;fnv::FnvHasher&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="16.7630%" y="1573" width="0.0120%" height="15" fill="rgb(239,22,4)" fg:x="1392" fg:w="1"/><text x="17.0130%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;&amp;vm_library::ticket_table::Ticket,core::hash::BuildHasherDefault&lt;fnv::FnvHasher&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="16.7630%" y="1557" width="0.0120%" height="15" fill="rgb(226,26,53)" fg:x="1392" fg:w="1"/><text x="17.0130%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;&amp;vm_library::ticket_table::Ticket,(),core::hash::BuildHasherDefault&lt;fnv::FnvHasher&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="16.7630%" y="1541" width="0.0120%" height="15" fill="rgb(225,229,45)" fg:x="1392" fg:w="1"/><text x="17.0130%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(&amp;vm_library::ticket_table::Ticket,())&gt;&gt; (1 samples, 0.01%)</title><rect x="16.7630%" y="1525" width="0.0120%" height="15" fill="rgb(220,60,37)" fg:x="1392" fg:w="1"/><text x="17.0130%" y="1535.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="16.7630%" y="1509" width="0.0120%" height="15" fill="rgb(217,180,35)" fg:x="1392" fg:w="1"/><text x="17.0130%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (1 samples, 0.01%)</title><rect x="16.7630%" y="1493" width="0.0120%" height="15" fill="rgb(229,7,53)" fg:x="1392" fg:w="1"/><text x="17.0130%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;vm_library::contract_address::ContractAddress&gt; (1 samples, 0.01%)</title><rect x="16.7750%" y="1573" width="0.0120%" height="15" fill="rgb(254,137,3)" fg:x="1393" fg:w="1"/><text x="17.0250%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.01%)</title><rect x="16.7750%" y="1557" width="0.0120%" height="15" fill="rgb(215,140,41)" fg:x="1393" fg:w="1"/><text x="17.0250%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.01%)</title><rect x="16.7750%" y="1541" width="0.0120%" height="15" fill="rgb(250,80,15)" fg:x="1393" fg:w="1"/><text x="17.0250%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.01%)</title><rect x="16.7750%" y="1525" width="0.0120%" height="15" fill="rgb(252,191,6)" fg:x="1393" fg:w="1"/><text x="17.0250%" y="1535.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="16.7750%" y="1509" width="0.0120%" height="15" fill="rgb(246,217,18)" fg:x="1393" fg:w="1"/><text x="17.0250%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="16.7750%" y="1493" width="0.0120%" height="15" fill="rgb(223,93,7)" fg:x="1393" fg:w="1"/><text x="17.0250%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;vm_library::vm_server::ServerMessage&gt; (1 samples, 0.01%)</title><rect x="16.7871%" y="1573" width="0.0120%" height="15" fill="rgb(225,55,52)" fg:x="1394" fg:w="1"/><text x="17.0371%" y="1583.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.01%)</title><rect x="16.7991%" y="1573" width="0.0120%" height="15" fill="rgb(240,31,24)" fg:x="1395" fg:w="1"/><text x="17.0491%" y="1583.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::convert::From&lt;T&gt;&gt;::from (1 samples, 0.01%)</title><rect x="16.8232%" y="1557" width="0.0120%" height="15" fill="rgb(205,56,52)" fg:x="1397" fg:w="1"/><text x="17.0732%" y="1567.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="16.8232%" y="1541" width="0.0120%" height="15" fill="rgb(246,146,12)" fg:x="1397" fg:w="1"/><text x="17.0732%" y="1551.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="16.8232%" y="1525" width="0.0120%" height="15" fill="rgb(239,84,36)" fg:x="1397" fg:w="1"/><text x="17.0732%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="16.8232%" y="1509" width="0.0120%" height="15" fill="rgb(207,41,40)" fg:x="1397" fg:w="1"/><text x="17.0732%" y="1519.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="16.8232%" y="1493" width="0.0120%" height="15" fill="rgb(241,179,25)" fg:x="1397" fg:w="1"/><text x="17.0732%" y="1503.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="16.8232%" y="1477" width="0.0120%" height="15" fill="rgb(210,0,34)" fg:x="1397" fg:w="1"/><text x="17.0732%" y="1487.50"></text></g><g><title>mi_malloc (1 samples, 0.01%)</title><rect x="16.8232%" y="1461" width="0.0120%" height="15" fill="rgb(225,217,29)" fg:x="1397" fg:w="1"/><text x="17.0732%" y="1471.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.01%)</title><rect x="16.8232%" y="1445" width="0.0120%" height="15" fill="rgb(216,191,38)" fg:x="1397" fg:w="1"/><text x="17.0732%" y="1455.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.01%)</title><rect x="16.8232%" y="1429" width="0.0120%" height="15" fill="rgb(232,140,52)" fg:x="1397" fg:w="1"/><text x="17.0732%" y="1439.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.01%)</title><rect x="16.8232%" y="1413" width="0.0120%" height="15" fill="rgb(223,158,51)" fg:x="1397" fg:w="1"/><text x="17.0732%" y="1423.50"></text></g><g><title>mi_block_next (1 samples, 0.01%)</title><rect x="16.8232%" y="1397" width="0.0120%" height="15" fill="rgb(235,29,51)" fg:x="1397" fg:w="1"/><text x="17.0732%" y="1407.50"></text></g><g><title>mi_block_nextx (1 samples, 0.01%)</title><rect x="16.8232%" y="1381" width="0.0120%" height="15" fill="rgb(215,181,18)" fg:x="1397" fg:w="1"/><text x="17.0732%" y="1391.50"></text></g><g><title>mi_ptr_decode (1 samples, 0.01%)</title><rect x="16.8232%" y="1365" width="0.0120%" height="15" fill="rgb(227,125,34)" fg:x="1397" fg:w="1"/><text x="17.0732%" y="1375.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="16.8353%" y="1557" width="0.0120%" height="15" fill="rgb(230,197,49)" fg:x="1398" fg:w="1"/><text x="17.0853%" y="1567.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="16.8353%" y="1541" width="0.0120%" height="15" fill="rgb(239,141,16)" fg:x="1398" fg:w="1"/><text x="17.0853%" y="1551.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="16.8353%" y="1525" width="0.0120%" height="15" fill="rgb(225,105,43)" fg:x="1398" fg:w="1"/><text x="17.0853%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="16.8353%" y="1509" width="0.0120%" height="15" fill="rgb(214,131,14)" fg:x="1398" fg:w="1"/><text x="17.0853%" y="1519.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="16.8353%" y="1493" width="0.0120%" height="15" fill="rgb(229,177,11)" fg:x="1398" fg:w="1"/><text x="17.0853%" y="1503.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="16.8353%" y="1477" width="0.0120%" height="15" fill="rgb(231,180,14)" fg:x="1398" fg:w="1"/><text x="17.0853%" y="1487.50"></text></g><g><title>mi_malloc (1 samples, 0.01%)</title><rect x="16.8353%" y="1461" width="0.0120%" height="15" fill="rgb(232,88,2)" fg:x="1398" fg:w="1"/><text x="17.0853%" y="1471.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.01%)</title><rect x="16.8353%" y="1445" width="0.0120%" height="15" fill="rgb(205,220,8)" fg:x="1398" fg:w="1"/><text x="17.0853%" y="1455.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.01%)</title><rect x="16.8353%" y="1429" width="0.0120%" height="15" fill="rgb(225,23,53)" fg:x="1398" fg:w="1"/><text x="17.0853%" y="1439.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.01%)</title><rect x="16.8353%" y="1413" width="0.0120%" height="15" fill="rgb(213,62,29)" fg:x="1398" fg:w="1"/><text x="17.0853%" y="1423.50"></text></g><g><title>mi_block_next (1 samples, 0.01%)</title><rect x="16.8353%" y="1397" width="0.0120%" height="15" fill="rgb(227,75,7)" fg:x="1398" fg:w="1"/><text x="17.0853%" y="1407.50"></text></g><g><title>mi_block_nextx (1 samples, 0.01%)</title><rect x="16.8353%" y="1381" width="0.0120%" height="15" fill="rgb(207,105,14)" fg:x="1398" fg:w="1"/><text x="17.0853%" y="1391.50"></text></g><g><title>mi_ptr_decode (1 samples, 0.01%)</title><rect x="16.8353%" y="1365" width="0.0120%" height="15" fill="rgb(245,62,29)" fg:x="1398" fg:w="1"/><text x="17.0853%" y="1375.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="16.8593%" y="1381" width="0.0120%" height="15" fill="rgb(236,202,4)" fg:x="1400" fg:w="1"/><text x="17.1093%" y="1391.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="16.8593%" y="1365" width="0.0120%" height="15" fill="rgb(250,67,1)" fg:x="1400" fg:w="1"/><text x="17.1093%" y="1375.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="16.8593%" y="1349" width="0.0120%" height="15" fill="rgb(253,115,44)" fg:x="1400" fg:w="1"/><text x="17.1093%" y="1359.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="16.8593%" y="1333" width="0.0120%" height="15" fill="rgb(251,139,18)" fg:x="1400" fg:w="1"/><text x="17.1093%" y="1343.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="16.8593%" y="1317" width="0.0120%" height="15" fill="rgb(218,22,32)" fg:x="1400" fg:w="1"/><text x="17.1093%" y="1327.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (4 samples, 0.05%)</title><rect x="16.8473%" y="1557" width="0.0482%" height="15" fill="rgb(243,53,5)" fg:x="1399" fg:w="4"/><text x="17.0973%" y="1567.50"></text></g><g><title>vm_library::instance::invoke_managed::{{closure}} (3 samples, 0.04%)</title><rect x="16.8593%" y="1541" width="0.0361%" height="15" fill="rgb(227,56,16)" fg:x="1400" fg:w="3"/><text x="17.1093%" y="1551.50"></text></g><g><title>vm_library::env::Context::get_gas_left (3 samples, 0.04%)</title><rect x="16.8593%" y="1525" width="0.0361%" height="15" fill="rgb(245,53,0)" fg:x="1400" fg:w="3"/><text x="17.1093%" y="1535.50"></text></g><g><title>vm_library::env::Context::with_instance (3 samples, 0.04%)</title><rect x="16.8593%" y="1509" width="0.0361%" height="15" fill="rgb(216,170,35)" fg:x="1400" fg:w="3"/><text x="17.1093%" y="1519.50"></text></g><g><title>vm_library::env::Context::get_gas_left::{{closure}} (3 samples, 0.04%)</title><rect x="16.8593%" y="1493" width="0.0361%" height="15" fill="rgb(211,200,8)" fg:x="1400" fg:w="3"/><text x="17.1093%" y="1503.50"></text></g><g><title>wasmer_middlewares::metering::get_remaining_points (3 samples, 0.04%)</title><rect x="16.8593%" y="1477" width="0.0361%" height="15" fill="rgb(228,204,44)" fg:x="1400" fg:w="3"/><text x="17.1093%" y="1487.50"></text></g><g><title>wasmer::sys::exports::Exports::get_global (3 samples, 0.04%)</title><rect x="16.8593%" y="1461" width="0.0361%" height="15" fill="rgb(214,121,17)" fg:x="1400" fg:w="3"/><text x="17.1093%" y="1471.50"></text></g><g><title>wasmer::sys::exports::Exports::get (3 samples, 0.04%)</title><rect x="16.8593%" y="1445" width="0.0361%" height="15" fill="rgb(233,64,38)" fg:x="1400" fg:w="3"/><text x="17.1093%" y="1455.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (3 samples, 0.04%)</title><rect x="16.8593%" y="1429" width="0.0361%" height="15" fill="rgb(253,54,19)" fg:x="1400" fg:w="3"/><text x="17.1093%" y="1439.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (3 samples, 0.04%)</title><rect x="16.8593%" y="1413" width="0.0361%" height="15" fill="rgb(253,94,18)" fg:x="1400" fg:w="3"/><text x="17.1093%" y="1423.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (3 samples, 0.04%)</title><rect x="16.8593%" y="1397" width="0.0361%" height="15" fill="rgb(227,57,52)" fg:x="1400" fg:w="3"/><text x="17.1093%" y="1407.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.02%)</title><rect x="16.8714%" y="1381" width="0.0241%" height="15" fill="rgb(230,228,50)" fg:x="1401" fg:w="2"/><text x="17.1214%" y="1391.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="16.8714%" y="1365" width="0.0241%" height="15" fill="rgb(217,205,27)" fg:x="1401" fg:w="2"/><text x="17.1214%" y="1375.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="16.8714%" y="1349" width="0.0241%" height="15" fill="rgb(252,71,50)" fg:x="1401" fg:w="2"/><text x="17.1214%" y="1359.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="16.8714%" y="1333" width="0.0241%" height="15" fill="rgb(209,86,4)" fg:x="1401" fg:w="2"/><text x="17.1214%" y="1343.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="16.8714%" y="1317" width="0.0241%" height="15" fill="rgb(229,94,0)" fg:x="1401" fg:w="2"/><text x="17.1214%" y="1327.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="16.8834%" y="1301" width="0.0120%" height="15" fill="rgb(252,223,21)" fg:x="1402" fg:w="1"/><text x="17.1334%" y="1311.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="16.8834%" y="1285" width="0.0120%" height="15" fill="rgb(230,210,4)" fg:x="1402" fg:w="1"/><text x="17.1334%" y="1295.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.01%)</title><rect x="16.8955%" y="1493" width="0.0120%" height="15" fill="rgb(240,149,38)" fg:x="1403" fg:w="1"/><text x="17.1455%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::Mutex&lt;wasmer_vm::instance::InstanceHandle&gt;&gt; (1 samples, 0.01%)</title><rect x="16.8955%" y="1477" width="0.0120%" height="15" fill="rgb(254,105,20)" fg:x="1403" fg:w="1"/><text x="17.1455%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;wasmer_vm::instance::InstanceHandle&gt;&gt; (1 samples, 0.01%)</title><rect x="16.8955%" y="1461" width="0.0120%" height="15" fill="rgb(253,87,46)" fg:x="1403" fg:w="1"/><text x="17.1455%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_vm::instance::InstanceHandle&gt; (1 samples, 0.01%)</title><rect x="16.8955%" y="1445" width="0.0120%" height="15" fill="rgb(253,116,33)" fg:x="1403" fg:w="1"/><text x="17.1455%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_vm::instance::ref::InstanceRef&gt; (1 samples, 0.01%)</title><rect x="16.8955%" y="1429" width="0.0120%" height="15" fill="rgb(229,198,5)" fg:x="1403" fg:w="1"/><text x="17.1455%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;wasmer_vm::instance::ref::InstanceInner&gt;&gt; (1 samples, 0.01%)</title><rect x="16.8955%" y="1413" width="0.0120%" height="15" fill="rgb(242,38,37)" fg:x="1403" fg:w="1"/><text x="17.1455%" y="1423.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="16.8955%" y="1397" width="0.0120%" height="15" fill="rgb(242,69,53)" fg:x="1403" fg:w="1"/><text x="17.1455%" y="1407.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.04%)</title><rect x="16.9075%" y="1493" width="0.0361%" height="15" fill="rgb(249,80,16)" fg:x="1404" fg:w="3"/><text x="17.1575%" y="1503.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.04%)</title><rect x="16.9075%" y="1477" width="0.0361%" height="15" fill="rgb(206,128,11)" fg:x="1404" fg:w="3"/><text x="17.1575%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;wasmer_vm::instance::InstanceHandle&gt;&gt;&gt; (5 samples, 0.06%)</title><rect x="16.8955%" y="1525" width="0.0602%" height="15" fill="rgb(212,35,20)" fg:x="1403" fg:w="5"/><text x="17.1455%" y="1535.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.06%)</title><rect x="16.8955%" y="1509" width="0.0602%" height="15" fill="rgb(236,79,13)" fg:x="1403" fg:w="5"/><text x="17.1455%" y="1519.50"></text></g><g><title>mi_free (1 samples, 0.01%)</title><rect x="16.9436%" y="1493" width="0.0120%" height="15" fill="rgb(233,123,3)" fg:x="1407" fg:w="1"/><text x="17.1936%" y="1503.50"></text></g><g><title>_mi_thread_id (1 samples, 0.01%)</title><rect x="16.9436%" y="1477" width="0.0120%" height="15" fill="rgb(214,93,52)" fg:x="1407" fg:w="1"/><text x="17.1936%" y="1487.50"></text></g><g><title>mi_tls_slot (1 samples, 0.01%)</title><rect x="16.9436%" y="1461" width="0.0120%" height="15" fill="rgb(251,37,40)" fg:x="1407" fg:w="1"/><text x="17.1936%" y="1471.50"></text></g><g><title>core::mem::drop (1 samples, 0.01%)</title><rect x="16.9557%" y="1397" width="0.0120%" height="15" fill="rgb(227,80,54)" fg:x="1408" fg:w="1"/><text x="17.2057%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;wasmer_vm::instance::ref::InstanceInner&gt;&gt; (1 samples, 0.01%)</title><rect x="16.9557%" y="1381" width="0.0120%" height="15" fill="rgb(254,48,11)" fg:x="1408" fg:w="1"/><text x="17.2057%" y="1391.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="16.9557%" y="1365" width="0.0120%" height="15" fill="rgb(235,193,26)" fg:x="1408" fg:w="1"/><text x="17.2057%" y="1375.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::inner (1 samples, 0.01%)</title><rect x="16.9557%" y="1349" width="0.0120%" height="15" fill="rgb(229,99,21)" fg:x="1408" fg:w="1"/><text x="17.2057%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;wasmer_types::module::ModuleInfo&gt;&gt; (1 samples, 0.01%)</title><rect x="16.9677%" y="1333" width="0.0120%" height="15" fill="rgb(211,140,41)" fg:x="1409" fg:w="1"/><text x="17.2177%" y="1343.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="16.9677%" y="1317" width="0.0120%" height="15" fill="rgb(240,227,30)" fg:x="1409" fg:w="1"/><text x="17.2177%" y="1327.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.01%)</title><rect x="16.9798%" y="1301" width="0.0120%" height="15" fill="rgb(215,224,45)" fg:x="1410" fg:w="1"/><text x="17.2298%" y="1311.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="16.9798%" y="1285" width="0.0120%" height="15" fill="rgb(206,123,31)" fg:x="1410" fg:w="1"/><text x="17.2298%" y="1295.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="16.9798%" y="1269" width="0.0120%" height="15" fill="rgb(210,138,16)" fg:x="1410" fg:w="1"/><text x="17.2298%" y="1279.50"></text></g><g><title>mi_free (1 samples, 0.01%)</title><rect x="16.9798%" y="1253" width="0.0120%" height="15" fill="rgb(228,57,28)" fg:x="1410" fg:w="1"/><text x="17.2298%" y="1263.50"></text></g><g><title>mi_check_is_double_free (1 samples, 0.01%)</title><rect x="16.9798%" y="1237" width="0.0120%" height="15" fill="rgb(242,170,10)" fg:x="1410" fg:w="1"/><text x="17.2298%" y="1247.50"></text></g><g><title>mi_block_nextx (1 samples, 0.01%)</title><rect x="16.9798%" y="1221" width="0.0120%" height="15" fill="rgb(228,214,39)" fg:x="1410" fg:w="1"/><text x="17.2298%" y="1231.50"></text></g><g><title>mi_ptr_decode (1 samples, 0.01%)</title><rect x="16.9798%" y="1205" width="0.0120%" height="15" fill="rgb(218,179,33)" fg:x="1410" fg:w="1"/><text x="17.2298%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;vm_library::env::Inner&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="16.9918%" y="1189" width="0.0120%" height="15" fill="rgb(235,193,39)" fg:x="1411" fg:w="1"/><text x="17.2418%" y="1199.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="16.9918%" y="1173" width="0.0120%" height="15" fill="rgb(219,221,36)" fg:x="1411" fg:w="1"/><text x="17.2418%" y="1183.50"></text></g><g><title>core::ops::function::FnOnce::call_once (7 samples, 0.08%)</title><rect x="16.9918%" y="1253" width="0.0843%" height="15" fill="rgb(248,218,19)" fg:x="1411" fg:w="7"/><text x="17.2418%" y="1263.50"></text></g><g><title>wasmer::sys::externals::function::build_export_function_metadata::{{closure}} (7 samples, 0.08%)</title><rect x="16.9918%" y="1237" width="0.0843%" height="15" fill="rgb(205,50,9)" fg:x="1411" fg:w="7"/><text x="17.2418%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;vm_library::env::Context&gt;&gt; (7 samples, 0.08%)</title><rect x="16.9918%" y="1221" width="0.0843%" height="15" fill="rgb(238,81,28)" fg:x="1411" fg:w="7"/><text x="17.2418%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;vm_library::env::Context&gt; (7 samples, 0.08%)</title><rect x="16.9918%" y="1205" width="0.0843%" height="15" fill="rgb(235,110,19)" fg:x="1411" fg:w="7"/><text x="17.2418%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;vm_library::ticket_table::TicketTable&gt;&gt;&gt; (6 samples, 0.07%)</title><rect x="17.0039%" y="1189" width="0.0723%" height="15" fill="rgb(214,7,14)" fg:x="1412" fg:w="6"/><text x="17.2539%" y="1199.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.07%)</title><rect x="17.0039%" y="1173" width="0.0723%" height="15" fill="rgb(211,77,3)" fg:x="1412" fg:w="6"/><text x="17.2539%" y="1183.50"></text></g><g><title>alloc::rc::RcInnerPtr::dec_strong (5 samples, 0.06%)</title><rect x="17.0159%" y="1157" width="0.0602%" height="15" fill="rgb(229,5,9)" fg:x="1413" fg:w="5"/><text x="17.2659%" y="1167.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (5 samples, 0.06%)</title><rect x="17.0159%" y="1141" width="0.0602%" height="15" fill="rgb(225,90,11)" fg:x="1413" fg:w="5"/><text x="17.2659%" y="1151.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (5 samples, 0.06%)</title><rect x="17.0159%" y="1125" width="0.0602%" height="15" fill="rgb(242,56,8)" fg:x="1413" fg:w="5"/><text x="17.2659%" y="1135.50"></text></g><g><title>core::mem::replace (5 samples, 0.06%)</title><rect x="17.0159%" y="1109" width="0.0602%" height="15" fill="rgb(249,212,39)" fg:x="1413" fg:w="5"/><text x="17.2659%" y="1119.50"></text></g><g><title>core::ptr::write (5 samples, 0.06%)</title><rect x="17.0159%" y="1093" width="0.0602%" height="15" fill="rgb(236,90,9)" fg:x="1413" fg:w="5"/><text x="17.2659%" y="1103.50"></text></g><g><title>_mi_segment_page_of (1 samples, 0.01%)</title><rect x="17.1363%" y="1237" width="0.0120%" height="15" fill="rgb(206,88,35)" fg:x="1423" fg:w="1"/><text x="17.3863%" y="1247.50"></text></g><g><title>mi_slice_first (1 samples, 0.01%)</title><rect x="17.1363%" y="1221" width="0.0120%" height="15" fill="rgb(205,126,30)" fg:x="1423" fg:w="1"/><text x="17.3863%" y="1231.50"></text></g><g><title>_mi_thread_id (1 samples, 0.01%)</title><rect x="17.1484%" y="1237" width="0.0120%" height="15" fill="rgb(230,176,12)" fg:x="1424" fg:w="1"/><text x="17.3984%" y="1247.50"></text></g><g><title>mi_tls_slot (1 samples, 0.01%)</title><rect x="17.1484%" y="1221" width="0.0120%" height="15" fill="rgb(243,19,9)" fg:x="1424" fg:w="1"/><text x="17.3984%" y="1231.50"></text></g><g><title>mi_block_set_next (1 samples, 0.01%)</title><rect x="17.1604%" y="1237" width="0.0120%" height="15" fill="rgb(245,171,17)" fg:x="1425" fg:w="1"/><text x="17.4104%" y="1247.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.01%)</title><rect x="17.1604%" y="1221" width="0.0120%" height="15" fill="rgb(227,52,21)" fg:x="1425" fg:w="1"/><text x="17.4104%" y="1231.50"></text></g><g><title>mi_ptr_encode (1 samples, 0.01%)</title><rect x="17.1604%" y="1205" width="0.0120%" height="15" fill="rgb(238,69,14)" fg:x="1425" fg:w="1"/><text x="17.4104%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_types::entity::boxed_slice::BoxedSlice&lt;wasmer_types::indexes::FunctionIndex,wasmer_vm::instance::ImportFunctionEnv&gt;&gt; (20 samples, 0.24%)</title><rect x="16.9798%" y="1333" width="0.2408%" height="15" fill="rgb(241,156,39)" fg:x="1410" fg:w="20"/><text x="17.2298%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[wasmer_vm::instance::ImportFunctionEnv]&gt;&gt; (20 samples, 0.24%)</title><rect x="16.9798%" y="1317" width="0.2408%" height="15" fill="rgb(212,227,28)" fg:x="1410" fg:w="20"/><text x="17.2298%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;[wasmer_vm::instance::ImportFunctionEnv]&gt; (19 samples, 0.23%)</title><rect x="16.9918%" y="1301" width="0.2288%" height="15" fill="rgb(209,118,27)" fg:x="1411" fg:w="19"/><text x="17.2418%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_vm::instance::ImportFunctionEnv&gt; (19 samples, 0.23%)</title><rect x="16.9918%" y="1285" width="0.2288%" height="15" fill="rgb(226,102,5)" fg:x="1411" fg:w="19"/><text x="17.2418%" y="1295.50"></text></g><g><title>&lt;wasmer_vm::instance::ImportFunctionEnv as core::ops::drop::Drop&gt;::drop (19 samples, 0.23%)</title><rect x="16.9918%" y="1269" width="0.2288%" height="15" fill="rgb(223,34,3)" fg:x="1411" fg:w="19"/><text x="17.2418%" y="1279.50"></text></g><g><title>mi_free (12 samples, 0.14%)</title><rect x="17.0761%" y="1253" width="0.1445%" height="15" fill="rgb(221,81,38)" fg:x="1418" fg:w="12"/><text x="17.3261%" y="1263.50"></text></g><g><title>mi_check_is_double_free (4 samples, 0.05%)</title><rect x="17.1724%" y="1237" width="0.0482%" height="15" fill="rgb(236,219,28)" fg:x="1426" fg:w="4"/><text x="17.4224%" y="1247.50"></text></g><g><title>mi_block_nextx (4 samples, 0.05%)</title><rect x="17.1724%" y="1221" width="0.0482%" height="15" fill="rgb(213,200,14)" fg:x="1426" fg:w="4"/><text x="17.4224%" y="1231.50"></text></g><g><title>mi_ptr_decode (4 samples, 0.05%)</title><rect x="17.1724%" y="1205" width="0.0482%" height="15" fill="rgb(240,33,19)" fg:x="1426" fg:w="4"/><text x="17.4224%" y="1215.50"></text></g><g><title>mi_rotr (1 samples, 0.01%)</title><rect x="17.2086%" y="1189" width="0.0120%" height="15" fill="rgb(233,113,27)" fg:x="1429" fg:w="1"/><text x="17.4586%" y="1199.50"></text></g><g><title>&lt;wasmer_vm::instance::ref::InstanceInner as core::ops::drop::Drop&gt;::drop (44 samples, 0.53%)</title><rect x="16.9677%" y="1381" width="0.5299%" height="15" fill="rgb(220,221,18)" fg:x="1409" fg:w="44"/><text x="17.2177%" y="1391.50"></text></g><g><title>wasmer_vm::instance::ref::InstanceInner::deallocate_instance (44 samples, 0.53%)</title><rect x="16.9677%" y="1365" width="0.5299%" height="15" fill="rgb(238,92,8)" fg:x="1409" fg:w="44"/><text x="17.2177%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_vm::instance::Instance&gt; (44 samples, 0.53%)</title><rect x="16.9677%" y="1349" width="0.5299%" height="15" fill="rgb(222,164,16)" fg:x="1409" fg:w="44"/><text x="17.2177%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_types::entity::boxed_slice::BoxedSlice&lt;wasmer_types::indexes::LocalMemoryIndex,alloc::sync::Arc&lt;dyn wasmer_vm::memory::Memory&gt;&gt;&gt; (23 samples, 0.28%)</title><rect x="17.2206%" y="1333" width="0.2770%" height="15" fill="rgb(241,119,3)" fg:x="1430" fg:w="23"/><text x="17.4706%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[alloc::sync::Arc&lt;dyn wasmer_vm::memory::Memory&gt;]&gt;&gt; (23 samples, 0.28%)</title><rect x="17.2206%" y="1317" width="0.2770%" height="15" fill="rgb(241,44,8)" fg:x="1430" fg:w="23"/><text x="17.4706%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;dyn wasmer_vm::memory::Memory&gt;]&gt; (22 samples, 0.26%)</title><rect x="17.2327%" y="1301" width="0.2649%" height="15" fill="rgb(230,36,40)" fg:x="1431" fg:w="22"/><text x="17.4827%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn wasmer_vm::memory::Memory&gt;&gt; (22 samples, 0.26%)</title><rect x="17.2327%" y="1285" width="0.2649%" height="15" fill="rgb(243,16,36)" fg:x="1431" fg:w="22"/><text x="17.4827%" y="1295.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.26%)</title><rect x="17.2327%" y="1269" width="0.2649%" height="15" fill="rgb(231,4,26)" fg:x="1431" fg:w="22"/><text x="17.4827%" y="1279.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (22 samples, 0.26%)</title><rect x="17.2327%" y="1253" width="0.2649%" height="15" fill="rgb(240,9,31)" fg:x="1431" fg:w="22"/><text x="17.4827%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;dyn wasmer_vm::table::Table&gt; (22 samples, 0.26%)</title><rect x="17.2327%" y="1237" width="0.2649%" height="15" fill="rgb(207,173,15)" fg:x="1431" fg:w="22"/><text x="17.4827%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_vm::memory::LinearMemory&gt; (22 samples, 0.26%)</title><rect x="17.2327%" y="1221" width="0.2649%" height="15" fill="rgb(224,192,53)" fg:x="1431" fg:w="22"/><text x="17.4827%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::Mutex&lt;wasmer_vm::memory::WasmMmap&gt;&gt; (21 samples, 0.25%)</title><rect x="17.2447%" y="1205" width="0.2529%" height="15" fill="rgb(223,67,28)" fg:x="1432" fg:w="21"/><text x="17.4947%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;wasmer_vm::memory::WasmMmap&gt;&gt; (21 samples, 0.25%)</title><rect x="17.2447%" y="1189" width="0.2529%" height="15" fill="rgb(211,20,47)" fg:x="1432" fg:w="21"/><text x="17.4947%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_vm::memory::WasmMmap&gt; (21 samples, 0.25%)</title><rect x="17.2447%" y="1173" width="0.2529%" height="15" fill="rgb(240,228,2)" fg:x="1432" fg:w="21"/><text x="17.4947%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_vm::mmap::Mmap&gt; (21 samples, 0.25%)</title><rect x="17.2447%" y="1157" width="0.2529%" height="15" fill="rgb(248,151,12)" fg:x="1432" fg:w="21"/><text x="17.4947%" y="1167.50"></text></g><g><title>&lt;wasmer_vm::mmap::Mmap as core::ops::drop::Drop&gt;::drop (21 samples, 0.25%)</title><rect x="17.2447%" y="1141" width="0.2529%" height="15" fill="rgb(244,8,39)" fg:x="1432" fg:w="21"/><text x="17.4947%" y="1151.50"></text></g><g><title>__GI___munmap (21 samples, 0.25%)</title><rect x="17.2447%" y="1125" width="0.2529%" height="15" fill="rgb(222,26,8)" fg:x="1432" fg:w="21"/><text x="17.4947%" y="1135.50"></text></g><g><title>[unknown] (21 samples, 0.25%)</title><rect x="17.2447%" y="1109" width="0.2529%" height="15" fill="rgb(213,106,44)" fg:x="1432" fg:w="21"/><text x="17.4947%" y="1119.50"></text></g><g><title>[unknown] (21 samples, 0.25%)</title><rect x="17.2447%" y="1093" width="0.2529%" height="15" fill="rgb(214,129,20)" fg:x="1432" fg:w="21"/><text x="17.4947%" y="1103.50"></text></g><g><title>[unknown] (21 samples, 0.25%)</title><rect x="17.2447%" y="1077" width="0.2529%" height="15" fill="rgb(212,32,13)" fg:x="1432" fg:w="21"/><text x="17.4947%" y="1087.50"></text></g><g><title>[unknown] (21 samples, 0.25%)</title><rect x="17.2447%" y="1061" width="0.2529%" height="15" fill="rgb(208,168,33)" fg:x="1432" fg:w="21"/><text x="17.4947%" y="1071.50"></text></g><g><title>[unknown] (19 samples, 0.23%)</title><rect x="17.2688%" y="1045" width="0.2288%" height="15" fill="rgb(231,207,8)" fg:x="1434" fg:w="19"/><text x="17.5188%" y="1055.50"></text></g><g><title>[unknown] (18 samples, 0.22%)</title><rect x="17.2808%" y="1029" width="0.2168%" height="15" fill="rgb(235,219,23)" fg:x="1435" fg:w="18"/><text x="17.5308%" y="1039.50"></text></g><g><title>[unknown] (8 samples, 0.10%)</title><rect x="17.4013%" y="1013" width="0.0963%" height="15" fill="rgb(226,216,26)" fg:x="1445" fg:w="8"/><text x="17.6513%" y="1023.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="17.4133%" y="997" width="0.0843%" height="15" fill="rgb(239,137,16)" fg:x="1446" fg:w="7"/><text x="17.6633%" y="1007.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="17.4253%" y="981" width="0.0723%" height="15" fill="rgb(207,12,36)" fg:x="1447" fg:w="6"/><text x="17.6753%" y="991.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="17.4253%" y="965" width="0.0723%" height="15" fill="rgb(210,214,24)" fg:x="1447" fg:w="6"/><text x="17.6753%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="17.4855%" y="949" width="0.0120%" height="15" fill="rgb(206,56,30)" fg:x="1452" fg:w="1"/><text x="17.7355%" y="959.50"></text></g><g><title>_mi_page_retire (1 samples, 0.01%)</title><rect x="17.4976%" y="1381" width="0.0120%" height="15" fill="rgb(228,143,26)" fg:x="1453" fg:w="1"/><text x="17.7476%" y="1391.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (47 samples, 0.57%)</title><rect x="16.9557%" y="1413" width="0.5660%" height="15" fill="rgb(216,218,46)" fg:x="1408" fg:w="47"/><text x="17.2057%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_vm::instance::ref::InstanceInner&gt; (46 samples, 0.55%)</title><rect x="16.9677%" y="1397" width="0.5539%" height="15" fill="rgb(206,6,19)" fg:x="1409" fg:w="46"/><text x="17.2177%" y="1407.50"></text></g><g><title>mi_free (1 samples, 0.01%)</title><rect x="17.5096%" y="1381" width="0.0120%" height="15" fill="rgb(239,177,51)" fg:x="1454" fg:w="1"/><text x="17.7596%" y="1391.50"></text></g><g><title>_mi_thread_id (1 samples, 0.01%)</title><rect x="17.5096%" y="1365" width="0.0120%" height="15" fill="rgb(216,55,25)" fg:x="1454" fg:w="1"/><text x="17.7596%" y="1375.50"></text></g><g><title>mi_tls_slot (1 samples, 0.01%)</title><rect x="17.5096%" y="1349" width="0.0120%" height="15" fill="rgb(231,163,29)" fg:x="1454" fg:w="1"/><text x="17.7596%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.01%)</title><rect x="17.5217%" y="1413" width="0.0120%" height="15" fill="rgb(232,149,50)" fg:x="1455" fg:w="1"/><text x="17.7717%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.01%)</title><rect x="17.5217%" y="1397" width="0.0120%" height="15" fill="rgb(223,142,48)" fg:x="1455" fg:w="1"/><text x="17.7717%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.01%)</title><rect x="17.5217%" y="1381" width="0.0120%" height="15" fill="rgb(245,83,23)" fg:x="1455" fg:w="1"/><text x="17.7717%" y="1391.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="17.5217%" y="1365" width="0.0120%" height="15" fill="rgb(224,63,2)" fg:x="1455" fg:w="1"/><text x="17.7717%" y="1375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="17.5217%" y="1349" width="0.0120%" height="15" fill="rgb(218,65,53)" fg:x="1455" fg:w="1"/><text x="17.7717%" y="1359.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="17.5217%" y="1333" width="0.0120%" height="15" fill="rgb(221,84,29)" fg:x="1455" fg:w="1"/><text x="17.7717%" y="1343.50"></text></g><g><title>mi_free (1 samples, 0.01%)</title><rect x="17.5217%" y="1317" width="0.0120%" height="15" fill="rgb(234,0,32)" fg:x="1455" fg:w="1"/><text x="17.7717%" y="1327.50"></text></g><g><title>mi_check_is_double_free (1 samples, 0.01%)</title><rect x="17.5217%" y="1301" width="0.0120%" height="15" fill="rgb(206,20,16)" fg:x="1455" fg:w="1"/><text x="17.7717%" y="1311.50"></text></g><g><title>mi_block_nextx (1 samples, 0.01%)</title><rect x="17.5217%" y="1285" width="0.0120%" height="15" fill="rgb(244,172,18)" fg:x="1455" fg:w="1"/><text x="17.7717%" y="1295.50"></text></g><g><title>mi_ptr_decode (1 samples, 0.01%)</title><rect x="17.5217%" y="1269" width="0.0120%" height="15" fill="rgb(254,133,1)" fg:x="1455" fg:w="1"/><text x="17.7717%" y="1279.50"></text></g><g><title>mi_rotr (1 samples, 0.01%)</title><rect x="17.5217%" y="1253" width="0.0120%" height="15" fill="rgb(222,206,41)" fg:x="1455" fg:w="1"/><text x="17.7717%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer::sys::externals::function::Function&gt; (2 samples, 0.02%)</title><rect x="17.5698%" y="1397" width="0.0241%" height="15" fill="rgb(212,3,42)" fg:x="1459" fg:w="2"/><text x="17.8198%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer::sys::store::Store&gt; (2 samples, 0.02%)</title><rect x="17.5698%" y="1381" width="0.0241%" height="15" fill="rgb(241,11,4)" fg:x="1459" fg:w="2"/><text x="17.8198%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn wasmer_engine::engine::Engine+core::marker::Sync+core::marker::Send&gt;&gt; (2 samples, 0.02%)</title><rect x="17.5698%" y="1365" width="0.0241%" height="15" fill="rgb(205,19,26)" fg:x="1459" fg:w="2"/><text x="17.8198%" y="1375.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="17.5698%" y="1349" width="0.0241%" height="15" fill="rgb(210,179,32)" fg:x="1459" fg:w="2"/><text x="17.8198%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer::sys::externals::Extern&gt; (6 samples, 0.07%)</title><rect x="17.5337%" y="1413" width="0.0723%" height="15" fill="rgb(227,116,49)" fg:x="1456" fg:w="6"/><text x="17.7837%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer::sys::externals::table::Table&gt; (1 samples, 0.01%)</title><rect x="17.5939%" y="1397" width="0.0120%" height="15" fill="rgb(211,146,6)" fg:x="1461" fg:w="1"/><text x="17.8439%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_vm::export::VMTable&gt; (1 samples, 0.01%)</title><rect x="17.5939%" y="1381" width="0.0120%" height="15" fill="rgb(219,44,39)" fg:x="1461" fg:w="1"/><text x="17.8439%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn wasmer_vm::table::Table&gt;&gt; (1 samples, 0.01%)</title><rect x="17.5939%" y="1365" width="0.0120%" height="15" fill="rgb(234,128,11)" fg:x="1461" fg:w="1"/><text x="17.8439%" y="1375.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="17.5939%" y="1349" width="0.0120%" height="15" fill="rgb(220,183,53)" fg:x="1461" fg:w="1"/><text x="17.8439%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (55 samples, 0.66%)</title><rect x="16.9557%" y="1461" width="0.6623%" height="15" fill="rgb(213,219,32)" fg:x="1408" fg:w="55"/><text x="17.2057%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;[indexmap::Bucket&lt;alloc::string::String,wasmer::sys::externals::Extern&gt;]&gt; (55 samples, 0.66%)</title><rect x="16.9557%" y="1445" width="0.6623%" height="15" fill="rgb(232,156,16)" fg:x="1408" fg:w="55"/><text x="17.2057%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;indexmap::Bucket&lt;alloc::string::String,wasmer::sys::externals::Extern&gt;&gt; (55 samples, 0.66%)</title><rect x="16.9557%" y="1429" width="0.6623%" height="15" fill="rgb(246,135,34)" fg:x="1408" fg:w="55"/><text x="17.2057%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_engine::export::ExportFunction&gt; (1 samples, 0.01%)</title><rect x="17.6060%" y="1413" width="0.0120%" height="15" fill="rgb(241,99,0)" fg:x="1462" fg:w="1"/><text x="17.8560%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_vm::export::VMFunction&gt; (1 samples, 0.01%)</title><rect x="17.6060%" y="1397" width="0.0120%" height="15" fill="rgb(222,103,45)" fg:x="1462" fg:w="1"/><text x="17.8560%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_types::types::FunctionType&gt; (1 samples, 0.01%)</title><rect x="17.6060%" y="1381" width="0.0120%" height="15" fill="rgb(212,57,4)" fg:x="1462" fg:w="1"/><text x="17.8560%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[wasmer_types::types::Type]&gt;&gt; (1 samples, 0.01%)</title><rect x="17.6060%" y="1365" width="0.0120%" height="15" fill="rgb(215,68,47)" fg:x="1462" fg:w="1"/><text x="17.8560%" y="1375.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.01%)</title><rect x="17.6060%" y="1349" width="0.0120%" height="15" fill="rgb(230,84,2)" fg:x="1462" fg:w="1"/><text x="17.8560%" y="1359.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="17.6060%" y="1333" width="0.0120%" height="15" fill="rgb(220,102,14)" fg:x="1462" fg:w="1"/><text x="17.8560%" y="1343.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="17.6060%" y="1317" width="0.0120%" height="15" fill="rgb(240,10,32)" fg:x="1462" fg:w="1"/><text x="17.8560%" y="1327.50"></text></g><g><title>mi_free (1 samples, 0.01%)</title><rect x="17.6060%" y="1301" width="0.0120%" height="15" fill="rgb(215,47,27)" fg:x="1462" fg:w="1"/><text x="17.8560%" y="1311.50"></text></g><g><title>mi_checked_ptr_segment (1 samples, 0.01%)</title><rect x="17.6060%" y="1285" width="0.0120%" height="15" fill="rgb(233,188,43)" fg:x="1462" fg:w="1"/><text x="17.8560%" y="1295.50"></text></g><g><title>_mi_ptr_cookie (1 samples, 0.01%)</title><rect x="17.6060%" y="1269" width="0.0120%" height="15" fill="rgb(253,190,1)" fg:x="1462" fg:w="1"/><text x="17.8560%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer::sys::exports::Exports&gt; (57 samples, 0.69%)</title><rect x="16.9557%" y="1525" width="0.6864%" height="15" fill="rgb(206,114,52)" fg:x="1408" fg:w="57"/><text x="17.2057%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;indexmap::map::IndexMap&lt;alloc::string::String,wasmer::sys::externals::Extern&gt;&gt; (57 samples, 0.69%)</title><rect x="16.9557%" y="1509" width="0.6864%" height="15" fill="rgb(233,120,37)" fg:x="1408" fg:w="57"/><text x="17.2057%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;indexmap::map::core::IndexMapCore&lt;alloc::string::String,wasmer::sys::externals::Extern&gt;&gt; (57 samples, 0.69%)</title><rect x="16.9557%" y="1493" width="0.6864%" height="15" fill="rgb(214,52,39)" fg:x="1408" fg:w="57"/><text x="17.2057%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;indexmap::Bucket&lt;alloc::string::String,wasmer::sys::externals::Extern&gt;&gt;&gt; (57 samples, 0.69%)</title><rect x="16.9557%" y="1477" width="0.6864%" height="15" fill="rgb(223,80,29)" fg:x="1408" fg:w="57"/><text x="17.2057%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;indexmap::Bucket&lt;alloc::string::String,wasmer::sys::externals::Extern&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="17.6180%" y="1461" width="0.0241%" height="15" fill="rgb(230,101,40)" fg:x="1463" fg:w="2"/><text x="17.8680%" y="1471.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="17.6180%" y="1445" width="0.0241%" height="15" fill="rgb(219,211,8)" fg:x="1463" fg:w="2"/><text x="17.8680%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.02%)</title><rect x="17.6180%" y="1429" width="0.0241%" height="15" fill="rgb(252,126,28)" fg:x="1463" fg:w="2"/><text x="17.8680%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;wasmer::sys::instance::Instance&gt;&gt; (63 samples, 0.76%)</title><rect x="16.8955%" y="1557" width="0.7587%" height="15" fill="rgb(215,56,38)" fg:x="1403" fg:w="63"/><text x="17.1455%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer::sys::instance::Instance&gt; (63 samples, 0.76%)</title><rect x="16.8955%" y="1541" width="0.7587%" height="15" fill="rgb(249,55,44)" fg:x="1403" fg:w="63"/><text x="17.1455%" y="1551.50"></text></g><g><title>mi_free (1 samples, 0.01%)</title><rect x="17.6421%" y="1525" width="0.0120%" height="15" fill="rgb(220,221,32)" fg:x="1465" fg:w="1"/><text x="17.8921%" y="1535.50"></text></g><g><title>mi_check_is_double_free (1 samples, 0.01%)</title><rect x="17.6421%" y="1509" width="0.0120%" height="15" fill="rgb(212,216,41)" fg:x="1465" fg:w="1"/><text x="17.8921%" y="1519.50"></text></g><g><title>mi_block_nextx (1 samples, 0.01%)</title><rect x="17.6421%" y="1493" width="0.0120%" height="15" fill="rgb(228,213,43)" fg:x="1465" fg:w="1"/><text x="17.8921%" y="1503.50"></text></g><g><title>mi_ptr_decode (1 samples, 0.01%)</title><rect x="17.6421%" y="1477" width="0.0120%" height="15" fill="rgb(211,31,26)" fg:x="1465" fg:w="1"/><text x="17.8921%" y="1487.50"></text></g><g><title>mi_rotr (1 samples, 0.01%)</title><rect x="17.6421%" y="1461" width="0.0120%" height="15" fill="rgb(229,202,19)" fg:x="1465" fg:w="1"/><text x="17.8921%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;wasmer::sys::native::NativeFunc&lt;(i64,i32),i64&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="17.6541%" y="1557" width="0.0120%" height="15" fill="rgb(229,105,46)" fg:x="1466" fg:w="1"/><text x="17.9041%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer::sys::native::NativeFunc&lt;(i64,i32),i64&gt;&gt; (1 samples, 0.01%)</title><rect x="17.6541%" y="1541" width="0.0120%" height="15" fill="rgb(235,108,1)" fg:x="1466" fg:w="1"/><text x="17.9041%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer::sys::store::Store&gt; (1 samples, 0.01%)</title><rect x="17.6541%" y="1525" width="0.0120%" height="15" fill="rgb(245,111,35)" fg:x="1466" fg:w="1"/><text x="17.9041%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn wasmer_engine::tunables::Tunables+core::marker::Sync+core::marker::Send&gt;&gt; (1 samples, 0.01%)</title><rect x="17.6541%" y="1509" width="0.0120%" height="15" fill="rgb(219,185,31)" fg:x="1466" fg:w="1"/><text x="17.9041%" y="1519.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="17.6541%" y="1493" width="0.0120%" height="15" fill="rgb(214,4,43)" fg:x="1466" fg:w="1"/><text x="17.9041%" y="1503.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="17.6541%" y="1477" width="0.0120%" height="15" fill="rgb(235,227,40)" fg:x="1466" fg:w="1"/><text x="17.9041%" y="1487.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="17.6541%" y="1461" width="0.0120%" height="15" fill="rgb(230,88,30)" fg:x="1466" fg:w="1"/><text x="17.9041%" y="1471.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.01%)</title><rect x="17.6662%" y="1541" width="0.0120%" height="15" fill="rgb(216,217,1)" fg:x="1467" fg:w="1"/><text x="17.9162%" y="1551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="17.6662%" y="1525" width="0.0120%" height="15" fill="rgb(248,139,50)" fg:x="1467" fg:w="1"/><text x="17.9162%" y="1535.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="17.6662%" y="1509" width="0.0120%" height="15" fill="rgb(233,1,21)" fg:x="1467" fg:w="1"/><text x="17.9162%" y="1519.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="17.6662%" y="1493" width="0.0120%" height="15" fill="rgb(215,183,12)" fg:x="1467" fg:w="1"/><text x="17.9162%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer::sys::store::Store&gt; (1 samples, 0.01%)</title><rect x="17.6782%" y="1525" width="0.0120%" height="15" fill="rgb(229,104,42)" fg:x="1468" fg:w="1"/><text x="17.9282%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn wasmer_engine::tunables::Tunables+core::marker::Sync+core::marker::Send&gt;&gt; (1 samples, 0.01%)</title><rect x="17.6782%" y="1509" width="0.0120%" height="15" fill="rgb(243,34,48)" fg:x="1468" fg:w="1"/><text x="17.9282%" y="1519.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="17.6782%" y="1493" width="0.0120%" height="15" fill="rgb(239,11,44)" fg:x="1468" fg:w="1"/><text x="17.9282%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;wasmer::sys::native::NativeFunc&lt;(i64,i32)&gt;&gt;&gt; (3 samples, 0.04%)</title><rect x="17.6662%" y="1557" width="0.0361%" height="15" fill="rgb(231,98,35)" fg:x="1467" fg:w="3"/><text x="17.9162%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer::sys::native::NativeFunc&lt;(i64,i32)&gt;&gt; (2 samples, 0.02%)</title><rect x="17.6782%" y="1541" width="0.0241%" height="15" fill="rgb(233,28,25)" fg:x="1468" fg:w="2"/><text x="17.9282%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_engine::export::ExportFunction&gt; (1 samples, 0.01%)</title><rect x="17.6903%" y="1525" width="0.0120%" height="15" fill="rgb(234,123,11)" fg:x="1469" fg:w="1"/><text x="17.9403%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_vm::export::VMFunction&gt; (1 samples, 0.01%)</title><rect x="17.6903%" y="1509" width="0.0120%" height="15" fill="rgb(220,69,3)" fg:x="1469" fg:w="1"/><text x="17.9403%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_types::types::FunctionType&gt; (1 samples, 0.01%)</title><rect x="17.6903%" y="1493" width="0.0120%" height="15" fill="rgb(214,64,36)" fg:x="1469" fg:w="1"/><text x="17.9403%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[wasmer_types::types::Type]&gt;&gt; (1 samples, 0.01%)</title><rect x="17.6903%" y="1477" width="0.0120%" height="15" fill="rgb(211,138,32)" fg:x="1469" fg:w="1"/><text x="17.9403%" y="1487.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.01%)</title><rect x="17.6903%" y="1461" width="0.0120%" height="15" fill="rgb(213,118,47)" fg:x="1469" fg:w="1"/><text x="17.9403%" y="1471.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="17.6903%" y="1445" width="0.0120%" height="15" fill="rgb(243,124,49)" fg:x="1469" fg:w="1"/><text x="17.9403%" y="1455.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="17.6903%" y="1429" width="0.0120%" height="15" fill="rgb(221,30,28)" fg:x="1469" fg:w="1"/><text x="17.9403%" y="1439.50"></text></g><g><title>mi_free (1 samples, 0.01%)</title><rect x="17.6903%" y="1413" width="0.0120%" height="15" fill="rgb(246,37,13)" fg:x="1469" fg:w="1"/><text x="17.9403%" y="1423.50"></text></g><g><title>mi_check_is_double_free (1 samples, 0.01%)</title><rect x="17.6903%" y="1397" width="0.0120%" height="15" fill="rgb(249,66,14)" fg:x="1469" fg:w="1"/><text x="17.9403%" y="1407.50"></text></g><g><title>mi_block_nextx (1 samples, 0.01%)</title><rect x="17.6903%" y="1381" width="0.0120%" height="15" fill="rgb(213,166,5)" fg:x="1469" fg:w="1"/><text x="17.9403%" y="1391.50"></text></g><g><title>mi_ptr_decode (1 samples, 0.01%)</title><rect x="17.6903%" y="1365" width="0.0120%" height="15" fill="rgb(221,66,24)" fg:x="1469" fg:w="1"/><text x="17.9403%" y="1375.50"></text></g><g><title>alloc::alloc::box_free (2 samples, 0.02%)</title><rect x="17.7023%" y="1541" width="0.0241%" height="15" fill="rgb(210,132,17)" fg:x="1470" fg:w="2"/><text x="17.9523%" y="1551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="17.7023%" y="1525" width="0.0241%" height="15" fill="rgb(243,202,5)" fg:x="1470" fg:w="2"/><text x="17.9523%" y="1535.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="17.7023%" y="1509" width="0.0241%" height="15" fill="rgb(233,70,48)" fg:x="1470" fg:w="2"/><text x="17.9523%" y="1519.50"></text></g><g><title>mi_free (2 samples, 0.02%)</title><rect x="17.7023%" y="1493" width="0.0241%" height="15" fill="rgb(238,41,26)" fg:x="1470" fg:w="2"/><text x="17.9523%" y="1503.50"></text></g><g><title>_mi_thread_id (1 samples, 0.01%)</title><rect x="17.7144%" y="1477" width="0.0120%" height="15" fill="rgb(241,19,31)" fg:x="1471" fg:w="1"/><text x="17.9644%" y="1487.50"></text></g><g><title>mi_tls_slot (1 samples, 0.01%)</title><rect x="17.7144%" y="1461" width="0.0120%" height="15" fill="rgb(214,76,10)" fg:x="1471" fg:w="1"/><text x="17.9644%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;wasmer::sys::native::NativeFunc&lt;i64&gt;&gt;&gt; (3 samples, 0.04%)</title><rect x="17.7023%" y="1557" width="0.0361%" height="15" fill="rgb(254,202,22)" fg:x="1470" fg:w="3"/><text x="17.9523%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer::sys::native::NativeFunc&lt;i64&gt;&gt; (1 samples, 0.01%)</title><rect x="17.7264%" y="1541" width="0.0120%" height="15" fill="rgb(214,72,24)" fg:x="1472" fg:w="1"/><text x="17.9764%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer::sys::store::Store&gt; (1 samples, 0.01%)</title><rect x="17.7264%" y="1525" width="0.0120%" height="15" fill="rgb(221,92,46)" fg:x="1472" fg:w="1"/><text x="17.9764%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;core::option::Option&lt;alloc::boxed::Box&lt;dyn core::ops::function::Fn&lt;(i32,*const libc::unix::linux_like::linux::gnu::b64::x86_64::siginfo_t,*const core::ffi::c_void)&gt;+Output = bool&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="17.7264%" y="1509" width="0.0120%" height="15" fill="rgb(246,13,50)" fg:x="1472" fg:w="1"/><text x="17.9764%" y="1519.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="17.7264%" y="1493" width="0.0120%" height="15" fill="rgb(240,165,38)" fg:x="1472" fg:w="1"/><text x="17.9764%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;vm_library::env::Context&gt; (1 samples, 0.01%)</title><rect x="17.7384%" y="1557" width="0.0120%" height="15" fill="rgb(241,24,51)" fg:x="1473" fg:w="1"/><text x="17.9884%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;vm_library::env::Inner&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="17.7384%" y="1541" width="0.0120%" height="15" fill="rgb(227,51,44)" fg:x="1473" fg:w="1"/><text x="17.9884%" y="1551.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="17.7384%" y="1525" width="0.0120%" height="15" fill="rgb(231,121,3)" fg:x="1473" fg:w="1"/><text x="17.9884%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="17.7384%" y="1509" width="0.0120%" height="15" fill="rgb(245,3,41)" fg:x="1473" fg:w="1"/><text x="17.9884%" y="1519.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="17.7384%" y="1493" width="0.0120%" height="15" fill="rgb(214,13,26)" fg:x="1473" fg:w="1"/><text x="17.9884%" y="1503.50"></text></g><g><title>core::mem::drop (2 samples, 0.02%)</title><rect x="17.7746%" y="1189" width="0.0241%" height="15" fill="rgb(252,75,11)" fg:x="1476" fg:w="2"/><text x="18.0246%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;wasmer_engine::export::ExportFunctionMetadata&gt;&gt; (2 samples, 0.02%)</title><rect x="17.7746%" y="1173" width="0.0241%" height="15" fill="rgb(218,226,17)" fg:x="1476" fg:w="2"/><text x="18.0246%" y="1183.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="17.7746%" y="1157" width="0.0241%" height="15" fill="rgb(248,89,38)" fg:x="1476" fg:w="2"/><text x="18.0246%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="17.7866%" y="1141" width="0.0120%" height="15" fill="rgb(237,73,46)" fg:x="1477" fg:w="1"/><text x="18.0366%" y="1151.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="17.7866%" y="1125" width="0.0120%" height="15" fill="rgb(242,78,33)" fg:x="1477" fg:w="1"/><text x="18.0366%" y="1135.50"></text></g><g><title>&lt;wasmer_engine::export::ExportFunctionMetadata as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="17.7987%" y="1173" width="0.0241%" height="15" fill="rgb(235,60,3)" fg:x="1478" fg:w="2"/><text x="18.0487%" y="1183.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.01%)</title><rect x="17.8227%" y="1125" width="0.0120%" height="15" fill="rgb(216,172,19)" fg:x="1480" fg:w="1"/><text x="18.0727%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="17.8227%" y="1109" width="0.0120%" height="15" fill="rgb(227,6,42)" fg:x="1480" fg:w="1"/><text x="18.0727%" y="1119.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="17.8227%" y="1093" width="0.0120%" height="15" fill="rgb(223,207,42)" fg:x="1480" fg:w="1"/><text x="18.0727%" y="1103.50"></text></g><g><title>core::ops::function::FnOnce::call_once (7 samples, 0.08%)</title><rect x="17.8227%" y="1173" width="0.0843%" height="15" fill="rgb(246,138,30)" fg:x="1480" fg:w="7"/><text x="18.0727%" y="1183.50"></text></g><g><title>wasmer::sys::externals::function::build_export_function_metadata::{{closure}} (7 samples, 0.08%)</title><rect x="17.8227%" y="1157" width="0.0843%" height="15" fill="rgb(251,199,47)" fg:x="1480" fg:w="7"/><text x="18.0727%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;vm_library::env::Context&gt;&gt; (7 samples, 0.08%)</title><rect x="17.8227%" y="1141" width="0.0843%" height="15" fill="rgb(228,218,44)" fg:x="1480" fg:w="7"/><text x="18.0727%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;vm_library::env::Context&gt; (6 samples, 0.07%)</title><rect x="17.8348%" y="1125" width="0.0723%" height="15" fill="rgb(220,68,6)" fg:x="1481" fg:w="6"/><text x="18.0848%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;vm_library::ticket_table::TicketTable&gt;&gt;&gt; (6 samples, 0.07%)</title><rect x="17.8348%" y="1109" width="0.0723%" height="15" fill="rgb(240,60,26)" fg:x="1481" fg:w="6"/><text x="18.0848%" y="1119.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.07%)</title><rect x="17.8348%" y="1093" width="0.0723%" height="15" fill="rgb(211,200,19)" fg:x="1481" fg:w="6"/><text x="18.0848%" y="1103.50"></text></g><g><title>alloc::rc::RcInnerPtr::dec_strong (2 samples, 0.02%)</title><rect x="17.8829%" y="1077" width="0.0241%" height="15" fill="rgb(242,145,30)" fg:x="1485" fg:w="2"/><text x="18.1329%" y="1087.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.02%)</title><rect x="17.8829%" y="1061" width="0.0241%" height="15" fill="rgb(225,64,13)" fg:x="1485" fg:w="2"/><text x="18.1329%" y="1071.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.02%)</title><rect x="17.8829%" y="1045" width="0.0241%" height="15" fill="rgb(218,103,35)" fg:x="1485" fg:w="2"/><text x="18.1329%" y="1055.50"></text></g><g><title>core::mem::replace (2 samples, 0.02%)</title><rect x="17.8829%" y="1029" width="0.0241%" height="15" fill="rgb(216,93,46)" fg:x="1485" fg:w="2"/><text x="18.1329%" y="1039.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="17.8829%" y="1013" width="0.0241%" height="15" fill="rgb(225,159,27)" fg:x="1485" fg:w="2"/><text x="18.1329%" y="1023.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (17 samples, 0.20%)</title><rect x="17.7746%" y="1205" width="0.2047%" height="15" fill="rgb(225,204,11)" fg:x="1476" fg:w="17"/><text x="18.0246%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_engine::export::ExportFunctionMetadata&gt; (15 samples, 0.18%)</title><rect x="17.7987%" y="1189" width="0.1806%" height="15" fill="rgb(205,56,4)" fg:x="1478" fg:w="15"/><text x="18.0487%" y="1199.50"></text></g><g><title>mi_free (6 samples, 0.07%)</title><rect x="17.9070%" y="1173" width="0.0723%" height="15" fill="rgb(206,6,35)" fg:x="1487" fg:w="6"/><text x="18.1570%" y="1183.50"></text></g><g><title>mi_check_is_double_free (2 samples, 0.02%)</title><rect x="17.9552%" y="1157" width="0.0241%" height="15" fill="rgb(247,73,52)" fg:x="1491" fg:w="2"/><text x="18.2052%" y="1167.50"></text></g><g><title>mi_block_nextx (2 samples, 0.02%)</title><rect x="17.9552%" y="1141" width="0.0241%" height="15" fill="rgb(246,97,4)" fg:x="1491" fg:w="2"/><text x="18.2052%" y="1151.50"></text></g><g><title>mi_ptr_decode (2 samples, 0.02%)</title><rect x="17.9552%" y="1125" width="0.0241%" height="15" fill="rgb(212,37,15)" fg:x="1491" fg:w="2"/><text x="18.2052%" y="1135.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="17.9793%" y="1109" width="0.0120%" height="15" fill="rgb(208,130,40)" fg:x="1493" fg:w="1"/><text x="18.2293%" y="1119.50"></text></g><g><title>_mi_thread_id (1 samples, 0.01%)</title><rect x="17.9913%" y="1093" width="0.0120%" height="15" fill="rgb(236,55,29)" fg:x="1494" fg:w="1"/><text x="18.2413%" y="1103.50"></text></g><g><title>mi_tls_slot (1 samples, 0.01%)</title><rect x="17.9913%" y="1077" width="0.0120%" height="15" fill="rgb(209,156,45)" fg:x="1494" fg:w="1"/><text x="18.2413%" y="1087.50"></text></g><g><title>mi_block_set_next (2 samples, 0.02%)</title><rect x="18.0034%" y="1093" width="0.0241%" height="15" fill="rgb(249,107,4)" fg:x="1495" fg:w="2"/><text x="18.2534%" y="1103.50"></text></g><g><title>mi_block_set_nextx (2 samples, 0.02%)</title><rect x="18.0034%" y="1077" width="0.0241%" height="15" fill="rgb(227,7,13)" fg:x="1495" fg:w="2"/><text x="18.2534%" y="1087.50"></text></g><g><title>mi_ptr_encode (2 samples, 0.02%)</title><rect x="18.0034%" y="1061" width="0.0241%" height="15" fill="rgb(250,129,14)" fg:x="1495" fg:w="2"/><text x="18.2534%" y="1071.50"></text></g><g><title>mi_check_is_double_free (1 samples, 0.01%)</title><rect x="18.0275%" y="1093" width="0.0120%" height="15" fill="rgb(229,92,13)" fg:x="1497" fg:w="1"/><text x="18.2775%" y="1103.50"></text></g><g><title>mi_block_nextx (1 samples, 0.01%)</title><rect x="18.0275%" y="1077" width="0.0120%" height="15" fill="rgb(245,98,39)" fg:x="1497" fg:w="1"/><text x="18.2775%" y="1087.50"></text></g><g><title>mi_ptr_decode (1 samples, 0.01%)</title><rect x="18.0275%" y="1061" width="0.0120%" height="15" fill="rgb(234,135,48)" fg:x="1497" fg:w="1"/><text x="18.2775%" y="1071.50"></text></g><g><title>mi_rotr (1 samples, 0.01%)</title><rect x="18.0275%" y="1045" width="0.0120%" height="15" fill="rgb(230,98,28)" fg:x="1497" fg:w="1"/><text x="18.2775%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (7 samples, 0.08%)</title><rect x="17.9793%" y="1205" width="0.0843%" height="15" fill="rgb(223,121,0)" fg:x="1493" fg:w="7"/><text x="18.2293%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (7 samples, 0.08%)</title><rect x="17.9793%" y="1189" width="0.0843%" height="15" fill="rgb(234,173,33)" fg:x="1493" fg:w="7"/><text x="18.2293%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (7 samples, 0.08%)</title><rect x="17.9793%" y="1173" width="0.0843%" height="15" fill="rgb(245,47,8)" fg:x="1493" fg:w="7"/><text x="18.2293%" y="1183.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.08%)</title><rect x="17.9793%" y="1157" width="0.0843%" height="15" fill="rgb(205,17,20)" fg:x="1493" fg:w="7"/><text x="18.2293%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.08%)</title><rect x="17.9793%" y="1141" width="0.0843%" height="15" fill="rgb(232,151,16)" fg:x="1493" fg:w="7"/><text x="18.2293%" y="1151.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.08%)</title><rect x="17.9793%" y="1125" width="0.0843%" height="15" fill="rgb(208,30,32)" fg:x="1493" fg:w="7"/><text x="18.2293%" y="1135.50"></text></g><g><title>mi_free (6 samples, 0.07%)</title><rect x="17.9913%" y="1109" width="0.0723%" height="15" fill="rgb(254,26,3)" fg:x="1494" fg:w="6"/><text x="18.2413%" y="1119.50"></text></g><g><title>mi_checked_ptr_segment (2 samples, 0.02%)</title><rect x="18.0395%" y="1093" width="0.0241%" height="15" fill="rgb(240,177,30)" fg:x="1498" fg:w="2"/><text x="18.2895%" y="1103.50"></text></g><g><title>_mi_ptr_segment (1 samples, 0.01%)</title><rect x="18.0515%" y="1077" width="0.0120%" height="15" fill="rgb(248,76,44)" fg:x="1499" fg:w="1"/><text x="18.3015%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn wasmer_engine::engine::Engine+core::marker::Sync+core::marker::Send&gt;&gt; (1 samples, 0.01%)</title><rect x="18.1118%" y="1157" width="0.0120%" height="15" fill="rgb(241,186,54)" fg:x="1504" fg:w="1"/><text x="18.3618%" y="1167.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="18.1118%" y="1141" width="0.0120%" height="15" fill="rgb(249,171,29)" fg:x="1504" fg:w="1"/><text x="18.3618%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn wasmer_engine::tunables::Tunables+core::marker::Sync+core::marker::Send&gt;&gt; (6 samples, 0.07%)</title><rect x="18.1238%" y="1157" width="0.0723%" height="15" fill="rgb(237,151,44)" fg:x="1505" fg:w="6"/><text x="18.3738%" y="1167.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.07%)</title><rect x="18.1238%" y="1141" width="0.0723%" height="15" fill="rgb(228,174,30)" fg:x="1505" fg:w="6"/><text x="18.3738%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer::sys::externals::Extern&gt; (16 samples, 0.19%)</title><rect x="18.0636%" y="1205" width="0.1927%" height="15" fill="rgb(252,14,37)" fg:x="1500" fg:w="16"/><text x="18.3136%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer::sys::externals::function::Function&gt; (15 samples, 0.18%)</title><rect x="18.0756%" y="1189" width="0.1806%" height="15" fill="rgb(207,111,40)" fg:x="1501" fg:w="15"/><text x="18.3256%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer::sys::store::Store&gt; (13 samples, 0.16%)</title><rect x="18.0997%" y="1173" width="0.1566%" height="15" fill="rgb(248,171,54)" fg:x="1503" fg:w="13"/><text x="18.3497%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;core::option::Option&lt;alloc::boxed::Box&lt;dyn core::ops::function::Fn&lt;(i32,*const libc::unix::linux_like::linux::gnu::b64::x86_64::siginfo_t,*const core::ffi::c_void)&gt;+Output = bool&gt;&gt;&gt;&gt;&gt; (5 samples, 0.06%)</title><rect x="18.1961%" y="1157" width="0.0602%" height="15" fill="rgb(211,127,2)" fg:x="1511" fg:w="5"/><text x="18.4461%" y="1167.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.06%)</title><rect x="18.1961%" y="1141" width="0.0602%" height="15" fill="rgb(236,87,47)" fg:x="1511" fg:w="5"/><text x="18.4461%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;wasmer_engine::export::ExportFunctionMetadata&gt;&gt;&gt; (5 samples, 0.06%)</title><rect x="18.2563%" y="1189" width="0.0602%" height="15" fill="rgb(223,190,45)" fg:x="1516" fg:w="5"/><text x="18.5063%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;wasmer_engine::export::ExportFunctionMetadata&gt;&gt; (5 samples, 0.06%)</title><rect x="18.2563%" y="1173" width="0.0602%" height="15" fill="rgb(215,5,16)" fg:x="1516" fg:w="5"/><text x="18.5063%" y="1183.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.06%)</title><rect x="18.2563%" y="1157" width="0.0602%" height="15" fill="rgb(252,82,33)" fg:x="1516" fg:w="5"/><text x="18.5063%" y="1167.50"></text></g><g><title>__rg_dealloc (1 samples, 0.01%)</title><rect x="18.3285%" y="1093" width="0.0120%" height="15" fill="rgb(247,213,44)" fg:x="1522" fg:w="1"/><text x="18.5785%" y="1103.50"></text></g><g><title>&lt;mimalloc::MiMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.01%)</title><rect x="18.3285%" y="1077" width="0.0120%" height="15" fill="rgb(205,196,44)" fg:x="1522" fg:w="1"/><text x="18.5785%" y="1087.50"></text></g><g><title>__rust_dealloc (4 samples, 0.05%)</title><rect x="18.3406%" y="1093" width="0.0482%" height="15" fill="rgb(237,96,54)" fg:x="1523" fg:w="4"/><text x="18.5906%" y="1103.50"></text></g><g><title>_mi_segment_page_of (2 samples, 0.02%)</title><rect x="18.4249%" y="1077" width="0.0241%" height="15" fill="rgb(230,113,34)" fg:x="1530" fg:w="2"/><text x="18.6749%" y="1087.50"></text></g><g><title>mi_slice_first (2 samples, 0.02%)</title><rect x="18.4249%" y="1061" width="0.0241%" height="15" fill="rgb(221,224,12)" fg:x="1530" fg:w="2"/><text x="18.6749%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_engine::export::ExportFunction&gt; (21 samples, 0.25%)</title><rect x="18.2563%" y="1205" width="0.2529%" height="15" fill="rgb(219,112,44)" fg:x="1516" fg:w="21"/><text x="18.5063%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_vm::export::VMFunction&gt; (16 samples, 0.19%)</title><rect x="18.3165%" y="1189" width="0.1927%" height="15" fill="rgb(210,31,13)" fg:x="1521" fg:w="16"/><text x="18.5665%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_types::types::FunctionType&gt; (16 samples, 0.19%)</title><rect x="18.3165%" y="1173" width="0.1927%" height="15" fill="rgb(230,25,16)" fg:x="1521" fg:w="16"/><text x="18.5665%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[wasmer_types::types::Type]&gt;&gt; (16 samples, 0.19%)</title><rect x="18.3165%" y="1157" width="0.1927%" height="15" fill="rgb(246,108,53)" fg:x="1521" fg:w="16"/><text x="18.5665%" y="1167.50"></text></g><g><title>alloc::alloc::box_free (16 samples, 0.19%)</title><rect x="18.3165%" y="1141" width="0.1927%" height="15" fill="rgb(241,172,50)" fg:x="1521" fg:w="16"/><text x="18.5665%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.19%)</title><rect x="18.3165%" y="1125" width="0.1927%" height="15" fill="rgb(235,141,10)" fg:x="1521" fg:w="16"/><text x="18.5665%" y="1135.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.19%)</title><rect x="18.3165%" y="1109" width="0.1927%" height="15" fill="rgb(220,174,43)" fg:x="1521" fg:w="16"/><text x="18.5665%" y="1119.50"></text></g><g><title>mi_free (10 samples, 0.12%)</title><rect x="18.3887%" y="1093" width="0.1204%" height="15" fill="rgb(215,181,40)" fg:x="1527" fg:w="10"/><text x="18.6387%" y="1103.50"></text></g><g><title>mi_check_is_double_free (5 samples, 0.06%)</title><rect x="18.4489%" y="1077" width="0.0602%" height="15" fill="rgb(230,97,2)" fg:x="1532" fg:w="5"/><text x="18.6989%" y="1087.50"></text></g><g><title>mi_block_nextx (5 samples, 0.06%)</title><rect x="18.4489%" y="1061" width="0.0602%" height="15" fill="rgb(211,25,27)" fg:x="1532" fg:w="5"/><text x="18.6989%" y="1071.50"></text></g><g><title>mi_ptr_decode (5 samples, 0.06%)</title><rect x="18.4489%" y="1045" width="0.0602%" height="15" fill="rgb(230,87,26)" fg:x="1532" fg:w="5"/><text x="18.6989%" y="1055.50"></text></g><g><title>mi_rotr (2 samples, 0.02%)</title><rect x="18.4851%" y="1029" width="0.0241%" height="15" fill="rgb(227,160,17)" fg:x="1535" fg:w="2"/><text x="18.7351%" y="1039.50"></text></g><g><title>_mi_segment_page_of (3 samples, 0.04%)</title><rect x="18.5092%" y="1189" width="0.0361%" height="15" fill="rgb(244,85,34)" fg:x="1537" fg:w="3"/><text x="18.7592%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;[indexmap::Bucket&lt;alloc::string::String,wasmer::sys::externals::Extern&gt;]&gt; (66 samples, 0.79%)</title><rect x="17.7625%" y="1237" width="0.7948%" height="15" fill="rgb(207,70,0)" fg:x="1475" fg:w="66"/><text x="18.0125%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;indexmap::Bucket&lt;alloc::string::String,wasmer::sys::externals::Extern&gt;&gt; (65 samples, 0.78%)</title><rect x="17.7746%" y="1221" width="0.7828%" height="15" fill="rgb(223,129,7)" fg:x="1476" fg:w="65"/><text x="18.0246%" y="1231.50"></text></g><g><title>mi_free (4 samples, 0.05%)</title><rect x="18.5092%" y="1205" width="0.0482%" height="15" fill="rgb(246,105,7)" fg:x="1537" fg:w="4"/><text x="18.7592%" y="1215.50"></text></g><g><title>mi_checked_ptr_segment (1 samples, 0.01%)</title><rect x="18.5453%" y="1189" width="0.0120%" height="15" fill="rgb(215,154,42)" fg:x="1540" fg:w="1"/><text x="18.7953%" y="1199.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (67 samples, 0.81%)</title><rect x="17.7625%" y="1381" width="0.8068%" height="15" fill="rgb(220,215,30)" fg:x="1475" fg:w="67"/><text x="18.0125%" y="1391.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (67 samples, 0.81%)</title><rect x="17.7625%" y="1365" width="0.8068%" height="15" fill="rgb(228,81,51)" fg:x="1475" fg:w="67"/><text x="18.0125%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,alloc::boxed::Box&lt;dyn wasmer::sys::import_object::LikeNamespace+core::marker::Sync+core::marker::Send&gt;)&gt; (67 samples, 0.81%)</title><rect x="17.7625%" y="1349" width="0.8068%" height="15" fill="rgb(247,71,54)" fg:x="1475" fg:w="67"/><text x="18.0125%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn wasmer::sys::import_object::LikeNamespace+core::marker::Sync+core::marker::Send&gt;&gt; (67 samples, 0.81%)</title><rect x="17.7625%" y="1333" width="0.8068%" height="15" fill="rgb(234,176,34)" fg:x="1475" fg:w="67"/><text x="18.0125%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer::sys::exports::Exports&gt; (67 samples, 0.81%)</title><rect x="17.7625%" y="1317" width="0.8068%" height="15" fill="rgb(241,103,54)" fg:x="1475" fg:w="67"/><text x="18.0125%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;indexmap::map::IndexMap&lt;alloc::string::String,wasmer::sys::externals::Extern&gt;&gt; (67 samples, 0.81%)</title><rect x="17.7625%" y="1301" width="0.8068%" height="15" fill="rgb(228,22,34)" fg:x="1475" fg:w="67"/><text x="18.0125%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;indexmap::map::core::IndexMapCore&lt;alloc::string::String,wasmer::sys::externals::Extern&gt;&gt; (67 samples, 0.81%)</title><rect x="17.7625%" y="1285" width="0.8068%" height="15" fill="rgb(241,179,48)" fg:x="1475" fg:w="67"/><text x="18.0125%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;indexmap::Bucket&lt;alloc::string::String,wasmer::sys::externals::Extern&gt;&gt;&gt; (67 samples, 0.81%)</title><rect x="17.7625%" y="1269" width="0.8068%" height="15" fill="rgb(235,167,37)" fg:x="1475" fg:w="67"/><text x="18.0125%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (67 samples, 0.81%)</title><rect x="17.7625%" y="1253" width="0.8068%" height="15" fill="rgb(213,109,30)" fg:x="1475" fg:w="67"/><text x="18.0125%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer::sys::exports::Exports&gt; (1 samples, 0.01%)</title><rect x="18.5573%" y="1237" width="0.0120%" height="15" fill="rgb(222,172,16)" fg:x="1541" fg:w="1"/><text x="18.8073%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer::sys::import_object::ImportObject&gt; (69 samples, 0.83%)</title><rect x="17.7505%" y="1557" width="0.8309%" height="15" fill="rgb(233,192,5)" fg:x="1474" fg:w="69"/><text x="18.0005%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,alloc::boxed::Box&lt;dyn wasmer::sys::import_object::LikeNamespace+core::marker::Sync+core::marker::Send&gt;&gt;&gt;&gt;&gt; (69 samples, 0.83%)</title><rect x="17.7505%" y="1541" width="0.8309%" height="15" fill="rgb(247,189,41)" fg:x="1474" fg:w="69"/><text x="18.0005%" y="1551.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (69 samples, 0.83%)</title><rect x="17.7505%" y="1525" width="0.8309%" height="15" fill="rgb(218,134,47)" fg:x="1474" fg:w="69"/><text x="18.0005%" y="1535.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (68 samples, 0.82%)</title><rect x="17.7625%" y="1509" width="0.8189%" height="15" fill="rgb(216,29,3)" fg:x="1475" fg:w="68"/><text x="18.0125%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::Mutex&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,alloc::boxed::Box&lt;dyn wasmer::sys::import_object::LikeNamespace+core::marker::Sync+core::marker::Send&gt;&gt;&gt;&gt; (68 samples, 0.82%)</title><rect x="17.7625%" y="1493" width="0.8189%" height="15" fill="rgb(246,140,12)" fg:x="1475" fg:w="68"/><text x="18.0125%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,alloc::boxed::Box&lt;dyn wasmer::sys::import_object::LikeNamespace+core::marker::Sync+core::marker::Send&gt;&gt;&gt;&gt; (68 samples, 0.82%)</title><rect x="17.7625%" y="1477" width="0.8189%" height="15" fill="rgb(230,136,11)" fg:x="1475" fg:w="68"/><text x="18.0125%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,alloc::boxed::Box&lt;dyn wasmer::sys::import_object::LikeNamespace+core::marker::Sync+core::marker::Send&gt;&gt;&gt; (68 samples, 0.82%)</title><rect x="17.7625%" y="1461" width="0.8189%" height="15" fill="rgb(247,22,47)" fg:x="1475" fg:w="68"/><text x="18.0125%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,alloc::boxed::Box&lt;dyn wasmer::sys::import_object::LikeNamespace+core::marker::Sync+core::marker::Send&gt;,std::collections::hash::map::RandomState&gt;&gt; (68 samples, 0.82%)</title><rect x="17.7625%" y="1445" width="0.8189%" height="15" fill="rgb(218,84,22)" fg:x="1475" fg:w="68"/><text x="18.0125%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,alloc::boxed::Box&lt;dyn wasmer::sys::import_object::LikeNamespace+core::marker::Sync+core::marker::Send&gt;)&gt;&gt; (68 samples, 0.82%)</title><rect x="17.7625%" y="1429" width="0.8189%" height="15" fill="rgb(216,87,39)" fg:x="1475" fg:w="68"/><text x="18.0125%" y="1439.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (68 samples, 0.82%)</title><rect x="17.7625%" y="1413" width="0.8189%" height="15" fill="rgb(221,178,8)" fg:x="1475" fg:w="68"/><text x="18.0125%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (68 samples, 0.82%)</title><rect x="17.7625%" y="1397" width="0.8189%" height="15" fill="rgb(230,42,11)" fg:x="1475" fg:w="68"/><text x="18.0125%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (1 samples, 0.01%)</title><rect x="18.5694%" y="1381" width="0.0120%" height="15" fill="rgb(237,229,4)" fg:x="1542" fg:w="1"/><text x="18.8194%" y="1391.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="18.5694%" y="1365" width="0.0120%" height="15" fill="rgb(222,31,33)" fg:x="1542" fg:w="1"/><text x="18.8194%" y="1375.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (1 samples, 0.01%)</title><rect x="18.5694%" y="1349" width="0.0120%" height="15" fill="rgb(210,17,39)" fg:x="1542" fg:w="1"/><text x="18.8194%" y="1359.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="18.5694%" y="1333" width="0.0120%" height="15" fill="rgb(244,93,20)" fg:x="1542" fg:w="1"/><text x="18.8194%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn wasmer_engine::engine::Engine+core::marker::Sync+core::marker::Send&gt;&gt; (1 samples, 0.01%)</title><rect x="18.6055%" y="1525" width="0.0120%" height="15" fill="rgb(210,40,47)" fg:x="1545" fg:w="1"/><text x="18.8555%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer::sys::store::Store&gt; (1 samples, 0.01%)</title><rect x="18.6055%" y="1509" width="0.0120%" height="15" fill="rgb(239,211,47)" fg:x="1545" fg:w="1"/><text x="18.8555%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer::sys::native::NativeFunc&lt;i64,i64&gt;&gt; (4 samples, 0.05%)</title><rect x="18.5814%" y="1557" width="0.0482%" height="15" fill="rgb(251,223,49)" fg:x="1543" fg:w="4"/><text x="18.8314%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer::sys::store::Store&gt; (4 samples, 0.05%)</title><rect x="18.5814%" y="1541" width="0.0482%" height="15" fill="rgb(221,149,5)" fg:x="1543" fg:w="4"/><text x="18.8314%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;core::option::Option&lt;alloc::boxed::Box&lt;dyn core::ops::function::Fn&lt;(i32,*const libc::unix::linux_like::linux::gnu::b64::x86_64::siginfo_t,*const core::ffi::c_void)&gt;+Output = bool&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="18.6175%" y="1525" width="0.0120%" height="15" fill="rgb(219,224,51)" fg:x="1546" fg:w="1"/><text x="18.8675%" y="1535.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="18.6175%" y="1509" width="0.0120%" height="15" fill="rgb(223,7,8)" fg:x="1546" fg:w="1"/><text x="18.8675%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_engine::export::ExportFunction&gt; (1 samples, 0.01%)</title><rect x="18.6296%" y="1557" width="0.0120%" height="15" fill="rgb(241,217,22)" fg:x="1547" fg:w="1"/><text x="18.8796%" y="1567.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.01%)</title><rect x="18.6416%" y="1557" width="0.0120%" height="15" fill="rgb(248,209,0)" fg:x="1548" fg:w="1"/><text x="18.8916%" y="1567.50"></text></g><g><title>mi_free (1 samples, 0.01%)</title><rect x="18.6537%" y="1557" width="0.0120%" height="15" fill="rgb(217,205,4)" fg:x="1549" fg:w="1"/><text x="18.9037%" y="1567.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::insert (2 samples, 0.02%)</title><rect x="18.6657%" y="1557" width="0.0241%" height="15" fill="rgb(228,124,39)" fg:x="1550" fg:w="2"/><text x="18.9157%" y="1567.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::insert_with_key (1 samples, 0.01%)</title><rect x="18.6777%" y="1541" width="0.0120%" height="15" fill="rgb(250,116,42)" fg:x="1551" fg:w="1"/><text x="18.9277%" y="1551.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2 samples, 0.02%)</title><rect x="18.7018%" y="1461" width="0.0241%" height="15" fill="rgb(223,202,9)" fg:x="1553" fg:w="2"/><text x="18.9518%" y="1471.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (2 samples, 0.02%)</title><rect x="18.7018%" y="1445" width="0.0241%" height="15" fill="rgb(242,222,40)" fg:x="1553" fg:w="2"/><text x="18.9518%" y="1455.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="18.7018%" y="1429" width="0.0241%" height="15" fill="rgb(229,99,46)" fg:x="1553" fg:w="2"/><text x="18.9518%" y="1439.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.02%)</title><rect x="18.7018%" y="1413" width="0.0241%" height="15" fill="rgb(225,56,46)" fg:x="1553" fg:w="2"/><text x="18.9518%" y="1423.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.02%)</title><rect x="18.7018%" y="1397" width="0.0241%" height="15" fill="rgb(227,94,5)" fg:x="1553" fg:w="2"/><text x="18.9518%" y="1407.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.02%)</title><rect x="18.7018%" y="1381" width="0.0241%" height="15" fill="rgb(205,112,38)" fg:x="1553" fg:w="2"/><text x="18.9518%" y="1391.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.02%)</title><rect x="18.7018%" y="1365" width="0.0241%" height="15" fill="rgb(231,133,46)" fg:x="1553" fg:w="2"/><text x="18.9518%" y="1375.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="18.7139%" y="1349" width="0.0120%" height="15" fill="rgb(217,16,9)" fg:x="1554" fg:w="1"/><text x="18.9639%" y="1359.50"></text></g><g><title>vm_library::arena::populate_predef (4 samples, 0.05%)</title><rect x="18.6898%" y="1557" width="0.0482%" height="15" fill="rgb(249,173,9)" fg:x="1552" fg:w="4"/><text x="18.9398%" y="1567.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (4 samples, 0.05%)</title><rect x="18.6898%" y="1541" width="0.0482%" height="15" fill="rgb(205,163,53)" fg:x="1552" fg:w="4"/><text x="18.9398%" y="1551.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.05%)</title><rect x="18.6898%" y="1525" width="0.0482%" height="15" fill="rgb(217,54,41)" fg:x="1552" fg:w="4"/><text x="18.9398%" y="1535.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (4 samples, 0.05%)</title><rect x="18.6898%" y="1509" width="0.0482%" height="15" fill="rgb(228,216,12)" fg:x="1552" fg:w="4"/><text x="18.9398%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.05%)</title><rect x="18.6898%" y="1493" width="0.0482%" height="15" fill="rgb(244,228,15)" fg:x="1552" fg:w="4"/><text x="18.9398%" y="1503.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (4 samples, 0.05%)</title><rect x="18.6898%" y="1477" width="0.0482%" height="15" fill="rgb(221,176,53)" fg:x="1552" fg:w="4"/><text x="18.9398%" y="1487.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="18.7259%" y="1461" width="0.0120%" height="15" fill="rgb(205,94,34)" fg:x="1555" fg:w="1"/><text x="18.9759%" y="1471.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="18.7259%" y="1445" width="0.0120%" height="15" fill="rgb(213,110,48)" fg:x="1555" fg:w="1"/><text x="18.9759%" y="1455.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="18.7259%" y="1429" width="0.0120%" height="15" fill="rgb(236,142,28)" fg:x="1555" fg:w="1"/><text x="18.9759%" y="1439.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (3 samples, 0.04%)</title><rect x="18.7380%" y="1541" width="0.0361%" height="15" fill="rgb(225,135,29)" fg:x="1556" fg:w="3"/><text x="18.9880%" y="1551.50"></text></g><g><title>vm_library::arena::push_constants::{{closure}} (3 samples, 0.04%)</title><rect x="18.7380%" y="1525" width="0.0361%" height="15" fill="rgb(252,45,31)" fg:x="1556" fg:w="3"/><text x="18.9880%" y="1535.50"></text></g><g><title>&lt;vm_library::managed::value::Value as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="18.7380%" y="1509" width="0.0361%" height="15" fill="rgb(211,187,50)" fg:x="1556" fg:w="3"/><text x="18.9880%" y="1519.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="18.7500%" y="1493" width="0.0241%" height="15" fill="rgb(229,109,7)" fg:x="1557" fg:w="2"/><text x="19.0000%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="18.7500%" y="1477" width="0.0241%" height="15" fill="rgb(251,131,51)" fg:x="1557" fg:w="2"/><text x="19.0000%" y="1487.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="18.7500%" y="1461" width="0.0241%" height="15" fill="rgb(251,180,35)" fg:x="1557" fg:w="2"/><text x="19.0000%" y="1471.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="18.7500%" y="1445" width="0.0241%" height="15" fill="rgb(211,46,32)" fg:x="1557" fg:w="2"/><text x="19.0000%" y="1455.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="18.7500%" y="1429" width="0.0241%" height="15" fill="rgb(248,123,17)" fg:x="1557" fg:w="2"/><text x="19.0000%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="18.7500%" y="1413" width="0.0241%" height="15" fill="rgb(227,141,18)" fg:x="1557" fg:w="2"/><text x="19.0000%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="18.7500%" y="1397" width="0.0241%" height="15" fill="rgb(216,102,9)" fg:x="1557" fg:w="2"/><text x="19.0000%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="18.7500%" y="1381" width="0.0241%" height="15" fill="rgb(253,47,13)" fg:x="1557" fg:w="2"/><text x="19.0000%" y="1391.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="18.7500%" y="1365" width="0.0241%" height="15" fill="rgb(226,93,23)" fg:x="1557" fg:w="2"/><text x="19.0000%" y="1375.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="18.7500%" y="1349" width="0.0241%" height="15" fill="rgb(247,104,17)" fg:x="1557" fg:w="2"/><text x="19.0000%" y="1359.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="18.7500%" y="1333" width="0.0241%" height="15" fill="rgb(233,203,26)" fg:x="1557" fg:w="2"/><text x="19.0000%" y="1343.50"></text></g><g><title>mi_malloc (2 samples, 0.02%)</title><rect x="18.7500%" y="1317" width="0.0241%" height="15" fill="rgb(244,98,49)" fg:x="1557" fg:w="2"/><text x="19.0000%" y="1327.50"></text></g><g><title>mi_heap_malloc (2 samples, 0.02%)</title><rect x="18.7500%" y="1301" width="0.0241%" height="15" fill="rgb(235,134,22)" fg:x="1557" fg:w="2"/><text x="19.0000%" y="1311.50"></text></g><g><title>mi_heap_malloc_small (2 samples, 0.02%)</title><rect x="18.7500%" y="1285" width="0.0241%" height="15" fill="rgb(221,70,32)" fg:x="1557" fg:w="2"/><text x="19.0000%" y="1295.50"></text></g><g><title>_mi_page_malloc (2 samples, 0.02%)</title><rect x="18.7500%" y="1269" width="0.0241%" height="15" fill="rgb(238,15,50)" fg:x="1557" fg:w="2"/><text x="19.0000%" y="1279.50"></text></g><g><title>mi_block_next (2 samples, 0.02%)</title><rect x="18.7500%" y="1253" width="0.0241%" height="15" fill="rgb(215,221,48)" fg:x="1557" fg:w="2"/><text x="19.0000%" y="1263.50"></text></g><g><title>mi_block_nextx (2 samples, 0.02%)</title><rect x="18.7500%" y="1237" width="0.0241%" height="15" fill="rgb(236,73,3)" fg:x="1557" fg:w="2"/><text x="19.0000%" y="1247.50"></text></g><g><title>mi_ptr_decode (2 samples, 0.02%)</title><rect x="18.7500%" y="1221" width="0.0241%" height="15" fill="rgb(250,107,11)" fg:x="1557" fg:w="2"/><text x="19.0000%" y="1231.50"></text></g><g><title>vm_library::arena::push_constants (5 samples, 0.06%)</title><rect x="18.7380%" y="1557" width="0.0602%" height="15" fill="rgb(242,39,14)" fg:x="1556" fg:w="5"/><text x="18.9880%" y="1567.50"></text></g><g><title>&lt;once_cell::unsync::Lazy&lt;T,F&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2 samples, 0.02%)</title><rect x="18.7741%" y="1541" width="0.0241%" height="15" fill="rgb(248,164,37)" fg:x="1559" fg:w="2"/><text x="19.0241%" y="1551.50"></text></g><g><title>once_cell::unsync::Lazy&lt;T,F&gt;::force (2 samples, 0.02%)</title><rect x="18.7741%" y="1525" width="0.0241%" height="15" fill="rgb(217,60,12)" fg:x="1559" fg:w="2"/><text x="19.0241%" y="1535.50"></text></g><g><title>vm_library::env::Context::set_call_unit (1 samples, 0.01%)</title><rect x="18.7982%" y="1557" width="0.0120%" height="15" fill="rgb(240,125,29)" fg:x="1561" fg:w="1"/><text x="19.0482%" y="1567.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::convert::AsRef&lt;T&gt;&gt;::as_ref (1 samples, 0.01%)</title><rect x="18.8102%" y="1525" width="0.0120%" height="15" fill="rgb(208,207,28)" fg:x="1562" fg:w="1"/><text x="19.0602%" y="1535.50"></text></g><g><title>wasmer::sys::exports::Exports::get_global (5 samples, 0.06%)</title><rect x="18.8343%" y="1493" width="0.0602%" height="15" fill="rgb(209,159,27)" fg:x="1564" fg:w="5"/><text x="19.0843%" y="1503.50"></text></g><g><title>wasmer::sys::exports::Exports::get (1 samples, 0.01%)</title><rect x="18.8825%" y="1477" width="0.0120%" height="15" fill="rgb(251,176,53)" fg:x="1568" fg:w="1"/><text x="19.1325%" y="1487.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="18.8825%" y="1461" width="0.0120%" height="15" fill="rgb(211,85,7)" fg:x="1568" fg:w="1"/><text x="19.1325%" y="1471.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (1 samples, 0.01%)</title><rect x="18.8825%" y="1445" width="0.0120%" height="15" fill="rgb(216,64,54)" fg:x="1568" fg:w="1"/><text x="19.1325%" y="1455.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (1 samples, 0.01%)</title><rect x="18.8825%" y="1429" width="0.0120%" height="15" fill="rgb(217,54,24)" fg:x="1568" fg:w="1"/><text x="19.1325%" y="1439.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="18.8825%" y="1413" width="0.0120%" height="15" fill="rgb(208,206,53)" fg:x="1568" fg:w="1"/><text x="19.1325%" y="1423.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="18.8825%" y="1397" width="0.0120%" height="15" fill="rgb(251,74,39)" fg:x="1568" fg:w="1"/><text x="19.1325%" y="1407.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.01%)</title><rect x="18.8825%" y="1381" width="0.0120%" height="15" fill="rgb(226,47,5)" fg:x="1568" fg:w="1"/><text x="19.1325%" y="1391.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.01%)</title><rect x="18.8825%" y="1365" width="0.0120%" height="15" fill="rgb(234,111,33)" fg:x="1568" fg:w="1"/><text x="19.1325%" y="1375.50"></text></g><g><title>indexmap::map::core::equivalent::{{closure}} (1 samples, 0.01%)</title><rect x="18.8825%" y="1349" width="0.0120%" height="15" fill="rgb(251,14,10)" fg:x="1568" fg:w="1"/><text x="19.1325%" y="1359.50"></text></g><g><title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.01%)</title><rect x="18.8825%" y="1333" width="0.0120%" height="15" fill="rgb(232,43,0)" fg:x="1568" fg:w="1"/><text x="19.1325%" y="1343.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.01%)</title><rect x="18.8825%" y="1317" width="0.0120%" height="15" fill="rgb(222,68,43)" fg:x="1568" fg:w="1"/><text x="19.1325%" y="1327.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="18.8825%" y="1301" width="0.0120%" height="15" fill="rgb(217,24,23)" fg:x="1568" fg:w="1"/><text x="19.1325%" y="1311.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="18.8825%" y="1285" width="0.0120%" height="15" fill="rgb(229,209,14)" fg:x="1568" fg:w="1"/><text x="19.1325%" y="1295.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="18.8825%" y="1269" width="0.0120%" height="15" fill="rgb(250,149,48)" fg:x="1568" fg:w="1"/><text x="19.1325%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (2 samples, 0.02%)</title><rect x="18.9066%" y="1461" width="0.0241%" height="15" fill="rgb(210,120,37)" fg:x="1570" fg:w="2"/><text x="19.1566%" y="1471.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="18.9066%" y="1445" width="0.0241%" height="15" fill="rgb(210,21,8)" fg:x="1570" fg:w="2"/><text x="19.1566%" y="1455.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (2 samples, 0.02%)</title><rect x="18.9066%" y="1429" width="0.0241%" height="15" fill="rgb(243,145,7)" fg:x="1570" fg:w="2"/><text x="19.1566%" y="1439.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (2 samples, 0.02%)</title><rect x="18.9066%" y="1413" width="0.0241%" height="15" fill="rgb(238,178,32)" fg:x="1570" fg:w="2"/><text x="19.1566%" y="1423.50"></text></g><g><title>vm_library::env::Context::set_gas_left (11 samples, 0.13%)</title><rect x="18.8102%" y="1557" width="0.1325%" height="15" fill="rgb(222,4,10)" fg:x="1562" fg:w="11"/><text x="19.0602%" y="1567.50"></text></g><g><title>vm_library::env::Context::with_instance (11 samples, 0.13%)</title><rect x="18.8102%" y="1541" width="0.1325%" height="15" fill="rgb(239,7,37)" fg:x="1562" fg:w="11"/><text x="19.0602%" y="1551.50"></text></g><g><title>vm_library::env::Context::set_gas_left::{{closure}} (10 samples, 0.12%)</title><rect x="18.8223%" y="1525" width="0.1204%" height="15" fill="rgb(215,31,37)" fg:x="1563" fg:w="10"/><text x="19.0723%" y="1535.50"></text></g><g><title>wasmer_middlewares::metering::set_remaining_points (10 samples, 0.12%)</title><rect x="18.8223%" y="1509" width="0.1204%" height="15" fill="rgb(224,83,33)" fg:x="1563" fg:w="10"/><text x="19.0723%" y="1519.50"></text></g><g><title>wasmer::sys::externals::global::Global::set (4 samples, 0.05%)</title><rect x="18.8945%" y="1493" width="0.0482%" height="15" fill="rgb(239,55,3)" fg:x="1569" fg:w="4"/><text x="19.1445%" y="1503.50"></text></g><g><title>wasmer_vm::global::Global::set (3 samples, 0.04%)</title><rect x="18.9066%" y="1477" width="0.0361%" height="15" fill="rgb(247,92,11)" fg:x="1570" fg:w="3"/><text x="19.1566%" y="1487.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="18.9306%" y="1461" width="0.0120%" height="15" fill="rgb(239,200,7)" fg:x="1572" fg:w="1"/><text x="19.1806%" y="1471.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.01%)</title><rect x="18.9306%" y="1445" width="0.0120%" height="15" fill="rgb(227,115,8)" fg:x="1572" fg:w="1"/><text x="19.1806%" y="1455.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (1 samples, 0.01%)</title><rect x="18.9306%" y="1429" width="0.0120%" height="15" fill="rgb(215,189,27)" fg:x="1572" fg:w="1"/><text x="19.1806%" y="1439.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="18.9547%" y="1541" width="0.0120%" height="15" fill="rgb(251,216,39)" fg:x="1574" fg:w="1"/><text x="19.2047%" y="1551.50"></text></g><g><title>&lt;std::sync::mutex::Mutex&lt;T&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="18.9547%" y="1525" width="0.0120%" height="15" fill="rgb(207,29,47)" fg:x="1574" fg:w="1"/><text x="19.2047%" y="1535.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="18.9547%" y="1509" width="0.0120%" height="15" fill="rgb(210,71,34)" fg:x="1574" fg:w="1"/><text x="19.2047%" y="1519.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="18.9547%" y="1493" width="0.0120%" height="15" fill="rgb(253,217,51)" fg:x="1574" fg:w="1"/><text x="19.2047%" y="1503.50"></text></g><g><title>std::collections::hash::map::RandomState::new (1 samples, 0.01%)</title><rect x="18.9547%" y="1477" width="0.0120%" height="15" fill="rgb(222,117,46)" fg:x="1574" fg:w="1"/><text x="19.2047%" y="1487.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="18.9547%" y="1461" width="0.0120%" height="15" fill="rgb(226,132,6)" fg:x="1574" fg:w="1"/><text x="19.2047%" y="1471.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="18.9547%" y="1445" width="0.0120%" height="15" fill="rgb(254,145,51)" fg:x="1574" fg:w="1"/><text x="19.2047%" y="1455.50"></text></g><g><title>&lt;vm_library::env::Context as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="18.9668%" y="1541" width="0.0120%" height="15" fill="rgb(231,199,27)" fg:x="1575" fg:w="1"/><text x="19.2168%" y="1551.50"></text></g><g><title>mi_block_nextx (10 samples, 0.12%)</title><rect x="19.0631%" y="1221" width="0.1204%" height="15" fill="rgb(245,158,14)" fg:x="1583" fg:w="10"/><text x="19.3131%" y="1231.50"></text></g><g><title>mi_ptr_decode (10 samples, 0.12%)</title><rect x="19.0631%" y="1205" width="0.1204%" height="15" fill="rgb(240,113,14)" fg:x="1583" fg:w="10"/><text x="19.3131%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.17%)</title><rect x="19.0270%" y="1397" width="0.1686%" height="15" fill="rgb(210,20,13)" fg:x="1580" fg:w="14"/><text x="19.2770%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.17%)</title><rect x="19.0270%" y="1381" width="0.1686%" height="15" fill="rgb(241,144,13)" fg:x="1580" fg:w="14"/><text x="19.2770%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.17%)</title><rect x="19.0270%" y="1365" width="0.1686%" height="15" fill="rgb(235,43,34)" fg:x="1580" fg:w="14"/><text x="19.2770%" y="1375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.17%)</title><rect x="19.0270%" y="1349" width="0.1686%" height="15" fill="rgb(208,36,20)" fg:x="1580" fg:w="14"/><text x="19.2770%" y="1359.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.17%)</title><rect x="19.0270%" y="1333" width="0.1686%" height="15" fill="rgb(239,204,10)" fg:x="1580" fg:w="14"/><text x="19.2770%" y="1343.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.17%)</title><rect x="19.0270%" y="1317" width="0.1686%" height="15" fill="rgb(217,84,43)" fg:x="1580" fg:w="14"/><text x="19.2770%" y="1327.50"></text></g><g><title>mi_malloc (14 samples, 0.17%)</title><rect x="19.0270%" y="1301" width="0.1686%" height="15" fill="rgb(241,170,50)" fg:x="1580" fg:w="14"/><text x="19.2770%" y="1311.50"></text></g><g><title>mi_heap_malloc (12 samples, 0.14%)</title><rect x="19.0511%" y="1285" width="0.1445%" height="15" fill="rgb(226,205,29)" fg:x="1582" fg:w="12"/><text x="19.3011%" y="1295.50"></text></g><g><title>mi_heap_malloc_small (12 samples, 0.14%)</title><rect x="19.0511%" y="1269" width="0.1445%" height="15" fill="rgb(233,113,1)" fg:x="1582" fg:w="12"/><text x="19.3011%" y="1279.50"></text></g><g><title>_mi_page_malloc (12 samples, 0.14%)</title><rect x="19.0511%" y="1253" width="0.1445%" height="15" fill="rgb(253,98,13)" fg:x="1582" fg:w="12"/><text x="19.3011%" y="1263.50"></text></g><g><title>mi_block_next (12 samples, 0.14%)</title><rect x="19.0511%" y="1237" width="0.1445%" height="15" fill="rgb(211,115,12)" fg:x="1582" fg:w="12"/><text x="19.3011%" y="1247.50"></text></g><g><title>mi_is_in_same_page (1 samples, 0.01%)</title><rect x="19.1835%" y="1221" width="0.0120%" height="15" fill="rgb(208,12,16)" fg:x="1593" fg:w="1"/><text x="19.4335%" y="1231.50"></text></g><g><title>_mi_segment_page_start (1 samples, 0.01%)</title><rect x="19.1835%" y="1205" width="0.0120%" height="15" fill="rgb(237,193,54)" fg:x="1593" fg:w="1"/><text x="19.4335%" y="1215.50"></text></g><g><title>_mi_segment_page_start_from_slice (1 samples, 0.01%)</title><rect x="19.1835%" y="1189" width="0.0120%" height="15" fill="rgb(243,22,42)" fg:x="1593" fg:w="1"/><text x="19.4335%" y="1199.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (20 samples, 0.24%)</title><rect x="19.0270%" y="1509" width="0.2408%" height="15" fill="rgb(233,151,36)" fg:x="1580" fg:w="20"/><text x="19.2770%" y="1519.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (20 samples, 0.24%)</title><rect x="19.0270%" y="1493" width="0.2408%" height="15" fill="rgb(237,57,45)" fg:x="1580" fg:w="20"/><text x="19.2770%" y="1503.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (20 samples, 0.24%)</title><rect x="19.0270%" y="1477" width="0.2408%" height="15" fill="rgb(221,88,17)" fg:x="1580" fg:w="20"/><text x="19.2770%" y="1487.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (20 samples, 0.24%)</title><rect x="19.0270%" y="1461" width="0.2408%" height="15" fill="rgb(230,79,15)" fg:x="1580" fg:w="20"/><text x="19.2770%" y="1471.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (20 samples, 0.24%)</title><rect x="19.0270%" y="1445" width="0.2408%" height="15" fill="rgb(213,57,13)" fg:x="1580" fg:w="20"/><text x="19.2770%" y="1455.50"></text></g><g><title>alloc::slice::hack::to_vec (20 samples, 0.24%)</title><rect x="19.0270%" y="1429" width="0.2408%" height="15" fill="rgb(222,116,39)" fg:x="1580" fg:w="20"/><text x="19.2770%" y="1439.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (20 samples, 0.24%)</title><rect x="19.0270%" y="1413" width="0.2408%" height="15" fill="rgb(245,107,2)" fg:x="1580" fg:w="20"/><text x="19.2770%" y="1423.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (6 samples, 0.07%)</title><rect x="19.1956%" y="1397" width="0.0723%" height="15" fill="rgb(238,1,10)" fg:x="1594" fg:w="6"/><text x="19.4456%" y="1407.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.07%)</title><rect x="19.1956%" y="1381" width="0.0723%" height="15" fill="rgb(249,4,48)" fg:x="1594" fg:w="6"/><text x="19.4456%" y="1391.50"></text></g><g><title>__memcpy_avx_unaligned_erms (5 samples, 0.06%)</title><rect x="19.2076%" y="1365" width="0.0602%" height="15" fill="rgb(223,151,18)" fg:x="1595" fg:w="5"/><text x="19.4576%" y="1375.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (22 samples, 0.26%)</title><rect x="19.0149%" y="1525" width="0.2649%" height="15" fill="rgb(227,65,43)" fg:x="1579" fg:w="22"/><text x="19.2649%" y="1535.50"></text></g><g><title>&lt;wasmer::sys::externals::Extern as core::convert::From&lt;wasmer::sys::externals::function::Function&gt;&gt;::from (1 samples, 0.01%)</title><rect x="19.2678%" y="1509" width="0.0120%" height="15" fill="rgb(218,40,45)" fg:x="1600" fg:w="1"/><text x="19.5178%" y="1519.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.01%)</title><rect x="19.3280%" y="1477" width="0.0120%" height="15" fill="rgb(252,121,31)" fg:x="1605" fg:w="1"/><text x="19.5780%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_engine::export::ExportFunctionMetadata&gt; (1 samples, 0.01%)</title><rect x="19.3280%" y="1461" width="0.0120%" height="15" fill="rgb(219,158,43)" fg:x="1605" fg:w="1"/><text x="19.5780%" y="1471.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.01%)</title><rect x="19.3280%" y="1445" width="0.0120%" height="15" fill="rgb(231,162,42)" fg:x="1605" fg:w="1"/><text x="19.5780%" y="1455.50"></text></g><g><title>__rg_dealloc (1 samples, 0.01%)</title><rect x="19.3401%" y="1365" width="0.0120%" height="15" fill="rgb(217,179,25)" fg:x="1606" fg:w="1"/><text x="19.5901%" y="1375.50"></text></g><g><title>&lt;mimalloc::MiMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.01%)</title><rect x="19.3401%" y="1349" width="0.0120%" height="15" fill="rgb(206,212,31)" fg:x="1606" fg:w="1"/><text x="19.5901%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;wasmer::sys::externals::Extern&gt;&gt; (7 samples, 0.08%)</title><rect x="19.2799%" y="1525" width="0.0843%" height="15" fill="rgb(235,144,12)" fg:x="1601" fg:w="7"/><text x="19.5299%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer::sys::externals::Extern&gt; (3 samples, 0.04%)</title><rect x="19.3280%" y="1509" width="0.0361%" height="15" fill="rgb(213,51,10)" fg:x="1605" fg:w="3"/><text x="19.5780%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer::sys::externals::function::Function&gt; (3 samples, 0.04%)</title><rect x="19.3280%" y="1493" width="0.0361%" height="15" fill="rgb(231,145,14)" fg:x="1605" fg:w="3"/><text x="19.5780%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_engine::export::ExportFunction&gt; (2 samples, 0.02%)</title><rect x="19.3401%" y="1477" width="0.0241%" height="15" fill="rgb(235,15,28)" fg:x="1606" fg:w="2"/><text x="19.5901%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_vm::export::VMFunction&gt; (2 samples, 0.02%)</title><rect x="19.3401%" y="1461" width="0.0241%" height="15" fill="rgb(237,206,10)" fg:x="1606" fg:w="2"/><text x="19.5901%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_types::types::FunctionType&gt; (2 samples, 0.02%)</title><rect x="19.3401%" y="1445" width="0.0241%" height="15" fill="rgb(236,227,27)" fg:x="1606" fg:w="2"/><text x="19.5901%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[wasmer_types::types::Type]&gt;&gt; (2 samples, 0.02%)</title><rect x="19.3401%" y="1429" width="0.0241%" height="15" fill="rgb(246,83,35)" fg:x="1606" fg:w="2"/><text x="19.5901%" y="1439.50"></text></g><g><title>alloc::alloc::box_free (2 samples, 0.02%)</title><rect x="19.3401%" y="1413" width="0.0241%" height="15" fill="rgb(220,136,24)" fg:x="1606" fg:w="2"/><text x="19.5901%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="19.3401%" y="1397" width="0.0241%" height="15" fill="rgb(217,3,25)" fg:x="1606" fg:w="2"/><text x="19.5901%" y="1407.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="19.3401%" y="1381" width="0.0241%" height="15" fill="rgb(239,24,14)" fg:x="1606" fg:w="2"/><text x="19.5901%" y="1391.50"></text></g><g><title>mi_free (1 samples, 0.01%)</title><rect x="19.3521%" y="1365" width="0.0120%" height="15" fill="rgb(244,16,53)" fg:x="1607" fg:w="1"/><text x="19.6021%" y="1375.50"></text></g><g><title>mi_check_is_double_free (1 samples, 0.01%)</title><rect x="19.3521%" y="1349" width="0.0120%" height="15" fill="rgb(208,175,44)" fg:x="1607" fg:w="1"/><text x="19.6021%" y="1359.50"></text></g><g><title>mi_block_nextx (1 samples, 0.01%)</title><rect x="19.3521%" y="1333" width="0.0120%" height="15" fill="rgb(252,18,48)" fg:x="1607" fg:w="1"/><text x="19.6021%" y="1343.50"></text></g><g><title>mi_ptr_decode (1 samples, 0.01%)</title><rect x="19.3521%" y="1317" width="0.0120%" height="15" fill="rgb(234,199,32)" fg:x="1607" fg:w="1"/><text x="19.6021%" y="1327.50"></text></g><g><title>mi_rotr (1 samples, 0.01%)</title><rect x="19.3521%" y="1301" width="0.0120%" height="15" fill="rgb(225,77,54)" fg:x="1607" fg:w="1"/><text x="19.6021%" y="1311.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13 samples, 0.16%)</title><rect x="19.7616%" y="1397" width="0.1566%" height="15" fill="rgb(225,42,25)" fg:x="1641" fg:w="13"/><text x="20.0116%" y="1407.50"></text></g><g><title>core::hash::sip::u8to64_le (6 samples, 0.07%)</title><rect x="19.8459%" y="1381" width="0.0723%" height="15" fill="rgb(242,227,46)" fg:x="1648" fg:w="6"/><text x="20.0959%" y="1391.50"></text></g><g><title>core::cmp::min (1 samples, 0.01%)</title><rect x="19.9663%" y="1365" width="0.0120%" height="15" fill="rgb(246,197,35)" fg:x="1658" fg:w="1"/><text x="20.2163%" y="1375.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="19.9663%" y="1349" width="0.0120%" height="15" fill="rgb(215,159,26)" fg:x="1658" fg:w="1"/><text x="20.2163%" y="1359.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (23 samples, 0.28%)</title><rect x="19.7616%" y="1413" width="0.2770%" height="15" fill="rgb(212,194,50)" fg:x="1641" fg:w="23"/><text x="20.0116%" y="1423.50"></text></g><g><title>core::hash::Hasher::write_u8 (10 samples, 0.12%)</title><rect x="19.9181%" y="1397" width="0.1204%" height="15" fill="rgb(246,132,1)" fg:x="1654" fg:w="10"/><text x="20.1681%" y="1407.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.12%)</title><rect x="19.9181%" y="1381" width="0.1204%" height="15" fill="rgb(217,71,7)" fg:x="1654" fg:w="10"/><text x="20.1681%" y="1391.50"></text></g><g><title>core::hash::sip::u8to64_le (5 samples, 0.06%)</title><rect x="19.9783%" y="1365" width="0.0602%" height="15" fill="rgb(252,59,32)" fg:x="1659" fg:w="5"/><text x="20.2283%" y="1375.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (24 samples, 0.29%)</title><rect x="19.7616%" y="1477" width="0.2890%" height="15" fill="rgb(253,204,25)" fg:x="1641" fg:w="24"/><text x="20.0116%" y="1487.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (24 samples, 0.29%)</title><rect x="19.7616%" y="1461" width="0.2890%" height="15" fill="rgb(232,21,16)" fg:x="1641" fg:w="24"/><text x="20.0116%" y="1471.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (24 samples, 0.29%)</title><rect x="19.7616%" y="1445" width="0.2890%" height="15" fill="rgb(248,90,29)" fg:x="1641" fg:w="24"/><text x="20.0116%" y="1455.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (24 samples, 0.29%)</title><rect x="19.7616%" y="1429" width="0.2890%" height="15" fill="rgb(249,223,7)" fg:x="1641" fg:w="24"/><text x="20.0116%" y="1439.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert (1 samples, 0.01%)</title><rect x="20.0385%" y="1413" width="0.0120%" height="15" fill="rgb(231,119,42)" fg:x="1664" fg:w="1"/><text x="20.2885%" y="1423.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="20.0987%" y="1413" width="0.0120%" height="15" fill="rgb(215,41,35)" fg:x="1669" fg:w="1"/><text x="20.3487%" y="1423.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.04%)</title><rect x="20.0867%" y="1429" width="0.0361%" height="15" fill="rgb(220,44,45)" fg:x="1668" fg:w="3"/><text x="20.3367%" y="1439.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="20.1108%" y="1413" width="0.0120%" height="15" fill="rgb(253,197,36)" fg:x="1670" fg:w="1"/><text x="20.3608%" y="1423.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="20.1830%" y="1413" width="0.0241%" height="15" fill="rgb(245,225,54)" fg:x="1676" fg:w="2"/><text x="20.4330%" y="1423.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (15 samples, 0.18%)</title><rect x="20.0506%" y="1477" width="0.1806%" height="15" fill="rgb(239,94,37)" fg:x="1665" fg:w="15"/><text x="20.3006%" y="1487.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (15 samples, 0.18%)</title><rect x="20.0506%" y="1461" width="0.1806%" height="15" fill="rgb(242,217,10)" fg:x="1665" fg:w="15"/><text x="20.3006%" y="1471.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (15 samples, 0.18%)</title><rect x="20.0506%" y="1445" width="0.1806%" height="15" fill="rgb(250,193,7)" fg:x="1665" fg:w="15"/><text x="20.3006%" y="1455.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (9 samples, 0.11%)</title><rect x="20.1228%" y="1429" width="0.1084%" height="15" fill="rgb(230,104,19)" fg:x="1671" fg:w="9"/><text x="20.3728%" y="1439.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="20.2071%" y="1413" width="0.0241%" height="15" fill="rgb(230,181,4)" fg:x="1678" fg:w="2"/><text x="20.4571%" y="1423.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (41 samples, 0.49%)</title><rect x="19.7616%" y="1493" width="0.4937%" height="15" fill="rgb(216,219,49)" fg:x="1641" fg:w="41"/><text x="20.0116%" y="1503.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.02%)</title><rect x="20.2312%" y="1477" width="0.0241%" height="15" fill="rgb(254,144,0)" fg:x="1680" fg:w="2"/><text x="20.4812%" y="1487.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.01%)</title><rect x="20.2433%" y="1461" width="0.0120%" height="15" fill="rgb(205,209,38)" fg:x="1681" fg:w="1"/><text x="20.4933%" y="1471.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.01%)</title><rect x="20.2433%" y="1445" width="0.0120%" height="15" fill="rgb(240,21,42)" fg:x="1681" fg:w="1"/><text x="20.4933%" y="1455.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.01%)</title><rect x="20.2433%" y="1429" width="0.0120%" height="15" fill="rgb(241,132,3)" fg:x="1681" fg:w="1"/><text x="20.4933%" y="1439.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.02%)</title><rect x="20.3998%" y="1349" width="0.0241%" height="15" fill="rgb(225,14,2)" fg:x="1694" fg:w="2"/><text x="20.6498%" y="1359.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.02%)</title><rect x="20.3998%" y="1333" width="0.0241%" height="15" fill="rgb(210,141,35)" fg:x="1694" fg:w="2"/><text x="20.6498%" y="1343.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.02%)</title><rect x="20.3998%" y="1317" width="0.0241%" height="15" fill="rgb(251,14,44)" fg:x="1694" fg:w="2"/><text x="20.6498%" y="1327.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.02%)</title><rect x="20.3998%" y="1301" width="0.0241%" height="15" fill="rgb(247,48,18)" fg:x="1694" fg:w="2"/><text x="20.6498%" y="1311.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.02%)</title><rect x="20.3998%" y="1285" width="0.0241%" height="15" fill="rgb(225,0,40)" fg:x="1694" fg:w="2"/><text x="20.6498%" y="1295.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::{{closure}} (3 samples, 0.04%)</title><rect x="20.3998%" y="1413" width="0.0361%" height="15" fill="rgb(221,31,33)" fg:x="1694" fg:w="3"/><text x="20.6498%" y="1423.50"></text></g><g><title>indexmap::map::core::equivalent::{{closure}} (3 samples, 0.04%)</title><rect x="20.3998%" y="1397" width="0.0361%" height="15" fill="rgb(237,42,40)" fg:x="1694" fg:w="3"/><text x="20.6498%" y="1407.50"></text></g><g><title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (3 samples, 0.04%)</title><rect x="20.3998%" y="1381" width="0.0361%" height="15" fill="rgb(233,51,29)" fg:x="1694" fg:w="3"/><text x="20.6498%" y="1391.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (3 samples, 0.04%)</title><rect x="20.3998%" y="1365" width="0.0361%" height="15" fill="rgb(226,58,20)" fg:x="1694" fg:w="3"/><text x="20.6498%" y="1375.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (1 samples, 0.01%)</title><rect x="20.4239%" y="1349" width="0.0120%" height="15" fill="rgb(208,98,7)" fg:x="1696" fg:w="1"/><text x="20.6739%" y="1359.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.01%)</title><rect x="20.4359%" y="1413" width="0.0120%" height="15" fill="rgb(228,143,44)" fg:x="1697" fg:w="1"/><text x="20.6859%" y="1423.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (1 samples, 0.01%)</title><rect x="20.4480%" y="1413" width="0.0120%" height="15" fill="rgb(246,55,38)" fg:x="1698" fg:w="1"/><text x="20.6980%" y="1423.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="20.4480%" y="1397" width="0.0120%" height="15" fill="rgb(247,87,16)" fg:x="1698" fg:w="1"/><text x="20.6980%" y="1407.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (1 samples, 0.01%)</title><rect x="20.4480%" y="1381" width="0.0120%" height="15" fill="rgb(234,129,42)" fg:x="1698" fg:w="1"/><text x="20.6980%" y="1391.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (3 samples, 0.04%)</title><rect x="20.4600%" y="1413" width="0.0361%" height="15" fill="rgb(220,82,16)" fg:x="1699" fg:w="3"/><text x="20.7100%" y="1423.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (3 samples, 0.04%)</title><rect x="20.4600%" y="1397" width="0.0361%" height="15" fill="rgb(211,88,4)" fg:x="1699" fg:w="3"/><text x="20.7100%" y="1407.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_empty (3 samples, 0.04%)</title><rect x="20.4961%" y="1413" width="0.0361%" height="15" fill="rgb(248,151,21)" fg:x="1702" fg:w="3"/><text x="20.7461%" y="1423.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (3 samples, 0.04%)</title><rect x="20.4961%" y="1397" width="0.0361%" height="15" fill="rgb(238,163,6)" fg:x="1702" fg:w="3"/><text x="20.7461%" y="1407.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (3 samples, 0.04%)</title><rect x="20.4961%" y="1381" width="0.0361%" height="15" fill="rgb(209,183,11)" fg:x="1702" fg:w="3"/><text x="20.7461%" y="1391.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (20 samples, 0.24%)</title><rect x="20.3035%" y="1477" width="0.2408%" height="15" fill="rgb(219,37,20)" fg:x="1686" fg:w="20"/><text x="20.5535%" y="1487.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (20 samples, 0.24%)</title><rect x="20.3035%" y="1461" width="0.2408%" height="15" fill="rgb(210,158,4)" fg:x="1686" fg:w="20"/><text x="20.5535%" y="1471.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (20 samples, 0.24%)</title><rect x="20.3035%" y="1445" width="0.2408%" height="15" fill="rgb(221,167,53)" fg:x="1686" fg:w="20"/><text x="20.5535%" y="1455.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (20 samples, 0.24%)</title><rect x="20.3035%" y="1429" width="0.2408%" height="15" fill="rgb(237,151,45)" fg:x="1686" fg:w="20"/><text x="20.5535%" y="1439.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (1 samples, 0.01%)</title><rect x="20.5323%" y="1413" width="0.0120%" height="15" fill="rgb(231,39,3)" fg:x="1705" fg:w="1"/><text x="20.7823%" y="1423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::capacity (2 samples, 0.02%)</title><rect x="20.5684%" y="1461" width="0.0241%" height="15" fill="rgb(212,167,28)" fg:x="1708" fg:w="2"/><text x="20.8184%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (16 samples, 0.19%)</title><rect x="20.5925%" y="1461" width="0.1927%" height="15" fill="rgb(232,178,8)" fg:x="1710" fg:w="16"/><text x="20.8425%" y="1471.50"></text></g><g><title>core::ptr::write (15 samples, 0.18%)</title><rect x="20.6045%" y="1445" width="0.1806%" height="15" fill="rgb(225,151,20)" fg:x="1711" fg:w="15"/><text x="20.8545%" y="1455.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.02%)</title><rect x="20.8092%" y="1397" width="0.0241%" height="15" fill="rgb(238,3,37)" fg:x="1728" fg:w="2"/><text x="21.0592%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::inner::RawTableInner&lt;hashbrown::raw::inner::alloc::inner::Global&gt;,hashbrown::raw::inner::RawTableInner&lt;hashbrown::raw::inner::alloc::inner::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="20.8333%" y="1381" width="0.0120%" height="15" fill="rgb(251,147,42)" fg:x="1730" fg:w="1"/><text x="21.0833%" y="1391.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="20.8333%" y="1365" width="0.0120%" height="15" fill="rgb(208,173,10)" fg:x="1730" fg:w="1"/><text x="21.0833%" y="1375.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (1 samples, 0.01%)</title><rect x="20.8333%" y="1349" width="0.0120%" height="15" fill="rgb(246,225,4)" fg:x="1730" fg:w="1"/><text x="21.0833%" y="1359.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::free_buckets (1 samples, 0.01%)</title><rect x="20.8333%" y="1333" width="0.0120%" height="15" fill="rgb(248,102,6)" fg:x="1730" fg:w="1"/><text x="21.0833%" y="1343.50"></text></g><g><title>&lt;hashbrown::raw::inner::alloc::inner::Global as hashbrown::raw::inner::alloc::inner::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="20.8333%" y="1317" width="0.0120%" height="15" fill="rgb(232,6,21)" fg:x="1730" fg:w="1"/><text x="21.0833%" y="1327.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="20.8333%" y="1301" width="0.0120%" height="15" fill="rgb(221,179,22)" fg:x="1730" fg:w="1"/><text x="21.0833%" y="1311.50"></text></g><g><title>mi_free (1 samples, 0.01%)</title><rect x="20.8333%" y="1285" width="0.0120%" height="15" fill="rgb(252,50,20)" fg:x="1730" fg:w="1"/><text x="21.0833%" y="1295.50"></text></g><g><title>mi_checked_ptr_segment (1 samples, 0.01%)</title><rect x="20.8333%" y="1269" width="0.0120%" height="15" fill="rgb(222,56,38)" fg:x="1730" fg:w="1"/><text x="21.0833%" y="1279.50"></text></g><g><title>_mi_ptr_cookie (1 samples, 0.01%)</title><rect x="20.8333%" y="1253" width="0.0120%" height="15" fill="rgb(206,193,29)" fg:x="1730" fg:w="1"/><text x="21.0833%" y="1263.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (1 samples, 0.01%)</title><rect x="20.8454%" y="1381" width="0.0120%" height="15" fill="rgb(239,192,45)" fg:x="1731" fg:w="1"/><text x="21.0954%" y="1391.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::bucket_ptr (3 samples, 0.04%)</title><rect x="20.8574%" y="1381" width="0.0361%" height="15" fill="rgb(254,18,36)" fg:x="1732" fg:w="3"/><text x="21.1074%" y="1391.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::probe_seq (2 samples, 0.02%)</title><rect x="20.9778%" y="1349" width="0.0241%" height="15" fill="rgb(221,127,11)" fg:x="1742" fg:w="2"/><text x="21.2278%" y="1359.50"></text></g><g><title>hashbrown::raw::inner::bitmask::BitMask::lowest_set_bit (2 samples, 0.02%)</title><rect x="21.0019%" y="1349" width="0.0241%" height="15" fill="rgb(234,146,35)" fg:x="1744" fg:w="2"/><text x="21.2519%" y="1359.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_insert_slot (16 samples, 0.19%)</title><rect x="20.8935%" y="1381" width="0.1927%" height="15" fill="rgb(254,201,37)" fg:x="1735" fg:w="16"/><text x="21.1435%" y="1391.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_insert_slot (16 samples, 0.19%)</title><rect x="20.8935%" y="1365" width="0.1927%" height="15" fill="rgb(211,202,23)" fg:x="1735" fg:w="16"/><text x="21.1435%" y="1375.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_empty_or_deleted (5 samples, 0.06%)</title><rect x="21.0260%" y="1349" width="0.0602%" height="15" fill="rgb(237,91,2)" fg:x="1746" fg:w="5"/><text x="21.2760%" y="1359.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (5 samples, 0.06%)</title><rect x="21.0260%" y="1333" width="0.0602%" height="15" fill="rgb(226,228,36)" fg:x="1746" fg:w="5"/><text x="21.2760%" y="1343.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve (27 samples, 0.33%)</title><rect x="20.7972%" y="1445" width="0.3251%" height="15" fill="rgb(213,63,50)" fg:x="1727" fg:w="27"/><text x="21.0472%" y="1455.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (27 samples, 0.33%)</title><rect x="20.7972%" y="1429" width="0.3251%" height="15" fill="rgb(235,194,19)" fg:x="1727" fg:w="27"/><text x="21.0472%" y="1439.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::reserve_rehash_inner (26 samples, 0.31%)</title><rect x="20.8092%" y="1413" width="0.3131%" height="15" fill="rgb(207,204,18)" fg:x="1728" fg:w="26"/><text x="21.0592%" y="1423.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::resize_inner (24 samples, 0.29%)</title><rect x="20.8333%" y="1397" width="0.2890%" height="15" fill="rgb(248,8,7)" fg:x="1730" fg:w="24"/><text x="21.0833%" y="1407.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_resize (3 samples, 0.04%)</title><rect x="21.0862%" y="1381" width="0.0361%" height="15" fill="rgb(223,145,47)" fg:x="1751" fg:w="3"/><text x="21.3362%" y="1391.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::fallible_with_capacity (3 samples, 0.04%)</title><rect x="21.0862%" y="1365" width="0.0361%" height="15" fill="rgb(228,84,11)" fg:x="1751" fg:w="3"/><text x="21.3362%" y="1375.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::new_uninitialized (3 samples, 0.04%)</title><rect x="21.0862%" y="1349" width="0.0361%" height="15" fill="rgb(218,76,45)" fg:x="1751" fg:w="3"/><text x="21.3362%" y="1359.50"></text></g><g><title>hashbrown::raw::inner::alloc::inner::do_alloc (3 samples, 0.04%)</title><rect x="21.0862%" y="1333" width="0.0361%" height="15" fill="rgb(223,80,15)" fg:x="1751" fg:w="3"/><text x="21.3362%" y="1343.50"></text></g><g><title>&lt;hashbrown::raw::inner::alloc::inner::Global as hashbrown::raw::inner::alloc::inner::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="21.0862%" y="1317" width="0.0361%" height="15" fill="rgb(219,218,33)" fg:x="1751" fg:w="3"/><text x="21.3362%" y="1327.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="21.0862%" y="1301" width="0.0361%" height="15" fill="rgb(208,51,11)" fg:x="1751" fg:w="3"/><text x="21.3362%" y="1311.50"></text></g><g><title>mi_malloc (2 samples, 0.02%)</title><rect x="21.0983%" y="1285" width="0.0241%" height="15" fill="rgb(229,165,39)" fg:x="1752" fg:w="2"/><text x="21.3483%" y="1295.50"></text></g><g><title>mi_heap_malloc (2 samples, 0.02%)</title><rect x="21.0983%" y="1269" width="0.0241%" height="15" fill="rgb(241,100,24)" fg:x="1752" fg:w="2"/><text x="21.3483%" y="1279.50"></text></g><g><title>mi_heap_malloc_small (2 samples, 0.02%)</title><rect x="21.0983%" y="1253" width="0.0241%" height="15" fill="rgb(228,14,23)" fg:x="1752" fg:w="2"/><text x="21.3483%" y="1263.50"></text></g><g><title>_mi_page_malloc (2 samples, 0.02%)</title><rect x="21.0983%" y="1237" width="0.0241%" height="15" fill="rgb(247,116,52)" fg:x="1752" fg:w="2"/><text x="21.3483%" y="1247.50"></text></g><g><title>mi_block_next (2 samples, 0.02%)</title><rect x="21.0983%" y="1221" width="0.0241%" height="15" fill="rgb(216,149,33)" fg:x="1752" fg:w="2"/><text x="21.3483%" y="1231.50"></text></g><g><title>mi_block_nextx (2 samples, 0.02%)</title><rect x="21.0983%" y="1205" width="0.0241%" height="15" fill="rgb(238,142,29)" fg:x="1752" fg:w="2"/><text x="21.3483%" y="1215.50"></text></g><g><title>mi_ptr_decode (2 samples, 0.02%)</title><rect x="21.0983%" y="1189" width="0.0241%" height="15" fill="rgb(224,83,40)" fg:x="1752" fg:w="2"/><text x="21.3483%" y="1199.50"></text></g><g><title>hashbrown::raw::inner::is_full (3 samples, 0.04%)</title><rect x="21.1464%" y="1429" width="0.0361%" height="15" fill="rgb(234,165,11)" fg:x="1756" fg:w="3"/><text x="21.3964%" y="1439.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_insert_slot (6 samples, 0.07%)</title><rect x="21.1224%" y="1445" width="0.0723%" height="15" fill="rgb(215,96,23)" fg:x="1754" fg:w="6"/><text x="21.3724%" y="1455.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_empty_or_deleted (1 samples, 0.01%)</title><rect x="21.1826%" y="1429" width="0.0120%" height="15" fill="rgb(233,179,26)" fg:x="1759" fg:w="1"/><text x="21.4326%" y="1439.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.01%)</title><rect x="21.1826%" y="1413" width="0.0120%" height="15" fill="rgb(225,129,33)" fg:x="1759" fg:w="1"/><text x="21.4326%" y="1423.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::insert (36 samples, 0.43%)</title><rect x="20.7852%" y="1461" width="0.4335%" height="15" fill="rgb(237,49,13)" fg:x="1726" fg:w="36"/><text x="21.0352%" y="1471.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::record_item_insert_at (2 samples, 0.02%)</title><rect x="21.1946%" y="1445" width="0.0241%" height="15" fill="rgb(211,3,31)" fg:x="1760" fg:w="2"/><text x="21.4446%" y="1455.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::set_ctrl_h2 (1 samples, 0.01%)</title><rect x="21.2066%" y="1429" width="0.0120%" height="15" fill="rgb(216,152,19)" fg:x="1761" fg:w="1"/><text x="21.4566%" y="1439.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::set_ctrl (1 samples, 0.01%)</title><rect x="21.2066%" y="1413" width="0.0120%" height="15" fill="rgb(251,121,35)" fg:x="1761" fg:w="1"/><text x="21.4566%" y="1423.50"></text></g><g><title>_mi_memcpy_aligned (10 samples, 0.12%)</title><rect x="21.2428%" y="1301" width="0.1204%" height="15" fill="rgb(210,217,47)" fg:x="1764" fg:w="10"/><text x="21.4928%" y="1311.50"></text></g><g><title>_mi_memcpy (10 samples, 0.12%)</title><rect x="21.2428%" y="1285" width="0.1204%" height="15" fill="rgb(244,116,22)" fg:x="1764" fg:w="10"/><text x="21.4928%" y="1295.50"></text></g><g><title>__memcpy_avx_unaligned_erms (10 samples, 0.12%)</title><rect x="21.2428%" y="1269" width="0.1204%" height="15" fill="rgb(228,17,21)" fg:x="1764" fg:w="10"/><text x="21.4928%" y="1279.50"></text></g><g><title>_mi_page_retire (1 samples, 0.01%)</title><rect x="21.3632%" y="1301" width="0.0120%" height="15" fill="rgb(240,149,34)" fg:x="1774" fg:w="1"/><text x="21.6132%" y="1311.50"></text></g><g><title>mi_page_queue_of (1 samples, 0.01%)</title><rect x="21.3632%" y="1285" width="0.0120%" height="15" fill="rgb(208,125,47)" fg:x="1774" fg:w="1"/><text x="21.6132%" y="1295.50"></text></g><g><title>mi_free (1 samples, 0.01%)</title><rect x="21.3752%" y="1301" width="0.0120%" height="15" fill="rgb(249,186,39)" fg:x="1775" fg:w="1"/><text x="21.6252%" y="1311.50"></text></g><g><title>_mi_heap_delayed_free (1 samples, 0.01%)</title><rect x="21.3873%" y="1269" width="0.0120%" height="15" fill="rgb(240,220,33)" fg:x="1776" fg:w="1"/><text x="21.6373%" y="1279.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (16 samples, 0.19%)</title><rect x="21.2428%" y="1365" width="0.1927%" height="15" fill="rgb(243,110,23)" fg:x="1764" fg:w="16"/><text x="21.4928%" y="1375.50"></text></g><g><title>alloc::alloc::Global::grow_impl (16 samples, 0.19%)</title><rect x="21.2428%" y="1349" width="0.1927%" height="15" fill="rgb(219,163,46)" fg:x="1764" fg:w="16"/><text x="21.4928%" y="1359.50"></text></g><g><title>alloc::alloc::realloc (16 samples, 0.19%)</title><rect x="21.2428%" y="1333" width="0.1927%" height="15" fill="rgb(216,126,30)" fg:x="1764" fg:w="16"/><text x="21.4928%" y="1343.50"></text></g><g><title>_mi_heap_realloc_zero (16 samples, 0.19%)</title><rect x="21.2428%" y="1317" width="0.1927%" height="15" fill="rgb(208,139,11)" fg:x="1764" fg:w="16"/><text x="21.4928%" y="1327.50"></text></g><g><title>mi_heap_malloc (4 samples, 0.05%)</title><rect x="21.3873%" y="1301" width="0.0482%" height="15" fill="rgb(213,118,36)" fg:x="1776" fg:w="4"/><text x="21.6373%" y="1311.50"></text></g><g><title>_mi_malloc_generic (4 samples, 0.05%)</title><rect x="21.3873%" y="1285" width="0.0482%" height="15" fill="rgb(226,43,17)" fg:x="1776" fg:w="4"/><text x="21.6373%" y="1295.50"></text></g><g><title>_mi_page_malloc (3 samples, 0.04%)</title><rect x="21.3993%" y="1269" width="0.0361%" height="15" fill="rgb(254,217,4)" fg:x="1777" fg:w="3"/><text x="21.6493%" y="1279.50"></text></g><g><title>mi_block_next (3 samples, 0.04%)</title><rect x="21.3993%" y="1253" width="0.0361%" height="15" fill="rgb(210,134,47)" fg:x="1777" fg:w="3"/><text x="21.6493%" y="1263.50"></text></g><g><title>mi_block_nextx (3 samples, 0.04%)</title><rect x="21.3993%" y="1237" width="0.0361%" height="15" fill="rgb(237,24,49)" fg:x="1777" fg:w="3"/><text x="21.6493%" y="1247.50"></text></g><g><title>mi_ptr_decode (3 samples, 0.04%)</title><rect x="21.3993%" y="1221" width="0.0361%" height="15" fill="rgb(251,39,46)" fg:x="1777" fg:w="3"/><text x="21.6493%" y="1231.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.01%)</title><rect x="21.4355%" y="1365" width="0.0120%" height="15" fill="rgb(251,220,3)" fg:x="1780" fg:w="1"/><text x="21.6855%" y="1375.50"></text></g><g><title>mi_get_default_heap (1 samples, 0.01%)</title><rect x="21.4475%" y="1349" width="0.0120%" height="15" fill="rgb(228,105,12)" fg:x="1781" fg:w="1"/><text x="21.6975%" y="1359.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert (175 samples, 2.11%)</title><rect x="19.3642%" y="1525" width="2.1074%" height="15" fill="rgb(215,196,1)" fg:x="1608" fg:w="175"/><text x="19.6142%" y="1535.50">i..</text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (143 samples, 1.72%)</title><rect x="19.7495%" y="1509" width="1.7221%" height="15" fill="rgb(214,33,39)" fg:x="1640" fg:w="143"/><text x="19.9995%" y="1519.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (101 samples, 1.22%)</title><rect x="20.2553%" y="1493" width="1.2163%" height="15" fill="rgb(220,19,52)" fg:x="1682" fg:w="101"/><text x="20.5053%" y="1503.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (77 samples, 0.93%)</title><rect x="20.5443%" y="1477" width="0.9273%" height="15" fill="rgb(221,78,38)" fg:x="1706" fg:w="77"/><text x="20.7943%" y="1487.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::reserve_entries (21 samples, 0.25%)</title><rect x="21.2187%" y="1461" width="0.2529%" height="15" fill="rgb(253,30,16)" fg:x="1762" fg:w="21"/><text x="21.4687%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (21 samples, 0.25%)</title><rect x="21.2187%" y="1445" width="0.2529%" height="15" fill="rgb(242,65,0)" fg:x="1762" fg:w="21"/><text x="21.4687%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (20 samples, 0.24%)</title><rect x="21.2307%" y="1429" width="0.2408%" height="15" fill="rgb(235,201,12)" fg:x="1763" fg:w="20"/><text x="21.4807%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (19 samples, 0.23%)</title><rect x="21.2428%" y="1413" width="0.2288%" height="15" fill="rgb(233,161,9)" fg:x="1764" fg:w="19"/><text x="21.4928%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (19 samples, 0.23%)</title><rect x="21.2428%" y="1397" width="0.2288%" height="15" fill="rgb(241,207,41)" fg:x="1764" fg:w="19"/><text x="21.4928%" y="1407.50"></text></g><g><title>alloc::raw_vec::finish_grow (19 samples, 0.23%)</title><rect x="21.2428%" y="1381" width="0.2288%" height="15" fill="rgb(212,69,46)" fg:x="1764" fg:w="19"/><text x="21.4928%" y="1391.50"></text></g><g><title>mi_malloc (2 samples, 0.02%)</title><rect x="21.4475%" y="1365" width="0.0241%" height="15" fill="rgb(239,69,45)" fg:x="1781" fg:w="2"/><text x="21.6975%" y="1375.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.01%)</title><rect x="21.4595%" y="1349" width="0.0120%" height="15" fill="rgb(242,117,48)" fg:x="1782" fg:w="1"/><text x="21.7095%" y="1359.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.01%)</title><rect x="21.4595%" y="1333" width="0.0120%" height="15" fill="rgb(228,41,36)" fg:x="1782" fg:w="1"/><text x="21.7095%" y="1343.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.01%)</title><rect x="21.4595%" y="1317" width="0.0120%" height="15" fill="rgb(212,3,32)" fg:x="1782" fg:w="1"/><text x="21.7095%" y="1327.50"></text></g><g><title>mi_block_next (1 samples, 0.01%)</title><rect x="21.4595%" y="1301" width="0.0120%" height="15" fill="rgb(233,41,49)" fg:x="1782" fg:w="1"/><text x="21.7095%" y="1311.50"></text></g><g><title>mi_block_nextx (1 samples, 0.01%)</title><rect x="21.4595%" y="1285" width="0.0120%" height="15" fill="rgb(252,170,49)" fg:x="1782" fg:w="1"/><text x="21.7095%" y="1295.50"></text></g><g><title>mi_ptr_decode (1 samples, 0.01%)</title><rect x="21.4595%" y="1269" width="0.0120%" height="15" fill="rgb(229,53,26)" fg:x="1782" fg:w="1"/><text x="21.7095%" y="1279.50"></text></g><g><title>wasmer::sys::exports::Exports::insert (210 samples, 2.53%)</title><rect x="18.9788%" y="1541" width="2.5289%" height="15" fill="rgb(217,157,12)" fg:x="1576" fg:w="210"/><text x="19.2288%" y="1551.50">wa..</text></g><g><title>wasmer::sys::exports::Exports::insert (3 samples, 0.04%)</title><rect x="21.4716%" y="1525" width="0.0361%" height="15" fill="rgb(227,17,9)" fg:x="1783" fg:w="3"/><text x="21.7216%" y="1535.50"></text></g><g><title>wasmer::sys::exports::Exports::new (1 samples, 0.01%)</title><rect x="21.5077%" y="1541" width="0.0120%" height="15" fill="rgb(218,84,12)" fg:x="1786" fg:w="1"/><text x="21.7577%" y="1551.50"></text></g><g><title>&lt;wasmer::sys::store::Store as core::clone::Clone&gt;::clone (9 samples, 0.11%)</title><rect x="21.6161%" y="1525" width="0.1084%" height="15" fill="rgb(212,79,24)" fg:x="1795" fg:w="9"/><text x="21.8661%" y="1535.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.11%)</title><rect x="21.6161%" y="1509" width="0.1084%" height="15" fill="rgb(217,222,37)" fg:x="1795" fg:w="9"/><text x="21.8661%" y="1519.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (5 samples, 0.06%)</title><rect x="21.6643%" y="1493" width="0.0602%" height="15" fill="rgb(246,208,8)" fg:x="1799" fg:w="5"/><text x="21.9143%" y="1503.50"></text></g><g><title>core::sync::atomic::atomic_add (5 samples, 0.06%)</title><rect x="21.6643%" y="1477" width="0.0602%" height="15" fill="rgb(244,133,10)" fg:x="1799" fg:w="5"/><text x="21.9143%" y="1487.50"></text></g><g><title>mi_block_nextx (14 samples, 0.17%)</title><rect x="21.7967%" y="1349" width="0.1686%" height="15" fill="rgb(209,219,41)" fg:x="1810" fg:w="14"/><text x="22.0467%" y="1359.50"></text></g><g><title>mi_ptr_decode (14 samples, 0.17%)</title><rect x="21.7967%" y="1333" width="0.1686%" height="15" fill="rgb(253,175,45)" fg:x="1810" fg:w="14"/><text x="22.0467%" y="1343.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (23 samples, 0.28%)</title><rect x="21.7245%" y="1525" width="0.2770%" height="15" fill="rgb(235,100,37)" fg:x="1804" fg:w="23"/><text x="21.9745%" y="1535.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (22 samples, 0.26%)</title><rect x="21.7365%" y="1509" width="0.2649%" height="15" fill="rgb(225,87,19)" fg:x="1805" fg:w="22"/><text x="21.9865%" y="1519.50"></text></g><g><title>alloc::alloc::exchange_malloc (22 samples, 0.26%)</title><rect x="21.7365%" y="1493" width="0.2649%" height="15" fill="rgb(217,152,17)" fg:x="1805" fg:w="22"/><text x="21.9865%" y="1503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22 samples, 0.26%)</title><rect x="21.7365%" y="1477" width="0.2649%" height="15" fill="rgb(235,72,13)" fg:x="1805" fg:w="22"/><text x="21.9865%" y="1487.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (22 samples, 0.26%)</title><rect x="21.7365%" y="1461" width="0.2649%" height="15" fill="rgb(233,140,18)" fg:x="1805" fg:w="22"/><text x="21.9865%" y="1471.50"></text></g><g><title>alloc::alloc::alloc (22 samples, 0.26%)</title><rect x="21.7365%" y="1445" width="0.2649%" height="15" fill="rgb(207,212,28)" fg:x="1805" fg:w="22"/><text x="21.9865%" y="1455.50"></text></g><g><title>mi_malloc (21 samples, 0.25%)</title><rect x="21.7486%" y="1429" width="0.2529%" height="15" fill="rgb(220,130,25)" fg:x="1806" fg:w="21"/><text x="21.9986%" y="1439.50"></text></g><g><title>mi_heap_malloc (20 samples, 0.24%)</title><rect x="21.7606%" y="1413" width="0.2408%" height="15" fill="rgb(205,55,34)" fg:x="1807" fg:w="20"/><text x="22.0106%" y="1423.50"></text></g><g><title>mi_heap_malloc_small (20 samples, 0.24%)</title><rect x="21.7606%" y="1397" width="0.2408%" height="15" fill="rgb(237,54,35)" fg:x="1807" fg:w="20"/><text x="22.0106%" y="1407.50"></text></g><g><title>_mi_page_malloc (20 samples, 0.24%)</title><rect x="21.7606%" y="1381" width="0.2408%" height="15" fill="rgb(208,67,23)" fg:x="1807" fg:w="20"/><text x="22.0106%" y="1391.50"></text></g><g><title>mi_block_next (19 samples, 0.23%)</title><rect x="21.7726%" y="1365" width="0.2288%" height="15" fill="rgb(206,207,50)" fg:x="1808" fg:w="19"/><text x="22.0226%" y="1375.50"></text></g><g><title>mi_is_in_same_page (3 samples, 0.04%)</title><rect x="21.9653%" y="1349" width="0.0361%" height="15" fill="rgb(213,211,42)" fg:x="1824" fg:w="3"/><text x="22.2153%" y="1359.50"></text></g><g><title>_mi_segment_page_start (2 samples, 0.02%)</title><rect x="21.9774%" y="1333" width="0.0241%" height="15" fill="rgb(252,197,50)" fg:x="1825" fg:w="2"/><text x="22.2274%" y="1343.50"></text></g><g><title>__rg_alloc (1 samples, 0.01%)</title><rect x="22.0135%" y="1429" width="0.0120%" height="15" fill="rgb(251,211,41)" fg:x="1828" fg:w="1"/><text x="22.2635%" y="1439.50"></text></g><g><title>&lt;mimalloc::MiMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.01%)</title><rect x="22.0135%" y="1413" width="0.0120%" height="15" fill="rgb(229,211,5)" fg:x="1828" fg:w="1"/><text x="22.2635%" y="1423.50"></text></g><g><title>mimalloc::may_use_unaligned_api (1 samples, 0.01%)</title><rect x="22.0135%" y="1397" width="0.0120%" height="15" fill="rgb(239,36,31)" fg:x="1828" fg:w="1"/><text x="22.2635%" y="1407.50"></text></g><g><title>__rust_alloc (2 samples, 0.02%)</title><rect x="22.0255%" y="1429" width="0.0241%" height="15" fill="rgb(248,67,31)" fg:x="1829" fg:w="2"/><text x="22.2755%" y="1439.50"></text></g><g><title>mi_block_nextx (16 samples, 0.19%)</title><rect x="22.1339%" y="1349" width="0.1927%" height="15" fill="rgb(249,55,44)" fg:x="1838" fg:w="16"/><text x="22.3839%" y="1359.50"></text></g><g><title>mi_ptr_decode (16 samples, 0.19%)</title><rect x="22.1339%" y="1333" width="0.1927%" height="15" fill="rgb(216,82,12)" fg:x="1838" fg:w="16"/><text x="22.3839%" y="1343.50"></text></g><g><title>mi_rotr (2 samples, 0.02%)</title><rect x="22.3025%" y="1317" width="0.0241%" height="15" fill="rgb(242,174,1)" fg:x="1852" fg:w="2"/><text x="22.5525%" y="1327.50"></text></g><g><title>_mi_segment_page_of (1 samples, 0.01%)</title><rect x="22.3627%" y="1333" width="0.0120%" height="15" fill="rgb(208,120,29)" fg:x="1857" fg:w="1"/><text x="22.6127%" y="1343.50"></text></g><g><title>mi_slice_first (1 samples, 0.01%)</title><rect x="22.3627%" y="1317" width="0.0120%" height="15" fill="rgb(221,105,43)" fg:x="1857" fg:w="1"/><text x="22.6127%" y="1327.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (34 samples, 0.41%)</title><rect x="22.0014%" y="1509" width="0.4094%" height="15" fill="rgb(234,124,22)" fg:x="1827" fg:w="34"/><text x="22.2514%" y="1519.50"></text></g><g><title>alloc::alloc::exchange_malloc (34 samples, 0.41%)</title><rect x="22.0014%" y="1493" width="0.4094%" height="15" fill="rgb(212,23,30)" fg:x="1827" fg:w="34"/><text x="22.2514%" y="1503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (34 samples, 0.41%)</title><rect x="22.0014%" y="1477" width="0.4094%" height="15" fill="rgb(219,122,53)" fg:x="1827" fg:w="34"/><text x="22.2514%" y="1487.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (34 samples, 0.41%)</title><rect x="22.0014%" y="1461" width="0.4094%" height="15" fill="rgb(248,84,24)" fg:x="1827" fg:w="34"/><text x="22.2514%" y="1471.50"></text></g><g><title>alloc::alloc::alloc (34 samples, 0.41%)</title><rect x="22.0014%" y="1445" width="0.4094%" height="15" fill="rgb(245,115,18)" fg:x="1827" fg:w="34"/><text x="22.2514%" y="1455.50"></text></g><g><title>mi_malloc (30 samples, 0.36%)</title><rect x="22.0496%" y="1429" width="0.3613%" height="15" fill="rgb(227,176,51)" fg:x="1831" fg:w="30"/><text x="22.2996%" y="1439.50"></text></g><g><title>mi_heap_malloc (28 samples, 0.34%)</title><rect x="22.0737%" y="1413" width="0.3372%" height="15" fill="rgb(229,63,42)" fg:x="1833" fg:w="28"/><text x="22.3237%" y="1423.50"></text></g><g><title>mi_heap_malloc_small (27 samples, 0.33%)</title><rect x="22.0857%" y="1397" width="0.3251%" height="15" fill="rgb(247,202,24)" fg:x="1834" fg:w="27"/><text x="22.3357%" y="1407.50"></text></g><g><title>_mi_page_malloc (27 samples, 0.33%)</title><rect x="22.0857%" y="1381" width="0.3251%" height="15" fill="rgb(244,173,20)" fg:x="1834" fg:w="27"/><text x="22.3357%" y="1391.50"></text></g><g><title>mi_block_next (24 samples, 0.29%)</title><rect x="22.1219%" y="1365" width="0.2890%" height="15" fill="rgb(242,81,47)" fg:x="1837" fg:w="24"/><text x="22.3719%" y="1375.50"></text></g><g><title>mi_is_in_same_page (7 samples, 0.08%)</title><rect x="22.3266%" y="1349" width="0.0843%" height="15" fill="rgb(231,185,54)" fg:x="1854" fg:w="7"/><text x="22.5766%" y="1359.50"></text></g><g><title>_mi_segment_page_start (3 samples, 0.04%)</title><rect x="22.3748%" y="1333" width="0.0361%" height="15" fill="rgb(243,55,32)" fg:x="1858" fg:w="3"/><text x="22.6248%" y="1343.50"></text></g><g><title>_mi_segment_page_start_from_slice (2 samples, 0.02%)</title><rect x="22.3868%" y="1317" width="0.0241%" height="15" fill="rgb(208,167,19)" fg:x="1859" fg:w="2"/><text x="22.6368%" y="1327.50"></text></g><g><title>wasmer::sys::externals::function::build_export_function_metadata (35 samples, 0.42%)</title><rect x="22.0014%" y="1525" width="0.4215%" height="15" fill="rgb(231,72,35)" fg:x="1827" fg:w="35"/><text x="22.2514%" y="1535.50"></text></g><g><title>wasmer_engine::export::ExportFunctionMetadata::new (1 samples, 0.01%)</title><rect x="22.4109%" y="1509" width="0.0120%" height="15" fill="rgb(250,173,51)" fg:x="1861" fg:w="1"/><text x="22.6609%" y="1519.50"></text></g><g><title>__rg_alloc (2 samples, 0.02%)</title><rect x="22.5795%" y="1365" width="0.0241%" height="15" fill="rgb(209,5,22)" fg:x="1875" fg:w="2"/><text x="22.8295%" y="1375.50"></text></g><g><title>&lt;mimalloc::MiMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (2 samples, 0.02%)</title><rect x="22.5795%" y="1349" width="0.0241%" height="15" fill="rgb(250,174,19)" fg:x="1875" fg:w="2"/><text x="22.8295%" y="1359.50"></text></g><g><title>mimalloc::may_use_unaligned_api (2 samples, 0.02%)</title><rect x="22.5795%" y="1333" width="0.0241%" height="15" fill="rgb(217,3,49)" fg:x="1875" fg:w="2"/><text x="22.8295%" y="1343.50"></text></g><g><title>mi_get_default_heap (1 samples, 0.01%)</title><rect x="22.6517%" y="1349" width="0.0120%" height="15" fill="rgb(218,225,5)" fg:x="1881" fg:w="1"/><text x="22.9017%" y="1359.50"></text></g><g><title>mi_block_nextx (26 samples, 0.31%)</title><rect x="22.6758%" y="1285" width="0.3131%" height="15" fill="rgb(236,89,11)" fg:x="1883" fg:w="26"/><text x="22.9258%" y="1295.50"></text></g><g><title>mi_ptr_decode (26 samples, 0.31%)</title><rect x="22.6758%" y="1269" width="0.3131%" height="15" fill="rgb(206,33,28)" fg:x="1883" fg:w="26"/><text x="22.9258%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (50 samples, 0.60%)</title><rect x="22.4350%" y="1461" width="0.6021%" height="15" fill="rgb(241,56,42)" fg:x="1863" fg:w="50"/><text x="22.6850%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (50 samples, 0.60%)</title><rect x="22.4350%" y="1445" width="0.6021%" height="15" fill="rgb(222,44,11)" fg:x="1863" fg:w="50"/><text x="22.6850%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (50 samples, 0.60%)</title><rect x="22.4350%" y="1429" width="0.6021%" height="15" fill="rgb(234,111,20)" fg:x="1863" fg:w="50"/><text x="22.6850%" y="1439.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (50 samples, 0.60%)</title><rect x="22.4350%" y="1413" width="0.6021%" height="15" fill="rgb(237,77,6)" fg:x="1863" fg:w="50"/><text x="22.6850%" y="1423.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (50 samples, 0.60%)</title><rect x="22.4350%" y="1397" width="0.6021%" height="15" fill="rgb(235,111,23)" fg:x="1863" fg:w="50"/><text x="22.6850%" y="1407.50"></text></g><g><title>alloc::alloc::alloc (50 samples, 0.60%)</title><rect x="22.4350%" y="1381" width="0.6021%" height="15" fill="rgb(251,135,29)" fg:x="1863" fg:w="50"/><text x="22.6850%" y="1391.50"></text></g><g><title>mi_malloc (36 samples, 0.43%)</title><rect x="22.6036%" y="1365" width="0.4335%" height="15" fill="rgb(217,57,1)" fg:x="1877" fg:w="36"/><text x="22.8536%" y="1375.50"></text></g><g><title>mi_heap_malloc (31 samples, 0.37%)</title><rect x="22.6638%" y="1349" width="0.3733%" height="15" fill="rgb(249,119,31)" fg:x="1882" fg:w="31"/><text x="22.9138%" y="1359.50"></text></g><g><title>mi_heap_malloc_small (31 samples, 0.37%)</title><rect x="22.6638%" y="1333" width="0.3733%" height="15" fill="rgb(233,164,33)" fg:x="1882" fg:w="31"/><text x="22.9138%" y="1343.50"></text></g><g><title>_mi_page_malloc (31 samples, 0.37%)</title><rect x="22.6638%" y="1317" width="0.3733%" height="15" fill="rgb(250,217,43)" fg:x="1882" fg:w="31"/><text x="22.9138%" y="1327.50"></text></g><g><title>mi_block_next (31 samples, 0.37%)</title><rect x="22.6638%" y="1301" width="0.3733%" height="15" fill="rgb(232,154,50)" fg:x="1882" fg:w="31"/><text x="22.9138%" y="1311.50"></text></g><g><title>mi_is_in_same_page (4 samples, 0.05%)</title><rect x="22.9889%" y="1285" width="0.0482%" height="15" fill="rgb(227,190,8)" fg:x="1909" fg:w="4"/><text x="23.2389%" y="1295.50"></text></g><g><title>_mi_segment_page_start (1 samples, 0.01%)</title><rect x="23.0250%" y="1269" width="0.0120%" height="15" fill="rgb(209,217,32)" fg:x="1912" fg:w="1"/><text x="23.2750%" y="1279.50"></text></g><g><title>_mi_segment_page_start_from_slice (1 samples, 0.01%)</title><rect x="23.0250%" y="1253" width="0.0120%" height="15" fill="rgb(243,203,50)" fg:x="1912" fg:w="1"/><text x="23.2750%" y="1263.50"></text></g><g><title>wasmer::sys::externals::function::Function::new_native_with_env (128 samples, 1.54%)</title><rect x="21.5197%" y="1541" width="1.5414%" height="15" fill="rgb(232,152,27)" fg:x="1787" fg:w="128"/><text x="21.7697%" y="1551.50"></text></g><g><title>wasmer::sys::externals::function::inner::Function&lt;Args,Rets&gt;::ty (53 samples, 0.64%)</title><rect x="22.4229%" y="1525" width="0.6382%" height="15" fill="rgb(240,34,29)" fg:x="1862" fg:w="53"/><text x="22.6729%" y="1535.50"></text></g><g><title>wasmer_types::types::FunctionType::new (53 samples, 0.64%)</title><rect x="22.4229%" y="1509" width="0.6382%" height="15" fill="rgb(215,185,52)" fg:x="1862" fg:w="53"/><text x="22.6729%" y="1519.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (52 samples, 0.63%)</title><rect x="22.4350%" y="1493" width="0.6262%" height="15" fill="rgb(240,89,49)" fg:x="1863" fg:w="52"/><text x="22.6850%" y="1503.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (52 samples, 0.63%)</title><rect x="22.4350%" y="1477" width="0.6262%" height="15" fill="rgb(225,12,52)" fg:x="1863" fg:w="52"/><text x="22.6850%" y="1487.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="23.0371%" y="1461" width="0.0241%" height="15" fill="rgb(239,128,45)" fg:x="1913" fg:w="2"/><text x="23.2871%" y="1471.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.04%)</title><rect x="23.0732%" y="1525" width="0.0361%" height="15" fill="rgb(211,78,47)" fg:x="1916" fg:w="3"/><text x="23.3232%" y="1535.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (3 samples, 0.04%)</title><rect x="23.0732%" y="1509" width="0.0361%" height="15" fill="rgb(232,31,21)" fg:x="1916" fg:w="3"/><text x="23.3232%" y="1519.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (3 samples, 0.04%)</title><rect x="23.0732%" y="1493" width="0.0361%" height="15" fill="rgb(222,168,14)" fg:x="1916" fg:w="3"/><text x="23.3232%" y="1503.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (3 samples, 0.04%)</title><rect x="23.0732%" y="1477" width="0.0361%" height="15" fill="rgb(209,128,24)" fg:x="1916" fg:w="3"/><text x="23.3232%" y="1487.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.04%)</title><rect x="23.0732%" y="1461" width="0.0361%" height="15" fill="rgb(249,35,13)" fg:x="1916" fg:w="3"/><text x="23.3232%" y="1471.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.04%)</title><rect x="23.0732%" y="1445" width="0.0361%" height="15" fill="rgb(218,7,2)" fg:x="1916" fg:w="3"/><text x="23.3232%" y="1455.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.04%)</title><rect x="23.0732%" y="1429" width="0.0361%" height="15" fill="rgb(238,107,27)" fg:x="1916" fg:w="3"/><text x="23.3232%" y="1439.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.04%)</title><rect x="23.0732%" y="1413" width="0.0361%" height="15" fill="rgb(217,88,38)" fg:x="1916" fg:w="3"/><text x="23.3232%" y="1423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="23.0732%" y="1397" width="0.0361%" height="15" fill="rgb(230,207,0)" fg:x="1916" fg:w="3"/><text x="23.3232%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="23.0732%" y="1381" width="0.0361%" height="15" fill="rgb(249,64,54)" fg:x="1916" fg:w="3"/><text x="23.3232%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.04%)</title><rect x="23.0732%" y="1365" width="0.0361%" height="15" fill="rgb(231,7,11)" fg:x="1916" fg:w="3"/><text x="23.3232%" y="1375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="23.0732%" y="1349" width="0.0361%" height="15" fill="rgb(205,149,21)" fg:x="1916" fg:w="3"/><text x="23.3232%" y="1359.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.04%)</title><rect x="23.0732%" y="1333" width="0.0361%" height="15" fill="rgb(215,126,34)" fg:x="1916" fg:w="3"/><text x="23.3232%" y="1343.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="23.0732%" y="1317" width="0.0361%" height="15" fill="rgb(241,132,45)" fg:x="1916" fg:w="3"/><text x="23.3232%" y="1327.50"></text></g><g><title>mi_malloc (3 samples, 0.04%)</title><rect x="23.0732%" y="1301" width="0.0361%" height="15" fill="rgb(252,69,32)" fg:x="1916" fg:w="3"/><text x="23.3232%" y="1311.50"></text></g><g><title>mi_heap_malloc (3 samples, 0.04%)</title><rect x="23.0732%" y="1285" width="0.0361%" height="15" fill="rgb(232,204,19)" fg:x="1916" fg:w="3"/><text x="23.3232%" y="1295.50"></text></g><g><title>mi_heap_malloc_small (3 samples, 0.04%)</title><rect x="23.0732%" y="1269" width="0.0361%" height="15" fill="rgb(249,15,47)" fg:x="1916" fg:w="3"/><text x="23.3232%" y="1279.50"></text></g><g><title>_mi_page_malloc (3 samples, 0.04%)</title><rect x="23.0732%" y="1253" width="0.0361%" height="15" fill="rgb(209,227,23)" fg:x="1916" fg:w="3"/><text x="23.3232%" y="1263.50"></text></g><g><title>mi_block_next (2 samples, 0.02%)</title><rect x="23.0853%" y="1237" width="0.0241%" height="15" fill="rgb(248,92,24)" fg:x="1917" fg:w="2"/><text x="23.3353%" y="1247.50"></text></g><g><title>mi_block_nextx (2 samples, 0.02%)</title><rect x="23.0853%" y="1221" width="0.0241%" height="15" fill="rgb(247,59,2)" fg:x="1917" fg:w="2"/><text x="23.3353%" y="1231.50"></text></g><g><title>mi_ptr_decode (2 samples, 0.02%)</title><rect x="23.0853%" y="1205" width="0.0241%" height="15" fill="rgb(221,30,5)" fg:x="1917" fg:w="2"/><text x="23.3353%" y="1215.50"></text></g><g><title>mi_block_nextx (2 samples, 0.02%)</title><rect x="23.1214%" y="1221" width="0.0241%" height="15" fill="rgb(208,108,53)" fg:x="1920" fg:w="2"/><text x="23.3714%" y="1231.50"></text></g><g><title>mi_ptr_decode (2 samples, 0.02%)</title><rect x="23.1214%" y="1205" width="0.0241%" height="15" fill="rgb(211,183,26)" fg:x="1920" fg:w="2"/><text x="23.3714%" y="1215.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (4 samples, 0.05%)</title><rect x="23.1093%" y="1493" width="0.0482%" height="15" fill="rgb(232,132,4)" fg:x="1919" fg:w="4"/><text x="23.3593%" y="1503.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (4 samples, 0.05%)</title><rect x="23.1093%" y="1477" width="0.0482%" height="15" fill="rgb(253,128,37)" fg:x="1919" fg:w="4"/><text x="23.3593%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.05%)</title><rect x="23.1093%" y="1461" width="0.0482%" height="15" fill="rgb(221,58,24)" fg:x="1919" fg:w="4"/><text x="23.3593%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (4 samples, 0.05%)</title><rect x="23.1093%" y="1445" width="0.0482%" height="15" fill="rgb(230,54,45)" fg:x="1919" fg:w="4"/><text x="23.3593%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (3 samples, 0.04%)</title><rect x="23.1214%" y="1429" width="0.0361%" height="15" fill="rgb(254,21,18)" fg:x="1920" fg:w="3"/><text x="23.3714%" y="1439.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (3 samples, 0.04%)</title><rect x="23.1214%" y="1413" width="0.0361%" height="15" fill="rgb(221,108,0)" fg:x="1920" fg:w="3"/><text x="23.3714%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (3 samples, 0.04%)</title><rect x="23.1214%" y="1397" width="0.0361%" height="15" fill="rgb(206,95,1)" fg:x="1920" fg:w="3"/><text x="23.3714%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (3 samples, 0.04%)</title><rect x="23.1214%" y="1381" width="0.0361%" height="15" fill="rgb(237,52,5)" fg:x="1920" fg:w="3"/><text x="23.3714%" y="1391.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (3 samples, 0.04%)</title><rect x="23.1214%" y="1365" width="0.0361%" height="15" fill="rgb(218,150,34)" fg:x="1920" fg:w="3"/><text x="23.3714%" y="1375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="23.1214%" y="1349" width="0.0361%" height="15" fill="rgb(235,194,28)" fg:x="1920" fg:w="3"/><text x="23.3714%" y="1359.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.04%)</title><rect x="23.1214%" y="1333" width="0.0361%" height="15" fill="rgb(245,92,18)" fg:x="1920" fg:w="3"/><text x="23.3714%" y="1343.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="23.1214%" y="1317" width="0.0361%" height="15" fill="rgb(253,203,53)" fg:x="1920" fg:w="3"/><text x="23.3714%" y="1327.50"></text></g><g><title>mi_malloc (3 samples, 0.04%)</title><rect x="23.1214%" y="1301" width="0.0361%" height="15" fill="rgb(249,185,47)" fg:x="1920" fg:w="3"/><text x="23.3714%" y="1311.50"></text></g><g><title>mi_heap_malloc (3 samples, 0.04%)</title><rect x="23.1214%" y="1285" width="0.0361%" height="15" fill="rgb(252,194,52)" fg:x="1920" fg:w="3"/><text x="23.3714%" y="1295.50"></text></g><g><title>mi_heap_malloc_small (3 samples, 0.04%)</title><rect x="23.1214%" y="1269" width="0.0361%" height="15" fill="rgb(210,53,36)" fg:x="1920" fg:w="3"/><text x="23.3714%" y="1279.50"></text></g><g><title>_mi_page_malloc (3 samples, 0.04%)</title><rect x="23.1214%" y="1253" width="0.0361%" height="15" fill="rgb(237,37,25)" fg:x="1920" fg:w="3"/><text x="23.3714%" y="1263.50"></text></g><g><title>mi_block_next (3 samples, 0.04%)</title><rect x="23.1214%" y="1237" width="0.0361%" height="15" fill="rgb(242,116,27)" fg:x="1920" fg:w="3"/><text x="23.3714%" y="1247.50"></text></g><g><title>mi_is_in_same_page (1 samples, 0.01%)</title><rect x="23.1455%" y="1221" width="0.0120%" height="15" fill="rgb(213,185,26)" fg:x="1922" fg:w="1"/><text x="23.3955%" y="1231.50"></text></g><g><title>_mi_segment_page_start (1 samples, 0.01%)</title><rect x="23.1455%" y="1205" width="0.0120%" height="15" fill="rgb(225,204,8)" fg:x="1922" fg:w="1"/><text x="23.3955%" y="1215.50"></text></g><g><title>_mi_segment_page_start_from_slice (1 samples, 0.01%)</title><rect x="23.1455%" y="1189" width="0.0120%" height="15" fill="rgb(254,111,37)" fg:x="1922" fg:w="1"/><text x="23.3955%" y="1199.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (5 samples, 0.06%)</title><rect x="23.1093%" y="1525" width="0.0602%" height="15" fill="rgb(242,35,9)" fg:x="1919" fg:w="5"/><text x="23.3593%" y="1535.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (5 samples, 0.06%)</title><rect x="23.1093%" y="1509" width="0.0602%" height="15" fill="rgb(232,138,49)" fg:x="1919" fg:w="5"/><text x="23.3593%" y="1519.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.01%)</title><rect x="23.1575%" y="1493" width="0.0120%" height="15" fill="rgb(247,56,4)" fg:x="1923" fg:w="1"/><text x="23.4075%" y="1503.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="23.1575%" y="1477" width="0.0120%" height="15" fill="rgb(226,179,17)" fg:x="1923" fg:w="1"/><text x="23.4075%" y="1487.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.01%)</title><rect x="23.1575%" y="1461" width="0.0120%" height="15" fill="rgb(216,163,45)" fg:x="1923" fg:w="1"/><text x="23.4075%" y="1471.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.01%)</title><rect x="23.1575%" y="1445" width="0.0120%" height="15" fill="rgb(211,157,3)" fg:x="1923" fg:w="1"/><text x="23.4075%" y="1455.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.01%)</title><rect x="23.1575%" y="1429" width="0.0120%" height="15" fill="rgb(234,44,20)" fg:x="1923" fg:w="1"/><text x="23.4075%" y="1439.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.01%)</title><rect x="23.1575%" y="1413" width="0.0120%" height="15" fill="rgb(254,138,23)" fg:x="1923" fg:w="1"/><text x="23.4075%" y="1423.50"></text></g><g><title>vm_library::managed::imports::make_imports (353 samples, 4.25%)</title><rect x="18.9427%" y="1557" width="4.2510%" height="15" fill="rgb(206,119,39)" fg:x="1573" fg:w="353"/><text x="19.1927%" y="1567.50">vm_li..</text></g><g><title>wasmer::sys::import_object::ImportObject::register (11 samples, 0.13%)</title><rect x="23.0612%" y="1541" width="0.1325%" height="15" fill="rgb(231,105,52)" fg:x="1915" fg:w="11"/><text x="23.3112%" y="1551.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.02%)</title><rect x="23.1696%" y="1525" width="0.0241%" height="15" fill="rgb(250,20,5)" fg:x="1924" fg:w="2"/><text x="23.4196%" y="1535.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="23.1696%" y="1509" width="0.0241%" height="15" fill="rgb(215,198,30)" fg:x="1924" fg:w="2"/><text x="23.4196%" y="1519.50"></text></g><g><title>std::sync::poison::Flag::guard (2 samples, 0.02%)</title><rect x="23.1696%" y="1493" width="0.0241%" height="15" fill="rgb(246,142,8)" fg:x="1924" fg:w="2"/><text x="23.4196%" y="1503.50"></text></g><g><title>std::thread::panicking (2 samples, 0.02%)</title><rect x="23.1696%" y="1477" width="0.0241%" height="15" fill="rgb(243,26,38)" fg:x="1924" fg:w="2"/><text x="23.4196%" y="1487.50"></text></g><g><title>std::panicking::panicking (2 samples, 0.02%)</title><rect x="23.1696%" y="1461" width="0.0241%" height="15" fill="rgb(205,133,28)" fg:x="1924" fg:w="2"/><text x="23.4196%" y="1471.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (2 samples, 0.02%)</title><rect x="23.1696%" y="1445" width="0.0241%" height="15" fill="rgb(212,34,0)" fg:x="1924" fg:w="2"/><text x="23.4196%" y="1455.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.04%)</title><rect x="23.2057%" y="1461" width="0.0361%" height="15" fill="rgb(251,226,22)" fg:x="1927" fg:w="3"/><text x="23.4557%" y="1471.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.04%)</title><rect x="23.2057%" y="1445" width="0.0361%" height="15" fill="rgb(252,119,9)" fg:x="1927" fg:w="3"/><text x="23.4557%" y="1455.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.04%)</title><rect x="23.2057%" y="1429" width="0.0361%" height="15" fill="rgb(213,150,50)" fg:x="1927" fg:w="3"/><text x="23.4557%" y="1439.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.04%)</title><rect x="23.2057%" y="1413" width="0.0361%" height="15" fill="rgb(212,24,39)" fg:x="1927" fg:w="3"/><text x="23.4557%" y="1423.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="23.2298%" y="1397" width="0.0120%" height="15" fill="rgb(213,46,39)" fg:x="1929" fg:w="1"/><text x="23.4798%" y="1407.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (4 samples, 0.05%)</title><rect x="23.2057%" y="1477" width="0.0482%" height="15" fill="rgb(239,106,12)" fg:x="1927" fg:w="4"/><text x="23.4557%" y="1487.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="23.2418%" y="1461" width="0.0120%" height="15" fill="rgb(249,229,21)" fg:x="1930" fg:w="1"/><text x="23.4918%" y="1471.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="23.2418%" y="1445" width="0.0120%" height="15" fill="rgb(212,158,3)" fg:x="1930" fg:w="1"/><text x="23.4918%" y="1455.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="23.2418%" y="1429" width="0.0120%" height="15" fill="rgb(253,26,48)" fg:x="1930" fg:w="1"/><text x="23.4918%" y="1439.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="23.2418%" y="1413" width="0.0120%" height="15" fill="rgb(238,178,20)" fg:x="1930" fg:w="1"/><text x="23.4918%" y="1423.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.01%)</title><rect x="23.2418%" y="1397" width="0.0120%" height="15" fill="rgb(208,86,15)" fg:x="1930" fg:w="1"/><text x="23.4918%" y="1407.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="23.2418%" y="1381" width="0.0120%" height="15" fill="rgb(239,42,53)" fg:x="1930" fg:w="1"/><text x="23.4918%" y="1391.50"></text></g><g><title>wasmer::sys::exports::Exports::get_function (6 samples, 0.07%)</title><rect x="23.1936%" y="1541" width="0.0723%" height="15" fill="rgb(245,226,8)" fg:x="1926" fg:w="6"/><text x="23.4436%" y="1551.50"></text></g><g><title>wasmer::sys::exports::Exports::get (5 samples, 0.06%)</title><rect x="23.2057%" y="1525" width="0.0602%" height="15" fill="rgb(216,176,32)" fg:x="1927" fg:w="5"/><text x="23.4557%" y="1535.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (5 samples, 0.06%)</title><rect x="23.2057%" y="1509" width="0.0602%" height="15" fill="rgb(231,186,21)" fg:x="1927" fg:w="5"/><text x="23.4557%" y="1519.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (5 samples, 0.06%)</title><rect x="23.2057%" y="1493" width="0.0602%" height="15" fill="rgb(205,95,49)" fg:x="1927" fg:w="5"/><text x="23.4557%" y="1503.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (1 samples, 0.01%)</title><rect x="23.2539%" y="1477" width="0.0120%" height="15" fill="rgb(217,145,8)" fg:x="1931" fg:w="1"/><text x="23.5039%" y="1487.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="23.2539%" y="1461" width="0.0120%" height="15" fill="rgb(239,144,48)" fg:x="1931" fg:w="1"/><text x="23.5039%" y="1471.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="23.2539%" y="1445" width="0.0120%" height="15" fill="rgb(214,189,23)" fg:x="1931" fg:w="1"/><text x="23.5039%" y="1455.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.01%)</title><rect x="23.2539%" y="1429" width="0.0120%" height="15" fill="rgb(229,157,17)" fg:x="1931" fg:w="1"/><text x="23.5039%" y="1439.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.01%)</title><rect x="23.2539%" y="1413" width="0.0120%" height="15" fill="rgb(230,5,48)" fg:x="1931" fg:w="1"/><text x="23.5039%" y="1423.50"></text></g><g><title>indexmap::map::core::equivalent::{{closure}} (1 samples, 0.01%)</title><rect x="23.2539%" y="1397" width="0.0120%" height="15" fill="rgb(224,156,48)" fg:x="1931" fg:w="1"/><text x="23.5039%" y="1407.50"></text></g><g><title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.01%)</title><rect x="23.2539%" y="1381" width="0.0120%" height="15" fill="rgb(223,14,29)" fg:x="1931" fg:w="1"/><text x="23.5039%" y="1391.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.01%)</title><rect x="23.2539%" y="1365" width="0.0120%" height="15" fill="rgb(229,96,36)" fg:x="1931" fg:w="1"/><text x="23.5039%" y="1375.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="23.2539%" y="1349" width="0.0120%" height="15" fill="rgb(231,102,53)" fg:x="1931" fg:w="1"/><text x="23.5039%" y="1359.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="23.2539%" y="1333" width="0.0120%" height="15" fill="rgb(210,77,38)" fg:x="1931" fg:w="1"/><text x="23.5039%" y="1343.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="23.2539%" y="1317" width="0.0120%" height="15" fill="rgb(235,131,6)" fg:x="1931" fg:w="1"/><text x="23.5039%" y="1327.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="23.2539%" y="1301" width="0.0120%" height="15" fill="rgb(252,55,38)" fg:x="1931" fg:w="1"/><text x="23.5039%" y="1311.50"></text></g><g><title>&lt;wasmer::sys::store::Store as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="23.2659%" y="1525" width="0.0241%" height="15" fill="rgb(246,38,14)" fg:x="1932" fg:w="2"/><text x="23.5159%" y="1535.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="23.2779%" y="1509" width="0.0120%" height="15" fill="rgb(242,27,5)" fg:x="1933" fg:w="1"/><text x="23.5279%" y="1519.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="23.2779%" y="1493" width="0.0120%" height="15" fill="rgb(228,65,35)" fg:x="1933" fg:w="1"/><text x="23.5279%" y="1503.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="23.2779%" y="1477" width="0.0120%" height="15" fill="rgb(245,93,11)" fg:x="1933" fg:w="1"/><text x="23.5279%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.05%)</title><rect x="23.2900%" y="1413" width="0.0482%" height="15" fill="rgb(213,1,31)" fg:x="1934" fg:w="4"/><text x="23.5400%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="23.3020%" y="1397" width="0.0361%" height="15" fill="rgb(237,205,14)" fg:x="1935" fg:w="3"/><text x="23.5520%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.04%)</title><rect x="23.3020%" y="1381" width="0.0361%" height="15" fill="rgb(232,118,45)" fg:x="1935" fg:w="3"/><text x="23.5520%" y="1391.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="23.3020%" y="1365" width="0.0361%" height="15" fill="rgb(218,5,6)" fg:x="1935" fg:w="3"/><text x="23.5520%" y="1375.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.04%)</title><rect x="23.3020%" y="1349" width="0.0361%" height="15" fill="rgb(251,87,51)" fg:x="1935" fg:w="3"/><text x="23.5520%" y="1359.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="23.3020%" y="1333" width="0.0361%" height="15" fill="rgb(207,225,20)" fg:x="1935" fg:w="3"/><text x="23.5520%" y="1343.50"></text></g><g><title>mi_malloc (3 samples, 0.04%)</title><rect x="23.3020%" y="1317" width="0.0361%" height="15" fill="rgb(222,78,54)" fg:x="1935" fg:w="3"/><text x="23.5520%" y="1327.50"></text></g><g><title>mi_heap_malloc (2 samples, 0.02%)</title><rect x="23.3141%" y="1301" width="0.0241%" height="15" fill="rgb(232,85,16)" fg:x="1936" fg:w="2"/><text x="23.5641%" y="1311.50"></text></g><g><title>mi_heap_malloc_small (2 samples, 0.02%)</title><rect x="23.3141%" y="1285" width="0.0241%" height="15" fill="rgb(244,25,33)" fg:x="1936" fg:w="2"/><text x="23.5641%" y="1295.50"></text></g><g><title>_mi_page_malloc (2 samples, 0.02%)</title><rect x="23.3141%" y="1269" width="0.0241%" height="15" fill="rgb(233,24,36)" fg:x="1936" fg:w="2"/><text x="23.5641%" y="1279.50"></text></g><g><title>mi_block_next (2 samples, 0.02%)</title><rect x="23.3141%" y="1253" width="0.0241%" height="15" fill="rgb(253,49,54)" fg:x="1936" fg:w="2"/><text x="23.5641%" y="1263.50"></text></g><g><title>mi_is_in_same_page (2 samples, 0.02%)</title><rect x="23.3141%" y="1237" width="0.0241%" height="15" fill="rgb(245,12,22)" fg:x="1936" fg:w="2"/><text x="23.5641%" y="1247.50"></text></g><g><title>_mi_segment_page_start (1 samples, 0.01%)</title><rect x="23.3261%" y="1221" width="0.0120%" height="15" fill="rgb(253,141,28)" fg:x="1937" fg:w="1"/><text x="23.5761%" y="1231.50"></text></g><g><title>_mi_segment_page_start_from_slice (1 samples, 0.01%)</title><rect x="23.3261%" y="1205" width="0.0120%" height="15" fill="rgb(225,207,27)" fg:x="1937" fg:w="1"/><text x="23.5761%" y="1215.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.07%)</title><rect x="23.2900%" y="1461" width="0.0723%" height="15" fill="rgb(220,84,2)" fg:x="1934" fg:w="6"/><text x="23.5400%" y="1471.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.07%)</title><rect x="23.2900%" y="1445" width="0.0723%" height="15" fill="rgb(224,37,37)" fg:x="1934" fg:w="6"/><text x="23.5400%" y="1455.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.07%)</title><rect x="23.2900%" y="1429" width="0.0723%" height="15" fill="rgb(220,143,18)" fg:x="1934" fg:w="6"/><text x="23.5400%" y="1439.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.02%)</title><rect x="23.3382%" y="1413" width="0.0241%" height="15" fill="rgb(210,88,33)" fg:x="1938" fg:w="2"/><text x="23.5882%" y="1423.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="23.3382%" y="1397" width="0.0241%" height="15" fill="rgb(219,87,51)" fg:x="1938" fg:w="2"/><text x="23.5882%" y="1407.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="23.3382%" y="1381" width="0.0241%" height="15" fill="rgb(211,7,35)" fg:x="1938" fg:w="2"/><text x="23.5882%" y="1391.50"></text></g><g><title>&lt;wasmer_engine::export::ExportFunction as core::clone::Clone&gt;::clone (7 samples, 0.08%)</title><rect x="23.2900%" y="1525" width="0.0843%" height="15" fill="rgb(232,77,2)" fg:x="1934" fg:w="7"/><text x="23.5400%" y="1535.50"></text></g><g><title>&lt;wasmer_vm::export::VMFunction as core::clone::Clone&gt;::clone (7 samples, 0.08%)</title><rect x="23.2900%" y="1509" width="0.0843%" height="15" fill="rgb(249,94,25)" fg:x="1934" fg:w="7"/><text x="23.5400%" y="1519.50"></text></g><g><title>&lt;wasmer_types::types::FunctionType as core::clone::Clone&gt;::clone (7 samples, 0.08%)</title><rect x="23.2900%" y="1493" width="0.0843%" height="15" fill="rgb(215,112,2)" fg:x="1934" fg:w="7"/><text x="23.5400%" y="1503.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T],A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.08%)</title><rect x="23.2900%" y="1477" width="0.0843%" height="15" fill="rgb(226,115,48)" fg:x="1934" fg:w="7"/><text x="23.5400%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (1 samples, 0.01%)</title><rect x="23.3622%" y="1461" width="0.0120%" height="15" fill="rgb(249,196,10)" fg:x="1940" fg:w="1"/><text x="23.6122%" y="1471.50"></text></g><g><title>wasmer::sys::exports::Exports::get_native_function (16 samples, 0.19%)</title><rect x="23.1936%" y="1557" width="0.1927%" height="15" fill="rgb(237,109,14)" fg:x="1926" fg:w="16"/><text x="23.4436%" y="1567.50"></text></g><g><title>wasmer::sys::externals::function::Function::native (10 samples, 0.12%)</title><rect x="23.2659%" y="1541" width="0.1204%" height="15" fill="rgb(217,103,53)" fg:x="1932" fg:w="10"/><text x="23.5159%" y="1551.50"></text></g><g><title>wasmer_types::types::FunctionType::params (1 samples, 0.01%)</title><rect x="23.3743%" y="1525" width="0.0120%" height="15" fill="rgb(244,137,9)" fg:x="1941" fg:w="1"/><text x="23.6243%" y="1535.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (3 samples, 0.04%)</title><rect x="23.3984%" y="1541" width="0.0361%" height="15" fill="rgb(227,201,3)" fg:x="1943" fg:w="3"/><text x="23.6484%" y="1551.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (3 samples, 0.04%)</title><rect x="23.3984%" y="1525" width="0.0361%" height="15" fill="rgb(243,94,6)" fg:x="1943" fg:w="3"/><text x="23.6484%" y="1535.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.04%)</title><rect x="23.3984%" y="1509" width="0.0361%" height="15" fill="rgb(235,118,5)" fg:x="1943" fg:w="3"/><text x="23.6484%" y="1519.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="23.3984%" y="1493" width="0.0361%" height="15" fill="rgb(247,10,30)" fg:x="1943" fg:w="3"/><text x="23.6484%" y="1503.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.04%)</title><rect x="23.3984%" y="1477" width="0.0361%" height="15" fill="rgb(205,26,28)" fg:x="1943" fg:w="3"/><text x="23.6484%" y="1487.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="23.3984%" y="1461" width="0.0361%" height="15" fill="rgb(206,99,35)" fg:x="1943" fg:w="3"/><text x="23.6484%" y="1471.50"></text></g><g><title>mi_malloc (3 samples, 0.04%)</title><rect x="23.3984%" y="1445" width="0.0361%" height="15" fill="rgb(238,130,40)" fg:x="1943" fg:w="3"/><text x="23.6484%" y="1455.50"></text></g><g><title>mi_heap_malloc (3 samples, 0.04%)</title><rect x="23.3984%" y="1429" width="0.0361%" height="15" fill="rgb(224,126,31)" fg:x="1943" fg:w="3"/><text x="23.6484%" y="1439.50"></text></g><g><title>mi_heap_malloc_small (3 samples, 0.04%)</title><rect x="23.3984%" y="1413" width="0.0361%" height="15" fill="rgb(254,105,17)" fg:x="1943" fg:w="3"/><text x="23.6484%" y="1423.50"></text></g><g><title>_mi_page_malloc (3 samples, 0.04%)</title><rect x="23.3984%" y="1397" width="0.0361%" height="15" fill="rgb(216,87,36)" fg:x="1943" fg:w="3"/><text x="23.6484%" y="1407.50"></text></g><g><title>mi_block_next (3 samples, 0.04%)</title><rect x="23.3984%" y="1381" width="0.0361%" height="15" fill="rgb(240,21,12)" fg:x="1943" fg:w="3"/><text x="23.6484%" y="1391.50"></text></g><g><title>mi_block_nextx (3 samples, 0.04%)</title><rect x="23.3984%" y="1365" width="0.0361%" height="15" fill="rgb(245,192,34)" fg:x="1943" fg:w="3"/><text x="23.6484%" y="1375.50"></text></g><g><title>mi_ptr_decode (3 samples, 0.04%)</title><rect x="23.3984%" y="1349" width="0.0361%" height="15" fill="rgb(226,100,49)" fg:x="1943" fg:w="3"/><text x="23.6484%" y="1359.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (1 samples, 0.01%)</title><rect x="23.4465%" y="1269" width="0.0120%" height="15" fill="rgb(245,188,27)" fg:x="1947" fg:w="1"/><text x="23.6965%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="23.4586%" y="1269" width="0.0120%" height="15" fill="rgb(212,170,8)" fg:x="1948" fg:w="1"/><text x="23.7086%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="23.4586%" y="1253" width="0.0120%" height="15" fill="rgb(217,113,29)" fg:x="1948" fg:w="1"/><text x="23.7086%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="23.4586%" y="1237" width="0.0120%" height="15" fill="rgb(237,30,3)" fg:x="1948" fg:w="1"/><text x="23.7086%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="23.4586%" y="1221" width="0.0120%" height="15" fill="rgb(227,19,28)" fg:x="1948" fg:w="1"/><text x="23.7086%" y="1231.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="23.4586%" y="1205" width="0.0120%" height="15" fill="rgb(239,172,45)" fg:x="1948" fg:w="1"/><text x="23.7086%" y="1215.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="23.4586%" y="1189" width="0.0120%" height="15" fill="rgb(254,55,39)" fg:x="1948" fg:w="1"/><text x="23.7086%" y="1199.50"></text></g><g><title>mi_malloc (1 samples, 0.01%)</title><rect x="23.4586%" y="1173" width="0.0120%" height="15" fill="rgb(249,208,12)" fg:x="1948" fg:w="1"/><text x="23.7086%" y="1183.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.01%)</title><rect x="23.4586%" y="1157" width="0.0120%" height="15" fill="rgb(240,52,13)" fg:x="1948" fg:w="1"/><text x="23.7086%" y="1167.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.01%)</title><rect x="23.4586%" y="1141" width="0.0120%" height="15" fill="rgb(252,149,13)" fg:x="1948" fg:w="1"/><text x="23.7086%" y="1151.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.01%)</title><rect x="23.4586%" y="1125" width="0.0120%" height="15" fill="rgb(232,81,48)" fg:x="1948" fg:w="1"/><text x="23.7086%" y="1135.50"></text></g><g><title>mi_block_next (1 samples, 0.01%)</title><rect x="23.4586%" y="1109" width="0.0120%" height="15" fill="rgb(222,144,2)" fg:x="1948" fg:w="1"/><text x="23.7086%" y="1119.50"></text></g><g><title>mi_block_nextx (1 samples, 0.01%)</title><rect x="23.4586%" y="1093" width="0.0120%" height="15" fill="rgb(216,81,32)" fg:x="1948" fg:w="1"/><text x="23.7086%" y="1103.50"></text></g><g><title>mi_ptr_decode (1 samples, 0.01%)</title><rect x="23.4586%" y="1077" width="0.0120%" height="15" fill="rgb(244,78,51)" fg:x="1948" fg:w="1"/><text x="23.7086%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.04%)</title><rect x="23.4465%" y="1317" width="0.0361%" height="15" fill="rgb(217,66,21)" fg:x="1947" fg:w="3"/><text x="23.6965%" y="1327.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.04%)</title><rect x="23.4465%" y="1301" width="0.0361%" height="15" fill="rgb(247,101,42)" fg:x="1947" fg:w="3"/><text x="23.6965%" y="1311.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.04%)</title><rect x="23.4465%" y="1285" width="0.0361%" height="15" fill="rgb(227,81,39)" fg:x="1947" fg:w="3"/><text x="23.6965%" y="1295.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="23.4706%" y="1269" width="0.0120%" height="15" fill="rgb(220,223,44)" fg:x="1949" fg:w="1"/><text x="23.7206%" y="1279.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="23.4706%" y="1253" width="0.0120%" height="15" fill="rgb(205,218,2)" fg:x="1949" fg:w="1"/><text x="23.7206%" y="1263.50"></text></g><g><title>&lt;wasmer_types::types::FunctionType as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="23.4465%" y="1349" width="0.0482%" height="15" fill="rgb(212,207,28)" fg:x="1947" fg:w="4"/><text x="23.6965%" y="1359.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T],A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="23.4465%" y="1333" width="0.0482%" height="15" fill="rgb(224,12,41)" fg:x="1947" fg:w="4"/><text x="23.6965%" y="1343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (1 samples, 0.01%)</title><rect x="23.4827%" y="1317" width="0.0120%" height="15" fill="rgb(216,118,12)" fg:x="1950" fg:w="1"/><text x="23.7327%" y="1327.50"></text></g><g><title>__rg_alloc (1 samples, 0.01%)</title><rect x="23.5067%" y="1109" width="0.0120%" height="15" fill="rgb(252,97,46)" fg:x="1952" fg:w="1"/><text x="23.7567%" y="1119.50"></text></g><g><title>&lt;mimalloc::MiMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.01%)</title><rect x="23.5067%" y="1093" width="0.0120%" height="15" fill="rgb(244,206,19)" fg:x="1952" fg:w="1"/><text x="23.7567%" y="1103.50"></text></g><g><title>mimalloc::may_use_unaligned_api (1 samples, 0.01%)</title><rect x="23.5067%" y="1077" width="0.0120%" height="15" fill="rgb(231,84,31)" fg:x="1952" fg:w="1"/><text x="23.7567%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.07%)</title><rect x="23.4947%" y="1205" width="0.0723%" height="15" fill="rgb(244,133,0)" fg:x="1951" fg:w="6"/><text x="23.7447%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.07%)</title><rect x="23.4947%" y="1189" width="0.0723%" height="15" fill="rgb(223,15,50)" fg:x="1951" fg:w="6"/><text x="23.7447%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.07%)</title><rect x="23.4947%" y="1173" width="0.0723%" height="15" fill="rgb(250,118,49)" fg:x="1951" fg:w="6"/><text x="23.7447%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.07%)</title><rect x="23.4947%" y="1157" width="0.0723%" height="15" fill="rgb(248,25,38)" fg:x="1951" fg:w="6"/><text x="23.7447%" y="1167.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.07%)</title><rect x="23.4947%" y="1141" width="0.0723%" height="15" fill="rgb(215,70,14)" fg:x="1951" fg:w="6"/><text x="23.7447%" y="1151.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.07%)</title><rect x="23.4947%" y="1125" width="0.0723%" height="15" fill="rgb(215,28,15)" fg:x="1951" fg:w="6"/><text x="23.7447%" y="1135.50"></text></g><g><title>mi_malloc (4 samples, 0.05%)</title><rect x="23.5188%" y="1109" width="0.0482%" height="15" fill="rgb(243,6,28)" fg:x="1953" fg:w="4"/><text x="23.7688%" y="1119.50"></text></g><g><title>mi_heap_malloc (4 samples, 0.05%)</title><rect x="23.5188%" y="1093" width="0.0482%" height="15" fill="rgb(222,130,1)" fg:x="1953" fg:w="4"/><text x="23.7688%" y="1103.50"></text></g><g><title>mi_heap_malloc_small (4 samples, 0.05%)</title><rect x="23.5188%" y="1077" width="0.0482%" height="15" fill="rgb(236,166,44)" fg:x="1953" fg:w="4"/><text x="23.7688%" y="1087.50"></text></g><g><title>_mi_page_malloc (4 samples, 0.05%)</title><rect x="23.5188%" y="1061" width="0.0482%" height="15" fill="rgb(221,108,14)" fg:x="1953" fg:w="4"/><text x="23.7688%" y="1071.50"></text></g><g><title>mi_block_next (3 samples, 0.04%)</title><rect x="23.5308%" y="1045" width="0.0361%" height="15" fill="rgb(252,3,45)" fg:x="1954" fg:w="3"/><text x="23.7808%" y="1055.50"></text></g><g><title>mi_block_nextx (3 samples, 0.04%)</title><rect x="23.5308%" y="1029" width="0.0361%" height="15" fill="rgb(237,68,30)" fg:x="1954" fg:w="3"/><text x="23.7808%" y="1039.50"></text></g><g><title>mi_ptr_decode (3 samples, 0.04%)</title><rect x="23.5308%" y="1013" width="0.0361%" height="15" fill="rgb(211,79,22)" fg:x="1954" fg:w="3"/><text x="23.7808%" y="1023.50"></text></g><g><title>&lt;wasmer_types::module::ExportsIterator&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.13%)</title><rect x="23.4465%" y="1429" width="0.1325%" height="15" fill="rgb(252,185,21)" fg:x="1947" fg:w="11"/><text x="23.6965%" y="1439.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.13%)</title><rect x="23.4465%" y="1413" width="0.1325%" height="15" fill="rgb(225,189,26)" fg:x="1947" fg:w="11"/><text x="23.6965%" y="1423.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.13%)</title><rect x="23.4465%" y="1397" width="0.1325%" height="15" fill="rgb(241,30,40)" fg:x="1947" fg:w="11"/><text x="23.6965%" y="1407.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (11 samples, 0.13%)</title><rect x="23.4465%" y="1381" width="0.1325%" height="15" fill="rgb(235,215,44)" fg:x="1947" fg:w="11"/><text x="23.6965%" y="1391.50"></text></g><g><title>wasmer_types::module::ModuleInfo::exports::{{closure}} (11 samples, 0.13%)</title><rect x="23.4465%" y="1365" width="0.1325%" height="15" fill="rgb(205,8,29)" fg:x="1947" fg:w="11"/><text x="23.6965%" y="1375.50"></text></g><g><title>wasmer_types::types::ExportType&lt;T&gt;::new (7 samples, 0.08%)</title><rect x="23.4947%" y="1349" width="0.0843%" height="15" fill="rgb(241,137,42)" fg:x="1951" fg:w="7"/><text x="23.7447%" y="1359.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (7 samples, 0.08%)</title><rect x="23.4947%" y="1333" width="0.0843%" height="15" fill="rgb(237,155,2)" fg:x="1951" fg:w="7"/><text x="23.7447%" y="1343.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (7 samples, 0.08%)</title><rect x="23.4947%" y="1317" width="0.0843%" height="15" fill="rgb(245,29,42)" fg:x="1951" fg:w="7"/><text x="23.7447%" y="1327.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (7 samples, 0.08%)</title><rect x="23.4947%" y="1301" width="0.0843%" height="15" fill="rgb(234,101,35)" fg:x="1951" fg:w="7"/><text x="23.7447%" y="1311.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (7 samples, 0.08%)</title><rect x="23.4947%" y="1285" width="0.0843%" height="15" fill="rgb(228,64,37)" fg:x="1951" fg:w="7"/><text x="23.7447%" y="1295.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (7 samples, 0.08%)</title><rect x="23.4947%" y="1269" width="0.0843%" height="15" fill="rgb(217,214,36)" fg:x="1951" fg:w="7"/><text x="23.7447%" y="1279.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 0.08%)</title><rect x="23.4947%" y="1253" width="0.0843%" height="15" fill="rgb(243,70,3)" fg:x="1951" fg:w="7"/><text x="23.7447%" y="1263.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.08%)</title><rect x="23.4947%" y="1237" width="0.0843%" height="15" fill="rgb(253,158,52)" fg:x="1951" fg:w="7"/><text x="23.7447%" y="1247.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 0.08%)</title><rect x="23.4947%" y="1221" width="0.0843%" height="15" fill="rgb(234,111,54)" fg:x="1951" fg:w="7"/><text x="23.7447%" y="1231.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="23.5670%" y="1205" width="0.0120%" height="15" fill="rgb(217,70,32)" fg:x="1957" fg:w="1"/><text x="23.8170%" y="1215.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="23.5670%" y="1189" width="0.0120%" height="15" fill="rgb(234,18,33)" fg:x="1957" fg:w="1"/><text x="23.8170%" y="1199.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="23.5670%" y="1173" width="0.0120%" height="15" fill="rgb(234,12,49)" fg:x="1957" fg:w="1"/><text x="23.8170%" y="1183.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="23.6753%" y="1237" width="0.0120%" height="15" fill="rgb(236,10,21)" fg:x="1966" fg:w="1"/><text x="23.9253%" y="1247.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="23.6753%" y="1221" width="0.0120%" height="15" fill="rgb(248,182,45)" fg:x="1966" fg:w="1"/><text x="23.9253%" y="1231.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="23.6753%" y="1253" width="0.0241%" height="15" fill="rgb(217,95,36)" fg:x="1966" fg:w="2"/><text x="23.9253%" y="1263.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="23.6874%" y="1237" width="0.0120%" height="15" fill="rgb(212,110,31)" fg:x="1967" fg:w="1"/><text x="23.9374%" y="1247.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (3 samples, 0.04%)</title><rect x="23.6753%" y="1333" width="0.0361%" height="15" fill="rgb(206,32,53)" fg:x="1966" fg:w="3"/><text x="23.9253%" y="1343.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (3 samples, 0.04%)</title><rect x="23.6753%" y="1317" width="0.0361%" height="15" fill="rgb(246,141,37)" fg:x="1966" fg:w="3"/><text x="23.9253%" y="1327.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="23.6753%" y="1301" width="0.0361%" height="15" fill="rgb(219,16,7)" fg:x="1966" fg:w="3"/><text x="23.9253%" y="1311.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="23.6753%" y="1285" width="0.0361%" height="15" fill="rgb(230,205,45)" fg:x="1966" fg:w="3"/><text x="23.9253%" y="1295.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="23.6753%" y="1269" width="0.0361%" height="15" fill="rgb(231,43,49)" fg:x="1966" fg:w="3"/><text x="23.9253%" y="1279.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.01%)</title><rect x="23.6994%" y="1253" width="0.0120%" height="15" fill="rgb(212,106,34)" fg:x="1968" fg:w="1"/><text x="23.9494%" y="1263.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (6 samples, 0.07%)</title><rect x="23.6753%" y="1349" width="0.0723%" height="15" fill="rgb(206,83,17)" fg:x="1966" fg:w="6"/><text x="23.9253%" y="1359.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.04%)</title><rect x="23.7115%" y="1333" width="0.0361%" height="15" fill="rgb(244,154,49)" fg:x="1969" fg:w="3"/><text x="23.9615%" y="1343.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.04%)</title><rect x="23.7115%" y="1317" width="0.0361%" height="15" fill="rgb(244,149,49)" fg:x="1969" fg:w="3"/><text x="23.9615%" y="1327.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.04%)</title><rect x="23.7115%" y="1301" width="0.0361%" height="15" fill="rgb(227,134,18)" fg:x="1969" fg:w="3"/><text x="23.9615%" y="1311.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="23.7355%" y="1285" width="0.0120%" height="15" fill="rgb(237,116,36)" fg:x="1971" fg:w="1"/><text x="23.9855%" y="1295.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="23.7355%" y="1269" width="0.0120%" height="15" fill="rgb(205,129,40)" fg:x="1971" fg:w="1"/><text x="23.9855%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="23.7476%" y="1317" width="0.0120%" height="15" fill="rgb(236,178,4)" fg:x="1972" fg:w="1"/><text x="23.9976%" y="1327.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (1 samples, 0.01%)</title><rect x="23.7476%" y="1301" width="0.0120%" height="15" fill="rgb(251,76,53)" fg:x="1972" fg:w="1"/><text x="23.9976%" y="1311.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (2 samples, 0.02%)</title><rect x="23.7476%" y="1333" width="0.0241%" height="15" fill="rgb(242,92,40)" fg:x="1972" fg:w="2"/><text x="23.9976%" y="1343.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="23.7596%" y="1317" width="0.0120%" height="15" fill="rgb(209,45,30)" fg:x="1973" fg:w="1"/><text x="24.0096%" y="1327.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="23.7596%" y="1301" width="0.0120%" height="15" fill="rgb(218,157,36)" fg:x="1973" fg:w="1"/><text x="24.0096%" y="1311.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.01%)</title><rect x="23.7596%" y="1285" width="0.0120%" height="15" fill="rgb(222,186,16)" fg:x="1973" fg:w="1"/><text x="24.0096%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.02%)</title><rect x="23.7717%" y="1317" width="0.0241%" height="15" fill="rgb(254,72,35)" fg:x="1974" fg:w="2"/><text x="24.0217%" y="1327.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="23.7717%" y="1301" width="0.0241%" height="15" fill="rgb(224,25,35)" fg:x="1974" fg:w="2"/><text x="24.0217%" y="1311.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::free_buckets (1 samples, 0.01%)</title><rect x="23.8078%" y="1189" width="0.0120%" height="15" fill="rgb(206,135,52)" fg:x="1977" fg:w="1"/><text x="24.0578%" y="1199.50"></text></g><g><title>&lt;hashbrown::raw::inner::alloc::inner::Global as hashbrown::raw::inner::alloc::inner::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="23.8078%" y="1173" width="0.0120%" height="15" fill="rgb(229,174,47)" fg:x="1977" fg:w="1"/><text x="24.0578%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="23.8078%" y="1157" width="0.0120%" height="15" fill="rgb(242,184,21)" fg:x="1977" fg:w="1"/><text x="24.0578%" y="1167.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="23.8078%" y="1141" width="0.0120%" height="15" fill="rgb(213,22,45)" fg:x="1977" fg:w="1"/><text x="24.0578%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::inner::RawTableInner&lt;hashbrown::raw::inner::alloc::inner::Global&gt;,hashbrown::raw::inner::RawTableInner&lt;hashbrown::raw::inner::alloc::inner::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (2 samples, 0.02%)</title><rect x="23.8078%" y="1237" width="0.0241%" height="15" fill="rgb(237,81,54)" fg:x="1977" fg:w="2"/><text x="24.0578%" y="1247.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="23.8078%" y="1221" width="0.0241%" height="15" fill="rgb(248,177,18)" fg:x="1977" fg:w="2"/><text x="24.0578%" y="1231.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (2 samples, 0.02%)</title><rect x="23.8078%" y="1205" width="0.0241%" height="15" fill="rgb(254,31,16)" fg:x="1977" fg:w="2"/><text x="24.0578%" y="1215.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::is_empty_singleton (1 samples, 0.01%)</title><rect x="23.8198%" y="1189" width="0.0120%" height="15" fill="rgb(235,20,31)" fg:x="1978" fg:w="1"/><text x="24.0698%" y="1199.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_insert_slot (4 samples, 0.05%)</title><rect x="23.8319%" y="1221" width="0.0482%" height="15" fill="rgb(240,56,43)" fg:x="1979" fg:w="4"/><text x="24.0819%" y="1231.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_empty_or_deleted (3 samples, 0.04%)</title><rect x="23.8439%" y="1205" width="0.0361%" height="15" fill="rgb(237,197,51)" fg:x="1980" fg:w="3"/><text x="24.0939%" y="1215.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (3 samples, 0.04%)</title><rect x="23.8439%" y="1189" width="0.0361%" height="15" fill="rgb(241,162,44)" fg:x="1980" fg:w="3"/><text x="24.0939%" y="1199.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_insert_slot (5 samples, 0.06%)</title><rect x="23.8319%" y="1237" width="0.0602%" height="15" fill="rgb(224,23,20)" fg:x="1979" fg:w="5"/><text x="24.0819%" y="1247.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::set_ctrl_h2 (1 samples, 0.01%)</title><rect x="23.8801%" y="1221" width="0.0120%" height="15" fill="rgb(250,109,34)" fg:x="1983" fg:w="1"/><text x="24.1301%" y="1231.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::set_ctrl (1 samples, 0.01%)</title><rect x="23.8801%" y="1205" width="0.0120%" height="15" fill="rgb(214,175,50)" fg:x="1983" fg:w="1"/><text x="24.1301%" y="1215.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve (16 samples, 0.19%)</title><rect x="23.7958%" y="1301" width="0.1927%" height="15" fill="rgb(213,182,5)" fg:x="1976" fg:w="16"/><text x="24.0458%" y="1311.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (16 samples, 0.19%)</title><rect x="23.7958%" y="1285" width="0.1927%" height="15" fill="rgb(209,199,19)" fg:x="1976" fg:w="16"/><text x="24.0458%" y="1295.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::reserve_rehash_inner (16 samples, 0.19%)</title><rect x="23.7958%" y="1269" width="0.1927%" height="15" fill="rgb(236,224,42)" fg:x="1976" fg:w="16"/><text x="24.0458%" y="1279.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::resize_inner (15 samples, 0.18%)</title><rect x="23.8078%" y="1253" width="0.1806%" height="15" fill="rgb(246,226,29)" fg:x="1977" fg:w="15"/><text x="24.0578%" y="1263.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_resize (8 samples, 0.10%)</title><rect x="23.8921%" y="1237" width="0.0963%" height="15" fill="rgb(227,223,11)" fg:x="1984" fg:w="8"/><text x="24.1421%" y="1247.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::fallible_with_capacity (8 samples, 0.10%)</title><rect x="23.8921%" y="1221" width="0.0963%" height="15" fill="rgb(219,7,51)" fg:x="1984" fg:w="8"/><text x="24.1421%" y="1231.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::new_uninitialized (8 samples, 0.10%)</title><rect x="23.8921%" y="1205" width="0.0963%" height="15" fill="rgb(245,167,10)" fg:x="1984" fg:w="8"/><text x="24.1421%" y="1215.50"></text></g><g><title>hashbrown::raw::inner::alloc::inner::do_alloc (8 samples, 0.10%)</title><rect x="23.8921%" y="1189" width="0.0963%" height="15" fill="rgb(237,224,16)" fg:x="1984" fg:w="8"/><text x="24.1421%" y="1199.50"></text></g><g><title>&lt;hashbrown::raw::inner::alloc::inner::Global as hashbrown::raw::inner::alloc::inner::Allocator&gt;::allocate (8 samples, 0.10%)</title><rect x="23.8921%" y="1173" width="0.0963%" height="15" fill="rgb(226,132,13)" fg:x="1984" fg:w="8"/><text x="24.1421%" y="1183.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.10%)</title><rect x="23.8921%" y="1157" width="0.0963%" height="15" fill="rgb(214,140,3)" fg:x="1984" fg:w="8"/><text x="24.1421%" y="1167.50"></text></g><g><title>mi_malloc (8 samples, 0.10%)</title><rect x="23.8921%" y="1141" width="0.0963%" height="15" fill="rgb(221,177,4)" fg:x="1984" fg:w="8"/><text x="24.1421%" y="1151.50"></text></g><g><title>mi_heap_malloc (8 samples, 0.10%)</title><rect x="23.8921%" y="1125" width="0.0963%" height="15" fill="rgb(238,139,3)" fg:x="1984" fg:w="8"/><text x="24.1421%" y="1135.50"></text></g><g><title>mi_heap_malloc_small (8 samples, 0.10%)</title><rect x="23.8921%" y="1109" width="0.0963%" height="15" fill="rgb(216,17,39)" fg:x="1984" fg:w="8"/><text x="24.1421%" y="1119.50"></text></g><g><title>_mi_page_malloc (8 samples, 0.10%)</title><rect x="23.8921%" y="1093" width="0.0963%" height="15" fill="rgb(238,120,9)" fg:x="1984" fg:w="8"/><text x="24.1421%" y="1103.50"></text></g><g><title>mi_block_next (6 samples, 0.07%)</title><rect x="23.9162%" y="1077" width="0.0723%" height="15" fill="rgb(244,92,53)" fg:x="1986" fg:w="6"/><text x="24.1662%" y="1087.50"></text></g><g><title>mi_block_nextx (6 samples, 0.07%)</title><rect x="23.9162%" y="1061" width="0.0723%" height="15" fill="rgb(224,148,33)" fg:x="1986" fg:w="6"/><text x="24.1662%" y="1071.50"></text></g><g><title>mi_ptr_decode (6 samples, 0.07%)</title><rect x="23.9162%" y="1045" width="0.0723%" height="15" fill="rgb(243,6,36)" fg:x="1986" fg:w="6"/><text x="24.1662%" y="1055.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::insert (18 samples, 0.22%)</title><rect x="23.7958%" y="1317" width="0.2168%" height="15" fill="rgb(230,102,11)" fg:x="1976" fg:w="18"/><text x="24.0458%" y="1327.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_insert_slot (2 samples, 0.02%)</title><rect x="23.9884%" y="1301" width="0.0241%" height="15" fill="rgb(234,148,36)" fg:x="1992" fg:w="2"/><text x="24.2384%" y="1311.50"></text></g><g><title>hashbrown::raw::inner::is_full (1 samples, 0.01%)</title><rect x="24.0005%" y="1285" width="0.0120%" height="15" fill="rgb(251,153,25)" fg:x="1993" fg:w="1"/><text x="24.2505%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (1 samples, 0.01%)</title><rect x="24.0125%" y="1237" width="0.0120%" height="15" fill="rgb(215,129,8)" fg:x="1994" fg:w="1"/><text x="24.2625%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.02%)</title><rect x="24.0246%" y="1221" width="0.0241%" height="15" fill="rgb(224,128,35)" fg:x="1995" fg:w="2"/><text x="24.2746%" y="1231.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.02%)</title><rect x="24.0246%" y="1205" width="0.0241%" height="15" fill="rgb(237,56,52)" fg:x="1995" fg:w="2"/><text x="24.2746%" y="1215.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.02%)</title><rect x="24.0246%" y="1189" width="0.0241%" height="15" fill="rgb(234,213,19)" fg:x="1995" fg:w="2"/><text x="24.2746%" y="1199.50"></text></g><g><title>_mi_heap_realloc_zero (2 samples, 0.02%)</title><rect x="24.0246%" y="1173" width="0.0241%" height="15" fill="rgb(252,82,23)" fg:x="1995" fg:w="2"/><text x="24.2746%" y="1183.50"></text></g><g><title>mi_heap_malloc (2 samples, 0.02%)</title><rect x="24.0246%" y="1157" width="0.0241%" height="15" fill="rgb(254,201,21)" fg:x="1995" fg:w="2"/><text x="24.2746%" y="1167.50"></text></g><g><title>_mi_malloc_generic (2 samples, 0.02%)</title><rect x="24.0246%" y="1141" width="0.0241%" height="15" fill="rgb(250,186,11)" fg:x="1995" fg:w="2"/><text x="24.2746%" y="1151.50"></text></g><g><title>mi_find_page (1 samples, 0.01%)</title><rect x="24.0366%" y="1125" width="0.0120%" height="15" fill="rgb(211,174,5)" fg:x="1996" fg:w="1"/><text x="24.2866%" y="1135.50"></text></g><g><title>mi_find_free_page (1 samples, 0.01%)</title><rect x="24.0366%" y="1109" width="0.0120%" height="15" fill="rgb(214,121,10)" fg:x="1996" fg:w="1"/><text x="24.2866%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (40 samples, 0.48%)</title><rect x="23.5790%" y="1413" width="0.4817%" height="15" fill="rgb(241,66,2)" fg:x="1958" fg:w="40"/><text x="23.8290%" y="1423.50"></text></g><g><title>&lt;indexmap::map::IndexMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (39 samples, 0.47%)</title><rect x="23.5910%" y="1397" width="0.4697%" height="15" fill="rgb(220,167,19)" fg:x="1959" fg:w="39"/><text x="23.8410%" y="1407.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert (37 samples, 0.45%)</title><rect x="23.6151%" y="1381" width="0.4456%" height="15" fill="rgb(231,54,50)" fg:x="1961" fg:w="37"/><text x="23.8651%" y="1391.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (33 samples, 0.40%)</title><rect x="23.6633%" y="1365" width="0.3974%" height="15" fill="rgb(239,217,53)" fg:x="1965" fg:w="33"/><text x="23.9133%" y="1375.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (26 samples, 0.31%)</title><rect x="23.7476%" y="1349" width="0.3131%" height="15" fill="rgb(248,8,0)" fg:x="1972" fg:w="26"/><text x="23.9976%" y="1359.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (24 samples, 0.29%)</title><rect x="23.7717%" y="1333" width="0.2890%" height="15" fill="rgb(229,118,37)" fg:x="1974" fg:w="24"/><text x="24.0217%" y="1343.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::reserve_entries (4 samples, 0.05%)</title><rect x="24.0125%" y="1317" width="0.0482%" height="15" fill="rgb(253,223,43)" fg:x="1994" fg:w="4"/><text x="24.2625%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (4 samples, 0.05%)</title><rect x="24.0125%" y="1301" width="0.0482%" height="15" fill="rgb(211,77,36)" fg:x="1994" fg:w="4"/><text x="24.2625%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (4 samples, 0.05%)</title><rect x="24.0125%" y="1285" width="0.0482%" height="15" fill="rgb(219,3,53)" fg:x="1994" fg:w="4"/><text x="24.2625%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (4 samples, 0.05%)</title><rect x="24.0125%" y="1269" width="0.0482%" height="15" fill="rgb(244,45,42)" fg:x="1994" fg:w="4"/><text x="24.2625%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (4 samples, 0.05%)</title><rect x="24.0125%" y="1253" width="0.0482%" height="15" fill="rgb(225,95,27)" fg:x="1994" fg:w="4"/><text x="24.2625%" y="1263.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.04%)</title><rect x="24.0246%" y="1237" width="0.0361%" height="15" fill="rgb(207,74,8)" fg:x="1995" fg:w="3"/><text x="24.2746%" y="1247.50"></text></g><g><title>mi_malloc (1 samples, 0.01%)</title><rect x="24.0487%" y="1221" width="0.0120%" height="15" fill="rgb(243,63,36)" fg:x="1997" fg:w="1"/><text x="24.2987%" y="1231.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.01%)</title><rect x="24.0487%" y="1205" width="0.0120%" height="15" fill="rgb(211,180,12)" fg:x="1997" fg:w="1"/><text x="24.2987%" y="1215.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.01%)</title><rect x="24.0487%" y="1189" width="0.0120%" height="15" fill="rgb(254,166,49)" fg:x="1997" fg:w="1"/><text x="24.2987%" y="1199.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.01%)</title><rect x="24.0487%" y="1173" width="0.0120%" height="15" fill="rgb(205,19,0)" fg:x="1997" fg:w="1"/><text x="24.2987%" y="1183.50"></text></g><g><title>mi_block_next (1 samples, 0.01%)</title><rect x="24.0487%" y="1157" width="0.0120%" height="15" fill="rgb(224,172,32)" fg:x="1997" fg:w="1"/><text x="24.2987%" y="1167.50"></text></g><g><title>mi_block_nextx (1 samples, 0.01%)</title><rect x="24.0487%" y="1141" width="0.0120%" height="15" fill="rgb(254,136,30)" fg:x="1997" fg:w="1"/><text x="24.2987%" y="1151.50"></text></g><g><title>mi_ptr_decode (1 samples, 0.01%)</title><rect x="24.0487%" y="1125" width="0.0120%" height="15" fill="rgb(246,19,35)" fg:x="1997" fg:w="1"/><text x="24.2987%" y="1135.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.02%)</title><rect x="24.0727%" y="1397" width="0.0241%" height="15" fill="rgb(219,24,36)" fg:x="1999" fg:w="2"/><text x="24.3227%" y="1407.50"></text></g><g><title>&lt;wasmer_engine::export::Export as core::convert::From&lt;wasmer_vm::export::VMExtern&gt;&gt;::from (1 samples, 0.01%)</title><rect x="24.0848%" y="1381" width="0.0120%" height="15" fill="rgb(251,55,1)" fg:x="2000" fg:w="1"/><text x="24.3348%" y="1391.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (1 samples, 0.01%)</title><rect x="24.0968%" y="1397" width="0.0120%" height="15" fill="rgb(218,117,39)" fg:x="2001" fg:w="1"/><text x="24.3468%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_types::types::ExportType&gt; (2 samples, 0.02%)</title><rect x="24.1089%" y="1397" width="0.0241%" height="15" fill="rgb(248,169,11)" fg:x="2002" fg:w="2"/><text x="24.3589%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_types::types::ExternType&gt; (2 samples, 0.02%)</title><rect x="24.1089%" y="1381" width="0.0241%" height="15" fill="rgb(244,40,44)" fg:x="2002" fg:w="2"/><text x="24.3589%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_types::types::FunctionType&gt; (2 samples, 0.02%)</title><rect x="24.1089%" y="1365" width="0.0241%" height="15" fill="rgb(234,62,37)" fg:x="2002" fg:w="2"/><text x="24.3589%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[wasmer_types::types::Type]&gt;&gt; (2 samples, 0.02%)</title><rect x="24.1089%" y="1349" width="0.0241%" height="15" fill="rgb(207,117,42)" fg:x="2002" fg:w="2"/><text x="24.3589%" y="1359.50"></text></g><g><title>alloc::alloc::box_free (2 samples, 0.02%)</title><rect x="24.1089%" y="1333" width="0.0241%" height="15" fill="rgb(213,43,2)" fg:x="2002" fg:w="2"/><text x="24.3589%" y="1343.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="24.1089%" y="1317" width="0.0241%" height="15" fill="rgb(244,202,51)" fg:x="2002" fg:w="2"/><text x="24.3589%" y="1327.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="24.1089%" y="1301" width="0.0241%" height="15" fill="rgb(253,174,46)" fg:x="2002" fg:w="2"/><text x="24.3589%" y="1311.50"></text></g><g><title>mi_free (2 samples, 0.02%)</title><rect x="24.1089%" y="1285" width="0.0241%" height="15" fill="rgb(251,23,1)" fg:x="2002" fg:w="2"/><text x="24.3589%" y="1295.50"></text></g><g><title>mi_check_is_double_free (1 samples, 0.01%)</title><rect x="24.1209%" y="1269" width="0.0120%" height="15" fill="rgb(253,26,1)" fg:x="2003" fg:w="1"/><text x="24.3709%" y="1279.50"></text></g><g><title>mi_block_nextx (1 samples, 0.01%)</title><rect x="24.1209%" y="1253" width="0.0120%" height="15" fill="rgb(216,89,31)" fg:x="2003" fg:w="1"/><text x="24.3709%" y="1263.50"></text></g><g><title>mi_ptr_decode (1 samples, 0.01%)</title><rect x="24.1209%" y="1237" width="0.0120%" height="15" fill="rgb(209,109,5)" fg:x="2003" fg:w="1"/><text x="24.3709%" y="1247.50"></text></g><g><title>wasmer::sys::externals::Extern::from_vm_export (4 samples, 0.05%)</title><rect x="24.1329%" y="1397" width="0.0482%" height="15" fill="rgb(229,63,13)" fg:x="2004" fg:w="4"/><text x="24.3829%" y="1407.50"></text></g><g><title>wasmer::sys::externals::Extern::Function (1 samples, 0.01%)</title><rect x="24.1691%" y="1381" width="0.0120%" height="15" fill="rgb(238,137,54)" fg:x="2007" fg:w="1"/><text x="24.4191%" y="1391.50"></text></g><g><title>wasmer_types::types::ExportType&lt;T&gt;::name (2 samples, 0.02%)</title><rect x="24.1811%" y="1397" width="0.0241%" height="15" fill="rgb(228,1,9)" fg:x="2008" fg:w="2"/><text x="24.4311%" y="1407.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (2 samples, 0.02%)</title><rect x="24.1811%" y="1381" width="0.0241%" height="15" fill="rgb(249,120,48)" fg:x="2008" fg:w="2"/><text x="24.4311%" y="1391.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="24.2534%" y="1285" width="0.0120%" height="15" fill="rgb(209,72,36)" fg:x="2014" fg:w="1"/><text x="24.5034%" y="1295.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="24.2534%" y="1269" width="0.0120%" height="15" fill="rgb(247,98,49)" fg:x="2014" fg:w="1"/><text x="24.5034%" y="1279.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.04%)</title><rect x="24.2413%" y="1333" width="0.0361%" height="15" fill="rgb(233,75,36)" fg:x="2013" fg:w="3"/><text x="24.4913%" y="1343.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.04%)</title><rect x="24.2413%" y="1317" width="0.0361%" height="15" fill="rgb(225,14,24)" fg:x="2013" fg:w="3"/><text x="24.4913%" y="1327.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.04%)</title><rect x="24.2413%" y="1301" width="0.0361%" height="15" fill="rgb(237,193,20)" fg:x="2013" fg:w="3"/><text x="24.4913%" y="1311.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.01%)</title><rect x="24.2654%" y="1285" width="0.0120%" height="15" fill="rgb(239,122,19)" fg:x="2015" fg:w="1"/><text x="24.5154%" y="1295.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="24.2654%" y="1269" width="0.0120%" height="15" fill="rgb(231,220,10)" fg:x="2015" fg:w="1"/><text x="24.5154%" y="1279.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="24.2775%" y="1269" width="0.0120%" height="15" fill="rgb(220,66,15)" fg:x="2016" fg:w="1"/><text x="24.5275%" y="1279.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="24.2775%" y="1253" width="0.0120%" height="15" fill="rgb(215,171,52)" fg:x="2016" fg:w="1"/><text x="24.5275%" y="1263.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (5 samples, 0.06%)</title><rect x="24.2413%" y="1349" width="0.0602%" height="15" fill="rgb(241,169,50)" fg:x="2013" fg:w="5"/><text x="24.4913%" y="1359.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.02%)</title><rect x="24.2775%" y="1333" width="0.0241%" height="15" fill="rgb(236,189,0)" fg:x="2016" fg:w="2"/><text x="24.5275%" y="1343.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="24.2775%" y="1317" width="0.0241%" height="15" fill="rgb(217,147,20)" fg:x="2016" fg:w="2"/><text x="24.5275%" y="1327.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="24.2775%" y="1301" width="0.0241%" height="15" fill="rgb(206,188,39)" fg:x="2016" fg:w="2"/><text x="24.5275%" y="1311.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="24.2775%" y="1285" width="0.0241%" height="15" fill="rgb(227,118,25)" fg:x="2016" fg:w="2"/><text x="24.5275%" y="1295.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.01%)</title><rect x="24.2895%" y="1269" width="0.0120%" height="15" fill="rgb(248,171,40)" fg:x="2017" fg:w="1"/><text x="24.5395%" y="1279.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="24.2895%" y="1253" width="0.0120%" height="15" fill="rgb(251,90,54)" fg:x="2017" fg:w="1"/><text x="24.5395%" y="1263.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::{{closure}} (4 samples, 0.05%)</title><rect x="24.3015%" y="1285" width="0.0482%" height="15" fill="rgb(234,11,46)" fg:x="2018" fg:w="4"/><text x="24.5515%" y="1295.50"></text></g><g><title>indexmap::map::core::equivalent::{{closure}} (4 samples, 0.05%)</title><rect x="24.3015%" y="1269" width="0.0482%" height="15" fill="rgb(229,134,13)" fg:x="2018" fg:w="4"/><text x="24.5515%" y="1279.50"></text></g><g><title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (3 samples, 0.04%)</title><rect x="24.3136%" y="1253" width="0.0361%" height="15" fill="rgb(223,129,3)" fg:x="2019" fg:w="3"/><text x="24.5636%" y="1263.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (3 samples, 0.04%)</title><rect x="24.3136%" y="1237" width="0.0361%" height="15" fill="rgb(221,124,13)" fg:x="2019" fg:w="3"/><text x="24.5636%" y="1247.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.04%)</title><rect x="24.3136%" y="1221" width="0.0361%" height="15" fill="rgb(234,3,18)" fg:x="2019" fg:w="3"/><text x="24.5636%" y="1231.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.04%)</title><rect x="24.3136%" y="1205" width="0.0361%" height="15" fill="rgb(249,199,20)" fg:x="2019" fg:w="3"/><text x="24.5636%" y="1215.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.04%)</title><rect x="24.3136%" y="1189" width="0.0361%" height="15" fill="rgb(224,134,6)" fg:x="2019" fg:w="3"/><text x="24.5636%" y="1199.50"></text></g><g><title>__memcmp_avx2_movbe (3 samples, 0.04%)</title><rect x="24.3136%" y="1173" width="0.0361%" height="15" fill="rgb(254,83,26)" fg:x="2019" fg:w="3"/><text x="24.5636%" y="1183.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (2 samples, 0.02%)</title><rect x="24.3497%" y="1285" width="0.0241%" height="15" fill="rgb(217,88,9)" fg:x="2022" fg:w="2"/><text x="24.5997%" y="1295.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.02%)</title><rect x="24.3497%" y="1269" width="0.0241%" height="15" fill="rgb(225,73,2)" fg:x="2022" fg:w="2"/><text x="24.5997%" y="1279.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (2 samples, 0.02%)</title><rect x="24.3497%" y="1253" width="0.0241%" height="15" fill="rgb(226,44,39)" fg:x="2022" fg:w="2"/><text x="24.5997%" y="1263.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (13 samples, 0.16%)</title><rect x="24.2413%" y="1381" width="0.1566%" height="15" fill="rgb(228,53,17)" fg:x="2013" fg:w="13"/><text x="24.4913%" y="1391.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (13 samples, 0.16%)</title><rect x="24.2413%" y="1365" width="0.1566%" height="15" fill="rgb(212,27,27)" fg:x="2013" fg:w="13"/><text x="24.4913%" y="1375.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (8 samples, 0.10%)</title><rect x="24.3015%" y="1349" width="0.0963%" height="15" fill="rgb(241,50,6)" fg:x="2018" fg:w="8"/><text x="24.5515%" y="1359.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (8 samples, 0.10%)</title><rect x="24.3015%" y="1333" width="0.0963%" height="15" fill="rgb(225,28,51)" fg:x="2018" fg:w="8"/><text x="24.5515%" y="1343.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (8 samples, 0.10%)</title><rect x="24.3015%" y="1317" width="0.0963%" height="15" fill="rgb(215,33,16)" fg:x="2018" fg:w="8"/><text x="24.5515%" y="1327.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (8 samples, 0.10%)</title><rect x="24.3015%" y="1301" width="0.0963%" height="15" fill="rgb(243,40,39)" fg:x="2018" fg:w="8"/><text x="24.5515%" y="1311.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (2 samples, 0.02%)</title><rect x="24.3738%" y="1285" width="0.0241%" height="15" fill="rgb(225,11,42)" fg:x="2024" fg:w="2"/><text x="24.6238%" y="1295.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.02%)</title><rect x="24.3738%" y="1269" width="0.0241%" height="15" fill="rgb(241,220,38)" fg:x="2024" fg:w="2"/><text x="24.6238%" y="1279.50"></text></g><g><title>&lt;wasmer_types::entity::boxed_slice::BoxedSlice&lt;K,V&gt; as core::ops::index::Index&lt;K&gt;&gt;::index (1 samples, 0.01%)</title><rect x="24.4220%" y="1365" width="0.0120%" height="15" fill="rgb(244,52,35)" fg:x="2028" fg:w="1"/><text x="24.6720%" y="1375.50"></text></g><g><title>&lt;wasmer_types::entity::primary_map::PrimaryMap&lt;K,V&gt; as core::ops::index::Index&lt;K&gt;&gt;::index (1 samples, 0.01%)</title><rect x="24.4340%" y="1365" width="0.0120%" height="15" fill="rgb(246,42,46)" fg:x="2029" fg:w="1"/><text x="24.6840%" y="1375.50"></text></g><g><title>&lt;wasmer_types::indexes::ArchivedCustomSectionIndex as wasmer_types::entity::EntityRef&gt;::index (1 samples, 0.01%)</title><rect x="24.4340%" y="1349" width="0.0120%" height="15" fill="rgb(205,184,13)" fg:x="2029" fg:w="1"/><text x="24.6840%" y="1359.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (1 samples, 0.01%)</title><rect x="24.4461%" y="1285" width="0.0120%" height="15" fill="rgb(209,48,36)" fg:x="2030" fg:w="1"/><text x="24.6961%" y="1295.50"></text></g><g><title>mi_block_nextx (2 samples, 0.02%)</title><rect x="24.4581%" y="1109" width="0.0241%" height="15" fill="rgb(244,34,51)" fg:x="2031" fg:w="2"/><text x="24.7081%" y="1119.50"></text></g><g><title>mi_ptr_decode (2 samples, 0.02%)</title><rect x="24.4581%" y="1093" width="0.0241%" height="15" fill="rgb(221,107,33)" fg:x="2031" fg:w="2"/><text x="24.7081%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.05%)</title><rect x="24.4461%" y="1333" width="0.0482%" height="15" fill="rgb(224,203,12)" fg:x="2030" fg:w="4"/><text x="24.6961%" y="1343.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.05%)</title><rect x="24.4461%" y="1317" width="0.0482%" height="15" fill="rgb(230,215,18)" fg:x="2030" fg:w="4"/><text x="24.6961%" y="1327.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.05%)</title><rect x="24.4461%" y="1301" width="0.0482%" height="15" fill="rgb(206,185,35)" fg:x="2030" fg:w="4"/><text x="24.6961%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="24.4581%" y="1285" width="0.0361%" height="15" fill="rgb(228,140,34)" fg:x="2031" fg:w="3"/><text x="24.7081%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="24.4581%" y="1269" width="0.0361%" height="15" fill="rgb(208,93,13)" fg:x="2031" fg:w="3"/><text x="24.7081%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.04%)</title><rect x="24.4581%" y="1253" width="0.0361%" height="15" fill="rgb(221,193,39)" fg:x="2031" fg:w="3"/><text x="24.7081%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="24.4581%" y="1237" width="0.0361%" height="15" fill="rgb(241,132,34)" fg:x="2031" fg:w="3"/><text x="24.7081%" y="1247.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.04%)</title><rect x="24.4581%" y="1221" width="0.0361%" height="15" fill="rgb(221,141,10)" fg:x="2031" fg:w="3"/><text x="24.7081%" y="1231.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="24.4581%" y="1205" width="0.0361%" height="15" fill="rgb(226,90,31)" fg:x="2031" fg:w="3"/><text x="24.7081%" y="1215.50"></text></g><g><title>mi_malloc (3 samples, 0.04%)</title><rect x="24.4581%" y="1189" width="0.0361%" height="15" fill="rgb(243,75,5)" fg:x="2031" fg:w="3"/><text x="24.7081%" y="1199.50"></text></g><g><title>mi_heap_malloc (3 samples, 0.04%)</title><rect x="24.4581%" y="1173" width="0.0361%" height="15" fill="rgb(227,156,21)" fg:x="2031" fg:w="3"/><text x="24.7081%" y="1183.50"></text></g><g><title>mi_heap_malloc_small (3 samples, 0.04%)</title><rect x="24.4581%" y="1157" width="0.0361%" height="15" fill="rgb(250,195,8)" fg:x="2031" fg:w="3"/><text x="24.7081%" y="1167.50"></text></g><g><title>_mi_page_malloc (3 samples, 0.04%)</title><rect x="24.4581%" y="1141" width="0.0361%" height="15" fill="rgb(220,134,5)" fg:x="2031" fg:w="3"/><text x="24.7081%" y="1151.50"></text></g><g><title>mi_block_next (3 samples, 0.04%)</title><rect x="24.4581%" y="1125" width="0.0361%" height="15" fill="rgb(246,106,34)" fg:x="2031" fg:w="3"/><text x="24.7081%" y="1135.50"></text></g><g><title>mi_is_in_same_page (1 samples, 0.01%)</title><rect x="24.4822%" y="1109" width="0.0120%" height="15" fill="rgb(205,1,4)" fg:x="2033" fg:w="1"/><text x="24.7322%" y="1119.50"></text></g><g><title>_mi_segment_page_start (1 samples, 0.01%)</title><rect x="24.4822%" y="1093" width="0.0120%" height="15" fill="rgb(224,151,29)" fg:x="2033" fg:w="1"/><text x="24.7322%" y="1103.50"></text></g><g><title>_mi_segment_page_start_from_slice (1 samples, 0.01%)</title><rect x="24.4822%" y="1077" width="0.0120%" height="15" fill="rgb(251,196,0)" fg:x="2033" fg:w="1"/><text x="24.7322%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (89 samples, 1.07%)</title><rect x="23.4345%" y="1541" width="1.0718%" height="15" fill="rgb(212,127,0)" fg:x="1946" fg:w="89"/><text x="23.6845%" y="1551.50"></text></g><g><title>&lt;wasmer::sys::exports::Exports as core::iter::traits::collect::FromIterator&lt;(alloc::string::String,wasmer::sys::externals::Extern)&gt;&gt;::from_iter (89 samples, 1.07%)</title><rect x="23.4345%" y="1525" width="1.0718%" height="15" fill="rgb(236,71,53)" fg:x="1946" fg:w="89"/><text x="23.6845%" y="1535.50"></text></g><g><title>&lt;indexmap::map::IndexMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (89 samples, 1.07%)</title><rect x="23.4345%" y="1509" width="1.0718%" height="15" fill="rgb(227,99,0)" fg:x="1946" fg:w="89"/><text x="23.6845%" y="1519.50"></text></g><g><title>&lt;indexmap::map::IndexMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (89 samples, 1.07%)</title><rect x="23.4345%" y="1493" width="1.0718%" height="15" fill="rgb(239,89,21)" fg:x="1946" fg:w="89"/><text x="23.6845%" y="1503.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (89 samples, 1.07%)</title><rect x="23.4345%" y="1477" width="1.0718%" height="15" fill="rgb(243,122,19)" fg:x="1946" fg:w="89"/><text x="23.6845%" y="1487.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (89 samples, 1.07%)</title><rect x="23.4345%" y="1461" width="1.0718%" height="15" fill="rgb(229,192,45)" fg:x="1946" fg:w="89"/><text x="23.6845%" y="1471.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (88 samples, 1.06%)</title><rect x="23.4465%" y="1445" width="1.0597%" height="15" fill="rgb(235,165,35)" fg:x="1947" fg:w="88"/><text x="23.6965%" y="1455.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (77 samples, 0.93%)</title><rect x="23.5790%" y="1429" width="0.9273%" height="15" fill="rgb(253,202,0)" fg:x="1958" fg:w="77"/><text x="23.8290%" y="1439.50"></text></g><g><title>wasmer::sys::instance::Instance::new::{{closure}} (37 samples, 0.45%)</title><rect x="24.0607%" y="1413" width="0.4456%" height="15" fill="rgb(235,51,20)" fg:x="1998" fg:w="37"/><text x="24.3107%" y="1423.50"></text></g><g><title>wasmer_vm::instance::InstanceHandle::lookup (25 samples, 0.30%)</title><rect x="24.2052%" y="1397" width="0.3011%" height="15" fill="rgb(218,95,46)" fg:x="2010" fg:w="25"/><text x="24.4552%" y="1407.50"></text></g><g><title>wasmer_vm::instance::InstanceHandle::lookup_by_declaration (9 samples, 0.11%)</title><rect x="24.3979%" y="1381" width="0.1084%" height="15" fill="rgb(212,81,10)" fg:x="2026" fg:w="9"/><text x="24.6479%" y="1391.50"></text></g><g><title>&lt;wasmer_types::types::FunctionType as core::clone::Clone&gt;::clone (5 samples, 0.06%)</title><rect x="24.4461%" y="1365" width="0.0602%" height="15" fill="rgb(240,59,0)" fg:x="2030" fg:w="5"/><text x="24.6961%" y="1375.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T],A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.06%)</title><rect x="24.4461%" y="1349" width="0.0602%" height="15" fill="rgb(212,191,42)" fg:x="2030" fg:w="5"/><text x="24.6961%" y="1359.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (1 samples, 0.01%)</title><rect x="24.4942%" y="1333" width="0.0120%" height="15" fill="rgb(233,140,3)" fg:x="2034" fg:w="1"/><text x="24.7442%" y="1343.50"></text></g><g><title>wasmer::sys::module::Module::exports (1 samples, 0.01%)</title><rect x="24.5063%" y="1541" width="0.0120%" height="15" fill="rgb(215,69,23)" fg:x="2035" fg:w="1"/><text x="24.7563%" y="1551.50"></text></g><g><title>&lt;wasmer_engine_universal::artifact::UniversalArtifact as wasmer_artifact::artifact::ArtifactCreate&gt;::module_ref (1 samples, 0.01%)</title><rect x="24.5063%" y="1525" width="0.0120%" height="15" fill="rgb(240,202,20)" fg:x="2035" fg:w="1"/><text x="24.7563%" y="1535.50"></text></g><g><title>&lt;wasmer_engine_universal::artifact::UniversalArtifact as wasmer_artifact::artifact::ArtifactCreate&gt;::data_initializers (1 samples, 0.01%)</title><rect x="24.5424%" y="1509" width="0.0120%" height="15" fill="rgb(209,146,50)" fg:x="2038" fg:w="1"/><text x="24.7924%" y="1519.50"></text></g><g><title>&lt;wasmer_engine_universal_artifact::artifact::UniversalArtifactBuild as wasmer_artifact::artifact::ArtifactCreate&gt;::data_initializers (1 samples, 0.01%)</title><rect x="24.5424%" y="1493" width="0.0120%" height="15" fill="rgb(253,102,54)" fg:x="2038" fg:w="1"/><text x="24.7924%" y="1503.50"></text></g><g><title>wasmer_vm::instance::InstanceHandle::finish_instantiation (1 samples, 0.01%)</title><rect x="24.5544%" y="1493" width="0.0120%" height="15" fill="rgb(250,173,47)" fg:x="2039" fg:w="1"/><text x="24.8044%" y="1503.50"></text></g><g><title>&lt;wasmer_vm::table::LinearTable as wasmer_vm::table::Table&gt;::set (2 samples, 0.02%)</title><rect x="24.5665%" y="1477" width="0.0241%" height="15" fill="rgb(232,142,7)" fg:x="2040" fg:w="2"/><text x="24.8165%" y="1487.50"></text></g><g><title>wasmer_vm::instance::Instance::get_table (1 samples, 0.01%)</title><rect x="24.5906%" y="1477" width="0.0120%" height="15" fill="rgb(230,157,47)" fg:x="2042" fg:w="1"/><text x="24.8406%" y="1487.50"></text></g><g><title>wasmer_vm::instance::Instance::get_local_table (1 samples, 0.01%)</title><rect x="24.5906%" y="1461" width="0.0120%" height="15" fill="rgb(214,177,35)" fg:x="2042" fg:w="1"/><text x="24.8406%" y="1471.50"></text></g><g><title>&lt;wasmer_types::entity::boxed_slice::BoxedSlice&lt;K,V&gt; as core::ops::index::Index&lt;K&gt;&gt;::index (1 samples, 0.01%)</title><rect x="24.5906%" y="1445" width="0.0120%" height="15" fill="rgb(234,119,46)" fg:x="2042" fg:w="1"/><text x="24.8406%" y="1455.50"></text></g><g><title>wasmer_engine::artifact::Artifact::finish_instantiation (7 samples, 0.08%)</title><rect x="24.5303%" y="1525" width="0.0843%" height="15" fill="rgb(241,180,50)" fg:x="2037" fg:w="7"/><text x="24.7803%" y="1535.50"></text></g><g><title>wasmer_vm::instance::InstanceHandle::finish_instantiation (5 samples, 0.06%)</title><rect x="24.5544%" y="1509" width="0.0602%" height="15" fill="rgb(221,54,25)" fg:x="2039" fg:w="5"/><text x="24.8044%" y="1519.50"></text></g><g><title>wasmer_vm::instance::initialize_tables (4 samples, 0.05%)</title><rect x="24.5665%" y="1493" width="0.0482%" height="15" fill="rgb(209,157,44)" fg:x="2040" fg:w="4"/><text x="24.8165%" y="1503.50"></text></g><g><title>wasmer_vm::instance::Instance::get_vm_funcref (1 samples, 0.01%)</title><rect x="24.6026%" y="1477" width="0.0120%" height="15" fill="rgb(246,115,41)" fg:x="2043" fg:w="1"/><text x="24.8526%" y="1487.50"></text></g><g><title>wasmer_vm::instance::InstanceHandle::finish_instantiation (1 samples, 0.01%)</title><rect x="24.6026%" y="1461" width="0.0120%" height="15" fill="rgb(229,86,1)" fg:x="2043" fg:w="1"/><text x="24.8526%" y="1471.50"></text></g><g><title>&lt;wasmer_engine_universal::artifact::UniversalArtifact as wasmer_artifact::artifact::ArtifactCreate&gt;::module (4 samples, 0.05%)</title><rect x="24.6267%" y="1509" width="0.0482%" height="15" fill="rgb(240,108,53)" fg:x="2045" fg:w="4"/><text x="24.8767%" y="1519.50"></text></g><g><title>&lt;wasmer_engine_universal_artifact::artifact::UniversalArtifactBuild as wasmer_artifact::artifact::ArtifactCreate&gt;::module (4 samples, 0.05%)</title><rect x="24.6267%" y="1493" width="0.0482%" height="15" fill="rgb(227,134,2)" fg:x="2045" fg:w="4"/><text x="24.8767%" y="1503.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="24.6267%" y="1477" width="0.0482%" height="15" fill="rgb(213,129,25)" fg:x="2045" fg:w="4"/><text x="24.8767%" y="1487.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.02%)</title><rect x="24.6508%" y="1461" width="0.0241%" height="15" fill="rgb(226,35,21)" fg:x="2047" fg:w="2"/><text x="24.9008%" y="1471.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.02%)</title><rect x="24.6508%" y="1445" width="0.0241%" height="15" fill="rgb(208,129,26)" fg:x="2047" fg:w="2"/><text x="24.9008%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="24.6749%" y="1429" width="0.0120%" height="15" fill="rgb(224,83,6)" fg:x="2049" fg:w="1"/><text x="24.9249%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="24.6749%" y="1413" width="0.0120%" height="15" fill="rgb(227,52,39)" fg:x="2049" fg:w="1"/><text x="24.9249%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="24.6749%" y="1397" width="0.0120%" height="15" fill="rgb(241,30,17)" fg:x="2049" fg:w="1"/><text x="24.9249%" y="1407.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="24.6749%" y="1381" width="0.0120%" height="15" fill="rgb(246,186,42)" fg:x="2049" fg:w="1"/><text x="24.9249%" y="1391.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="24.6749%" y="1365" width="0.0120%" height="15" fill="rgb(221,169,15)" fg:x="2049" fg:w="1"/><text x="24.9249%" y="1375.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="24.6749%" y="1349" width="0.0120%" height="15" fill="rgb(235,108,21)" fg:x="2049" fg:w="1"/><text x="24.9249%" y="1359.50"></text></g><g><title>mi_malloc (1 samples, 0.01%)</title><rect x="24.6749%" y="1333" width="0.0120%" height="15" fill="rgb(219,148,30)" fg:x="2049" fg:w="1"/><text x="24.9249%" y="1343.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.01%)</title><rect x="24.6749%" y="1317" width="0.0120%" height="15" fill="rgb(220,109,5)" fg:x="2049" fg:w="1"/><text x="24.9249%" y="1327.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.01%)</title><rect x="24.6749%" y="1301" width="0.0120%" height="15" fill="rgb(213,203,48)" fg:x="2049" fg:w="1"/><text x="24.9249%" y="1311.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.01%)</title><rect x="24.6749%" y="1285" width="0.0120%" height="15" fill="rgb(244,71,33)" fg:x="2049" fg:w="1"/><text x="24.9249%" y="1295.50"></text></g><g><title>mi_block_next (1 samples, 0.01%)</title><rect x="24.6749%" y="1269" width="0.0120%" height="15" fill="rgb(209,23,2)" fg:x="2049" fg:w="1"/><text x="24.9249%" y="1279.50"></text></g><g><title>mi_block_nextx (1 samples, 0.01%)</title><rect x="24.6749%" y="1253" width="0.0120%" height="15" fill="rgb(219,97,7)" fg:x="2049" fg:w="1"/><text x="24.9249%" y="1263.50"></text></g><g><title>mi_ptr_decode (1 samples, 0.01%)</title><rect x="24.6749%" y="1237" width="0.0120%" height="15" fill="rgb(216,161,23)" fg:x="2049" fg:w="1"/><text x="24.9249%" y="1247.50"></text></g><g><title>&lt;wasmer_types::entity::boxed_slice::BoxedSlice&lt;K,V&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="24.6749%" y="1509" width="0.0241%" height="15" fill="rgb(207,45,42)" fg:x="2049" fg:w="2"/><text x="24.9249%" y="1519.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T],A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="24.6749%" y="1493" width="0.0241%" height="15" fill="rgb(241,61,4)" fg:x="2049" fg:w="2"/><text x="24.9249%" y="1503.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="24.6749%" y="1477" width="0.0241%" height="15" fill="rgb(236,170,1)" fg:x="2049" fg:w="2"/><text x="24.9249%" y="1487.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="24.6749%" y="1461" width="0.0241%" height="15" fill="rgb(239,72,5)" fg:x="2049" fg:w="2"/><text x="24.9249%" y="1471.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="24.6749%" y="1445" width="0.0241%" height="15" fill="rgb(214,13,50)" fg:x="2049" fg:w="2"/><text x="24.9249%" y="1455.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="24.6869%" y="1429" width="0.0120%" height="15" fill="rgb(224,88,9)" fg:x="2050" fg:w="1"/><text x="24.9369%" y="1439.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="24.6869%" y="1413" width="0.0120%" height="15" fill="rgb(238,192,34)" fg:x="2050" fg:w="1"/><text x="24.9369%" y="1423.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="24.6869%" y="1397" width="0.0120%" height="15" fill="rgb(217,203,50)" fg:x="2050" fg:w="1"/><text x="24.9369%" y="1407.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.01%)</title><rect x="24.6989%" y="1509" width="0.0120%" height="15" fill="rgb(241,123,32)" fg:x="2051" fg:w="1"/><text x="24.9489%" y="1519.50"></text></g><g><title>wasmer_compiler::target::CpuFeature::for_host (2 samples, 0.02%)</title><rect x="24.7110%" y="1509" width="0.0241%" height="15" fill="rgb(248,151,39)" fg:x="2052" fg:w="2"/><text x="24.9610%" y="1519.50"></text></g><g><title>std_detect::detect::arch::x86::__is_feature_detected::avx512dq (2 samples, 0.02%)</title><rect x="24.7110%" y="1493" width="0.0241%" height="15" fill="rgb(208,89,6)" fg:x="2052" fg:w="2"/><text x="24.9610%" y="1503.50"></text></g><g><title>std_detect::detect::check_for (2 samples, 0.02%)</title><rect x="24.7110%" y="1477" width="0.0241%" height="15" fill="rgb(254,43,26)" fg:x="2052" fg:w="2"/><text x="24.9610%" y="1487.50"></text></g><g><title>std_detect::detect::cache::test (2 samples, 0.02%)</title><rect x="24.7110%" y="1461" width="0.0241%" height="15" fill="rgb(216,158,13)" fg:x="2052" fg:w="2"/><text x="24.9610%" y="1471.50"></text></g><g><title>std_detect::detect::cache::Cache::test (2 samples, 0.02%)</title><rect x="24.7110%" y="1445" width="0.0241%" height="15" fill="rgb(212,47,37)" fg:x="2052" fg:w="2"/><text x="24.9610%" y="1455.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.02%)</title><rect x="24.7110%" y="1429" width="0.0241%" height="15" fill="rgb(254,16,10)" fg:x="2052" fg:w="2"/><text x="24.9610%" y="1439.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="24.7110%" y="1413" width="0.0241%" height="15" fill="rgb(223,228,16)" fg:x="2052" fg:w="2"/><text x="24.9610%" y="1423.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.02%)</title><rect x="25.0000%" y="1445" width="0.0241%" height="15" fill="rgb(249,108,50)" fg:x="2076" fg:w="2"/><text x="25.2500%" y="1455.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="25.0723%" y="1301" width="0.0241%" height="15" fill="rgb(208,220,5)" fg:x="2082" fg:w="2"/><text x="25.3223%" y="1311.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="25.0723%" y="1285" width="0.0241%" height="15" fill="rgb(217,89,48)" fg:x="2082" fg:w="2"/><text x="25.3223%" y="1295.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (13 samples, 0.16%)</title><rect x="25.0361%" y="1349" width="0.1566%" height="15" fill="rgb(212,113,41)" fg:x="2079" fg:w="13"/><text x="25.2861%" y="1359.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (13 samples, 0.16%)</title><rect x="25.0361%" y="1333" width="0.1566%" height="15" fill="rgb(231,127,5)" fg:x="2079" fg:w="13"/><text x="25.2861%" y="1343.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (13 samples, 0.16%)</title><rect x="25.0361%" y="1317" width="0.1566%" height="15" fill="rgb(217,141,17)" fg:x="2079" fg:w="13"/><text x="25.2861%" y="1327.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (8 samples, 0.10%)</title><rect x="25.0963%" y="1301" width="0.0963%" height="15" fill="rgb(245,125,54)" fg:x="2084" fg:w="8"/><text x="25.3463%" y="1311.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.06%)</title><rect x="25.1325%" y="1285" width="0.0602%" height="15" fill="rgb(248,125,3)" fg:x="2087" fg:w="5"/><text x="25.3825%" y="1295.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.02%)</title><rect x="25.1927%" y="1349" width="0.0241%" height="15" fill="rgb(236,119,51)" fg:x="2092" fg:w="2"/><text x="25.4427%" y="1359.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.06%)</title><rect x="25.2168%" y="1269" width="0.0602%" height="15" fill="rgb(239,99,8)" fg:x="2094" fg:w="5"/><text x="25.4668%" y="1279.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.02%)</title><rect x="25.2529%" y="1253" width="0.0241%" height="15" fill="rgb(224,228,4)" fg:x="2097" fg:w="2"/><text x="25.5029%" y="1263.50"></text></g><g><title>hashbrown::map::make_hash (22 samples, 0.26%)</title><rect x="25.0361%" y="1381" width="0.2649%" height="15" fill="rgb(220,131,45)" fg:x="2079" fg:w="22"/><text x="25.2861%" y="1391.50"></text></g><g><title>core::hash::BuildHasher::hash_one (22 samples, 0.26%)</title><rect x="25.0361%" y="1365" width="0.2649%" height="15" fill="rgb(215,62,5)" fg:x="2079" fg:w="22"/><text x="25.2861%" y="1375.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (7 samples, 0.08%)</title><rect x="25.2168%" y="1349" width="0.0843%" height="15" fill="rgb(253,12,24)" fg:x="2094" fg:w="7"/><text x="25.4668%" y="1359.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (7 samples, 0.08%)</title><rect x="25.2168%" y="1333" width="0.0843%" height="15" fill="rgb(248,120,50)" fg:x="2094" fg:w="7"/><text x="25.4668%" y="1343.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (7 samples, 0.08%)</title><rect x="25.2168%" y="1317" width="0.0843%" height="15" fill="rgb(245,194,10)" fg:x="2094" fg:w="7"/><text x="25.4668%" y="1327.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (7 samples, 0.08%)</title><rect x="25.2168%" y="1301" width="0.0843%" height="15" fill="rgb(241,149,38)" fg:x="2094" fg:w="7"/><text x="25.4668%" y="1311.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (7 samples, 0.08%)</title><rect x="25.2168%" y="1285" width="0.0843%" height="15" fill="rgb(219,215,7)" fg:x="2094" fg:w="7"/><text x="25.4668%" y="1295.50"></text></g><g><title>core::hash::Hasher::write_u8 (2 samples, 0.02%)</title><rect x="25.2770%" y="1269" width="0.0241%" height="15" fill="rgb(208,120,31)" fg:x="2099" fg:w="2"/><text x="25.5270%" y="1279.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="25.2770%" y="1253" width="0.0241%" height="15" fill="rgb(244,30,8)" fg:x="2099" fg:w="2"/><text x="25.5270%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (10 samples, 0.12%)</title><rect x="25.3131%" y="1333" width="0.1204%" height="15" fill="rgb(238,35,44)" fg:x="2102" fg:w="10"/><text x="25.5631%" y="1343.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (10 samples, 0.12%)</title><rect x="25.3131%" y="1317" width="0.1204%" height="15" fill="rgb(243,218,37)" fg:x="2102" fg:w="10"/><text x="25.5631%" y="1327.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (10 samples, 0.12%)</title><rect x="25.3131%" y="1301" width="0.1204%" height="15" fill="rgb(218,169,10)" fg:x="2102" fg:w="10"/><text x="25.5631%" y="1311.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (10 samples, 0.12%)</title><rect x="25.3131%" y="1285" width="0.1204%" height="15" fill="rgb(221,144,10)" fg:x="2102" fg:w="10"/><text x="25.5631%" y="1295.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (10 samples, 0.12%)</title><rect x="25.3131%" y="1269" width="0.1204%" height="15" fill="rgb(226,41,38)" fg:x="2102" fg:w="10"/><text x="25.5631%" y="1279.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (10 samples, 0.12%)</title><rect x="25.3131%" y="1253" width="0.1204%" height="15" fill="rgb(228,3,1)" fg:x="2102" fg:w="10"/><text x="25.5631%" y="1263.50"></text></g><g><title>__memcmp_avx2_movbe (6 samples, 0.07%)</title><rect x="25.3613%" y="1237" width="0.0723%" height="15" fill="rgb(209,129,12)" fg:x="2106" fg:w="6"/><text x="25.6113%" y="1247.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (5 samples, 0.06%)</title><rect x="25.4335%" y="1333" width="0.0602%" height="15" fill="rgb(213,136,33)" fg:x="2112" fg:w="5"/><text x="25.6835%" y="1343.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (5 samples, 0.06%)</title><rect x="25.4335%" y="1317" width="0.0602%" height="15" fill="rgb(209,181,29)" fg:x="2112" fg:w="5"/><text x="25.6835%" y="1327.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (40 samples, 0.48%)</title><rect x="25.0241%" y="1445" width="0.4817%" height="15" fill="rgb(234,173,18)" fg:x="2078" fg:w="40"/><text x="25.2741%" y="1455.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (40 samples, 0.48%)</title><rect x="25.0241%" y="1429" width="0.4817%" height="15" fill="rgb(227,73,47)" fg:x="2078" fg:w="40"/><text x="25.2741%" y="1439.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (40 samples, 0.48%)</title><rect x="25.0241%" y="1413" width="0.4817%" height="15" fill="rgb(234,9,34)" fg:x="2078" fg:w="40"/><text x="25.2741%" y="1423.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (40 samples, 0.48%)</title><rect x="25.0241%" y="1397" width="0.4817%" height="15" fill="rgb(235,172,15)" fg:x="2078" fg:w="40"/><text x="25.2741%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (17 samples, 0.20%)</title><rect x="25.3011%" y="1381" width="0.2047%" height="15" fill="rgb(245,61,2)" fg:x="2101" fg:w="17"/><text x="25.5511%" y="1391.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (17 samples, 0.20%)</title><rect x="25.3011%" y="1365" width="0.2047%" height="15" fill="rgb(238,39,47)" fg:x="2101" fg:w="17"/><text x="25.5511%" y="1375.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (17 samples, 0.20%)</title><rect x="25.3011%" y="1349" width="0.2047%" height="15" fill="rgb(234,37,24)" fg:x="2101" fg:w="17"/><text x="25.5511%" y="1359.50"></text></g><g><title>wasmer::sys::import_object::ImportObject::get_export (1 samples, 0.01%)</title><rect x="25.4937%" y="1333" width="0.0120%" height="15" fill="rgb(248,223,24)" fg:x="2117" fg:w="1"/><text x="25.7437%" y="1343.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (21 samples, 0.25%)</title><rect x="25.8189%" y="1365" width="0.2529%" height="15" fill="rgb(223,12,15)" fg:x="2144" fg:w="21"/><text x="26.0689%" y="1375.50"></text></g><g><title>&lt;wasmer_engine::export::Export as core::convert::From&lt;wasmer_engine::export::ExportFunction&gt;&gt;::from (10 samples, 0.12%)</title><rect x="25.9513%" y="1349" width="0.1204%" height="15" fill="rgb(249,6,3)" fg:x="2155" fg:w="10"/><text x="26.2013%" y="1359.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.08%)</title><rect x="26.0959%" y="1349" width="0.0843%" height="15" fill="rgb(237,105,33)" fg:x="2167" fg:w="7"/><text x="26.3459%" y="1359.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.08%)</title><rect x="26.0959%" y="1333" width="0.0843%" height="15" fill="rgb(252,208,35)" fg:x="2167" fg:w="7"/><text x="26.3459%" y="1343.50"></text></g><g><title>__rg_alloc (1 samples, 0.01%)</title><rect x="26.1922%" y="1157" width="0.0120%" height="15" fill="rgb(215,181,35)" fg:x="2175" fg:w="1"/><text x="26.4422%" y="1167.50"></text></g><g><title>&lt;mimalloc::MiMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.01%)</title><rect x="26.1922%" y="1141" width="0.0120%" height="15" fill="rgb(246,212,3)" fg:x="2175" fg:w="1"/><text x="26.4422%" y="1151.50"></text></g><g><title>mimalloc::may_use_unaligned_api (1 samples, 0.01%)</title><rect x="26.1922%" y="1125" width="0.0120%" height="15" fill="rgb(247,156,24)" fg:x="2175" fg:w="1"/><text x="26.4422%" y="1135.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="26.2042%" y="1157" width="0.0120%" height="15" fill="rgb(248,9,31)" fg:x="2176" fg:w="1"/><text x="26.4542%" y="1167.50"></text></g><g><title>mi_block_nextx (12 samples, 0.14%)</title><rect x="26.2645%" y="1077" width="0.1445%" height="15" fill="rgb(234,26,45)" fg:x="2181" fg:w="12"/><text x="26.5145%" y="1087.50"></text></g><g><title>mi_ptr_decode (12 samples, 0.14%)</title><rect x="26.2645%" y="1061" width="0.1445%" height="15" fill="rgb(249,11,32)" fg:x="2181" fg:w="12"/><text x="26.5145%" y="1071.50"></text></g><g><title>mi_rotr (2 samples, 0.02%)</title><rect x="26.3849%" y="1045" width="0.0241%" height="15" fill="rgb(249,162,33)" fg:x="2191" fg:w="2"/><text x="26.6349%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (26 samples, 0.31%)</title><rect x="26.1922%" y="1253" width="0.3131%" height="15" fill="rgb(232,4,32)" fg:x="2175" fg:w="26"/><text x="26.4422%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (26 samples, 0.31%)</title><rect x="26.1922%" y="1237" width="0.3131%" height="15" fill="rgb(212,5,45)" fg:x="2175" fg:w="26"/><text x="26.4422%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (26 samples, 0.31%)</title><rect x="26.1922%" y="1221" width="0.3131%" height="15" fill="rgb(227,95,13)" fg:x="2175" fg:w="26"/><text x="26.4422%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (26 samples, 0.31%)</title><rect x="26.1922%" y="1205" width="0.3131%" height="15" fill="rgb(223,205,10)" fg:x="2175" fg:w="26"/><text x="26.4422%" y="1215.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (26 samples, 0.31%)</title><rect x="26.1922%" y="1189" width="0.3131%" height="15" fill="rgb(222,178,8)" fg:x="2175" fg:w="26"/><text x="26.4422%" y="1199.50"></text></g><g><title>alloc::alloc::alloc (26 samples, 0.31%)</title><rect x="26.1922%" y="1173" width="0.3131%" height="15" fill="rgb(216,13,22)" fg:x="2175" fg:w="26"/><text x="26.4422%" y="1183.50"></text></g><g><title>mi_malloc (24 samples, 0.29%)</title><rect x="26.2163%" y="1157" width="0.2890%" height="15" fill="rgb(240,167,12)" fg:x="2177" fg:w="24"/><text x="26.4663%" y="1167.50"></text></g><g><title>mi_heap_malloc (21 samples, 0.25%)</title><rect x="26.2524%" y="1141" width="0.2529%" height="15" fill="rgb(235,68,35)" fg:x="2180" fg:w="21"/><text x="26.5024%" y="1151.50"></text></g><g><title>mi_heap_malloc_small (21 samples, 0.25%)</title><rect x="26.2524%" y="1125" width="0.2529%" height="15" fill="rgb(253,40,27)" fg:x="2180" fg:w="21"/><text x="26.5024%" y="1135.50"></text></g><g><title>_mi_page_malloc (21 samples, 0.25%)</title><rect x="26.2524%" y="1109" width="0.2529%" height="15" fill="rgb(214,19,28)" fg:x="2180" fg:w="21"/><text x="26.5024%" y="1119.50"></text></g><g><title>mi_block_next (21 samples, 0.25%)</title><rect x="26.2524%" y="1093" width="0.2529%" height="15" fill="rgb(210,167,45)" fg:x="2180" fg:w="21"/><text x="26.5024%" y="1103.50"></text></g><g><title>mi_is_in_same_page (8 samples, 0.10%)</title><rect x="26.4090%" y="1077" width="0.0963%" height="15" fill="rgb(232,97,40)" fg:x="2193" fg:w="8"/><text x="26.6590%" y="1087.50"></text></g><g><title>_mi_segment_page_start (5 samples, 0.06%)</title><rect x="26.4451%" y="1061" width="0.0602%" height="15" fill="rgb(250,35,23)" fg:x="2196" fg:w="5"/><text x="26.6951%" y="1071.50"></text></g><g><title>_mi_segment_page_start_from_slice (5 samples, 0.06%)</title><rect x="26.4451%" y="1045" width="0.0602%" height="15" fill="rgb(248,47,53)" fg:x="2196" fg:w="5"/><text x="26.6951%" y="1055.50"></text></g><g><title>&lt;wasmer_engine::export::ExportFunction as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="26.5053%" y="1237" width="0.0120%" height="15" fill="rgb(226,58,50)" fg:x="2201" fg:w="1"/><text x="26.7553%" y="1247.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (90 samples, 1.08%)</title><rect x="25.5419%" y="1429" width="1.0838%" height="15" fill="rgb(217,105,26)" fg:x="2121" fg:w="90"/><text x="25.7919%" y="1439.50"></text></g><g><title>&lt;wasmer::sys::exports::Exports as wasmer::sys::import_object::LikeNamespace&gt;::get_namespace_export::{{closure}} (72 samples, 0.87%)</title><rect x="25.7587%" y="1413" width="0.8671%" height="15" fill="rgb(208,64,1)" fg:x="2139" fg:w="72"/><text x="26.0087%" y="1423.50"></text></g><g><title>&lt;wasmer::sys::externals::Extern as wasmer::sys::exports::Exportable&gt;::to_export (72 samples, 0.87%)</title><rect x="25.7587%" y="1397" width="0.8671%" height="15" fill="rgb(214,80,1)" fg:x="2139" fg:w="72"/><text x="26.0087%" y="1407.50"></text></g><g><title>&lt;wasmer::sys::externals::function::Function as wasmer::sys::exports::Exportable&gt;::to_export (67 samples, 0.81%)</title><rect x="25.8189%" y="1381" width="0.8068%" height="15" fill="rgb(206,175,26)" fg:x="2144" fg:w="67"/><text x="26.0689%" y="1391.50"></text></g><g><title>&lt;wasmer_engine::export::ExportFunction as core::clone::Clone&gt;::clone (46 samples, 0.55%)</title><rect x="26.0718%" y="1365" width="0.5539%" height="15" fill="rgb(235,156,37)" fg:x="2165" fg:w="46"/><text x="26.3218%" y="1375.50"></text></g><g><title>&lt;wasmer_vm::export::VMFunction as core::clone::Clone&gt;::clone (37 samples, 0.45%)</title><rect x="26.1802%" y="1349" width="0.4456%" height="15" fill="rgb(213,100,9)" fg:x="2174" fg:w="37"/><text x="26.4302%" y="1359.50"></text></g><g><title>&lt;wasmer_types::types::FunctionType as core::clone::Clone&gt;::clone (37 samples, 0.45%)</title><rect x="26.1802%" y="1333" width="0.4456%" height="15" fill="rgb(241,15,13)" fg:x="2174" fg:w="37"/><text x="26.4302%" y="1343.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T],A&gt; as core::clone::Clone&gt;::clone (37 samples, 0.45%)</title><rect x="26.1802%" y="1317" width="0.4456%" height="15" fill="rgb(205,97,43)" fg:x="2174" fg:w="37"/><text x="26.4302%" y="1327.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (36 samples, 0.43%)</title><rect x="26.1922%" y="1301" width="0.4335%" height="15" fill="rgb(216,106,32)" fg:x="2175" fg:w="36"/><text x="26.4422%" y="1311.50"></text></g><g><title>alloc::slice::hack::to_vec (36 samples, 0.43%)</title><rect x="26.1922%" y="1285" width="0.4335%" height="15" fill="rgb(226,200,8)" fg:x="2175" fg:w="36"/><text x="26.4422%" y="1295.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (36 samples, 0.43%)</title><rect x="26.1922%" y="1269" width="0.4335%" height="15" fill="rgb(244,54,29)" fg:x="2175" fg:w="36"/><text x="26.4422%" y="1279.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (10 samples, 0.12%)</title><rect x="26.5053%" y="1253" width="0.1204%" height="15" fill="rgb(252,169,12)" fg:x="2201" fg:w="10"/><text x="26.7553%" y="1263.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.11%)</title><rect x="26.5173%" y="1237" width="0.1084%" height="15" fill="rgb(231,199,11)" fg:x="2202" fg:w="9"/><text x="26.7673%" y="1247.50"></text></g><g><title>__memcpy_avx_unaligned_erms (8 samples, 0.10%)</title><rect x="26.5294%" y="1221" width="0.0963%" height="15" fill="rgb(233,191,18)" fg:x="2203" fg:w="8"/><text x="26.7794%" y="1231.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="26.6859%" y="1317" width="0.0241%" height="15" fill="rgb(215,83,47)" fg:x="2216" fg:w="2"/><text x="26.9359%" y="1327.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.06%)</title><rect x="26.6859%" y="1333" width="0.0602%" height="15" fill="rgb(251,67,19)" fg:x="2216" fg:w="5"/><text x="26.9359%" y="1343.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.04%)</title><rect x="26.7100%" y="1317" width="0.0361%" height="15" fill="rgb(240,7,20)" fg:x="2218" fg:w="3"/><text x="26.9600%" y="1327.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (13 samples, 0.16%)</title><rect x="26.6257%" y="1381" width="0.1566%" height="15" fill="rgb(210,150,26)" fg:x="2211" fg:w="13"/><text x="26.8757%" y="1391.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (13 samples, 0.16%)</title><rect x="26.6257%" y="1365" width="0.1566%" height="15" fill="rgb(228,75,42)" fg:x="2211" fg:w="13"/><text x="26.8757%" y="1375.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (13 samples, 0.16%)</title><rect x="26.6257%" y="1349" width="0.1566%" height="15" fill="rgb(237,134,48)" fg:x="2211" fg:w="13"/><text x="26.8757%" y="1359.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.04%)</title><rect x="26.7461%" y="1333" width="0.0361%" height="15" fill="rgb(205,80,50)" fg:x="2221" fg:w="3"/><text x="26.9961%" y="1343.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="26.7582%" y="1317" width="0.0241%" height="15" fill="rgb(217,74,48)" fg:x="2222" fg:w="2"/><text x="27.0082%" y="1327.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.01%)</title><rect x="26.7823%" y="1381" width="0.0120%" height="15" fill="rgb(205,82,50)" fg:x="2224" fg:w="1"/><text x="27.0323%" y="1391.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.01%)</title><rect x="26.7823%" y="1365" width="0.0120%" height="15" fill="rgb(228,1,33)" fg:x="2224" fg:w="1"/><text x="27.0323%" y="1375.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.05%)</title><rect x="26.7943%" y="1317" width="0.0482%" height="15" fill="rgb(214,50,23)" fg:x="2225" fg:w="4"/><text x="27.0443%" y="1327.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.04%)</title><rect x="26.8064%" y="1301" width="0.0361%" height="15" fill="rgb(210,62,9)" fg:x="2226" fg:w="3"/><text x="27.0564%" y="1311.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="26.8184%" y="1285" width="0.0241%" height="15" fill="rgb(210,104,37)" fg:x="2227" fg:w="2"/><text x="27.0684%" y="1295.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="26.8907%" y="1285" width="0.0120%" height="15" fill="rgb(232,104,43)" fg:x="2233" fg:w="1"/><text x="27.1407%" y="1295.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (24 samples, 0.29%)</title><rect x="26.6257%" y="1397" width="0.2890%" height="15" fill="rgb(244,52,6)" fg:x="2211" fg:w="24"/><text x="26.8757%" y="1407.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (10 samples, 0.12%)</title><rect x="26.7943%" y="1381" width="0.1204%" height="15" fill="rgb(211,174,52)" fg:x="2225" fg:w="10"/><text x="27.0443%" y="1391.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (10 samples, 0.12%)</title><rect x="26.7943%" y="1365" width="0.1204%" height="15" fill="rgb(229,48,4)" fg:x="2225" fg:w="10"/><text x="27.0443%" y="1375.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (10 samples, 0.12%)</title><rect x="26.7943%" y="1349" width="0.1204%" height="15" fill="rgb(205,155,16)" fg:x="2225" fg:w="10"/><text x="27.0443%" y="1359.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (10 samples, 0.12%)</title><rect x="26.7943%" y="1333" width="0.1204%" height="15" fill="rgb(211,141,53)" fg:x="2225" fg:w="10"/><text x="27.0443%" y="1343.50"></text></g><g><title>core::hash::Hasher::write_u8 (6 samples, 0.07%)</title><rect x="26.8425%" y="1317" width="0.0723%" height="15" fill="rgb(240,148,11)" fg:x="2229" fg:w="6"/><text x="27.0925%" y="1327.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.06%)</title><rect x="26.8545%" y="1301" width="0.0602%" height="15" fill="rgb(214,45,23)" fg:x="2230" fg:w="5"/><text x="27.1045%" y="1311.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="26.9027%" y="1285" width="0.0120%" height="15" fill="rgb(248,74,26)" fg:x="2234" fg:w="1"/><text x="27.1527%" y="1295.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="26.9027%" y="1269" width="0.0120%" height="15" fill="rgb(218,121,16)" fg:x="2234" fg:w="1"/><text x="27.1527%" y="1279.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::is_empty (1 samples, 0.01%)</title><rect x="26.9147%" y="1397" width="0.0120%" height="15" fill="rgb(218,10,47)" fg:x="2235" fg:w="1"/><text x="27.1647%" y="1407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="26.9268%" y="1381" width="0.0120%" height="15" fill="rgb(227,99,14)" fg:x="2236" fg:w="1"/><text x="27.1768%" y="1391.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.01%)</title><rect x="26.9268%" y="1365" width="0.0120%" height="15" fill="rgb(229,83,46)" fg:x="2236" fg:w="1"/><text x="27.1768%" y="1375.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (16 samples, 0.19%)</title><rect x="27.0592%" y="1237" width="0.1927%" height="15" fill="rgb(228,25,1)" fg:x="2247" fg:w="16"/><text x="27.3092%" y="1247.50"></text></g><g><title>__memcmp_avx2_movbe (10 samples, 0.12%)</title><rect x="27.1315%" y="1221" width="0.1204%" height="15" fill="rgb(252,190,15)" fg:x="2253" fg:w="10"/><text x="27.3815%" y="1231.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::{{closure}} (24 samples, 0.29%)</title><rect x="26.9750%" y="1333" width="0.2890%" height="15" fill="rgb(213,103,51)" fg:x="2240" fg:w="24"/><text x="27.2250%" y="1343.50"></text></g><g><title>indexmap::map::core::equivalent::{{closure}} (23 samples, 0.28%)</title><rect x="26.9870%" y="1317" width="0.2770%" height="15" fill="rgb(220,38,44)" fg:x="2241" fg:w="23"/><text x="27.2370%" y="1327.50"></text></g><g><title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (17 samples, 0.20%)</title><rect x="27.0592%" y="1301" width="0.2047%" height="15" fill="rgb(210,45,26)" fg:x="2247" fg:w="17"/><text x="27.3092%" y="1311.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (17 samples, 0.20%)</title><rect x="27.0592%" y="1285" width="0.2047%" height="15" fill="rgb(205,95,48)" fg:x="2247" fg:w="17"/><text x="27.3092%" y="1295.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (17 samples, 0.20%)</title><rect x="27.0592%" y="1269" width="0.2047%" height="15" fill="rgb(225,179,37)" fg:x="2247" fg:w="17"/><text x="27.3092%" y="1279.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (17 samples, 0.20%)</title><rect x="27.0592%" y="1253" width="0.2047%" height="15" fill="rgb(230,209,3)" fg:x="2247" fg:w="17"/><text x="27.3092%" y="1263.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="27.2519%" y="1237" width="0.0120%" height="15" fill="rgb(248,12,46)" fg:x="2263" fg:w="1"/><text x="27.5019%" y="1247.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (2 samples, 0.02%)</title><rect x="27.2640%" y="1333" width="0.0241%" height="15" fill="rgb(234,18,0)" fg:x="2264" fg:w="2"/><text x="27.5140%" y="1343.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.02%)</title><rect x="27.2640%" y="1317" width="0.0241%" height="15" fill="rgb(238,197,14)" fg:x="2264" fg:w="2"/><text x="27.5140%" y="1327.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (2 samples, 0.02%)</title><rect x="27.2640%" y="1301" width="0.0241%" height="15" fill="rgb(251,162,48)" fg:x="2264" fg:w="2"/><text x="27.5140%" y="1311.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (7 samples, 0.08%)</title><rect x="27.2881%" y="1333" width="0.0843%" height="15" fill="rgb(237,73,42)" fg:x="2266" fg:w="7"/><text x="27.5381%" y="1343.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (7 samples, 0.08%)</title><rect x="27.2881%" y="1317" width="0.0843%" height="15" fill="rgb(211,108,8)" fg:x="2266" fg:w="7"/><text x="27.5381%" y="1327.50"></text></g><g><title>&lt;wasmer::sys::exports::Exports as wasmer::sys::import_object::LikeNamespace&gt;::get_namespace_export (157 samples, 1.89%)</title><rect x="25.5058%" y="1445" width="1.8907%" height="15" fill="rgb(213,45,22)" fg:x="2118" fg:w="157"/><text x="25.7558%" y="1455.50">&lt;..</text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (64 samples, 0.77%)</title><rect x="26.6257%" y="1429" width="0.7707%" height="15" fill="rgb(252,154,5)" fg:x="2211" fg:w="64"/><text x="26.8757%" y="1439.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (64 samples, 0.77%)</title><rect x="26.6257%" y="1413" width="0.7707%" height="15" fill="rgb(221,79,52)" fg:x="2211" fg:w="64"/><text x="26.8757%" y="1423.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (39 samples, 0.47%)</title><rect x="26.9268%" y="1397" width="0.4697%" height="15" fill="rgb(229,220,36)" fg:x="2236" fg:w="39"/><text x="27.1768%" y="1407.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (38 samples, 0.46%)</title><rect x="26.9388%" y="1381" width="0.4576%" height="15" fill="rgb(211,17,16)" fg:x="2237" fg:w="38"/><text x="27.1888%" y="1391.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (38 samples, 0.46%)</title><rect x="26.9388%" y="1365" width="0.4576%" height="15" fill="rgb(222,55,31)" fg:x="2237" fg:w="38"/><text x="27.1888%" y="1375.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (38 samples, 0.46%)</title><rect x="26.9388%" y="1349" width="0.4576%" height="15" fill="rgb(221,221,31)" fg:x="2237" fg:w="38"/><text x="27.1888%" y="1359.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (2 samples, 0.02%)</title><rect x="27.3724%" y="1333" width="0.0241%" height="15" fill="rgb(227,168,26)" fg:x="2273" fg:w="2"/><text x="27.6224%" y="1343.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="27.5169%" y="1317" width="0.0120%" height="15" fill="rgb(224,139,9)" fg:x="2285" fg:w="1"/><text x="27.7669%" y="1327.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="27.5169%" y="1301" width="0.0120%" height="15" fill="rgb(254,172,0)" fg:x="2285" fg:w="1"/><text x="27.7669%" y="1311.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="27.5530%" y="1301" width="0.0241%" height="15" fill="rgb(235,203,1)" fg:x="2288" fg:w="2"/><text x="27.8030%" y="1311.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (9 samples, 0.11%)</title><rect x="27.4807%" y="1365" width="0.1084%" height="15" fill="rgb(216,205,24)" fg:x="2282" fg:w="9"/><text x="27.7307%" y="1375.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (9 samples, 0.11%)</title><rect x="27.4807%" y="1349" width="0.1084%" height="15" fill="rgb(233,24,6)" fg:x="2282" fg:w="9"/><text x="27.7307%" y="1359.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (9 samples, 0.11%)</title><rect x="27.4807%" y="1333" width="0.1084%" height="15" fill="rgb(244,110,9)" fg:x="2282" fg:w="9"/><text x="27.7307%" y="1343.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (5 samples, 0.06%)</title><rect x="27.5289%" y="1317" width="0.0602%" height="15" fill="rgb(239,222,42)" fg:x="2286" fg:w="5"/><text x="27.7789%" y="1327.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="27.5771%" y="1301" width="0.0120%" height="15" fill="rgb(218,145,13)" fg:x="2290" fg:w="1"/><text x="27.8271%" y="1311.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.08%)</title><rect x="27.6012%" y="1285" width="0.0843%" height="15" fill="rgb(207,69,11)" fg:x="2292" fg:w="7"/><text x="27.8512%" y="1295.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.02%)</title><rect x="27.6614%" y="1269" width="0.0241%" height="15" fill="rgb(220,223,22)" fg:x="2297" fg:w="2"/><text x="27.9114%" y="1279.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="27.7336%" y="1253" width="0.0120%" height="15" fill="rgb(245,102,5)" fg:x="2303" fg:w="1"/><text x="27.9836%" y="1263.50"></text></g><g><title>hashbrown::map::make_hash (30 samples, 0.36%)</title><rect x="27.3964%" y="1397" width="0.3613%" height="15" fill="rgb(211,148,2)" fg:x="2275" fg:w="30"/><text x="27.6464%" y="1407.50"></text></g><g><title>core::hash::BuildHasher::hash_one (29 samples, 0.35%)</title><rect x="27.4085%" y="1381" width="0.3492%" height="15" fill="rgb(241,13,44)" fg:x="2276" fg:w="29"/><text x="27.6585%" y="1391.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (14 samples, 0.17%)</title><rect x="27.5891%" y="1365" width="0.1686%" height="15" fill="rgb(219,137,21)" fg:x="2291" fg:w="14"/><text x="27.8391%" y="1375.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (14 samples, 0.17%)</title><rect x="27.5891%" y="1349" width="0.1686%" height="15" fill="rgb(242,206,5)" fg:x="2291" fg:w="14"/><text x="27.8391%" y="1359.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (14 samples, 0.17%)</title><rect x="27.5891%" y="1333" width="0.1686%" height="15" fill="rgb(217,114,22)" fg:x="2291" fg:w="14"/><text x="27.8391%" y="1343.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (14 samples, 0.17%)</title><rect x="27.5891%" y="1317" width="0.1686%" height="15" fill="rgb(253,206,42)" fg:x="2291" fg:w="14"/><text x="27.8391%" y="1327.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (14 samples, 0.17%)</title><rect x="27.5891%" y="1301" width="0.1686%" height="15" fill="rgb(236,102,18)" fg:x="2291" fg:w="14"/><text x="27.8391%" y="1311.50"></text></g><g><title>core::hash::Hasher::write_u8 (6 samples, 0.07%)</title><rect x="27.6855%" y="1285" width="0.0723%" height="15" fill="rgb(208,59,49)" fg:x="2299" fg:w="6"/><text x="27.9355%" y="1295.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.07%)</title><rect x="27.6855%" y="1269" width="0.0723%" height="15" fill="rgb(215,194,28)" fg:x="2299" fg:w="6"/><text x="27.9355%" y="1279.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="27.7457%" y="1253" width="0.0120%" height="15" fill="rgb(243,207,11)" fg:x="2304" fg:w="1"/><text x="27.9957%" y="1263.50"></text></g><g><title>alloc::str::&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (2 samples, 0.02%)</title><rect x="27.8300%" y="1317" width="0.0241%" height="15" fill="rgb(254,179,35)" fg:x="2311" fg:w="2"/><text x="28.0800%" y="1327.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (2 samples, 0.02%)</title><rect x="27.8300%" y="1301" width="0.0241%" height="15" fill="rgb(235,97,3)" fg:x="2311" fg:w="2"/><text x="28.0800%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (24 samples, 0.29%)</title><rect x="27.8300%" y="1349" width="0.2890%" height="15" fill="rgb(215,155,33)" fg:x="2311" fg:w="24"/><text x="28.0800%" y="1359.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (24 samples, 0.29%)</title><rect x="27.8300%" y="1333" width="0.2890%" height="15" fill="rgb(223,128,12)" fg:x="2311" fg:w="24"/><text x="28.0800%" y="1343.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (22 samples, 0.26%)</title><rect x="27.8540%" y="1317" width="0.2649%" height="15" fill="rgb(208,157,18)" fg:x="2313" fg:w="22"/><text x="28.1040%" y="1327.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (22 samples, 0.26%)</title><rect x="27.8540%" y="1301" width="0.2649%" height="15" fill="rgb(249,70,54)" fg:x="2313" fg:w="22"/><text x="28.1040%" y="1311.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (22 samples, 0.26%)</title><rect x="27.8540%" y="1285" width="0.2649%" height="15" fill="rgb(244,118,24)" fg:x="2313" fg:w="22"/><text x="28.1040%" y="1295.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (22 samples, 0.26%)</title><rect x="27.8540%" y="1269" width="0.2649%" height="15" fill="rgb(211,54,0)" fg:x="2313" fg:w="22"/><text x="28.1040%" y="1279.50"></text></g><g><title>__memcmp_avx2_movbe (16 samples, 0.19%)</title><rect x="27.9263%" y="1253" width="0.1927%" height="15" fill="rgb(245,137,45)" fg:x="2319" fg:w="16"/><text x="28.1763%" y="1263.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="28.1190%" y="1349" width="0.0120%" height="15" fill="rgb(232,154,31)" fg:x="2335" fg:w="1"/><text x="28.3690%" y="1359.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="28.1190%" y="1333" width="0.0120%" height="15" fill="rgb(253,6,39)" fg:x="2335" fg:w="1"/><text x="28.3690%" y="1343.50"></text></g><g><title>wasmer::sys::import_object::ImportObject::get_export (1 samples, 0.01%)</title><rect x="28.1190%" y="1317" width="0.0120%" height="15" fill="rgb(234,183,24)" fg:x="2335" fg:w="1"/><text x="28.3690%" y="1327.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.01%)</title><rect x="28.1310%" y="1349" width="0.0120%" height="15" fill="rgb(252,84,40)" fg:x="2336" fg:w="1"/><text x="28.3810%" y="1359.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.01%)</title><rect x="28.1310%" y="1333" width="0.0120%" height="15" fill="rgb(224,65,2)" fg:x="2336" fg:w="1"/><text x="28.3810%" y="1343.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (63 samples, 0.76%)</title><rect x="27.3964%" y="1445" width="0.7587%" height="15" fill="rgb(229,38,24)" fg:x="2275" fg:w="63"/><text x="27.6464%" y="1455.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (63 samples, 0.76%)</title><rect x="27.3964%" y="1429" width="0.7587%" height="15" fill="rgb(218,131,50)" fg:x="2275" fg:w="63"/><text x="27.6464%" y="1439.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (63 samples, 0.76%)</title><rect x="27.3964%" y="1413" width="0.7587%" height="15" fill="rgb(233,106,18)" fg:x="2275" fg:w="63"/><text x="27.6464%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (33 samples, 0.40%)</title><rect x="27.7577%" y="1397" width="0.3974%" height="15" fill="rgb(220,216,11)" fg:x="2305" fg:w="33"/><text x="28.0077%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (33 samples, 0.40%)</title><rect x="27.7577%" y="1381" width="0.3974%" height="15" fill="rgb(251,100,45)" fg:x="2305" fg:w="33"/><text x="28.0077%" y="1391.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (33 samples, 0.40%)</title><rect x="27.7577%" y="1365" width="0.3974%" height="15" fill="rgb(235,143,32)" fg:x="2305" fg:w="33"/><text x="28.0077%" y="1375.50"></text></g><g><title>wasmer::sys::import_object::ImportObject::get_export (1 samples, 0.01%)</title><rect x="28.1431%" y="1349" width="0.0120%" height="15" fill="rgb(248,124,34)" fg:x="2337" fg:w="1"/><text x="28.3931%" y="1359.50"></text></g><g><title>&lt;T as wasmer_engine::resolver::Resolver&gt;::resolve (276 samples, 3.32%)</title><rect x="24.8434%" y="1493" width="3.3237%" height="15" fill="rgb(225,221,4)" fg:x="2063" fg:w="276"/><text x="25.0934%" y="1503.50">&lt;T ..</text></g><g><title>&lt;wasmer::sys::import_object::ImportObject as wasmer_engine::resolver::NamedResolver&gt;::resolve_by_name (270 samples, 3.25%)</title><rect x="24.9157%" y="1477" width="3.2514%" height="15" fill="rgb(242,27,43)" fg:x="2069" fg:w="270"/><text x="25.1657%" y="1487.50">&lt;wa..</text></g><g><title>wasmer::sys::import_object::ImportObject::get_export (269 samples, 3.24%)</title><rect x="24.9277%" y="1461" width="3.2394%" height="15" fill="rgb(227,54,8)" fg:x="2070" fg:w="269"/><text x="25.1777%" y="1471.50">was..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="28.1551%" y="1445" width="0.0120%" height="15" fill="rgb(253,139,49)" fg:x="2338" fg:w="1"/><text x="28.4051%" y="1455.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="28.1551%" y="1429" width="0.0120%" height="15" fill="rgb(231,26,43)" fg:x="2338" fg:w="1"/><text x="28.4051%" y="1439.50"></text></g><g><title>std::sync::poison::Flag::guard (1 samples, 0.01%)</title><rect x="28.1551%" y="1413" width="0.0120%" height="15" fill="rgb(207,121,39)" fg:x="2338" fg:w="1"/><text x="28.4051%" y="1423.50"></text></g><g><title>std::thread::panicking (1 samples, 0.01%)</title><rect x="28.1551%" y="1397" width="0.0120%" height="15" fill="rgb(223,101,35)" fg:x="2338" fg:w="1"/><text x="28.4051%" y="1407.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.01%)</title><rect x="28.1551%" y="1381" width="0.0120%" height="15" fill="rgb(232,87,23)" fg:x="2338" fg:w="1"/><text x="28.4051%" y="1391.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.01%)</title><rect x="28.1551%" y="1365" width="0.0120%" height="15" fill="rgb(225,180,29)" fg:x="2338" fg:w="1"/><text x="28.4051%" y="1375.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="28.1551%" y="1349" width="0.0120%" height="15" fill="rgb(225,25,17)" fg:x="2338" fg:w="1"/><text x="28.4051%" y="1359.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="28.1551%" y="1333" width="0.0120%" height="15" fill="rgb(223,8,52)" fg:x="2338" fg:w="1"/><text x="28.4051%" y="1343.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="28.1671%" y="1493" width="0.0120%" height="15" fill="rgb(246,42,21)" fg:x="2339" fg:w="1"/><text x="28.4171%" y="1503.50"></text></g><g><title>&lt;vm_library::env::Context as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="28.1792%" y="1461" width="0.0120%" height="15" fill="rgb(205,64,43)" fg:x="2340" fg:w="1"/><text x="28.4292%" y="1471.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="28.1792%" y="1445" width="0.0120%" height="15" fill="rgb(221,160,13)" fg:x="2340" fg:w="1"/><text x="28.4292%" y="1455.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (1 samples, 0.01%)</title><rect x="28.1792%" y="1429" width="0.0120%" height="15" fill="rgb(239,58,35)" fg:x="2340" fg:w="1"/><text x="28.4292%" y="1439.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.01%)</title><rect x="28.1792%" y="1413" width="0.0120%" height="15" fill="rgb(251,26,40)" fg:x="2340" fg:w="1"/><text x="28.4292%" y="1423.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.01%)</title><rect x="28.1792%" y="1397" width="0.0120%" height="15" fill="rgb(247,0,4)" fg:x="2340" fg:w="1"/><text x="28.4292%" y="1407.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="28.1792%" y="1381" width="0.0120%" height="15" fill="rgb(218,130,10)" fg:x="2340" fg:w="1"/><text x="28.4292%" y="1391.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="28.1792%" y="1365" width="0.0120%" height="15" fill="rgb(239,32,7)" fg:x="2340" fg:w="1"/><text x="28.4292%" y="1375.50"></text></g><g><title>__rg_alloc (1 samples, 0.01%)</title><rect x="28.2033%" y="1381" width="0.0120%" height="15" fill="rgb(210,192,24)" fg:x="2342" fg:w="1"/><text x="28.4533%" y="1391.50"></text></g><g><title>&lt;mimalloc::MiMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.01%)</title><rect x="28.2033%" y="1365" width="0.0120%" height="15" fill="rgb(226,212,17)" fg:x="2342" fg:w="1"/><text x="28.4533%" y="1375.50"></text></g><g><title>mimalloc::may_use_unaligned_api (1 samples, 0.01%)</title><rect x="28.2033%" y="1349" width="0.0120%" height="15" fill="rgb(219,201,28)" fg:x="2342" fg:w="1"/><text x="28.4533%" y="1359.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="28.2153%" y="1381" width="0.0120%" height="15" fill="rgb(235,207,41)" fg:x="2343" fg:w="1"/><text x="28.4653%" y="1391.50"></text></g><g><title>mi_block_nextx (5 samples, 0.06%)</title><rect x="28.2394%" y="1301" width="0.0602%" height="15" fill="rgb(241,95,54)" fg:x="2345" fg:w="5"/><text x="28.4894%" y="1311.50"></text></g><g><title>mi_ptr_decode (5 samples, 0.06%)</title><rect x="28.2394%" y="1285" width="0.0602%" height="15" fill="rgb(248,12,23)" fg:x="2345" fg:w="5"/><text x="28.4894%" y="1295.50"></text></g><g><title>_mi_segment_page_of (1 samples, 0.01%)</title><rect x="28.3237%" y="1285" width="0.0120%" height="15" fill="rgb(228,173,4)" fg:x="2352" fg:w="1"/><text x="28.5737%" y="1295.50"></text></g><g><title>mi_slice_first (1 samples, 0.01%)</title><rect x="28.3237%" y="1269" width="0.0120%" height="15" fill="rgb(254,99,5)" fg:x="2352" fg:w="1"/><text x="28.5737%" y="1279.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (17 samples, 0.20%)</title><rect x="28.1912%" y="1461" width="0.2047%" height="15" fill="rgb(212,184,17)" fg:x="2341" fg:w="17"/><text x="28.4412%" y="1471.50"></text></g><g><title>alloc::alloc::exchange_malloc (17 samples, 0.20%)</title><rect x="28.1912%" y="1445" width="0.2047%" height="15" fill="rgb(252,174,1)" fg:x="2341" fg:w="17"/><text x="28.4412%" y="1455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.20%)</title><rect x="28.1912%" y="1429" width="0.2047%" height="15" fill="rgb(241,118,51)" fg:x="2341" fg:w="17"/><text x="28.4412%" y="1439.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.20%)</title><rect x="28.1912%" y="1413" width="0.2047%" height="15" fill="rgb(227,94,47)" fg:x="2341" fg:w="17"/><text x="28.4412%" y="1423.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.20%)</title><rect x="28.1912%" y="1397" width="0.2047%" height="15" fill="rgb(229,104,2)" fg:x="2341" fg:w="17"/><text x="28.4412%" y="1407.50"></text></g><g><title>mi_malloc (14 samples, 0.17%)</title><rect x="28.2274%" y="1381" width="0.1686%" height="15" fill="rgb(219,28,31)" fg:x="2344" fg:w="14"/><text x="28.4774%" y="1391.50"></text></g><g><title>mi_heap_malloc (13 samples, 0.16%)</title><rect x="28.2394%" y="1365" width="0.1566%" height="15" fill="rgb(233,109,36)" fg:x="2345" fg:w="13"/><text x="28.4894%" y="1375.50"></text></g><g><title>mi_heap_malloc_small (13 samples, 0.16%)</title><rect x="28.2394%" y="1349" width="0.1566%" height="15" fill="rgb(246,88,11)" fg:x="2345" fg:w="13"/><text x="28.4894%" y="1359.50"></text></g><g><title>_mi_page_malloc (13 samples, 0.16%)</title><rect x="28.2394%" y="1333" width="0.1566%" height="15" fill="rgb(209,212,17)" fg:x="2345" fg:w="13"/><text x="28.4894%" y="1343.50"></text></g><g><title>mi_block_next (13 samples, 0.16%)</title><rect x="28.2394%" y="1317" width="0.1566%" height="15" fill="rgb(243,59,29)" fg:x="2345" fg:w="13"/><text x="28.4894%" y="1327.50"></text></g><g><title>mi_is_in_same_page (8 samples, 0.10%)</title><rect x="28.2996%" y="1301" width="0.0963%" height="15" fill="rgb(244,205,48)" fg:x="2350" fg:w="8"/><text x="28.5496%" y="1311.50"></text></g><g><title>_mi_segment_page_start (5 samples, 0.06%)</title><rect x="28.3357%" y="1285" width="0.0602%" height="15" fill="rgb(227,30,6)" fg:x="2353" fg:w="5"/><text x="28.5857%" y="1295.50"></text></g><g><title>_mi_segment_page_start_from_slice (3 samples, 0.04%)</title><rect x="28.3598%" y="1269" width="0.0361%" height="15" fill="rgb(220,205,48)" fg:x="2355" fg:w="3"/><text x="28.6098%" y="1279.50"></text></g><g><title>core::ops::function::FnOnce::call_once (20 samples, 0.24%)</title><rect x="28.1792%" y="1493" width="0.2408%" height="15" fill="rgb(250,94,14)" fg:x="2340" fg:w="20"/><text x="28.4292%" y="1503.50"></text></g><g><title>wasmer::sys::externals::function::build_export_function_metadata::{{closure}} (20 samples, 0.24%)</title><rect x="28.1792%" y="1477" width="0.2408%" height="15" fill="rgb(216,119,42)" fg:x="2340" fg:w="20"/><text x="28.4292%" y="1487.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (2 samples, 0.02%)</title><rect x="28.3960%" y="1461" width="0.0241%" height="15" fill="rgb(232,155,0)" fg:x="2358" fg:w="2"/><text x="28.6460%" y="1471.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="28.4200%" y="1493" width="0.0120%" height="15" fill="rgb(212,24,32)" fg:x="2360" fg:w="1"/><text x="28.6700%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;wasmer_engine::export::ExportFunctionMetadata&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="28.4562%" y="1461" width="0.0241%" height="15" fill="rgb(216,69,20)" fg:x="2363" fg:w="2"/><text x="28.7062%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;wasmer_engine::export::ExportFunctionMetadata&gt;&gt; (2 samples, 0.02%)</title><rect x="28.4562%" y="1445" width="0.0241%" height="15" fill="rgb(229,73,31)" fg:x="2363" fg:w="2"/><text x="28.7062%" y="1455.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="28.4562%" y="1429" width="0.0241%" height="15" fill="rgb(224,219,20)" fg:x="2363" fg:w="2"/><text x="28.7062%" y="1439.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="28.4803%" y="1365" width="0.0120%" height="15" fill="rgb(215,146,41)" fg:x="2365" fg:w="1"/><text x="28.7303%" y="1375.50"></text></g><g><title>_mi_segment_page_of (3 samples, 0.04%)</title><rect x="28.5525%" y="1349" width="0.0361%" height="15" fill="rgb(244,71,31)" fg:x="2371" fg:w="3"/><text x="28.8025%" y="1359.50"></text></g><g><title>mi_block_set_next (1 samples, 0.01%)</title><rect x="28.5886%" y="1349" width="0.0120%" height="15" fill="rgb(224,24,11)" fg:x="2374" fg:w="1"/><text x="28.8386%" y="1359.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.01%)</title><rect x="28.5886%" y="1333" width="0.0120%" height="15" fill="rgb(229,76,15)" fg:x="2374" fg:w="1"/><text x="28.8386%" y="1343.50"></text></g><g><title>mi_ptr_encode (1 samples, 0.01%)</title><rect x="28.5886%" y="1317" width="0.0120%" height="15" fill="rgb(209,93,2)" fg:x="2374" fg:w="1"/><text x="28.8386%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_engine::export::Export&gt; (18 samples, 0.22%)</title><rect x="28.4321%" y="1493" width="0.2168%" height="15" fill="rgb(216,200,50)" fg:x="2361" fg:w="18"/><text x="28.6821%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_engine::export::ExportFunction&gt; (16 samples, 0.19%)</title><rect x="28.4562%" y="1477" width="0.1927%" height="15" fill="rgb(211,67,34)" fg:x="2363" fg:w="16"/><text x="28.7062%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_vm::export::VMFunction&gt; (14 samples, 0.17%)</title><rect x="28.4803%" y="1461" width="0.1686%" height="15" fill="rgb(225,87,47)" fg:x="2365" fg:w="14"/><text x="28.7303%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_types::types::FunctionType&gt; (14 samples, 0.17%)</title><rect x="28.4803%" y="1445" width="0.1686%" height="15" fill="rgb(217,185,16)" fg:x="2365" fg:w="14"/><text x="28.7303%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[wasmer_types::types::Type]&gt;&gt; (14 samples, 0.17%)</title><rect x="28.4803%" y="1429" width="0.1686%" height="15" fill="rgb(205,0,0)" fg:x="2365" fg:w="14"/><text x="28.7303%" y="1439.50"></text></g><g><title>alloc::alloc::box_free (14 samples, 0.17%)</title><rect x="28.4803%" y="1413" width="0.1686%" height="15" fill="rgb(207,116,45)" fg:x="2365" fg:w="14"/><text x="28.7303%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.17%)</title><rect x="28.4803%" y="1397" width="0.1686%" height="15" fill="rgb(221,156,26)" fg:x="2365" fg:w="14"/><text x="28.7303%" y="1407.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.17%)</title><rect x="28.4803%" y="1381" width="0.1686%" height="15" fill="rgb(213,140,4)" fg:x="2365" fg:w="14"/><text x="28.7303%" y="1391.50"></text></g><g><title>mi_free (13 samples, 0.16%)</title><rect x="28.4923%" y="1365" width="0.1566%" height="15" fill="rgb(231,224,15)" fg:x="2366" fg:w="13"/><text x="28.7423%" y="1375.50"></text></g><g><title>mi_check_is_double_free (4 samples, 0.05%)</title><rect x="28.6007%" y="1349" width="0.0482%" height="15" fill="rgb(244,76,20)" fg:x="2375" fg:w="4"/><text x="28.8507%" y="1359.50"></text></g><g><title>mi_block_nextx (4 samples, 0.05%)</title><rect x="28.6007%" y="1333" width="0.0482%" height="15" fill="rgb(238,117,7)" fg:x="2375" fg:w="4"/><text x="28.8507%" y="1343.50"></text></g><g><title>mi_ptr_decode (4 samples, 0.05%)</title><rect x="28.6007%" y="1317" width="0.0482%" height="15" fill="rgb(235,1,10)" fg:x="2375" fg:w="4"/><text x="28.8507%" y="1327.50"></text></g><g><title>__rg_dealloc (1 samples, 0.01%)</title><rect x="28.6488%" y="1397" width="0.0120%" height="15" fill="rgb(216,165,6)" fg:x="2379" fg:w="1"/><text x="28.8988%" y="1407.50"></text></g><g><title>&lt;mimalloc::MiMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.01%)</title><rect x="28.6488%" y="1381" width="0.0120%" height="15" fill="rgb(246,91,35)" fg:x="2379" fg:w="1"/><text x="28.8988%" y="1391.50"></text></g><g><title>__rust_dealloc (5 samples, 0.06%)</title><rect x="28.6609%" y="1397" width="0.0602%" height="15" fill="rgb(228,96,24)" fg:x="2380" fg:w="5"/><text x="28.9109%" y="1407.50"></text></g><g><title>_mi_segment_page_of (5 samples, 0.06%)</title><rect x="28.7813%" y="1381" width="0.0602%" height="15" fill="rgb(254,217,53)" fg:x="2390" fg:w="5"/><text x="29.0313%" y="1391.50"></text></g><g><title>mi_slice_first (2 samples, 0.02%)</title><rect x="28.8174%" y="1365" width="0.0241%" height="15" fill="rgb(209,60,0)" fg:x="2393" fg:w="2"/><text x="29.0674%" y="1375.50"></text></g><g><title>mi_block_set_next (6 samples, 0.07%)</title><rect x="28.8415%" y="1381" width="0.0723%" height="15" fill="rgb(250,93,26)" fg:x="2395" fg:w="6"/><text x="29.0915%" y="1391.50"></text></g><g><title>mi_block_set_nextx (6 samples, 0.07%)</title><rect x="28.8415%" y="1365" width="0.0723%" height="15" fill="rgb(211,9,40)" fg:x="2395" fg:w="6"/><text x="29.0915%" y="1375.50"></text></g><g><title>mi_ptr_encode (6 samples, 0.07%)</title><rect x="28.8415%" y="1349" width="0.0723%" height="15" fill="rgb(242,57,20)" fg:x="2395" fg:w="6"/><text x="29.0915%" y="1359.50"></text></g><g><title>mi_rotl (1 samples, 0.01%)</title><rect x="28.9017%" y="1333" width="0.0120%" height="15" fill="rgb(248,85,48)" fg:x="2400" fg:w="1"/><text x="29.1517%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_types::types::ExternType&gt; (26 samples, 0.31%)</title><rect x="28.6488%" y="1493" width="0.3131%" height="15" fill="rgb(212,117,2)" fg:x="2379" fg:w="26"/><text x="28.8988%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_types::types::FunctionType&gt; (26 samples, 0.31%)</title><rect x="28.6488%" y="1477" width="0.3131%" height="15" fill="rgb(243,19,3)" fg:x="2379" fg:w="26"/><text x="28.8988%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[wasmer_types::types::Type]&gt;&gt; (26 samples, 0.31%)</title><rect x="28.6488%" y="1461" width="0.3131%" height="15" fill="rgb(232,217,24)" fg:x="2379" fg:w="26"/><text x="28.8988%" y="1471.50"></text></g><g><title>alloc::alloc::box_free (26 samples, 0.31%)</title><rect x="28.6488%" y="1445" width="0.3131%" height="15" fill="rgb(224,175,40)" fg:x="2379" fg:w="26"/><text x="28.8988%" y="1455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (26 samples, 0.31%)</title><rect x="28.6488%" y="1429" width="0.3131%" height="15" fill="rgb(212,162,32)" fg:x="2379" fg:w="26"/><text x="28.8988%" y="1439.50"></text></g><g><title>alloc::alloc::dealloc (26 samples, 0.31%)</title><rect x="28.6488%" y="1413" width="0.3131%" height="15" fill="rgb(215,9,4)" fg:x="2379" fg:w="26"/><text x="28.8988%" y="1423.50"></text></g><g><title>mi_free (20 samples, 0.24%)</title><rect x="28.7211%" y="1397" width="0.2408%" height="15" fill="rgb(242,42,7)" fg:x="2385" fg:w="20"/><text x="28.9711%" y="1407.50"></text></g><g><title>mi_check_is_double_free (4 samples, 0.05%)</title><rect x="28.9138%" y="1381" width="0.0482%" height="15" fill="rgb(242,184,45)" fg:x="2401" fg:w="4"/><text x="29.1638%" y="1391.50"></text></g><g><title>mi_block_nextx (4 samples, 0.05%)</title><rect x="28.9138%" y="1365" width="0.0482%" height="15" fill="rgb(228,111,51)" fg:x="2401" fg:w="4"/><text x="29.1638%" y="1375.50"></text></g><g><title>mi_ptr_decode (4 samples, 0.05%)</title><rect x="28.9138%" y="1349" width="0.0482%" height="15" fill="rgb(236,147,17)" fg:x="2401" fg:w="4"/><text x="29.1638%" y="1359.50"></text></g><g><title>mi_rotr (2 samples, 0.02%)</title><rect x="28.9379%" y="1333" width="0.0241%" height="15" fill="rgb(210,75,22)" fg:x="2403" fg:w="2"/><text x="29.1879%" y="1343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (1 samples, 0.01%)</title><rect x="29.0703%" y="1397" width="0.0120%" height="15" fill="rgb(217,159,45)" fg:x="2414" fg:w="1"/><text x="29.3203%" y="1407.50"></text></g><g><title>__rust_alloc (2 samples, 0.02%)</title><rect x="29.0824%" y="1301" width="0.0241%" height="15" fill="rgb(245,165,53)" fg:x="2415" fg:w="2"/><text x="29.3324%" y="1311.50"></text></g><g><title>mi_block_nextx (8 samples, 0.10%)</title><rect x="29.1546%" y="1221" width="0.0963%" height="15" fill="rgb(251,190,50)" fg:x="2421" fg:w="8"/><text x="29.4046%" y="1231.50"></text></g><g><title>mi_ptr_decode (8 samples, 0.10%)</title><rect x="29.1546%" y="1205" width="0.0963%" height="15" fill="rgb(208,203,29)" fg:x="2421" fg:w="8"/><text x="29.4046%" y="1215.50"></text></g><g><title>mi_rotr (1 samples, 0.01%)</title><rect x="29.2389%" y="1189" width="0.0120%" height="15" fill="rgb(207,209,35)" fg:x="2428" fg:w="1"/><text x="29.4889%" y="1199.50"></text></g><g><title>_mi_segment_page_of (4 samples, 0.05%)</title><rect x="29.3112%" y="1205" width="0.0482%" height="15" fill="rgb(230,144,49)" fg:x="2434" fg:w="4"/><text x="29.5612%" y="1215.50"></text></g><g><title>mi_slice_first (4 samples, 0.05%)</title><rect x="29.3112%" y="1189" width="0.0482%" height="15" fill="rgb(229,31,6)" fg:x="2434" fg:w="4"/><text x="29.5612%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (28 samples, 0.34%)</title><rect x="29.0824%" y="1397" width="0.3372%" height="15" fill="rgb(251,129,24)" fg:x="2415" fg:w="28"/><text x="29.3324%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (28 samples, 0.34%)</title><rect x="29.0824%" y="1381" width="0.3372%" height="15" fill="rgb(235,105,15)" fg:x="2415" fg:w="28"/><text x="29.3324%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (28 samples, 0.34%)</title><rect x="29.0824%" y="1365" width="0.3372%" height="15" fill="rgb(216,52,43)" fg:x="2415" fg:w="28"/><text x="29.3324%" y="1375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (28 samples, 0.34%)</title><rect x="29.0824%" y="1349" width="0.3372%" height="15" fill="rgb(238,144,41)" fg:x="2415" fg:w="28"/><text x="29.3324%" y="1359.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (28 samples, 0.34%)</title><rect x="29.0824%" y="1333" width="0.3372%" height="15" fill="rgb(243,63,9)" fg:x="2415" fg:w="28"/><text x="29.3324%" y="1343.50"></text></g><g><title>alloc::alloc::alloc (28 samples, 0.34%)</title><rect x="29.0824%" y="1317" width="0.3372%" height="15" fill="rgb(246,208,1)" fg:x="2415" fg:w="28"/><text x="29.3324%" y="1327.50"></text></g><g><title>mi_malloc (26 samples, 0.31%)</title><rect x="29.1065%" y="1301" width="0.3131%" height="15" fill="rgb(233,182,18)" fg:x="2417" fg:w="26"/><text x="29.3565%" y="1311.50"></text></g><g><title>mi_heap_malloc (26 samples, 0.31%)</title><rect x="29.1065%" y="1285" width="0.3131%" height="15" fill="rgb(242,224,8)" fg:x="2417" fg:w="26"/><text x="29.3565%" y="1295.50"></text></g><g><title>mi_heap_malloc_small (26 samples, 0.31%)</title><rect x="29.1065%" y="1269" width="0.3131%" height="15" fill="rgb(243,54,37)" fg:x="2417" fg:w="26"/><text x="29.3565%" y="1279.50"></text></g><g><title>_mi_page_malloc (26 samples, 0.31%)</title><rect x="29.1065%" y="1253" width="0.3131%" height="15" fill="rgb(233,192,12)" fg:x="2417" fg:w="26"/><text x="29.3565%" y="1263.50"></text></g><g><title>mi_block_next (24 samples, 0.29%)</title><rect x="29.1305%" y="1237" width="0.2890%" height="15" fill="rgb(251,192,53)" fg:x="2419" fg:w="24"/><text x="29.3805%" y="1247.50"></text></g><g><title>mi_is_in_same_page (14 samples, 0.17%)</title><rect x="29.2510%" y="1221" width="0.1686%" height="15" fill="rgb(246,141,26)" fg:x="2429" fg:w="14"/><text x="29.5010%" y="1231.50"></text></g><g><title>_mi_segment_page_start (5 samples, 0.06%)</title><rect x="29.3593%" y="1205" width="0.0602%" height="15" fill="rgb(239,195,19)" fg:x="2438" fg:w="5"/><text x="29.6093%" y="1215.50"></text></g><g><title>_mi_segment_page_start_from_slice (3 samples, 0.04%)</title><rect x="29.3834%" y="1189" width="0.0361%" height="15" fill="rgb(241,16,39)" fg:x="2440" fg:w="3"/><text x="29.6334%" y="1199.50"></text></g><g><title>wasmer_engine::resolver::get_extern_from_export (43 samples, 0.52%)</title><rect x="28.9619%" y="1493" width="0.5178%" height="15" fill="rgb(223,13,53)" fg:x="2405" fg:w="43"/><text x="29.2119%" y="1503.50"></text></g><g><title>&lt;wasmer_types::types::FunctionType as core::clone::Clone&gt;::clone (39 samples, 0.47%)</title><rect x="29.0101%" y="1477" width="0.4697%" height="15" fill="rgb(214,227,0)" fg:x="2409" fg:w="39"/><text x="29.2601%" y="1487.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T],A&gt; as core::clone::Clone&gt;::clone (39 samples, 0.47%)</title><rect x="29.0101%" y="1461" width="0.4697%" height="15" fill="rgb(228,103,26)" fg:x="2409" fg:w="39"/><text x="29.2601%" y="1471.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (34 samples, 0.41%)</title><rect x="29.0703%" y="1445" width="0.4094%" height="15" fill="rgb(254,177,53)" fg:x="2414" fg:w="34"/><text x="29.3203%" y="1455.50"></text></g><g><title>alloc::slice::hack::to_vec (34 samples, 0.41%)</title><rect x="29.0703%" y="1429" width="0.4094%" height="15" fill="rgb(208,201,34)" fg:x="2414" fg:w="34"/><text x="29.3203%" y="1439.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (34 samples, 0.41%)</title><rect x="29.0703%" y="1413" width="0.4094%" height="15" fill="rgb(212,39,5)" fg:x="2414" fg:w="34"/><text x="29.3203%" y="1423.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (5 samples, 0.06%)</title><rect x="29.4196%" y="1397" width="0.0602%" height="15" fill="rgb(246,117,3)" fg:x="2443" fg:w="5"/><text x="29.6696%" y="1407.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.06%)</title><rect x="29.4196%" y="1381" width="0.0602%" height="15" fill="rgb(244,118,39)" fg:x="2443" fg:w="5"/><text x="29.6696%" y="1391.50"></text></g><g><title>__memcpy_avx_unaligned_erms (5 samples, 0.06%)</title><rect x="29.4196%" y="1365" width="0.0602%" height="15" fill="rgb(241,64,10)" fg:x="2443" fg:w="5"/><text x="29.6696%" y="1375.50"></text></g><g><title>&lt;wasmer_types::entity::primary_map::PrimaryMap&lt;K,V&gt; as core::ops::index::Index&lt;K&gt;&gt;::index (9 samples, 0.11%)</title><rect x="29.4918%" y="1477" width="0.1084%" height="15" fill="rgb(229,39,44)" fg:x="2449" fg:w="9"/><text x="29.7418%" y="1487.50"></text></g><g><title>&lt;wasmer_types::indexes::ArchivedCustomSectionIndex as wasmer_types::entity::EntityRef&gt;::index (8 samples, 0.10%)</title><rect x="29.5039%" y="1461" width="0.0963%" height="15" fill="rgb(230,226,3)" fg:x="2450" fg:w="8"/><text x="29.7539%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (1 samples, 0.01%)</title><rect x="29.6243%" y="1397" width="0.0120%" height="15" fill="rgb(222,13,42)" fg:x="2460" fg:w="1"/><text x="29.8743%" y="1407.50"></text></g><g><title>__rg_alloc (4 samples, 0.05%)</title><rect x="29.6363%" y="1301" width="0.0482%" height="15" fill="rgb(247,180,54)" fg:x="2461" fg:w="4"/><text x="29.8863%" y="1311.50"></text></g><g><title>&lt;mimalloc::MiMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (4 samples, 0.05%)</title><rect x="29.6363%" y="1285" width="0.0482%" height="15" fill="rgb(205,96,16)" fg:x="2461" fg:w="4"/><text x="29.8863%" y="1295.50"></text></g><g><title>mimalloc::may_use_unaligned_api (4 samples, 0.05%)</title><rect x="29.6363%" y="1269" width="0.0482%" height="15" fill="rgb(205,100,21)" fg:x="2461" fg:w="4"/><text x="29.8863%" y="1279.50"></text></g><g><title>mi_block_nextx (5 samples, 0.06%)</title><rect x="29.7327%" y="1221" width="0.0602%" height="15" fill="rgb(248,51,4)" fg:x="2469" fg:w="5"/><text x="29.9827%" y="1231.50"></text></g><g><title>mi_ptr_decode (5 samples, 0.06%)</title><rect x="29.7327%" y="1205" width="0.0602%" height="15" fill="rgb(217,197,30)" fg:x="2469" fg:w="5"/><text x="29.9827%" y="1215.50"></text></g><g><title>_mi_segment_page_of (1 samples, 0.01%)</title><rect x="29.8290%" y="1205" width="0.0120%" height="15" fill="rgb(240,179,40)" fg:x="2477" fg:w="1"/><text x="30.0790%" y="1215.50"></text></g><g><title>mi_slice_first (1 samples, 0.01%)</title><rect x="29.8290%" y="1189" width="0.0120%" height="15" fill="rgb(212,185,35)" fg:x="2477" fg:w="1"/><text x="30.0790%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (21 samples, 0.25%)</title><rect x="29.6363%" y="1397" width="0.2529%" height="15" fill="rgb(251,222,31)" fg:x="2461" fg:w="21"/><text x="29.8863%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (21 samples, 0.25%)</title><rect x="29.6363%" y="1381" width="0.2529%" height="15" fill="rgb(208,140,36)" fg:x="2461" fg:w="21"/><text x="29.8863%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (21 samples, 0.25%)</title><rect x="29.6363%" y="1365" width="0.2529%" height="15" fill="rgb(220,148,1)" fg:x="2461" fg:w="21"/><text x="29.8863%" y="1375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.25%)</title><rect x="29.6363%" y="1349" width="0.2529%" height="15" fill="rgb(254,4,28)" fg:x="2461" fg:w="21"/><text x="29.8863%" y="1359.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.25%)</title><rect x="29.6363%" y="1333" width="0.2529%" height="15" fill="rgb(222,185,44)" fg:x="2461" fg:w="21"/><text x="29.8863%" y="1343.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.25%)</title><rect x="29.6363%" y="1317" width="0.2529%" height="15" fill="rgb(215,74,39)" fg:x="2461" fg:w="21"/><text x="29.8863%" y="1327.50"></text></g><g><title>mi_malloc (17 samples, 0.20%)</title><rect x="29.6845%" y="1301" width="0.2047%" height="15" fill="rgb(247,86,4)" fg:x="2465" fg:w="17"/><text x="29.9345%" y="1311.50"></text></g><g><title>mi_heap_malloc (14 samples, 0.17%)</title><rect x="29.7206%" y="1285" width="0.1686%" height="15" fill="rgb(231,105,32)" fg:x="2468" fg:w="14"/><text x="29.9706%" y="1295.50"></text></g><g><title>mi_heap_malloc_small (14 samples, 0.17%)</title><rect x="29.7206%" y="1269" width="0.1686%" height="15" fill="rgb(222,65,35)" fg:x="2468" fg:w="14"/><text x="29.9706%" y="1279.50"></text></g><g><title>_mi_page_malloc (14 samples, 0.17%)</title><rect x="29.7206%" y="1253" width="0.1686%" height="15" fill="rgb(218,145,35)" fg:x="2468" fg:w="14"/><text x="29.9706%" y="1263.50"></text></g><g><title>mi_block_next (13 samples, 0.16%)</title><rect x="29.7327%" y="1237" width="0.1566%" height="15" fill="rgb(208,7,15)" fg:x="2469" fg:w="13"/><text x="29.9827%" y="1247.50"></text></g><g><title>mi_is_in_same_page (8 samples, 0.10%)</title><rect x="29.7929%" y="1221" width="0.0963%" height="15" fill="rgb(209,83,13)" fg:x="2474" fg:w="8"/><text x="30.0429%" y="1231.50"></text></g><g><title>_mi_segment_page_start (4 samples, 0.05%)</title><rect x="29.8410%" y="1205" width="0.0482%" height="15" fill="rgb(218,3,10)" fg:x="2478" fg:w="4"/><text x="30.0910%" y="1215.50"></text></g><g><title>_mi_segment_page_start_from_slice (4 samples, 0.05%)</title><rect x="29.8410%" y="1189" width="0.0482%" height="15" fill="rgb(211,219,4)" fg:x="2478" fg:w="4"/><text x="30.0910%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (27 samples, 0.33%)</title><rect x="29.6243%" y="1445" width="0.3251%" height="15" fill="rgb(228,194,12)" fg:x="2460" fg:w="27"/><text x="29.8743%" y="1455.50"></text></g><g><title>alloc::slice::hack::to_vec (27 samples, 0.33%)</title><rect x="29.6243%" y="1429" width="0.3251%" height="15" fill="rgb(210,175,7)" fg:x="2460" fg:w="27"/><text x="29.8743%" y="1439.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (27 samples, 0.33%)</title><rect x="29.6243%" y="1413" width="0.3251%" height="15" fill="rgb(243,132,6)" fg:x="2460" fg:w="27"/><text x="29.8743%" y="1423.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (5 samples, 0.06%)</title><rect x="29.8892%" y="1397" width="0.0602%" height="15" fill="rgb(207,72,18)" fg:x="2482" fg:w="5"/><text x="30.1392%" y="1407.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.06%)</title><rect x="29.8892%" y="1381" width="0.0602%" height="15" fill="rgb(236,1,18)" fg:x="2482" fg:w="5"/><text x="30.1392%" y="1391.50"></text></g><g><title>__memcpy_avx_unaligned_erms (4 samples, 0.05%)</title><rect x="29.9013%" y="1365" width="0.0482%" height="15" fill="rgb(227,0,18)" fg:x="2483" fg:w="4"/><text x="30.1513%" y="1375.50"></text></g><g><title>&lt;wasmer_types::types::FunctionType as core::clone::Clone&gt;::clone (32 samples, 0.39%)</title><rect x="29.6002%" y="1477" width="0.3854%" height="15" fill="rgb(247,37,5)" fg:x="2458" fg:w="32"/><text x="29.8502%" y="1487.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T],A&gt; as core::clone::Clone&gt;::clone (32 samples, 0.39%)</title><rect x="29.6002%" y="1461" width="0.3854%" height="15" fill="rgb(237,179,24)" fg:x="2458" fg:w="32"/><text x="29.8502%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (3 samples, 0.04%)</title><rect x="29.9494%" y="1445" width="0.0361%" height="15" fill="rgb(226,53,20)" fg:x="2487" fg:w="3"/><text x="30.1994%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::shrink_to_fit (1 samples, 0.01%)</title><rect x="29.9735%" y="1429" width="0.0120%" height="15" fill="rgb(247,75,7)" fg:x="2489" fg:w="1"/><text x="30.2235%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::capacity (1 samples, 0.01%)</title><rect x="29.9735%" y="1413" width="0.0120%" height="15" fill="rgb(233,96,12)" fg:x="2489" fg:w="1"/><text x="30.2235%" y="1423.50"></text></g><g><title>wasmer_engine::resolver::get_extern_from_import (43 samples, 0.52%)</title><rect x="29.4798%" y="1493" width="0.5178%" height="15" fill="rgb(224,125,0)" fg:x="2448" fg:w="43"/><text x="29.7298%" y="1503.50"></text></g><g><title>wasmer_engine::resolver::resolve_imports (1 samples, 0.01%)</title><rect x="29.9855%" y="1477" width="0.0120%" height="15" fill="rgb(224,92,25)" fg:x="2490" fg:w="1"/><text x="30.2355%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (10 samples, 0.12%)</title><rect x="30.1541%" y="1461" width="0.1204%" height="15" fill="rgb(224,42,24)" fg:x="2504" fg:w="10"/><text x="30.4041%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (15 samples, 0.18%)</title><rect x="30.1060%" y="1477" width="0.1806%" height="15" fill="rgb(234,132,49)" fg:x="2500" fg:w="15"/><text x="30.3560%" y="1487.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="30.2746%" y="1461" width="0.0120%" height="15" fill="rgb(248,100,35)" fg:x="2514" fg:w="1"/><text x="30.5246%" y="1471.50"></text></g><g><title>wasmer_types::entity::primary_map::PrimaryMap&lt;K,V&gt;::push (26 samples, 0.31%)</title><rect x="29.9976%" y="1493" width="0.3131%" height="15" fill="rgb(239,94,40)" fg:x="2491" fg:w="26"/><text x="30.2476%" y="1503.50"></text></g><g><title>wasmer_types::entity::primary_map::PrimaryMap&lt;K,V&gt;::next_key (2 samples, 0.02%)</title><rect x="30.2866%" y="1477" width="0.0241%" height="15" fill="rgb(235,139,28)" fg:x="2515" fg:w="2"/><text x="30.5366%" y="1487.50"></text></g><g><title>&lt;wasmer_types::indexes::ArchivedCustomSectionIndex as wasmer_types::entity::EntityRef&gt;::new (2 samples, 0.02%)</title><rect x="30.2866%" y="1461" width="0.0241%" height="15" fill="rgb(217,144,7)" fg:x="2515" fg:w="2"/><text x="30.5366%" y="1471.50"></text></g><g><title>_mi_deferred_free (1 samples, 0.01%)</title><rect x="30.3348%" y="1349" width="0.0120%" height="15" fill="rgb(227,55,4)" fg:x="2519" fg:w="1"/><text x="30.5848%" y="1359.50"></text></g><g><title>wasmer_types::entity::primary_map::PrimaryMap&lt;K,V&gt;::with_capacity (4 samples, 0.05%)</title><rect x="30.3107%" y="1493" width="0.0482%" height="15" fill="rgb(252,82,54)" fg:x="2517" fg:w="4"/><text x="30.5607%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.04%)</title><rect x="30.3227%" y="1477" width="0.0361%" height="15" fill="rgb(245,172,4)" fg:x="2518" fg:w="3"/><text x="30.5727%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="30.3227%" y="1461" width="0.0361%" height="15" fill="rgb(207,26,27)" fg:x="2518" fg:w="3"/><text x="30.5727%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="30.3227%" y="1445" width="0.0361%" height="15" fill="rgb(252,98,18)" fg:x="2518" fg:w="3"/><text x="30.5727%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.04%)</title><rect x="30.3227%" y="1429" width="0.0361%" height="15" fill="rgb(244,8,26)" fg:x="2518" fg:w="3"/><text x="30.5727%" y="1439.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="30.3227%" y="1413" width="0.0361%" height="15" fill="rgb(237,173,45)" fg:x="2518" fg:w="3"/><text x="30.5727%" y="1423.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.04%)</title><rect x="30.3227%" y="1397" width="0.0361%" height="15" fill="rgb(208,213,49)" fg:x="2518" fg:w="3"/><text x="30.5727%" y="1407.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="30.3227%" y="1381" width="0.0361%" height="15" fill="rgb(212,122,37)" fg:x="2518" fg:w="3"/><text x="30.5727%" y="1391.50"></text></g><g><title>_mi_malloc_generic (3 samples, 0.04%)</title><rect x="30.3227%" y="1365" width="0.0361%" height="15" fill="rgb(213,80,17)" fg:x="2518" fg:w="3"/><text x="30.5727%" y="1375.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.01%)</title><rect x="30.3468%" y="1349" width="0.0120%" height="15" fill="rgb(206,210,43)" fg:x="2520" fg:w="1"/><text x="30.5968%" y="1359.50"></text></g><g><title>mi_block_next (1 samples, 0.01%)</title><rect x="30.3468%" y="1333" width="0.0120%" height="15" fill="rgb(229,214,3)" fg:x="2520" fg:w="1"/><text x="30.5968%" y="1343.50"></text></g><g><title>mi_block_nextx (1 samples, 0.01%)</title><rect x="30.3468%" y="1317" width="0.0120%" height="15" fill="rgb(235,213,29)" fg:x="2520" fg:w="1"/><text x="30.5968%" y="1327.50"></text></g><g><title>mi_ptr_decode (1 samples, 0.01%)</title><rect x="30.3468%" y="1301" width="0.0120%" height="15" fill="rgb(248,135,26)" fg:x="2520" fg:w="1"/><text x="30.5968%" y="1311.50"></text></g><g><title>wasmer_types::types::ExternType::is_compatible_with (8 samples, 0.10%)</title><rect x="30.3589%" y="1493" width="0.0963%" height="15" fill="rgb(242,188,12)" fg:x="2521" fg:w="8"/><text x="30.6089%" y="1503.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.05%)</title><rect x="30.4070%" y="1477" width="0.0482%" height="15" fill="rgb(245,38,12)" fg:x="2525" fg:w="4"/><text x="30.6570%" y="1487.50"></text></g><g><title>&lt;wasmer_types::types::FunctionType as core::cmp::PartialEq&gt;::eq (4 samples, 0.05%)</title><rect x="30.4070%" y="1461" width="0.0482%" height="15" fill="rgb(218,42,13)" fg:x="2525" fg:w="4"/><text x="30.6570%" y="1471.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.05%)</title><rect x="30.4070%" y="1445" width="0.0482%" height="15" fill="rgb(238,132,49)" fg:x="2525" fg:w="4"/><text x="30.6570%" y="1455.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.05%)</title><rect x="30.4070%" y="1429" width="0.0482%" height="15" fill="rgb(209,196,19)" fg:x="2525" fg:w="4"/><text x="30.6570%" y="1439.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.05%)</title><rect x="30.4070%" y="1413" width="0.0482%" height="15" fill="rgb(244,131,22)" fg:x="2525" fg:w="4"/><text x="30.6570%" y="1423.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (3 samples, 0.04%)</title><rect x="30.4191%" y="1397" width="0.0361%" height="15" fill="rgb(223,18,34)" fg:x="2526" fg:w="3"/><text x="30.6691%" y="1407.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.04%)</title><rect x="30.4191%" y="1381" width="0.0361%" height="15" fill="rgb(252,124,54)" fg:x="2526" fg:w="3"/><text x="30.6691%" y="1391.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="30.4311%" y="1365" width="0.0241%" height="15" fill="rgb(229,106,42)" fg:x="2527" fg:w="2"/><text x="30.6811%" y="1375.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (2 samples, 0.02%)</title><rect x="30.4311%" y="1349" width="0.0241%" height="15" fill="rgb(221,129,1)" fg:x="2527" fg:w="2"/><text x="30.6811%" y="1359.50"></text></g><g><title>wasmer_engine::resolver::resolve_imports (481 samples, 5.79%)</title><rect x="24.7351%" y="1509" width="5.7924%" height="15" fill="rgb(229,74,15)" fg:x="2054" fg:w="481"/><text x="24.9851%" y="1519.50">wasmer_..</text></g><g><title>wasmer_vm::imports::Imports::new (6 samples, 0.07%)</title><rect x="30.4552%" y="1493" width="0.0723%" height="15" fill="rgb(210,206,50)" fg:x="2529" fg:w="6"/><text x="30.7052%" y="1503.50"></text></g><g><title>wasmer_types::entity::primary_map::PrimaryMap&lt;K,V&gt;::into_boxed_slice (5 samples, 0.06%)</title><rect x="30.4672%" y="1477" width="0.0602%" height="15" fill="rgb(251,114,31)" fg:x="2530" fg:w="5"/><text x="30.7172%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (4 samples, 0.05%)</title><rect x="30.4793%" y="1461" width="0.0482%" height="15" fill="rgb(215,225,28)" fg:x="2531" fg:w="4"/><text x="30.7293%" y="1471.50"></text></g><g><title>wasmer_types::memory::MemoryStyle::offset_guard_size (5 samples, 0.06%)</title><rect x="30.5636%" y="1445" width="0.0602%" height="15" fill="rgb(237,109,14)" fg:x="2538" fg:w="5"/><text x="30.8136%" y="1455.50"></text></g><g><title>wasmer_types::units::Pages::bytes (1 samples, 0.01%)</title><rect x="30.6238%" y="1445" width="0.0120%" height="15" fill="rgb(230,13,37)" fg:x="2543" fg:w="1"/><text x="30.8738%" y="1455.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.01%)</title><rect x="30.6238%" y="1429" width="0.0120%" height="15" fill="rgb(231,40,28)" fg:x="2543" fg:w="1"/><text x="30.8738%" y="1439.50"></text></g><g><title>&lt;wasmer_types::units::Bytes as core::convert::From&lt;wasmer_types::units::Pages&gt;&gt;::from (1 samples, 0.01%)</title><rect x="30.6238%" y="1413" width="0.0120%" height="15" fill="rgb(231,202,18)" fg:x="2543" fg:w="1"/><text x="30.8738%" y="1423.50"></text></g><g><title>__GI___mmap64 (23 samples, 0.28%)</title><rect x="30.6479%" y="1429" width="0.2770%" height="15" fill="rgb(225,33,18)" fg:x="2545" fg:w="23"/><text x="30.8979%" y="1439.50"></text></g><g><title>[unknown] (22 samples, 0.26%)</title><rect x="30.6599%" y="1413" width="0.2649%" height="15" fill="rgb(223,64,47)" fg:x="2546" fg:w="22"/><text x="30.9099%" y="1423.50"></text></g><g><title>[unknown] (22 samples, 0.26%)</title><rect x="30.6599%" y="1397" width="0.2649%" height="15" fill="rgb(234,114,13)" fg:x="2546" fg:w="22"/><text x="30.9099%" y="1407.50"></text></g><g><title>[unknown] (22 samples, 0.26%)</title><rect x="30.6599%" y="1381" width="0.2649%" height="15" fill="rgb(248,56,40)" fg:x="2546" fg:w="22"/><text x="30.9099%" y="1391.50"></text></g><g><title>[unknown] (20 samples, 0.24%)</title><rect x="30.6840%" y="1365" width="0.2408%" height="15" fill="rgb(221,194,21)" fg:x="2548" fg:w="20"/><text x="30.9340%" y="1375.50"></text></g><g><title>[unknown] (13 samples, 0.16%)</title><rect x="30.7683%" y="1349" width="0.1566%" height="15" fill="rgb(242,108,46)" fg:x="2555" fg:w="13"/><text x="31.0183%" y="1359.50"></text></g><g><title>[unknown] (12 samples, 0.14%)</title><rect x="30.7803%" y="1333" width="0.1445%" height="15" fill="rgb(220,106,10)" fg:x="2556" fg:w="12"/><text x="31.0303%" y="1343.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="30.8526%" y="1317" width="0.0723%" height="15" fill="rgb(211,88,4)" fg:x="2562" fg:w="6"/><text x="31.1026%" y="1327.50"></text></g><g><title>wasmer_engine::tunables::Tunables::create_memories (40 samples, 0.48%)</title><rect x="30.5275%" y="1509" width="0.4817%" height="15" fill="rgb(214,95,34)" fg:x="2535" fg:w="40"/><text x="30.7775%" y="1519.50"></text></g><g><title>&lt;wasmer::sys::tunables::BaseTunables as wasmer_engine::tunables::Tunables&gt;::create_vm_memory (39 samples, 0.47%)</title><rect x="30.5395%" y="1493" width="0.4697%" height="15" fill="rgb(250,160,33)" fg:x="2536" fg:w="39"/><text x="30.7895%" y="1503.50"></text></g><g><title>wasmer_vm::memory::LinearMemory::from_definition (38 samples, 0.46%)</title><rect x="30.5515%" y="1477" width="0.4576%" height="15" fill="rgb(225,29,10)" fg:x="2537" fg:w="38"/><text x="30.8015%" y="1487.50"></text></g><g><title>wasmer_vm::memory::LinearMemory::new_internal (38 samples, 0.46%)</title><rect x="30.5515%" y="1461" width="0.4576%" height="15" fill="rgb(224,28,30)" fg:x="2537" fg:w="38"/><text x="30.8015%" y="1471.50"></text></g><g><title>wasmer_vm::mmap::Mmap::accessible_reserved (31 samples, 0.37%)</title><rect x="30.6358%" y="1445" width="0.3733%" height="15" fill="rgb(231,77,4)" fg:x="2544" fg:w="31"/><text x="30.8858%" y="1455.50"></text></g><g><title>wasmer_vm::mmap::Mmap::make_accessible (7 samples, 0.08%)</title><rect x="30.9249%" y="1429" width="0.0843%" height="15" fill="rgb(209,63,21)" fg:x="2568" fg:w="7"/><text x="31.1749%" y="1439.50"></text></g><g><title>region::protect::protect (7 samples, 0.08%)</title><rect x="30.9249%" y="1413" width="0.0843%" height="15" fill="rgb(226,22,11)" fg:x="2568" fg:w="7"/><text x="31.1749%" y="1423.50"></text></g><g><title>region::os::unix::protect (7 samples, 0.08%)</title><rect x="30.9249%" y="1397" width="0.0843%" height="15" fill="rgb(216,82,30)" fg:x="2568" fg:w="7"/><text x="31.1749%" y="1407.50"></text></g><g><title>__GI___mprotect (7 samples, 0.08%)</title><rect x="30.9249%" y="1381" width="0.0843%" height="15" fill="rgb(246,227,38)" fg:x="2568" fg:w="7"/><text x="31.1749%" y="1391.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="30.9249%" y="1365" width="0.0843%" height="15" fill="rgb(251,203,53)" fg:x="2568" fg:w="7"/><text x="31.1749%" y="1375.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="30.9249%" y="1349" width="0.0843%" height="15" fill="rgb(254,101,1)" fg:x="2568" fg:w="7"/><text x="31.1749%" y="1359.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="30.9249%" y="1333" width="0.0843%" height="15" fill="rgb(241,180,5)" fg:x="2568" fg:w="7"/><text x="31.1749%" y="1343.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="30.9249%" y="1317" width="0.0843%" height="15" fill="rgb(218,168,4)" fg:x="2568" fg:w="7"/><text x="31.1749%" y="1327.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="30.9249%" y="1301" width="0.0843%" height="15" fill="rgb(224,223,32)" fg:x="2568" fg:w="7"/><text x="31.1749%" y="1311.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="30.9249%" y="1285" width="0.0843%" height="15" fill="rgb(236,106,22)" fg:x="2568" fg:w="7"/><text x="31.1749%" y="1295.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="30.9249%" y="1269" width="0.0843%" height="15" fill="rgb(206,121,5)" fg:x="2568" fg:w="7"/><text x="31.1749%" y="1279.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="30.9851%" y="1253" width="0.0241%" height="15" fill="rgb(233,87,28)" fg:x="2573" fg:w="2"/><text x="31.2351%" y="1263.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="30.9851%" y="1237" width="0.0241%" height="15" fill="rgb(236,137,17)" fg:x="2573" fg:w="2"/><text x="31.2351%" y="1247.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="31.0332%" y="1493" width="0.0120%" height="15" fill="rgb(209,183,38)" fg:x="2577" fg:w="1"/><text x="31.2832%" y="1503.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="31.0332%" y="1477" width="0.0120%" height="15" fill="rgb(206,162,44)" fg:x="2577" fg:w="1"/><text x="31.2832%" y="1487.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.01%)</title><rect x="31.0453%" y="1493" width="0.0120%" height="15" fill="rgb(237,70,39)" fg:x="2578" fg:w="1"/><text x="31.2953%" y="1503.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="31.0453%" y="1477" width="0.0120%" height="15" fill="rgb(212,176,5)" fg:x="2578" fg:w="1"/><text x="31.2953%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_types::entity::boxed_slice::BoxedSlice&lt;wasmer_types::indexes::GlobalIndex,wasmer_vm::vmcontext::VMGlobalImport&gt;&gt; (2 samples, 0.02%)</title><rect x="31.0573%" y="1493" width="0.0241%" height="15" fill="rgb(232,95,16)" fg:x="2579" fg:w="2"/><text x="31.3073%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[wasmer_vm::vmcontext::VMGlobalImport]&gt;&gt; (1 samples, 0.01%)</title><rect x="31.0694%" y="1477" width="0.0120%" height="15" fill="rgb(219,115,35)" fg:x="2580" fg:w="1"/><text x="31.3194%" y="1487.50"></text></g><g><title>wasmer_types::entity::boxed_slice::BoxedSlice&lt;K,V&gt;::values (1 samples, 0.01%)</title><rect x="31.0814%" y="1493" width="0.0120%" height="15" fill="rgb(251,67,27)" fg:x="2581" fg:w="1"/><text x="31.3314%" y="1503.50"></text></g><g><title>wasmer_vm::instance::Instance::builtin_functions_ptr (1 samples, 0.01%)</title><rect x="31.0934%" y="1493" width="0.0120%" height="15" fill="rgb(222,95,40)" fg:x="2582" fg:w="1"/><text x="31.3434%" y="1503.50"></text></g><g><title>wasmer_types::vmoffsets::VMOffsets::vmctx_builtin_functions_begin (1 samples, 0.01%)</title><rect x="31.0934%" y="1477" width="0.0120%" height="15" fill="rgb(250,35,16)" fg:x="2582" fg:w="1"/><text x="31.3434%" y="1487.50"></text></g><g><title>wasmer_types::vmoffsets::VMOffsets::vmctx_globals_begin (1 samples, 0.01%)</title><rect x="31.0934%" y="1461" width="0.0120%" height="15" fill="rgb(224,86,44)" fg:x="2582" fg:w="1"/><text x="31.3434%" y="1471.50"></text></g><g><title>&lt;wasmer_types::entity::boxed_slice::BoxedSlice&lt;K,V&gt; as core::ops::index::Index&lt;K&gt;&gt;::index (5 samples, 0.06%)</title><rect x="31.1055%" y="1477" width="0.0602%" height="15" fill="rgb(237,53,53)" fg:x="2583" fg:w="5"/><text x="31.3555%" y="1487.50"></text></g><g><title>&lt;wasmer_types::indexes::ArchivedCustomSectionIndex as wasmer_types::entity::EntityRef&gt;::index (3 samples, 0.04%)</title><rect x="31.1296%" y="1461" width="0.0361%" height="15" fill="rgb(208,171,33)" fg:x="2585" fg:w="3"/><text x="31.3796%" y="1471.50"></text></g><g><title>&lt;wasmer_types::entity::iter::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.05%)</title><rect x="31.1657%" y="1477" width="0.0482%" height="15" fill="rgb(222,64,27)" fg:x="2588" fg:w="4"/><text x="31.4157%" y="1487.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.05%)</title><rect x="31.1657%" y="1461" width="0.0482%" height="15" fill="rgb(221,121,35)" fg:x="2588" fg:w="4"/><text x="31.4157%" y="1471.50"></text></g><g><title>&lt;wasmer_types::entity::iter::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (4 samples, 0.05%)</title><rect x="31.1657%" y="1445" width="0.0482%" height="15" fill="rgb(228,137,42)" fg:x="2588" fg:w="4"/><text x="31.4157%" y="1455.50"></text></g><g><title>&lt;wasmer_types::indexes::ArchivedCustomSectionIndex as wasmer_types::entity::EntityRef&gt;::new (4 samples, 0.05%)</title><rect x="31.1657%" y="1429" width="0.0482%" height="15" fill="rgb(227,54,21)" fg:x="2588" fg:w="4"/><text x="31.4157%" y="1439.50"></text></g><g><title>&lt;wasmer_types::entity::primary_map::PrimaryMap&lt;K,V&gt; as core::ops::index::Index&lt;K&gt;&gt;::index (5 samples, 0.06%)</title><rect x="31.2139%" y="1477" width="0.0602%" height="15" fill="rgb(240,168,33)" fg:x="2592" fg:w="5"/><text x="31.4639%" y="1487.50"></text></g><g><title>&lt;wasmer_types::indexes::ArchivedCustomSectionIndex as wasmer_types::entity::EntityRef&gt;::index (4 samples, 0.05%)</title><rect x="31.2259%" y="1461" width="0.0482%" height="15" fill="rgb(243,159,6)" fg:x="2593" fg:w="4"/><text x="31.4759%" y="1471.50"></text></g><g><title>wasmer_types::entity::primary_map::PrimaryMap&lt;K,V&gt;::into_boxed_slice (1 samples, 0.01%)</title><rect x="31.2741%" y="1477" width="0.0120%" height="15" fill="rgb(205,211,41)" fg:x="2597" fg:w="1"/><text x="31.5241%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (1 samples, 0.01%)</title><rect x="31.2741%" y="1461" width="0.0120%" height="15" fill="rgb(253,30,1)" fg:x="2597" fg:w="1"/><text x="31.5241%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::shrink_to_fit (1 samples, 0.01%)</title><rect x="31.2741%" y="1445" width="0.0120%" height="15" fill="rgb(226,80,18)" fg:x="2597" fg:w="1"/><text x="31.5241%" y="1455.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.2741%" y="1429" width="0.0120%" height="15" fill="rgb(253,156,46)" fg:x="2597" fg:w="1"/><text x="31.5241%" y="1439.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.2741%" y="1413" width="0.0120%" height="15" fill="rgb(248,87,27)" fg:x="2597" fg:w="1"/><text x="31.5241%" y="1423.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.2741%" y="1397" width="0.0120%" height="15" fill="rgb(227,122,2)" fg:x="2597" fg:w="1"/><text x="31.5241%" y="1407.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.2741%" y="1381" width="0.0120%" height="15" fill="rgb(229,94,39)" fg:x="2597" fg:w="1"/><text x="31.5241%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.2741%" y="1365" width="0.0120%" height="15" fill="rgb(225,173,31)" fg:x="2597" fg:w="1"/><text x="31.5241%" y="1375.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.2741%" y="1349" width="0.0120%" height="15" fill="rgb(239,176,30)" fg:x="2597" fg:w="1"/><text x="31.5241%" y="1359.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.2741%" y="1333" width="0.0120%" height="15" fill="rgb(212,104,21)" fg:x="2597" fg:w="1"/><text x="31.5241%" y="1343.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.2741%" y="1317" width="0.0120%" height="15" fill="rgb(240,209,40)" fg:x="2597" fg:w="1"/><text x="31.5241%" y="1327.50"></text></g><g><title>wasmer_types::entity::primary_map::PrimaryMap&lt;K,V&gt;::push (5 samples, 0.06%)</title><rect x="31.2861%" y="1477" width="0.0602%" height="15" fill="rgb(234,195,5)" fg:x="2598" fg:w="5"/><text x="31.5361%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.06%)</title><rect x="31.2861%" y="1461" width="0.0602%" height="15" fill="rgb(238,213,1)" fg:x="2598" fg:w="5"/><text x="31.5361%" y="1471.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="31.3223%" y="1445" width="0.0241%" height="15" fill="rgb(235,182,54)" fg:x="2601" fg:w="2"/><text x="31.5723%" y="1455.50"></text></g><g><title>wasmer_vm::instance::build_funcrefs (21 samples, 0.25%)</title><rect x="31.1055%" y="1493" width="0.2529%" height="15" fill="rgb(229,50,46)" fg:x="2583" fg:w="21"/><text x="31.3555%" y="1503.50"></text></g><g><title>wasmer_types::entity::primary_map::PrimaryMap&lt;K,V&gt;::with_capacity (1 samples, 0.01%)</title><rect x="31.3463%" y="1477" width="0.0120%" height="15" fill="rgb(219,145,13)" fg:x="2603" fg:w="1"/><text x="31.5963%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.01%)</title><rect x="31.3463%" y="1461" width="0.0120%" height="15" fill="rgb(220,226,10)" fg:x="2603" fg:w="1"/><text x="31.5963%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="31.3463%" y="1445" width="0.0120%" height="15" fill="rgb(248,47,30)" fg:x="2603" fg:w="1"/><text x="31.5963%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="31.3463%" y="1429" width="0.0120%" height="15" fill="rgb(231,209,44)" fg:x="2603" fg:w="1"/><text x="31.5963%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="31.3463%" y="1413" width="0.0120%" height="15" fill="rgb(209,80,30)" fg:x="2603" fg:w="1"/><text x="31.5963%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="31.3463%" y="1397" width="0.0120%" height="15" fill="rgb(232,9,14)" fg:x="2603" fg:w="1"/><text x="31.5963%" y="1407.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="31.3463%" y="1381" width="0.0120%" height="15" fill="rgb(243,91,43)" fg:x="2603" fg:w="1"/><text x="31.5963%" y="1391.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="31.3463%" y="1365" width="0.0120%" height="15" fill="rgb(231,90,52)" fg:x="2603" fg:w="1"/><text x="31.5963%" y="1375.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.01%)</title><rect x="31.3463%" y="1349" width="0.0120%" height="15" fill="rgb(253,192,44)" fg:x="2603" fg:w="1"/><text x="31.5963%" y="1359.50"></text></g><g><title>wasmer_vm::instance::initialize_globals (1 samples, 0.01%)</title><rect x="31.3584%" y="1493" width="0.0120%" height="15" fill="rgb(241,66,31)" fg:x="2604" fg:w="1"/><text x="31.6084%" y="1503.50"></text></g><g><title>wasmer_types::vmoffsets::VMBuiltinFunctionIndex::get_data_drop_index (1 samples, 0.01%)</title><rect x="31.3945%" y="1477" width="0.0120%" height="15" fill="rgb(235,81,37)" fg:x="2607" fg:w="1"/><text x="31.6445%" y="1487.50"></text></g><g><title>wasmer_types::vmoffsets::VMBuiltinFunctionIndex::get_externref_dec_index (1 samples, 0.01%)</title><rect x="31.4066%" y="1477" width="0.0120%" height="15" fill="rgb(223,221,9)" fg:x="2608" fg:w="1"/><text x="31.6566%" y="1487.50"></text></g><g><title>wasmer_types::vmoffsets::VMBuiltinFunctionIndex::get_imported_memory32_grow_index (1 samples, 0.01%)</title><rect x="31.4186%" y="1477" width="0.0120%" height="15" fill="rgb(242,180,7)" fg:x="2609" fg:w="1"/><text x="31.6686%" y="1487.50"></text></g><g><title>wasmer_types::vmoffsets::VMBuiltinFunctionIndex::get_imported_table_set_index (2 samples, 0.02%)</title><rect x="31.4306%" y="1477" width="0.0241%" height="15" fill="rgb(243,78,19)" fg:x="2610" fg:w="2"/><text x="31.6806%" y="1487.50"></text></g><g><title>wasmer_types::vmoffsets::VMBuiltinFunctionIndex::get_memory_copy_index (1 samples, 0.01%)</title><rect x="31.4547%" y="1477" width="0.0120%" height="15" fill="rgb(233,23,17)" fg:x="2612" fg:w="1"/><text x="31.7047%" y="1487.50"></text></g><g><title>wasmer_types::vmoffsets::VMBuiltinFunctionIndex::get_memory_init_index (1 samples, 0.01%)</title><rect x="31.4668%" y="1477" width="0.0120%" height="15" fill="rgb(252,122,45)" fg:x="2613" fg:w="1"/><text x="31.7168%" y="1487.50"></text></g><g><title>wasmer_types::vmoffsets::VMBuiltinFunctionIndex::get_raise_trap_index (1 samples, 0.01%)</title><rect x="31.4788%" y="1477" width="0.0120%" height="15" fill="rgb(247,108,20)" fg:x="2614" fg:w="1"/><text x="31.7288%" y="1487.50"></text></g><g><title>wasmer_types::vmoffsets::VMBuiltinFunctionIndex::get_table_grow_index (1 samples, 0.01%)</title><rect x="31.4908%" y="1477" width="0.0120%" height="15" fill="rgb(235,84,21)" fg:x="2615" fg:w="1"/><text x="31.7408%" y="1487.50"></text></g><g><title>wasmer_vm::instance::InstanceHandle::new (47 samples, 0.57%)</title><rect x="31.0092%" y="1509" width="0.5660%" height="15" fill="rgb(247,129,10)" fg:x="2575" fg:w="47"/><text x="31.2592%" y="1519.50"></text></g><g><title>wasmer_vm::vmcontext::VMBuiltinFunctionsArray::initialized (17 samples, 0.20%)</title><rect x="31.3704%" y="1493" width="0.2047%" height="15" fill="rgb(208,173,14)" fg:x="2605" fg:w="17"/><text x="31.6204%" y="1503.50"></text></g><g><title>wasmer_types::vmoffsets::VMBuiltinFunctionIndex::index (6 samples, 0.07%)</title><rect x="31.5029%" y="1477" width="0.0723%" height="15" fill="rgb(236,31,38)" fg:x="2616" fg:w="6"/><text x="31.7529%" y="1487.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="31.5872%" y="1493" width="0.0120%" height="15" fill="rgb(232,65,17)" fg:x="2623" fg:w="1"/><text x="31.8372%" y="1503.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.01%)</title><rect x="31.5872%" y="1477" width="0.0120%" height="15" fill="rgb(224,45,49)" fg:x="2623" fg:w="1"/><text x="31.8372%" y="1487.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.01%)</title><rect x="31.5872%" y="1461" width="0.0120%" height="15" fill="rgb(225,2,53)" fg:x="2623" fg:w="1"/><text x="31.8372%" y="1471.50"></text></g><g><title>mi_block_next (1 samples, 0.01%)</title><rect x="31.5872%" y="1445" width="0.0120%" height="15" fill="rgb(248,210,53)" fg:x="2623" fg:w="1"/><text x="31.8372%" y="1455.50"></text></g><g><title>mi_block_nextx (1 samples, 0.01%)</title><rect x="31.5872%" y="1429" width="0.0120%" height="15" fill="rgb(211,1,30)" fg:x="2623" fg:w="1"/><text x="31.8372%" y="1439.50"></text></g><g><title>mi_ptr_decode (1 samples, 0.01%)</title><rect x="31.5872%" y="1413" width="0.0120%" height="15" fill="rgb(224,96,15)" fg:x="2623" fg:w="1"/><text x="31.8372%" y="1423.50"></text></g><g><title>wasmer_types::vmoffsets::VMOffsets::new (3 samples, 0.04%)</title><rect x="31.5992%" y="1493" width="0.0361%" height="15" fill="rgb(252,45,11)" fg:x="2624" fg:w="3"/><text x="31.8492%" y="1503.50"></text></g><g><title>wasmer_types::entity::primary_map::PrimaryMap&lt;K,V&gt;::len (3 samples, 0.04%)</title><rect x="31.5992%" y="1477" width="0.0361%" height="15" fill="rgb(220,125,38)" fg:x="2624" fg:w="3"/><text x="31.8492%" y="1487.50"></text></g><g><title>core::num::&lt;impl u32&gt;::checked_add (1 samples, 0.01%)</title><rect x="31.6354%" y="1445" width="0.0120%" height="15" fill="rgb(243,161,33)" fg:x="2627" fg:w="1"/><text x="31.8854%" y="1455.50"></text></g><g><title>core::num::&lt;impl u32&gt;::overflowing_add (1 samples, 0.01%)</title><rect x="31.6354%" y="1429" width="0.0120%" height="15" fill="rgb(248,197,34)" fg:x="2627" fg:w="1"/><text x="31.8854%" y="1439.50"></text></g><g><title>wasmer_vm::instance::allocator::InstanceAllocator::memory_definition_locations (2 samples, 0.02%)</title><rect x="31.6354%" y="1493" width="0.0241%" height="15" fill="rgb(228,165,23)" fg:x="2627" fg:w="2"/><text x="31.8854%" y="1503.50"></text></g><g><title>wasmer_types::vmoffsets::VMOffsets::vmctx_vmmemory_definition (2 samples, 0.02%)</title><rect x="31.6354%" y="1477" width="0.0241%" height="15" fill="rgb(236,94,38)" fg:x="2627" fg:w="2"/><text x="31.8854%" y="1487.50"></text></g><g><title>wasmer_types::vmoffsets::VMOffsets::vmctx_memories_begin (2 samples, 0.02%)</title><rect x="31.6354%" y="1461" width="0.0241%" height="15" fill="rgb(220,13,23)" fg:x="2627" fg:w="2"/><text x="31.8854%" y="1471.50"></text></g><g><title>wasmer_types::vmoffsets::VMOffsets::vmctx_tables_begin (1 samples, 0.01%)</title><rect x="31.6474%" y="1445" width="0.0120%" height="15" fill="rgb(234,26,39)" fg:x="2628" fg:w="1"/><text x="31.8974%" y="1455.50"></text></g><g><title>wasmer::sys::module::Module::instantiate (594 samples, 7.15%)</title><rect x="24.5183%" y="1541" width="7.1532%" height="15" fill="rgb(205,117,44)" fg:x="2036" fg:w="594"/><text x="24.7683%" y="1551.50">wasmer::sy..</text></g><g><title>wasmer_engine::artifact::Artifact::instantiate (586 samples, 7.06%)</title><rect x="24.6146%" y="1525" width="7.0568%" height="15" fill="rgb(250,42,2)" fg:x="2044" fg:w="586"/><text x="24.8646%" y="1535.50">wasmer_en..</text></g><g><title>wasmer_vm::instance::allocator::InstanceAllocator::new (8 samples, 0.10%)</title><rect x="31.5751%" y="1509" width="0.0963%" height="15" fill="rgb(223,83,14)" fg:x="2622" fg:w="8"/><text x="31.8251%" y="1519.50"></text></g><g><title>wasmer_vm::instance::allocator::InstanceAllocator::table_definition_locations (1 samples, 0.01%)</title><rect x="31.6594%" y="1493" width="0.0120%" height="15" fill="rgb(241,147,50)" fg:x="2629" fg:w="1"/><text x="31.9094%" y="1503.50"></text></g><g><title>wasmer_types::vmoffsets::VMOffsets::vmctx_vmtable_definition (1 samples, 0.01%)</title><rect x="31.6594%" y="1477" width="0.0120%" height="15" fill="rgb(218,90,6)" fg:x="2629" fg:w="1"/><text x="31.9094%" y="1487.50"></text></g><g><title>wasmer_types::vmoffsets::VMOffsets::vmctx_tables_begin (1 samples, 0.01%)</title><rect x="31.6594%" y="1461" width="0.0120%" height="15" fill="rgb(210,191,5)" fg:x="2629" fg:w="1"/><text x="31.9094%" y="1471.50"></text></g><g><title>wasmer_types::vmoffsets::VMOffsets::vmctx_imported_globals_begin (1 samples, 0.01%)</title><rect x="31.6594%" y="1445" width="0.0120%" height="15" fill="rgb(225,139,19)" fg:x="2629" fg:w="1"/><text x="31.9094%" y="1455.50"></text></g><g><title>wasmer_types::vmoffsets::VMOffsets::vmctx_imported_memories_begin (1 samples, 0.01%)</title><rect x="31.6594%" y="1429" width="0.0120%" height="15" fill="rgb(210,1,33)" fg:x="2629" fg:w="1"/><text x="31.9094%" y="1439.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.02%)</title><rect x="31.6715%" y="1525" width="0.0241%" height="15" fill="rgb(213,50,3)" fg:x="2630" fg:w="2"/><text x="31.9215%" y="1535.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="31.6956%" y="1525" width="0.0361%" height="15" fill="rgb(234,227,4)" fg:x="2632" fg:w="3"/><text x="31.9456%" y="1535.50"></text></g><g><title>wasmer::sys::instance::Instance::new (694 samples, 8.36%)</title><rect x="23.3863%" y="1557" width="8.3574%" height="15" fill="rgb(246,63,5)" fg:x="1942" fg:w="694"/><text x="23.6363%" y="1567.50">wasmer::sys:..</text></g><g><title>wasmer_vm::instance::InstanceHandle::initialize_host_envs (6 samples, 0.07%)</title><rect x="31.6715%" y="1541" width="0.0723%" height="15" fill="rgb(245,136,27)" fg:x="2630" fg:w="6"/><text x="31.9215%" y="1551.50"></text></g><g><title>&lt;vm_library::env::Context as wasmer::sys::env::WasmerEnv&gt;::init_with_instance (1 samples, 0.01%)</title><rect x="31.7317%" y="1525" width="0.0120%" height="15" fill="rgb(247,199,27)" fg:x="2635" fg:w="1"/><text x="31.9817%" y="1535.50"></text></g><g><title>wasmer::sys::module::Module::store (1 samples, 0.01%)</title><rect x="31.7437%" y="1557" width="0.0120%" height="15" fill="rgb(252,158,49)" fg:x="2636" fg:w="1"/><text x="31.9937%" y="1567.50"></text></g><g><title>&lt;wasmer_vm::trap::traphandlers::on_wasm_stack::STACK_POOL as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="31.7919%" y="1493" width="0.0120%" height="15" fill="rgb(254,73,1)" fg:x="2640" fg:w="1"/><text x="32.0419%" y="1503.50"></text></g><g><title>&lt;wasmer_vm::trap::traphandlers::on_wasm_stack::STACK_POOL as core::ops::deref::Deref&gt;::deref::__stability (1 samples, 0.01%)</title><rect x="31.7919%" y="1477" width="0.0120%" height="15" fill="rgb(248,93,19)" fg:x="2640" fg:w="1"/><text x="32.0419%" y="1487.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="31.7919%" y="1461" width="0.0120%" height="15" fill="rgb(206,67,5)" fg:x="2640" fg:w="1"/><text x="32.0419%" y="1471.50"></text></g><g><title>std::sync::once::Once::call_once (1 samples, 0.01%)</title><rect x="31.7919%" y="1445" width="0.0120%" height="15" fill="rgb(209,210,4)" fg:x="2640" fg:w="1"/><text x="32.0419%" y="1455.50"></text></g><g><title>std::sync::once::Once::is_completed (1 samples, 0.01%)</title><rect x="31.7919%" y="1429" width="0.0120%" height="15" fill="rgb(214,185,36)" fg:x="2640" fg:w="1"/><text x="32.0419%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.01%)</title><rect x="31.8039%" y="1493" width="0.0120%" height="15" fill="rgb(233,191,26)" fg:x="2641" fg:w="1"/><text x="32.0539%" y="1503.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="31.8039%" y="1477" width="0.0120%" height="15" fill="rgb(248,94,17)" fg:x="2641" fg:w="1"/><text x="32.0539%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::vec::Vec&lt;corosensei::stack::unix::DefaultStack&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="31.8160%" y="1493" width="0.0120%" height="15" fill="rgb(250,64,4)" fg:x="2642" fg:w="1"/><text x="32.0660%" y="1503.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="31.8160%" y="1477" width="0.0120%" height="15" fill="rgb(218,41,53)" fg:x="2642" fg:w="1"/><text x="32.0660%" y="1487.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.01%)</title><rect x="31.8160%" y="1461" width="0.0120%" height="15" fill="rgb(251,176,28)" fg:x="2642" fg:w="1"/><text x="32.0660%" y="1471.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (1 samples, 0.01%)</title><rect x="31.8160%" y="1445" width="0.0120%" height="15" fill="rgb(247,22,9)" fg:x="2642" fg:w="1"/><text x="32.0660%" y="1455.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (1 samples, 0.01%)</title><rect x="31.8160%" y="1429" width="0.0120%" height="15" fill="rgb(218,201,14)" fg:x="2642" fg:w="1"/><text x="32.0660%" y="1439.50"></text></g><g><title>core::sync::atomic::atomic_swap (1 samples, 0.01%)</title><rect x="31.8160%" y="1413" width="0.0120%" height="15" fill="rgb(218,94,10)" fg:x="2642" fg:w="1"/><text x="32.0660%" y="1423.50"></text></g><g><title>vm_library::instance::invoke_managed (1,252 samples, 15.08%)</title><rect x="16.8112%" y="1573" width="15.0771%" height="15" fill="rgb(222,183,52)" fg:x="1396" fg:w="1252"/><text x="17.0612%" y="1583.50">vm_library::instance::i..</text></g><g><title>wasmer::sys::native::NativeFunc&lt;A1,Rets&gt;::call (11 samples, 0.13%)</title><rect x="31.7558%" y="1557" width="0.1325%" height="15" fill="rgb(242,140,25)" fg:x="2637" fg:w="11"/><text x="32.0058%" y="1567.50"></text></g><g><title>wasmer_vm::trap::traphandlers::wasmer_call_trampoline (10 samples, 0.12%)</title><rect x="31.7678%" y="1541" width="0.1204%" height="15" fill="rgb(235,197,38)" fg:x="2638" fg:w="10"/><text x="32.0178%" y="1551.50"></text></g><g><title>wasmer_vm::trap::traphandlers::catch_traps (8 samples, 0.10%)</title><rect x="31.7919%" y="1525" width="0.0963%" height="15" fill="rgb(237,136,15)" fg:x="2640" fg:w="8"/><text x="32.0419%" y="1535.50"></text></g><g><title>wasmer_vm::trap::traphandlers::on_wasm_stack (8 samples, 0.10%)</title><rect x="31.7919%" y="1509" width="0.0963%" height="15" fill="rgb(223,44,49)" fg:x="2640" fg:w="8"/><text x="32.0419%" y="1519.50"></text></g><g><title>corosensei::coroutine::ScopedCoroutine&lt;Input,Yield,Return,Stack&gt;::with_stack (5 samples, 0.06%)</title><rect x="31.8280%" y="1493" width="0.0602%" height="15" fill="rgb(227,71,15)" fg:x="2643" fg:w="5"/><text x="32.0780%" y="1503.50"></text></g><g><title>corosensei::arch::x86_64::init_stack (5 samples, 0.06%)</title><rect x="31.8280%" y="1477" width="0.0602%" height="15" fill="rgb(225,153,20)" fg:x="2643" fg:w="5"/><text x="32.0780%" y="1487.50"></text></g><g><title>corosensei::arch::push (5 samples, 0.06%)</title><rect x="31.8280%" y="1461" width="0.0602%" height="15" fill="rgb(210,190,26)" fg:x="2643" fg:w="5"/><text x="32.0780%" y="1471.50"></text></g><g><title>mi_free (2 samples, 0.02%)</title><rect x="31.9123%" y="1557" width="0.0241%" height="15" fill="rgb(223,147,5)" fg:x="2650" fg:w="2"/><text x="32.1623%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;sized_chunks::sized_chunk::Chunk&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt; (1 samples, 0.01%)</title><rect x="31.9364%" y="1445" width="0.0120%" height="15" fill="rgb(207,14,23)" fg:x="2652" fg:w="1"/><text x="32.1864%" y="1455.50"></text></g><g><title>&lt;sized_chunks::sized_chunk::Chunk&lt;A,N&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="31.9364%" y="1429" width="0.0120%" height="15" fill="rgb(211,195,53)" fg:x="2652" fg:w="1"/><text x="32.1864%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(vm_library::managed::value::Value,vm_library::managed::value::Value)]&gt; (1 samples, 0.01%)</title><rect x="31.9364%" y="1413" width="0.0120%" height="15" fill="rgb(237,75,46)" fg:x="2652" fg:w="1"/><text x="32.1864%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt; (1 samples, 0.01%)</title><rect x="31.9364%" y="1397" width="0.0120%" height="15" fill="rgb(254,55,14)" fg:x="2652" fg:w="1"/><text x="32.1864%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;vm_library::managed::value::Value&gt; (1 samples, 0.01%)</title><rect x="31.9364%" y="1381" width="0.0120%" height="15" fill="rgb(230,185,30)" fg:x="2652" fg:w="1"/><text x="32.1864%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;im_rc::ord::map::OrdMap&lt;vm_library::managed::value::Value,vm_library::managed::value::Value&gt;&gt; (2 samples, 0.02%)</title><rect x="31.9364%" y="1525" width="0.0241%" height="15" fill="rgb(220,14,11)" fg:x="2652" fg:w="2"/><text x="32.1864%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;im_rc::fakepool::Rc&lt;im_rc::nodes::btree::Node&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="31.9364%" y="1509" width="0.0241%" height="15" fill="rgb(215,169,44)" fg:x="2652" fg:w="2"/><text x="32.1864%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;im_rc::nodes::btree::Node&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="31.9364%" y="1493" width="0.0241%" height="15" fill="rgb(253,203,20)" fg:x="2652" fg:w="2"/><text x="32.1864%" y="1503.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="31.9364%" y="1477" width="0.0241%" height="15" fill="rgb(229,225,17)" fg:x="2652" fg:w="2"/><text x="32.1864%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;im_rc::nodes::btree::Node&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt; (2 samples, 0.02%)</title><rect x="31.9364%" y="1461" width="0.0241%" height="15" fill="rgb(236,76,26)" fg:x="2652" fg:w="2"/><text x="32.1864%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;sized_chunks::sized_chunk::Chunk&lt;core::option::Option&lt;im_rc::fakepool::Rc&lt;im_rc::nodes::btree::Node&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt;&gt;,typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B1&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="31.9485%" y="1445" width="0.0120%" height="15" fill="rgb(234,15,30)" fg:x="2653" fg:w="1"/><text x="32.1985%" y="1455.50"></text></g><g><title>&lt;sized_chunks::sized_chunk::Chunk&lt;A,N&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="31.9485%" y="1429" width="0.0120%" height="15" fill="rgb(211,113,48)" fg:x="2653" fg:w="1"/><text x="32.1985%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;im_rc::fakepool::Rc&lt;im_rc::nodes::btree::Node&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt;&gt;]&gt; (1 samples, 0.01%)</title><rect x="31.9485%" y="1413" width="0.0120%" height="15" fill="rgb(221,31,36)" fg:x="2653" fg:w="1"/><text x="32.1985%" y="1423.50"></text></g><g><title>&lt;im_rc::ord::map::OrdMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (8 samples, 0.10%)</title><rect x="31.9364%" y="1541" width="0.0963%" height="15" fill="rgb(215,118,52)" fg:x="2652" fg:w="8"/><text x="32.1864%" y="1551.50"></text></g><g><title>im_rc::nodes::btree::ConsumingIter&lt;A&gt;::new (6 samples, 0.07%)</title><rect x="31.9605%" y="1525" width="0.0723%" height="15" fill="rgb(241,151,27)" fg:x="2654" fg:w="6"/><text x="32.2105%" y="1535.50"></text></g><g><title>__rust_probestack (3 samples, 0.04%)</title><rect x="31.9966%" y="1509" width="0.0361%" height="15" fill="rgb(253,51,3)" fg:x="2657" fg:w="3"/><text x="32.2466%" y="1519.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="32.0568%" y="1397" width="0.0120%" height="15" fill="rgb(216,201,24)" fg:x="2662" fg:w="1"/><text x="32.3068%" y="1407.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="32.0689%" y="1301" width="0.0120%" height="15" fill="rgb(231,107,4)" fg:x="2663" fg:w="1"/><text x="32.3189%" y="1311.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.01%)</title><rect x="32.0930%" y="1269" width="0.0120%" height="15" fill="rgb(243,97,54)" fg:x="2665" fg:w="1"/><text x="32.3430%" y="1279.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="32.1050%" y="1205" width="0.0120%" height="15" fill="rgb(221,32,51)" fg:x="2666" fg:w="1"/><text x="32.3550%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;vm_library::managed::value::Value&gt; (1 samples, 0.01%)</title><rect x="32.1171%" y="885" width="0.0120%" height="15" fill="rgb(218,171,35)" fg:x="2667" fg:w="1"/><text x="32.3671%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="32.1171%" y="1013" width="0.0241%" height="15" fill="rgb(214,20,53)" fg:x="2667" fg:w="2"/><text x="32.3671%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;[im_rc::nodes::btree::ConsumingIterItem&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;]&gt; (2 samples, 0.02%)</title><rect x="32.1171%" y="997" width="0.0241%" height="15" fill="rgb(239,9,52)" fg:x="2667" fg:w="2"/><text x="32.3671%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;im_rc::nodes::btree::ConsumingIterItem&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt; (2 samples, 0.02%)</title><rect x="32.1171%" y="981" width="0.0241%" height="15" fill="rgb(215,114,45)" fg:x="2667" fg:w="2"/><text x="32.3671%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;im_rc::nodes::btree::Node&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt; (2 samples, 0.02%)</title><rect x="32.1171%" y="965" width="0.0241%" height="15" fill="rgb(208,118,9)" fg:x="2667" fg:w="2"/><text x="32.3671%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;sized_chunks::sized_chunk::Chunk&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt; (2 samples, 0.02%)</title><rect x="32.1171%" y="949" width="0.0241%" height="15" fill="rgb(235,7,39)" fg:x="2667" fg:w="2"/><text x="32.3671%" y="959.50"></text></g><g><title>&lt;sized_chunks::sized_chunk::Chunk&lt;A,N&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="32.1171%" y="933" width="0.0241%" height="15" fill="rgb(243,225,15)" fg:x="2667" fg:w="2"/><text x="32.3671%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(vm_library::managed::value::Value,vm_library::managed::value::Value)]&gt; (2 samples, 0.02%)</title><rect x="32.1171%" y="917" width="0.0241%" height="15" fill="rgb(225,216,18)" fg:x="2667" fg:w="2"/><text x="32.3671%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt; (2 samples, 0.02%)</title><rect x="32.1171%" y="901" width="0.0241%" height="15" fill="rgb(233,36,38)" fg:x="2667" fg:w="2"/><text x="32.3671%" y="911.50"></text></g><g><title>mi_free (1 samples, 0.01%)</title><rect x="32.1291%" y="885" width="0.0120%" height="15" fill="rgb(239,88,23)" fg:x="2668" fg:w="1"/><text x="32.3791%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.04%)</title><rect x="32.1171%" y="1109" width="0.0361%" height="15" fill="rgb(219,181,35)" fg:x="2667" fg:w="3"/><text x="32.3671%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 0.04%)</title><rect x="32.1171%" y="1093" width="0.0361%" height="15" fill="rgb(215,18,46)" fg:x="2667" fg:w="3"/><text x="32.3671%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;im_rc::nodes::btree::ConsumingIter&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;,vm_library::managed::value::Value::from_runtime_ticket::{{closure}}&gt;,core::result::Result&lt;core::convert::Infallible,vm_library::errors::vm::VmError&gt;&gt;&gt; (3 samples, 0.04%)</title><rect x="32.1171%" y="1077" width="0.0361%" height="15" fill="rgb(241,38,11)" fg:x="2667" fg:w="3"/><text x="32.3671%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;im_rc::nodes::btree::ConsumingIter&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;,vm_library::managed::value::Value::from_runtime_ticket::{{closure}}&gt;&gt; (3 samples, 0.04%)</title><rect x="32.1171%" y="1061" width="0.0361%" height="15" fill="rgb(248,169,45)" fg:x="2667" fg:w="3"/><text x="32.3671%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;im_rc::nodes::btree::ConsumingIter&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt; (3 samples, 0.04%)</title><rect x="32.1171%" y="1045" width="0.0361%" height="15" fill="rgb(239,50,49)" fg:x="2667" fg:w="3"/><text x="32.3671%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;im_rc::nodes::btree::ConsumingIterItem&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt;&gt; (3 samples, 0.04%)</title><rect x="32.1171%" y="1029" width="0.0361%" height="15" fill="rgb(231,96,31)" fg:x="2667" fg:w="3"/><text x="32.3671%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;im_rc::nodes::btree::ConsumingIterItem&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="32.1411%" y="1013" width="0.0120%" height="15" fill="rgb(224,193,37)" fg:x="2669" fg:w="1"/><text x="32.3911%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="32.1411%" y="997" width="0.0120%" height="15" fill="rgb(227,153,50)" fg:x="2669" fg:w="1"/><text x="32.3911%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="32.1411%" y="981" width="0.0120%" height="15" fill="rgb(249,228,3)" fg:x="2669" fg:w="1"/><text x="32.3911%" y="991.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="32.1411%" y="965" width="0.0120%" height="15" fill="rgb(219,164,43)" fg:x="2669" fg:w="1"/><text x="32.3911%" y="975.50"></text></g><g><title>_mi_page_unfull (1 samples, 0.01%)</title><rect x="32.1411%" y="949" width="0.0120%" height="15" fill="rgb(216,45,41)" fg:x="2669" fg:w="1"/><text x="32.3911%" y="959.50"></text></g><g><title>&lt;im_rc::nodes::btree::ConsumingIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="32.1532%" y="1029" width="0.0120%" height="15" fill="rgb(210,226,51)" fg:x="2670" fg:w="1"/><text x="32.4032%" y="1039.50"></text></g><g><title>__rust_probestack (1 samples, 0.01%)</title><rect x="32.1532%" y="1013" width="0.0120%" height="15" fill="rgb(209,117,49)" fg:x="2670" fg:w="1"/><text x="32.4032%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (10 samples, 0.12%)</title><rect x="32.0689%" y="1365" width="0.1204%" height="15" fill="rgb(206,196,24)" fg:x="2663" fg:w="10"/><text x="32.3189%" y="1375.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.12%)</title><rect x="32.0689%" y="1349" width="0.1204%" height="15" fill="rgb(253,218,3)" fg:x="2663" fg:w="10"/><text x="32.3189%" y="1359.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.12%)</title><rect x="32.0689%" y="1333" width="0.1204%" height="15" fill="rgb(252,166,2)" fg:x="2663" fg:w="10"/><text x="32.3189%" y="1343.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10 samples, 0.12%)</title><rect x="32.0689%" y="1317" width="0.1204%" height="15" fill="rgb(236,218,26)" fg:x="2663" fg:w="10"/><text x="32.3189%" y="1327.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (9 samples, 0.11%)</title><rect x="32.0809%" y="1301" width="0.1084%" height="15" fill="rgb(254,84,19)" fg:x="2664" fg:w="9"/><text x="32.3309%" y="1311.50"></text></g><g><title>vm_library::managed::value::Value::from_runtime_ticket::{{closure}} (9 samples, 0.11%)</title><rect x="32.0809%" y="1285" width="0.1084%" height="15" fill="rgb(219,137,29)" fg:x="2664" fg:w="9"/><text x="32.3309%" y="1295.50"></text></g><g><title>vm_library::managed::value::Value::from_runtime_ticket (7 samples, 0.08%)</title><rect x="32.1050%" y="1269" width="0.0843%" height="15" fill="rgb(227,47,52)" fg:x="2666" fg:w="7"/><text x="32.3550%" y="1279.50"></text></g><g><title>vm_library::managed::value::Value::from_runtime_ticket (7 samples, 0.08%)</title><rect x="32.1050%" y="1253" width="0.0843%" height="15" fill="rgb(229,167,24)" fg:x="2666" fg:w="7"/><text x="32.3550%" y="1263.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (7 samples, 0.08%)</title><rect x="32.1050%" y="1237" width="0.0843%" height="15" fill="rgb(233,164,1)" fg:x="2666" fg:w="7"/><text x="32.3550%" y="1247.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (7 samples, 0.08%)</title><rect x="32.1050%" y="1221" width="0.0843%" height="15" fill="rgb(218,88,48)" fg:x="2666" fg:w="7"/><text x="32.3550%" y="1231.50"></text></g><g><title>core::iter::adapters::try_process (6 samples, 0.07%)</title><rect x="32.1171%" y="1205" width="0.0723%" height="15" fill="rgb(226,214,24)" fg:x="2667" fg:w="6"/><text x="32.3671%" y="1215.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (6 samples, 0.07%)</title><rect x="32.1171%" y="1189" width="0.0723%" height="15" fill="rgb(233,29,12)" fg:x="2667" fg:w="6"/><text x="32.3671%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.07%)</title><rect x="32.1171%" y="1173" width="0.0723%" height="15" fill="rgb(219,120,34)" fg:x="2667" fg:w="6"/><text x="32.3671%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.07%)</title><rect x="32.1171%" y="1157" width="0.0723%" height="15" fill="rgb(226,78,44)" fg:x="2667" fg:w="6"/><text x="32.3671%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.07%)</title><rect x="32.1171%" y="1141" width="0.0723%" height="15" fill="rgb(240,15,48)" fg:x="2667" fg:w="6"/><text x="32.3671%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6 samples, 0.07%)</title><rect x="32.1171%" y="1125" width="0.0723%" height="15" fill="rgb(253,176,7)" fg:x="2667" fg:w="6"/><text x="32.3671%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="32.1532%" y="1109" width="0.0361%" height="15" fill="rgb(206,166,28)" fg:x="2670" fg:w="3"/><text x="32.4032%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (3 samples, 0.04%)</title><rect x="32.1532%" y="1093" width="0.0361%" height="15" fill="rgb(241,53,51)" fg:x="2670" fg:w="3"/><text x="32.4032%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.04%)</title><rect x="32.1532%" y="1077" width="0.0361%" height="15" fill="rgb(249,112,30)" fg:x="2670" fg:w="3"/><text x="32.4032%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.04%)</title><rect x="32.1532%" y="1061" width="0.0361%" height="15" fill="rgb(217,85,30)" fg:x="2670" fg:w="3"/><text x="32.4032%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.04%)</title><rect x="32.1532%" y="1045" width="0.0361%" height="15" fill="rgb(233,49,7)" fg:x="2670" fg:w="3"/><text x="32.4032%" y="1055.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2 samples, 0.02%)</title><rect x="32.1652%" y="1029" width="0.0241%" height="15" fill="rgb(234,109,9)" fg:x="2671" fg:w="2"/><text x="32.4152%" y="1039.50"></text></g><g><title>vm_library::managed::value::Value::from_runtime_ticket::{{closure}} (1 samples, 0.01%)</title><rect x="32.1773%" y="1013" width="0.0120%" height="15" fill="rgb(253,95,22)" fg:x="2672" fg:w="1"/><text x="32.4273%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.13%)</title><rect x="32.0689%" y="1381" width="0.1325%" height="15" fill="rgb(233,176,25)" fg:x="2663" fg:w="11"/><text x="32.3189%" y="1391.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;B,C&gt;::break_value (1 samples, 0.01%)</title><rect x="32.1893%" y="1365" width="0.0120%" height="15" fill="rgb(236,33,39)" fg:x="2673" fg:w="1"/><text x="32.4393%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;vm_library::managed::value::Value&gt; (1 samples, 0.01%)</title><rect x="32.2013%" y="1189" width="0.0120%" height="15" fill="rgb(223,226,42)" fg:x="2674" fg:w="1"/><text x="32.4513%" y="1199.50"></text></g><g><title>mi_block_set_next (1 samples, 0.01%)</title><rect x="32.2134%" y="1173" width="0.0120%" height="15" fill="rgb(216,99,33)" fg:x="2675" fg:w="1"/><text x="32.4634%" y="1183.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.01%)</title><rect x="32.2134%" y="1157" width="0.0120%" height="15" fill="rgb(235,84,23)" fg:x="2675" fg:w="1"/><text x="32.4634%" y="1167.50"></text></g><g><title>mi_ptr_encode (1 samples, 0.01%)</title><rect x="32.2134%" y="1141" width="0.0120%" height="15" fill="rgb(232,2,27)" fg:x="2675" fg:w="1"/><text x="32.4634%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="32.2013%" y="1317" width="0.0361%" height="15" fill="rgb(241,23,22)" fg:x="2674" fg:w="3"/><text x="32.4513%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;[im_rc::nodes::btree::ConsumingIterItem&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;]&gt; (3 samples, 0.04%)</title><rect x="32.2013%" y="1301" width="0.0361%" height="15" fill="rgb(211,73,27)" fg:x="2674" fg:w="3"/><text x="32.4513%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;im_rc::nodes::btree::ConsumingIterItem&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt; (3 samples, 0.04%)</title><rect x="32.2013%" y="1285" width="0.0361%" height="15" fill="rgb(235,109,49)" fg:x="2674" fg:w="3"/><text x="32.4513%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;im_rc::nodes::btree::Node&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt; (3 samples, 0.04%)</title><rect x="32.2013%" y="1269" width="0.0361%" height="15" fill="rgb(230,99,29)" fg:x="2674" fg:w="3"/><text x="32.4513%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;sized_chunks::sized_chunk::Chunk&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt; (3 samples, 0.04%)</title><rect x="32.2013%" y="1253" width="0.0361%" height="15" fill="rgb(245,199,7)" fg:x="2674" fg:w="3"/><text x="32.4513%" y="1263.50"></text></g><g><title>&lt;sized_chunks::sized_chunk::Chunk&lt;A,N&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="32.2013%" y="1237" width="0.0361%" height="15" fill="rgb(217,179,10)" fg:x="2674" fg:w="3"/><text x="32.4513%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(vm_library::managed::value::Value,vm_library::managed::value::Value)]&gt; (3 samples, 0.04%)</title><rect x="32.2013%" y="1221" width="0.0361%" height="15" fill="rgb(254,99,47)" fg:x="2674" fg:w="3"/><text x="32.4513%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt; (3 samples, 0.04%)</title><rect x="32.2013%" y="1205" width="0.0361%" height="15" fill="rgb(251,121,7)" fg:x="2674" fg:w="3"/><text x="32.4513%" y="1215.50"></text></g><g><title>mi_free (2 samples, 0.02%)</title><rect x="32.2134%" y="1189" width="0.0241%" height="15" fill="rgb(250,177,26)" fg:x="2675" fg:w="2"/><text x="32.4634%" y="1199.50"></text></g><g><title>mi_check_is_double_free (1 samples, 0.01%)</title><rect x="32.2254%" y="1173" width="0.0120%" height="15" fill="rgb(232,88,15)" fg:x="2676" fg:w="1"/><text x="32.4754%" y="1183.50"></text></g><g><title>mi_block_nextx (1 samples, 0.01%)</title><rect x="32.2254%" y="1157" width="0.0120%" height="15" fill="rgb(251,54,54)" fg:x="2676" fg:w="1"/><text x="32.4754%" y="1167.50"></text></g><g><title>mi_ptr_decode (1 samples, 0.01%)</title><rect x="32.2254%" y="1141" width="0.0120%" height="15" fill="rgb(208,177,15)" fg:x="2676" fg:w="1"/><text x="32.4754%" y="1151.50"></text></g><g><title>mi_rotr (1 samples, 0.01%)</title><rect x="32.2254%" y="1125" width="0.0120%" height="15" fill="rgb(205,97,32)" fg:x="2676" fg:w="1"/><text x="32.4754%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (16 samples, 0.19%)</title><rect x="32.0568%" y="1413" width="0.1927%" height="15" fill="rgb(217,192,13)" fg:x="2662" fg:w="16"/><text x="32.3068%" y="1423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (15 samples, 0.18%)</title><rect x="32.0689%" y="1397" width="0.1806%" height="15" fill="rgb(215,163,41)" fg:x="2663" fg:w="15"/><text x="32.3189%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;im_rc::nodes::btree::ConsumingIter&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;,vm_library::managed::value::Value::from_runtime_ticket::{{closure}}&gt;,core::result::Result&lt;core::convert::Infallible,vm_library::errors::vm::VmError&gt;&gt;&gt; (4 samples, 0.05%)</title><rect x="32.2013%" y="1381" width="0.0482%" height="15" fill="rgb(246,83,29)" fg:x="2674" fg:w="4"/><text x="32.4513%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;im_rc::nodes::btree::ConsumingIter&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;,vm_library::managed::value::Value::from_runtime_ticket::{{closure}}&gt;&gt; (4 samples, 0.05%)</title><rect x="32.2013%" y="1365" width="0.0482%" height="15" fill="rgb(219,2,45)" fg:x="2674" fg:w="4"/><text x="32.4513%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;im_rc::nodes::btree::ConsumingIter&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt; (4 samples, 0.05%)</title><rect x="32.2013%" y="1349" width="0.0482%" height="15" fill="rgb(242,215,33)" fg:x="2674" fg:w="4"/><text x="32.4513%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;im_rc::nodes::btree::ConsumingIterItem&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt;&gt; (4 samples, 0.05%)</title><rect x="32.2013%" y="1333" width="0.0482%" height="15" fill="rgb(217,1,6)" fg:x="2674" fg:w="4"/><text x="32.4513%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;im_rc::nodes::btree::ConsumingIterItem&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="32.2375%" y="1317" width="0.0120%" height="15" fill="rgb(207,85,52)" fg:x="2677" fg:w="1"/><text x="32.4875%" y="1327.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="32.2375%" y="1301" width="0.0120%" height="15" fill="rgb(231,171,19)" fg:x="2677" fg:w="1"/><text x="32.4875%" y="1311.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="32.2375%" y="1285" width="0.0120%" height="15" fill="rgb(207,128,4)" fg:x="2677" fg:w="1"/><text x="32.4875%" y="1295.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="32.2375%" y="1269" width="0.0120%" height="15" fill="rgb(219,208,4)" fg:x="2677" fg:w="1"/><text x="32.4875%" y="1279.50"></text></g><g><title>_mi_page_retire (1 samples, 0.01%)</title><rect x="32.2375%" y="1253" width="0.0120%" height="15" fill="rgb(235,161,42)" fg:x="2677" fg:w="1"/><text x="32.4875%" y="1263.50"></text></g><g><title>mi_page_queue_of (1 samples, 0.01%)</title><rect x="32.2375%" y="1237" width="0.0120%" height="15" fill="rgb(247,218,18)" fg:x="2677" fg:w="1"/><text x="32.4875%" y="1247.50"></text></g><g><title>__rg_alloc (1 samples, 0.01%)</title><rect x="32.2736%" y="1189" width="0.0120%" height="15" fill="rgb(232,114,51)" fg:x="2680" fg:w="1"/><text x="32.5236%" y="1199.50"></text></g><g><title>&lt;mimalloc::MiMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.01%)</title><rect x="32.2736%" y="1173" width="0.0120%" height="15" fill="rgb(222,95,3)" fg:x="2680" fg:w="1"/><text x="32.5236%" y="1183.50"></text></g><g><title>mimalloc::may_use_unaligned_api (1 samples, 0.01%)</title><rect x="32.2736%" y="1157" width="0.0120%" height="15" fill="rgb(240,65,29)" fg:x="2680" fg:w="1"/><text x="32.5236%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::convert::From&lt;T&gt;&gt;::from (2 samples, 0.02%)</title><rect x="32.2736%" y="1285" width="0.0241%" height="15" fill="rgb(249,209,20)" fg:x="2680" fg:w="2"/><text x="32.5236%" y="1295.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="32.2736%" y="1269" width="0.0241%" height="15" fill="rgb(241,48,37)" fg:x="2680" fg:w="2"/><text x="32.5236%" y="1279.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.02%)</title><rect x="32.2736%" y="1253" width="0.0241%" height="15" fill="rgb(230,140,42)" fg:x="2680" fg:w="2"/><text x="32.5236%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="32.2736%" y="1237" width="0.0241%" height="15" fill="rgb(230,176,45)" fg:x="2680" fg:w="2"/><text x="32.5236%" y="1247.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="32.2736%" y="1221" width="0.0241%" height="15" fill="rgb(245,112,21)" fg:x="2680" fg:w="2"/><text x="32.5236%" y="1231.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="32.2736%" y="1205" width="0.0241%" height="15" fill="rgb(207,183,35)" fg:x="2680" fg:w="2"/><text x="32.5236%" y="1215.50"></text></g><g><title>mi_malloc (1 samples, 0.01%)</title><rect x="32.2856%" y="1189" width="0.0120%" height="15" fill="rgb(227,44,33)" fg:x="2681" fg:w="1"/><text x="32.5356%" y="1199.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.01%)</title><rect x="32.2856%" y="1173" width="0.0120%" height="15" fill="rgb(246,120,21)" fg:x="2681" fg:w="1"/><text x="32.5356%" y="1183.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.01%)</title><rect x="32.2856%" y="1157" width="0.0120%" height="15" fill="rgb(235,57,52)" fg:x="2681" fg:w="1"/><text x="32.5356%" y="1167.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.01%)</title><rect x="32.2856%" y="1141" width="0.0120%" height="15" fill="rgb(238,84,10)" fg:x="2681" fg:w="1"/><text x="32.5356%" y="1151.50"></text></g><g><title>mi_block_next (1 samples, 0.01%)</title><rect x="32.2856%" y="1125" width="0.0120%" height="15" fill="rgb(251,200,32)" fg:x="2681" fg:w="1"/><text x="32.5356%" y="1135.50"></text></g><g><title>mi_block_nextx (1 samples, 0.01%)</title><rect x="32.2856%" y="1109" width="0.0120%" height="15" fill="rgb(247,159,13)" fg:x="2681" fg:w="1"/><text x="32.5356%" y="1119.50"></text></g><g><title>mi_ptr_decode (1 samples, 0.01%)</title><rect x="32.2856%" y="1093" width="0.0120%" height="15" fill="rgb(238,64,4)" fg:x="2681" fg:w="1"/><text x="32.5356%" y="1103.50"></text></g><g><title>&lt;im_rc::ord::map::OrdMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.01%)</title><rect x="32.2977%" y="1269" width="0.0120%" height="15" fill="rgb(221,131,51)" fg:x="2682" fg:w="1"/><text x="32.5477%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;im_rc::ord::map::OrdMap&lt;vm_library::managed::value::Value,vm_library::managed::value::Value&gt;&gt; (1 samples, 0.01%)</title><rect x="32.2977%" y="1253" width="0.0120%" height="15" fill="rgb(242,5,29)" fg:x="2682" fg:w="1"/><text x="32.5477%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;im_rc::fakepool::Rc&lt;im_rc::nodes::btree::Node&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="32.2977%" y="1237" width="0.0120%" height="15" fill="rgb(214,130,32)" fg:x="2682" fg:w="1"/><text x="32.5477%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;im_rc::nodes::btree::Node&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="32.2977%" y="1221" width="0.0120%" height="15" fill="rgb(244,210,16)" fg:x="2682" fg:w="1"/><text x="32.5477%" y="1231.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="32.2977%" y="1205" width="0.0120%" height="15" fill="rgb(234,48,26)" fg:x="2682" fg:w="1"/><text x="32.5477%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="32.3097%" y="1109" width="0.0241%" height="15" fill="rgb(231,82,38)" fg:x="2683" fg:w="2"/><text x="32.5597%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (2 samples, 0.02%)</title><rect x="32.3097%" y="1093" width="0.0241%" height="15" fill="rgb(254,128,41)" fg:x="2683" fg:w="2"/><text x="32.5597%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.02%)</title><rect x="32.3097%" y="1077" width="0.0241%" height="15" fill="rgb(212,73,49)" fg:x="2683" fg:w="2"/><text x="32.5597%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.02%)</title><rect x="32.3097%" y="1061" width="0.0241%" height="15" fill="rgb(205,62,54)" fg:x="2683" fg:w="2"/><text x="32.5597%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.02%)</title><rect x="32.3097%" y="1045" width="0.0241%" height="15" fill="rgb(228,0,8)" fg:x="2683" fg:w="2"/><text x="32.5597%" y="1055.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::from_output (2 samples, 0.02%)</title><rect x="32.3097%" y="1029" width="0.0241%" height="15" fill="rgb(251,28,17)" fg:x="2683" fg:w="2"/><text x="32.5597%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="32.3459%" y="1029" width="0.0120%" height="15" fill="rgb(238,105,27)" fg:x="2686" fg:w="1"/><text x="32.5959%" y="1039.50"></text></g><g><title>__free (1 samples, 0.01%)</title><rect x="32.3579%" y="917" width="0.0120%" height="15" fill="rgb(237,216,33)" fg:x="2687" fg:w="1"/><text x="32.6079%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;sized_chunks::sized_chunk::Chunk&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt; (2 samples, 0.02%)</title><rect x="32.3579%" y="981" width="0.0241%" height="15" fill="rgb(229,228,25)" fg:x="2687" fg:w="2"/><text x="32.6079%" y="991.50"></text></g><g><title>&lt;sized_chunks::sized_chunk::Chunk&lt;A,N&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="32.3579%" y="965" width="0.0241%" height="15" fill="rgb(233,75,23)" fg:x="2687" fg:w="2"/><text x="32.6079%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(vm_library::managed::value::Value,vm_library::managed::value::Value)]&gt; (2 samples, 0.02%)</title><rect x="32.3579%" y="949" width="0.0241%" height="15" fill="rgb(231,207,16)" fg:x="2687" fg:w="2"/><text x="32.6079%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt; (2 samples, 0.02%)</title><rect x="32.3579%" y="933" width="0.0241%" height="15" fill="rgb(231,191,45)" fg:x="2687" fg:w="2"/><text x="32.6079%" y="943.50"></text></g><g><title>mi_free (1 samples, 0.01%)</title><rect x="32.3699%" y="917" width="0.0120%" height="15" fill="rgb(224,133,17)" fg:x="2688" fg:w="1"/><text x="32.6199%" y="927.50"></text></g><g><title>mi_block_set_next (1 samples, 0.01%)</title><rect x="32.3699%" y="901" width="0.0120%" height="15" fill="rgb(209,178,27)" fg:x="2688" fg:w="1"/><text x="32.6199%" y="911.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.01%)</title><rect x="32.3699%" y="885" width="0.0120%" height="15" fill="rgb(218,37,11)" fg:x="2688" fg:w="1"/><text x="32.6199%" y="895.50"></text></g><g><title>mi_ptr_encode (1 samples, 0.01%)</title><rect x="32.3699%" y="869" width="0.0120%" height="15" fill="rgb(251,226,25)" fg:x="2688" fg:w="1"/><text x="32.6199%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.05%)</title><rect x="32.3459%" y="1045" width="0.0482%" height="15" fill="rgb(209,222,27)" fg:x="2686" fg:w="4"/><text x="32.5959%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;[im_rc::nodes::btree::ConsumingIterItem&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;]&gt; (3 samples, 0.04%)</title><rect x="32.3579%" y="1029" width="0.0361%" height="15" fill="rgb(238,22,21)" fg:x="2687" fg:w="3"/><text x="32.6079%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;im_rc::nodes::btree::ConsumingIterItem&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt; (3 samples, 0.04%)</title><rect x="32.3579%" y="1013" width="0.0361%" height="15" fill="rgb(233,161,25)" fg:x="2687" fg:w="3"/><text x="32.6079%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;im_rc::nodes::btree::Node&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt; (3 samples, 0.04%)</title><rect x="32.3579%" y="997" width="0.0361%" height="15" fill="rgb(226,122,53)" fg:x="2687" fg:w="3"/><text x="32.6079%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;sized_chunks::sized_chunk::Chunk&lt;core::option::Option&lt;im_rc::fakepool::Rc&lt;im_rc::nodes::btree::Node&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt;&gt;,typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B1&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="32.3820%" y="981" width="0.0120%" height="15" fill="rgb(220,123,17)" fg:x="2689" fg:w="1"/><text x="32.6320%" y="991.50"></text></g><g><title>&lt;sized_chunks::sized_chunk::Chunk&lt;A,N&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="32.3820%" y="965" width="0.0120%" height="15" fill="rgb(230,224,35)" fg:x="2689" fg:w="1"/><text x="32.6320%" y="975.50"></text></g><g><title>sized_chunks::sized_chunk::Chunk&lt;A,N&gt;::as_mut_slice (1 samples, 0.01%)</title><rect x="32.3820%" y="949" width="0.0120%" height="15" fill="rgb(246,83,8)" fg:x="2689" fg:w="1"/><text x="32.6320%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;im_rc::nodes::btree::ConsumingIterItem&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt;&gt; (5 samples, 0.06%)</title><rect x="32.3459%" y="1061" width="0.0602%" height="15" fill="rgb(230,214,17)" fg:x="2686" fg:w="5"/><text x="32.5959%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;im_rc::nodes::btree::ConsumingIterItem&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="32.3940%" y="1045" width="0.0120%" height="15" fill="rgb(222,97,18)" fg:x="2690" fg:w="1"/><text x="32.6440%" y="1055.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="32.3940%" y="1029" width="0.0120%" height="15" fill="rgb(206,79,1)" fg:x="2690" fg:w="1"/><text x="32.6440%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="32.3940%" y="1013" width="0.0120%" height="15" fill="rgb(214,121,34)" fg:x="2690" fg:w="1"/><text x="32.6440%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;vm_library::managed::value::Value&gt; (1 samples, 0.01%)</title><rect x="32.4061%" y="1029" width="0.0120%" height="15" fill="rgb(249,199,46)" fg:x="2691" fg:w="1"/><text x="32.6561%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (10 samples, 0.12%)</title><rect x="32.3097%" y="1141" width="0.1204%" height="15" fill="rgb(214,222,46)" fg:x="2683" fg:w="10"/><text x="32.5597%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (10 samples, 0.12%)</title><rect x="32.3097%" y="1125" width="0.1204%" height="15" fill="rgb(248,168,30)" fg:x="2683" fg:w="10"/><text x="32.5597%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;im_rc::nodes::btree::ConsumingIter&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;,vm_library::managed::value::Value::from_runtime_ticket::{{closure}}&gt;,core::result::Result&lt;core::convert::Infallible,vm_library::errors::vm::VmError&gt;&gt;&gt; (8 samples, 0.10%)</title><rect x="32.3338%" y="1109" width="0.0963%" height="15" fill="rgb(226,14,28)" fg:x="2685" fg:w="8"/><text x="32.5838%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;im_rc::nodes::btree::ConsumingIter&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;,vm_library::managed::value::Value::from_runtime_ticket::{{closure}}&gt;&gt; (7 samples, 0.08%)</title><rect x="32.3459%" y="1093" width="0.0843%" height="15" fill="rgb(253,123,1)" fg:x="2686" fg:w="7"/><text x="32.5959%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;im_rc::nodes::btree::ConsumingIter&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt; (7 samples, 0.08%)</title><rect x="32.3459%" y="1077" width="0.0843%" height="15" fill="rgb(225,24,42)" fg:x="2686" fg:w="7"/><text x="32.5959%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt; (2 samples, 0.02%)</title><rect x="32.4061%" y="1061" width="0.0241%" height="15" fill="rgb(216,161,37)" fg:x="2691" fg:w="2"/><text x="32.6561%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt; (2 samples, 0.02%)</title><rect x="32.4061%" y="1045" width="0.0241%" height="15" fill="rgb(251,164,26)" fg:x="2691" fg:w="2"/><text x="32.6561%" y="1055.50"></text></g><g><title>mi_free (1 samples, 0.01%)</title><rect x="32.4181%" y="1029" width="0.0120%" height="15" fill="rgb(219,177,3)" fg:x="2692" fg:w="1"/><text x="32.6681%" y="1039.50"></text></g><g><title>mi_check_is_double_free (1 samples, 0.01%)</title><rect x="32.4181%" y="1013" width="0.0120%" height="15" fill="rgb(222,65,0)" fg:x="2692" fg:w="1"/><text x="32.6681%" y="1023.50"></text></g><g><title>mi_block_nextx (1 samples, 0.01%)</title><rect x="32.4181%" y="997" width="0.0120%" height="15" fill="rgb(223,69,54)" fg:x="2692" fg:w="1"/><text x="32.6681%" y="1007.50"></text></g><g><title>mi_ptr_decode (1 samples, 0.01%)</title><rect x="32.4181%" y="981" width="0.0120%" height="15" fill="rgb(235,30,27)" fg:x="2692" fg:w="1"/><text x="32.6681%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (13 samples, 0.16%)</title><rect x="32.3097%" y="1269" width="0.1566%" height="15" fill="rgb(220,183,50)" fg:x="2683" fg:w="13"/><text x="32.5597%" y="1279.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (13 samples, 0.16%)</title><rect x="32.3097%" y="1253" width="0.1566%" height="15" fill="rgb(248,198,15)" fg:x="2683" fg:w="13"/><text x="32.5597%" y="1263.50"></text></g><g><title>core::iter::adapters::try_process (13 samples, 0.16%)</title><rect x="32.3097%" y="1237" width="0.1566%" height="15" fill="rgb(222,211,4)" fg:x="2683" fg:w="13"/><text x="32.5597%" y="1247.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (13 samples, 0.16%)</title><rect x="32.3097%" y="1221" width="0.1566%" height="15" fill="rgb(214,102,34)" fg:x="2683" fg:w="13"/><text x="32.5597%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (13 samples, 0.16%)</title><rect x="32.3097%" y="1205" width="0.1566%" height="15" fill="rgb(245,92,5)" fg:x="2683" fg:w="13"/><text x="32.5597%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (13 samples, 0.16%)</title><rect x="32.3097%" y="1189" width="0.1566%" height="15" fill="rgb(252,72,51)" fg:x="2683" fg:w="13"/><text x="32.5597%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 0.16%)</title><rect x="32.3097%" y="1173" width="0.1566%" height="15" fill="rgb(252,208,19)" fg:x="2683" fg:w="13"/><text x="32.5597%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (13 samples, 0.16%)</title><rect x="32.3097%" y="1157" width="0.1566%" height="15" fill="rgb(211,69,7)" fg:x="2683" fg:w="13"/><text x="32.5597%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="32.4302%" y="1141" width="0.0361%" height="15" fill="rgb(211,27,16)" fg:x="2693" fg:w="3"/><text x="32.6802%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (3 samples, 0.04%)</title><rect x="32.4302%" y="1125" width="0.0361%" height="15" fill="rgb(219,216,14)" fg:x="2693" fg:w="3"/><text x="32.6802%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.04%)</title><rect x="32.4302%" y="1109" width="0.0361%" height="15" fill="rgb(219,71,8)" fg:x="2693" fg:w="3"/><text x="32.6802%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.04%)</title><rect x="32.4302%" y="1093" width="0.0361%" height="15" fill="rgb(223,170,53)" fg:x="2693" fg:w="3"/><text x="32.6802%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.04%)</title><rect x="32.4302%" y="1077" width="0.0361%" height="15" fill="rgb(246,21,26)" fg:x="2693" fg:w="3"/><text x="32.6802%" y="1087.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (3 samples, 0.04%)</title><rect x="32.4302%" y="1061" width="0.0361%" height="15" fill="rgb(248,20,46)" fg:x="2693" fg:w="3"/><text x="32.6802%" y="1071.50"></text></g><g><title>vm_library::managed::value::Value::from_runtime_ticket::{{closure}} (2 samples, 0.02%)</title><rect x="32.4422%" y="1045" width="0.0241%" height="15" fill="rgb(252,94,11)" fg:x="2694" fg:w="2"/><text x="32.6922%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.02%)</title><rect x="32.4422%" y="1029" width="0.0241%" height="15" fill="rgb(236,163,8)" fg:x="2694" fg:w="2"/><text x="32.6922%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.23%)</title><rect x="32.2495%" y="1413" width="0.2288%" height="15" fill="rgb(217,221,45)" fg:x="2678" fg:w="19"/><text x="32.4995%" y="1423.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (19 samples, 0.23%)</title><rect x="32.2495%" y="1397" width="0.2288%" height="15" fill="rgb(238,38,17)" fg:x="2678" fg:w="19"/><text x="32.4995%" y="1407.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (19 samples, 0.23%)</title><rect x="32.2495%" y="1381" width="0.2288%" height="15" fill="rgb(242,210,23)" fg:x="2678" fg:w="19"/><text x="32.4995%" y="1391.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (19 samples, 0.23%)</title><rect x="32.2495%" y="1365" width="0.2288%" height="15" fill="rgb(250,86,53)" fg:x="2678" fg:w="19"/><text x="32.4995%" y="1375.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (17 samples, 0.20%)</title><rect x="32.2736%" y="1349" width="0.2047%" height="15" fill="rgb(223,168,25)" fg:x="2680" fg:w="17"/><text x="32.5236%" y="1359.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (17 samples, 0.20%)</title><rect x="32.2736%" y="1333" width="0.2047%" height="15" fill="rgb(251,189,4)" fg:x="2680" fg:w="17"/><text x="32.5236%" y="1343.50"></text></g><g><title>vm_library::managed::value::Value::from_runtime_ticket::{{closure}} (17 samples, 0.20%)</title><rect x="32.2736%" y="1317" width="0.2047%" height="15" fill="rgb(245,19,28)" fg:x="2680" fg:w="17"/><text x="32.5236%" y="1327.50"></text></g><g><title>vm_library::managed::value::Value::from_runtime_ticket (17 samples, 0.20%)</title><rect x="32.2736%" y="1301" width="0.2047%" height="15" fill="rgb(207,10,34)" fg:x="2680" fg:w="17"/><text x="32.5236%" y="1311.50"></text></g><g><title>vm_library::managed::value::Value::from_runtime_ticket (15 samples, 0.18%)</title><rect x="32.2977%" y="1285" width="0.1806%" height="15" fill="rgb(235,153,31)" fg:x="2682" fg:w="15"/><text x="32.5477%" y="1295.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (1 samples, 0.01%)</title><rect x="32.4663%" y="1269" width="0.0120%" height="15" fill="rgb(228,72,37)" fg:x="2696" fg:w="1"/><text x="32.7163%" y="1279.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="32.4663%" y="1253" width="0.0120%" height="15" fill="rgb(215,15,16)" fg:x="2696" fg:w="1"/><text x="32.7163%" y="1263.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (38 samples, 0.46%)</title><rect x="32.0328%" y="1541" width="0.4576%" height="15" fill="rgb(250,119,29)" fg:x="2660" fg:w="38"/><text x="32.2828%" y="1551.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (38 samples, 0.46%)</title><rect x="32.0328%" y="1525" width="0.4576%" height="15" fill="rgb(214,59,1)" fg:x="2660" fg:w="38"/><text x="32.2828%" y="1535.50"></text></g><g><title>core::iter::adapters::try_process (38 samples, 0.46%)</title><rect x="32.0328%" y="1509" width="0.4576%" height="15" fill="rgb(223,109,25)" fg:x="2660" fg:w="38"/><text x="32.2828%" y="1519.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (37 samples, 0.45%)</title><rect x="32.0448%" y="1493" width="0.4456%" height="15" fill="rgb(230,198,22)" fg:x="2661" fg:w="37"/><text x="32.2948%" y="1503.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (37 samples, 0.45%)</title><rect x="32.0448%" y="1477" width="0.4456%" height="15" fill="rgb(245,184,46)" fg:x="2661" fg:w="37"/><text x="32.2948%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (37 samples, 0.45%)</title><rect x="32.0448%" y="1461" width="0.4456%" height="15" fill="rgb(253,73,16)" fg:x="2661" fg:w="37"/><text x="32.2948%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (37 samples, 0.45%)</title><rect x="32.0448%" y="1445" width="0.4456%" height="15" fill="rgb(206,94,45)" fg:x="2661" fg:w="37"/><text x="32.2948%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (36 samples, 0.43%)</title><rect x="32.0568%" y="1429" width="0.4335%" height="15" fill="rgb(236,83,27)" fg:x="2662" fg:w="36"/><text x="32.3068%" y="1439.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="32.4783%" y="1413" width="0.0120%" height="15" fill="rgb(220,196,8)" fg:x="2697" fg:w="1"/><text x="32.7283%" y="1423.50"></text></g><g><title>vm_library::managed::value::Value::from_runtime_ticket (51 samples, 0.61%)</title><rect x="31.8882%" y="1573" width="0.6142%" height="15" fill="rgb(254,185,14)" fg:x="2648" fg:w="51"/><text x="32.1382%" y="1583.50"></text></g><g><title>vm_library::managed::value::Value::from_runtime_ticket (47 samples, 0.57%)</title><rect x="31.9364%" y="1557" width="0.5660%" height="15" fill="rgb(226,50,22)" fg:x="2652" fg:w="47"/><text x="32.1864%" y="1567.50"></text></g><g><title>vm_library::managed::value::Value::from_runtime_ticket (1 samples, 0.01%)</title><rect x="32.4904%" y="1541" width="0.0120%" height="15" fill="rgb(253,147,0)" fg:x="2698" fg:w="1"/><text x="32.7404%" y="1551.50"></text></g><g><title>__rg_alloc (1 samples, 0.01%)</title><rect x="32.5024%" y="1461" width="0.0120%" height="15" fill="rgb(252,46,33)" fg:x="2699" fg:w="1"/><text x="32.7524%" y="1471.50"></text></g><g><title>&lt;mimalloc::MiMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.01%)</title><rect x="32.5024%" y="1445" width="0.0120%" height="15" fill="rgb(242,22,54)" fg:x="2699" fg:w="1"/><text x="32.7524%" y="1455.50"></text></g><g><title>mimalloc::may_use_unaligned_api (1 samples, 0.01%)</title><rect x="32.5024%" y="1429" width="0.0120%" height="15" fill="rgb(223,178,32)" fg:x="2699" fg:w="1"/><text x="32.7524%" y="1439.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::convert::From&lt;T&gt;&gt;::from (2 samples, 0.02%)</title><rect x="32.5024%" y="1557" width="0.0241%" height="15" fill="rgb(214,106,53)" fg:x="2699" fg:w="2"/><text x="32.7524%" y="1567.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="32.5024%" y="1541" width="0.0241%" height="15" fill="rgb(232,65,50)" fg:x="2699" fg:w="2"/><text x="32.7524%" y="1551.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.02%)</title><rect x="32.5024%" y="1525" width="0.0241%" height="15" fill="rgb(231,110,28)" fg:x="2699" fg:w="2"/><text x="32.7524%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="32.5024%" y="1509" width="0.0241%" height="15" fill="rgb(216,71,40)" fg:x="2699" fg:w="2"/><text x="32.7524%" y="1519.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="32.5024%" y="1493" width="0.0241%" height="15" fill="rgb(229,89,53)" fg:x="2699" fg:w="2"/><text x="32.7524%" y="1503.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="32.5024%" y="1477" width="0.0241%" height="15" fill="rgb(210,124,14)" fg:x="2699" fg:w="2"/><text x="32.7524%" y="1487.50"></text></g><g><title>mi_malloc (1 samples, 0.01%)</title><rect x="32.5145%" y="1461" width="0.0120%" height="15" fill="rgb(236,213,6)" fg:x="2700" fg:w="1"/><text x="32.7645%" y="1471.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.01%)</title><rect x="32.5145%" y="1445" width="0.0120%" height="15" fill="rgb(228,41,5)" fg:x="2700" fg:w="1"/><text x="32.7645%" y="1455.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.01%)</title><rect x="32.5145%" y="1429" width="0.0120%" height="15" fill="rgb(221,167,25)" fg:x="2700" fg:w="1"/><text x="32.7645%" y="1439.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.01%)</title><rect x="32.5145%" y="1413" width="0.0120%" height="15" fill="rgb(228,144,37)" fg:x="2700" fg:w="1"/><text x="32.7645%" y="1423.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::convert::From&lt;T&gt;&gt;::from (1 samples, 0.01%)</title><rect x="32.5265%" y="1541" width="0.0120%" height="15" fill="rgb(227,189,38)" fg:x="2701" fg:w="1"/><text x="32.7765%" y="1551.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="32.5265%" y="1525" width="0.0120%" height="15" fill="rgb(218,8,2)" fg:x="2701" fg:w="1"/><text x="32.7765%" y="1535.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="32.5265%" y="1509" width="0.0120%" height="15" fill="rgb(209,61,28)" fg:x="2701" fg:w="1"/><text x="32.7765%" y="1519.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="32.5265%" y="1493" width="0.0120%" height="15" fill="rgb(233,140,39)" fg:x="2701" fg:w="1"/><text x="32.7765%" y="1503.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="32.5265%" y="1477" width="0.0120%" height="15" fill="rgb(251,66,48)" fg:x="2701" fg:w="1"/><text x="32.7765%" y="1487.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="32.5265%" y="1461" width="0.0120%" height="15" fill="rgb(210,44,45)" fg:x="2701" fg:w="1"/><text x="32.7765%" y="1471.50"></text></g><g><title>mi_malloc (1 samples, 0.01%)</title><rect x="32.5265%" y="1445" width="0.0120%" height="15" fill="rgb(214,136,46)" fg:x="2701" fg:w="1"/><text x="32.7765%" y="1455.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.01%)</title><rect x="32.5265%" y="1429" width="0.0120%" height="15" fill="rgb(207,130,50)" fg:x="2701" fg:w="1"/><text x="32.7765%" y="1439.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.01%)</title><rect x="32.5265%" y="1413" width="0.0120%" height="15" fill="rgb(228,102,49)" fg:x="2701" fg:w="1"/><text x="32.7765%" y="1423.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.01%)</title><rect x="32.5265%" y="1397" width="0.0120%" height="15" fill="rgb(253,55,1)" fg:x="2701" fg:w="1"/><text x="32.7765%" y="1407.50"></text></g><g><title>mi_block_next (1 samples, 0.01%)</title><rect x="32.5265%" y="1381" width="0.0120%" height="15" fill="rgb(238,222,9)" fg:x="2701" fg:w="1"/><text x="32.7765%" y="1391.50"></text></g><g><title>mi_block_nextx (1 samples, 0.01%)</title><rect x="32.5265%" y="1365" width="0.0120%" height="15" fill="rgb(246,99,6)" fg:x="2701" fg:w="1"/><text x="32.7765%" y="1375.50"></text></g><g><title>mi_ptr_decode (1 samples, 0.01%)</title><rect x="32.5265%" y="1349" width="0.0120%" height="15" fill="rgb(219,110,26)" fg:x="2701" fg:w="1"/><text x="32.7765%" y="1359.50"></text></g><g><title>vm_library::managed::value::Value::to_runtime_ticket (4 samples, 0.05%)</title><rect x="32.5024%" y="1573" width="0.0482%" height="15" fill="rgb(239,160,33)" fg:x="2699" fg:w="4"/><text x="32.7524%" y="1583.50"></text></g><g><title>vm_library::managed::value::Value::to_runtime_ticket (2 samples, 0.02%)</title><rect x="32.5265%" y="1557" width="0.0241%" height="15" fill="rgb(220,202,23)" fg:x="2701" fg:w="2"/><text x="32.7765%" y="1567.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="32.5385%" y="1541" width="0.0120%" height="15" fill="rgb(208,80,26)" fg:x="2702" fg:w="1"/><text x="32.7885%" y="1551.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="32.5385%" y="1525" width="0.0120%" height="15" fill="rgb(243,85,7)" fg:x="2702" fg:w="1"/><text x="32.7885%" y="1535.50"></text></g><g><title>__GI___write (7 samples, 0.08%)</title><rect x="32.5867%" y="1461" width="0.0843%" height="15" fill="rgb(228,77,47)" fg:x="2706" fg:w="7"/><text x="32.8367%" y="1471.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="32.5867%" y="1445" width="0.0843%" height="15" fill="rgb(212,226,8)" fg:x="2706" fg:w="7"/><text x="32.8367%" y="1455.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="32.5867%" y="1429" width="0.0843%" height="15" fill="rgb(241,120,54)" fg:x="2706" fg:w="7"/><text x="32.8367%" y="1439.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="32.5867%" y="1413" width="0.0843%" height="15" fill="rgb(226,80,16)" fg:x="2706" fg:w="7"/><text x="32.8367%" y="1423.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="32.5867%" y="1397" width="0.0843%" height="15" fill="rgb(240,76,13)" fg:x="2706" fg:w="7"/><text x="32.8367%" y="1407.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="32.5867%" y="1381" width="0.0843%" height="15" fill="rgb(252,74,8)" fg:x="2706" fg:w="7"/><text x="32.8367%" y="1391.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="32.5867%" y="1365" width="0.0843%" height="15" fill="rgb(244,155,2)" fg:x="2706" fg:w="7"/><text x="32.8367%" y="1375.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="32.5867%" y="1349" width="0.0843%" height="15" fill="rgb(215,81,35)" fg:x="2706" fg:w="7"/><text x="32.8367%" y="1359.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="32.5987%" y="1333" width="0.0723%" height="15" fill="rgb(206,55,2)" fg:x="2707" fg:w="6"/><text x="32.8487%" y="1343.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="32.6349%" y="1317" width="0.0361%" height="15" fill="rgb(231,2,34)" fg:x="2710" fg:w="3"/><text x="32.8849%" y="1327.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="32.6349%" y="1301" width="0.0361%" height="15" fill="rgb(242,176,48)" fg:x="2710" fg:w="3"/><text x="32.8849%" y="1311.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="32.6469%" y="1285" width="0.0241%" height="15" fill="rgb(249,31,36)" fg:x="2711" fg:w="2"/><text x="32.8969%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="32.6590%" y="1269" width="0.0120%" height="15" fill="rgb(205,18,17)" fg:x="2712" fg:w="1"/><text x="32.9090%" y="1279.50"></text></g><g><title>std::io::Write::write_all (8 samples, 0.10%)</title><rect x="32.5867%" y="1525" width="0.0963%" height="15" fill="rgb(254,130,5)" fg:x="2706" fg:w="8"/><text x="32.8367%" y="1535.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (8 samples, 0.10%)</title><rect x="32.5867%" y="1509" width="0.0963%" height="15" fill="rgb(229,42,45)" fg:x="2706" fg:w="8"/><text x="32.8367%" y="1519.50"></text></g><g><title>std::sys::unix::net::Socket::write (8 samples, 0.10%)</title><rect x="32.5867%" y="1493" width="0.0963%" height="15" fill="rgb(245,95,25)" fg:x="2706" fg:w="8"/><text x="32.8367%" y="1503.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (8 samples, 0.10%)</title><rect x="32.5867%" y="1477" width="0.0963%" height="15" fill="rgb(249,193,38)" fg:x="2706" fg:w="8"/><text x="32.8367%" y="1487.50"></text></g><g><title>std::sys::unix::cvt (1 samples, 0.01%)</title><rect x="32.6710%" y="1461" width="0.0120%" height="15" fill="rgb(241,140,43)" fg:x="2713" fg:w="1"/><text x="32.9210%" y="1471.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (26 samples, 0.31%)</title><rect x="32.5867%" y="1557" width="0.3131%" height="15" fill="rgb(245,78,48)" fg:x="2706" fg:w="26"/><text x="32.8367%" y="1567.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_all_cold (26 samples, 0.31%)</title><rect x="32.5867%" y="1541" width="0.3131%" height="15" fill="rgb(214,92,39)" fg:x="2706" fg:w="26"/><text x="32.8367%" y="1551.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (18 samples, 0.22%)</title><rect x="32.6830%" y="1525" width="0.2168%" height="15" fill="rgb(211,189,14)" fg:x="2714" fg:w="18"/><text x="32.9330%" y="1535.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (15 samples, 0.18%)</title><rect x="32.7192%" y="1509" width="0.1806%" height="15" fill="rgb(218,7,24)" fg:x="2717" fg:w="15"/><text x="32.9692%" y="1519.50"></text></g><g><title>std::sys::unix::net::Socket::write (14 samples, 0.17%)</title><rect x="32.7312%" y="1493" width="0.1686%" height="15" fill="rgb(224,200,49)" fg:x="2718" fg:w="14"/><text x="32.9812%" y="1503.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (14 samples, 0.17%)</title><rect x="32.7312%" y="1477" width="0.1686%" height="15" fill="rgb(218,210,14)" fg:x="2718" fg:w="14"/><text x="32.9812%" y="1487.50"></text></g><g><title>__GI___write (14 samples, 0.17%)</title><rect x="32.7312%" y="1461" width="0.1686%" height="15" fill="rgb(234,142,31)" fg:x="2718" fg:w="14"/><text x="32.9812%" y="1471.50"></text></g><g><title>[unknown] (12 samples, 0.14%)</title><rect x="32.7553%" y="1445" width="0.1445%" height="15" fill="rgb(227,165,2)" fg:x="2720" fg:w="12"/><text x="33.0053%" y="1455.50"></text></g><g><title>[unknown] (11 samples, 0.13%)</title><rect x="32.7673%" y="1429" width="0.1325%" height="15" fill="rgb(232,44,46)" fg:x="2721" fg:w="11"/><text x="33.0173%" y="1439.50"></text></g><g><title>[unknown] (11 samples, 0.13%)</title><rect x="32.7673%" y="1413" width="0.1325%" height="15" fill="rgb(236,149,47)" fg:x="2721" fg:w="11"/><text x="33.0173%" y="1423.50"></text></g><g><title>[unknown] (9 samples, 0.11%)</title><rect x="32.7914%" y="1397" width="0.1084%" height="15" fill="rgb(227,45,31)" fg:x="2723" fg:w="9"/><text x="33.0414%" y="1407.50"></text></g><g><title>[unknown] (8 samples, 0.10%)</title><rect x="32.8035%" y="1381" width="0.0963%" height="15" fill="rgb(240,176,51)" fg:x="2724" fg:w="8"/><text x="33.0535%" y="1391.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="32.8276%" y="1365" width="0.0723%" height="15" fill="rgb(249,146,41)" fg:x="2726" fg:w="6"/><text x="33.0776%" y="1375.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="32.8396%" y="1349" width="0.0602%" height="15" fill="rgb(213,208,4)" fg:x="2727" fg:w="5"/><text x="33.0896%" y="1359.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="32.8757%" y="1333" width="0.0241%" height="15" fill="rgb(245,84,36)" fg:x="2730" fg:w="2"/><text x="33.1257%" y="1343.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="32.8757%" y="1317" width="0.0241%" height="15" fill="rgb(254,84,18)" fg:x="2730" fg:w="2"/><text x="33.1257%" y="1327.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="32.8757%" y="1301" width="0.0241%" height="15" fill="rgb(225,38,54)" fg:x="2730" fg:w="2"/><text x="33.1257%" y="1311.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="32.8757%" y="1285" width="0.0241%" height="15" fill="rgb(246,50,30)" fg:x="2730" fg:w="2"/><text x="33.1257%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="32.8878%" y="1269" width="0.0120%" height="15" fill="rgb(246,148,9)" fg:x="2731" fg:w="1"/><text x="33.1378%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="32.8998%" y="1557" width="0.0120%" height="15" fill="rgb(223,75,4)" fg:x="2732" fg:w="1"/><text x="33.1498%" y="1567.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="32.8998%" y="1541" width="0.0120%" height="15" fill="rgb(239,148,41)" fg:x="2732" fg:w="1"/><text x="33.1498%" y="1551.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="32.8998%" y="1525" width="0.0120%" height="15" fill="rgb(205,195,3)" fg:x="2732" fg:w="1"/><text x="33.1498%" y="1535.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="32.8998%" y="1509" width="0.0120%" height="15" fill="rgb(254,161,1)" fg:x="2732" fg:w="1"/><text x="33.1498%" y="1519.50"></text></g><g><title>_mi_page_retire (1 samples, 0.01%)</title><rect x="32.9118%" y="1557" width="0.0120%" height="15" fill="rgb(211,229,8)" fg:x="2733" fg:w="1"/><text x="33.1618%" y="1567.50"></text></g><g><title>mi_page_queue_of (1 samples, 0.01%)</title><rect x="32.9118%" y="1541" width="0.0120%" height="15" fill="rgb(220,97,9)" fg:x="2733" fg:w="1"/><text x="33.1618%" y="1551.50"></text></g><g><title>mi_bin (1 samples, 0.01%)</title><rect x="32.9118%" y="1525" width="0.0120%" height="15" fill="rgb(240,218,8)" fg:x="2733" fg:w="1"/><text x="33.1618%" y="1535.50"></text></g><g><title>_mi_stat_decrease (2 samples, 0.02%)</title><rect x="32.9239%" y="1525" width="0.0241%" height="15" fill="rgb(250,44,0)" fg:x="2734" fg:w="2"/><text x="33.1739%" y="1535.50"></text></g><g><title>mi_stat_update (2 samples, 0.02%)</title><rect x="32.9239%" y="1509" width="0.0241%" height="15" fill="rgb(236,41,53)" fg:x="2734" fg:w="2"/><text x="33.1739%" y="1519.50"></text></g><g><title>mi_option_is_enabled (1 samples, 0.01%)</title><rect x="32.9480%" y="1525" width="0.0120%" height="15" fill="rgb(218,227,13)" fg:x="2736" fg:w="1"/><text x="33.1980%" y="1535.50"></text></g><g><title>mi_option_get (1 samples, 0.01%)</title><rect x="32.9480%" y="1509" width="0.0120%" height="15" fill="rgb(217,94,32)" fg:x="2736" fg:w="1"/><text x="33.1980%" y="1519.50"></text></g><g><title>_mi_segment_page_free (4 samples, 0.05%)</title><rect x="32.9239%" y="1557" width="0.0482%" height="15" fill="rgb(213,217,12)" fg:x="2734" fg:w="4"/><text x="33.1739%" y="1567.50"></text></g><g><title>mi_segment_page_clear (4 samples, 0.05%)</title><rect x="32.9239%" y="1541" width="0.0482%" height="15" fill="rgb(229,13,46)" fg:x="2734" fg:w="4"/><text x="33.1739%" y="1551.50"></text></g><g><title>mi_segment_span_free_coalesce (1 samples, 0.01%)</title><rect x="32.9600%" y="1525" width="0.0120%" height="15" fill="rgb(243,139,5)" fg:x="2737" fg:w="1"/><text x="33.2100%" y="1535.50"></text></g><g><title>mi_segment_span_free (1 samples, 0.01%)</title><rect x="32.9600%" y="1509" width="0.0120%" height="15" fill="rgb(249,38,45)" fg:x="2737" fg:w="1"/><text x="33.2100%" y="1519.50"></text></g><g><title>mi_segment_perhaps_decommit (1 samples, 0.01%)</title><rect x="32.9600%" y="1493" width="0.0120%" height="15" fill="rgb(216,70,11)" fg:x="2737" fg:w="1"/><text x="33.2100%" y="1503.50"></text></g><g><title>_mi_clock_now (1 samples, 0.01%)</title><rect x="32.9600%" y="1477" width="0.0120%" height="15" fill="rgb(253,101,25)" fg:x="2737" fg:w="1"/><text x="33.2100%" y="1487.50"></text></g><g><title>__clock_gettime_2 (1 samples, 0.01%)</title><rect x="32.9600%" y="1461" width="0.0120%" height="15" fill="rgb(207,197,30)" fg:x="2737" fg:w="1"/><text x="33.2100%" y="1471.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.01%)</title><rect x="32.9600%" y="1445" width="0.0120%" height="15" fill="rgb(238,87,13)" fg:x="2737" fg:w="1"/><text x="33.2100%" y="1455.50"></text></g><g><title>mi_free (1 samples, 0.01%)</title><rect x="32.9721%" y="1557" width="0.0120%" height="15" fill="rgb(215,155,8)" fg:x="2738" fg:w="1"/><text x="33.2221%" y="1567.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="32.9841%" y="1413" width="0.0120%" height="15" fill="rgb(239,166,38)" fg:x="2739" fg:w="1"/><text x="33.2341%" y="1423.50"></text></g><g><title>mi_block_nextx (2 samples, 0.02%)</title><rect x="33.0082%" y="1333" width="0.0241%" height="15" fill="rgb(240,194,35)" fg:x="2741" fg:w="2"/><text x="33.2582%" y="1343.50"></text></g><g><title>mi_ptr_decode (2 samples, 0.02%)</title><rect x="33.0082%" y="1317" width="0.0241%" height="15" fill="rgb(219,10,44)" fg:x="2741" fg:w="2"/><text x="33.2582%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (5 samples, 0.06%)</title><rect x="32.9841%" y="1525" width="0.0602%" height="15" fill="rgb(251,220,35)" fg:x="2739" fg:w="5"/><text x="33.2341%" y="1535.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.06%)</title><rect x="32.9841%" y="1509" width="0.0602%" height="15" fill="rgb(218,117,13)" fg:x="2739" fg:w="5"/><text x="33.2341%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.06%)</title><rect x="32.9841%" y="1493" width="0.0602%" height="15" fill="rgb(221,213,40)" fg:x="2739" fg:w="5"/><text x="33.2341%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.06%)</title><rect x="32.9841%" y="1477" width="0.0602%" height="15" fill="rgb(251,224,35)" fg:x="2739" fg:w="5"/><text x="33.2341%" y="1487.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.06%)</title><rect x="32.9841%" y="1461" width="0.0602%" height="15" fill="rgb(241,33,39)" fg:x="2739" fg:w="5"/><text x="33.2341%" y="1471.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.06%)</title><rect x="32.9841%" y="1445" width="0.0602%" height="15" fill="rgb(222,74,17)" fg:x="2739" fg:w="5"/><text x="33.2341%" y="1455.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.06%)</title><rect x="32.9841%" y="1429" width="0.0602%" height="15" fill="rgb(225,103,0)" fg:x="2739" fg:w="5"/><text x="33.2341%" y="1439.50"></text></g><g><title>mi_malloc (4 samples, 0.05%)</title><rect x="32.9961%" y="1413" width="0.0482%" height="15" fill="rgb(240,0,12)" fg:x="2740" fg:w="4"/><text x="33.2461%" y="1423.50"></text></g><g><title>mi_heap_malloc (4 samples, 0.05%)</title><rect x="32.9961%" y="1397" width="0.0482%" height="15" fill="rgb(233,213,37)" fg:x="2740" fg:w="4"/><text x="33.2461%" y="1407.50"></text></g><g><title>mi_heap_malloc_small (4 samples, 0.05%)</title><rect x="32.9961%" y="1381" width="0.0482%" height="15" fill="rgb(225,84,52)" fg:x="2740" fg:w="4"/><text x="33.2461%" y="1391.50"></text></g><g><title>_mi_page_malloc (4 samples, 0.05%)</title><rect x="32.9961%" y="1365" width="0.0482%" height="15" fill="rgb(247,160,51)" fg:x="2740" fg:w="4"/><text x="33.2461%" y="1375.50"></text></g><g><title>mi_block_next (3 samples, 0.04%)</title><rect x="33.0082%" y="1349" width="0.0361%" height="15" fill="rgb(244,60,51)" fg:x="2741" fg:w="3"/><text x="33.2582%" y="1359.50"></text></g><g><title>mi_is_in_same_page (1 samples, 0.01%)</title><rect x="33.0323%" y="1333" width="0.0120%" height="15" fill="rgb(233,114,7)" fg:x="2743" fg:w="1"/><text x="33.2823%" y="1343.50"></text></g><g><title>_mi_segment_page_start (1 samples, 0.01%)</title><rect x="33.0323%" y="1317" width="0.0120%" height="15" fill="rgb(246,136,16)" fg:x="2743" fg:w="1"/><text x="33.2823%" y="1327.50"></text></g><g><title>_mi_segment_page_start_from_slice (1 samples, 0.01%)</title><rect x="33.0323%" y="1301" width="0.0120%" height="15" fill="rgb(243,114,45)" fg:x="2743" fg:w="1"/><text x="33.2823%" y="1311.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeTuple&gt;::end (1 samples, 0.01%)</title><rect x="33.0564%" y="1493" width="0.0120%" height="15" fill="rgb(247,183,43)" fg:x="2745" fg:w="1"/><text x="33.3064%" y="1503.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::end (1 samples, 0.01%)</title><rect x="33.0564%" y="1477" width="0.0120%" height="15" fill="rgb(251,210,42)" fg:x="2745" fg:w="1"/><text x="33.3064%" y="1487.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.01%)</title><rect x="33.0804%" y="1397" width="0.0120%" height="15" fill="rgb(221,88,35)" fg:x="2747" fg:w="1"/><text x="33.3304%" y="1407.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.01%)</title><rect x="33.0804%" y="1381" width="0.0120%" height="15" fill="rgb(242,21,20)" fg:x="2747" fg:w="1"/><text x="33.3304%" y="1391.50"></text></g><g><title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.01%)</title><rect x="33.0804%" y="1365" width="0.0120%" height="15" fill="rgb(233,226,36)" fg:x="2747" fg:w="1"/><text x="33.3304%" y="1375.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.01%)</title><rect x="33.0804%" y="1349" width="0.0120%" height="15" fill="rgb(243,189,34)" fg:x="2747" fg:w="1"/><text x="33.3304%" y="1359.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.01%)</title><rect x="33.0804%" y="1333" width="0.0120%" height="15" fill="rgb(207,145,50)" fg:x="2747" fg:w="1"/><text x="33.3304%" y="1343.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.02%)</title><rect x="33.0804%" y="1413" width="0.0241%" height="15" fill="rgb(242,1,50)" fg:x="2747" fg:w="2"/><text x="33.3304%" y="1423.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.01%)</title><rect x="33.0925%" y="1397" width="0.0120%" height="15" fill="rgb(231,65,32)" fg:x="2748" fg:w="1"/><text x="33.3425%" y="1407.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.01%)</title><rect x="33.0925%" y="1381" width="0.0120%" height="15" fill="rgb(208,68,49)" fg:x="2748" fg:w="1"/><text x="33.3425%" y="1391.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.01%)</title><rect x="33.0925%" y="1365" width="0.0120%" height="15" fill="rgb(253,54,49)" fg:x="2748" fg:w="1"/><text x="33.3425%" y="1375.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.01%)</title><rect x="33.0925%" y="1349" width="0.0120%" height="15" fill="rgb(245,186,24)" fg:x="2748" fg:w="1"/><text x="33.3425%" y="1359.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.01%)</title><rect x="33.0925%" y="1333" width="0.0120%" height="15" fill="rgb(209,2,41)" fg:x="2748" fg:w="1"/><text x="33.3425%" y="1343.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (1 samples, 0.01%)</title><rect x="33.0925%" y="1317" width="0.0120%" height="15" fill="rgb(242,208,54)" fg:x="2748" fg:w="1"/><text x="33.3425%" y="1327.50"></text></g><g><title>serde_json::ser::Formatter::write_string_fragment (1 samples, 0.01%)</title><rect x="33.0925%" y="1301" width="0.0120%" height="15" fill="rgb(225,9,51)" fg:x="2748" fg:w="1"/><text x="33.3425%" y="1311.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.01%)</title><rect x="33.0925%" y="1285" width="0.0120%" height="15" fill="rgb(207,207,25)" fg:x="2748" fg:w="1"/><text x="33.3425%" y="1295.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.01%)</title><rect x="33.0925%" y="1269" width="0.0120%" height="15" fill="rgb(253,96,18)" fg:x="2748" fg:w="1"/><text x="33.3425%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="33.0925%" y="1253" width="0.0120%" height="15" fill="rgb(252,215,20)" fg:x="2748" fg:w="1"/><text x="33.3425%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="33.0925%" y="1237" width="0.0120%" height="15" fill="rgb(245,227,26)" fg:x="2748" fg:w="1"/><text x="33.3425%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="33.0925%" y="1221" width="0.0120%" height="15" fill="rgb(241,208,0)" fg:x="2748" fg:w="1"/><text x="33.3425%" y="1231.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="33.0925%" y="1205" width="0.0120%" height="15" fill="rgb(224,130,10)" fg:x="2748" fg:w="1"/><text x="33.3425%" y="1215.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="33.0925%" y="1189" width="0.0120%" height="15" fill="rgb(237,29,0)" fg:x="2748" fg:w="1"/><text x="33.3425%" y="1199.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.01%)</title><rect x="33.1045%" y="1381" width="0.0120%" height="15" fill="rgb(219,27,41)" fg:x="2749" fg:w="1"/><text x="33.3545%" y="1391.50"></text></g><g><title>_mi_memcpy_aligned (100 samples, 1.20%)</title><rect x="33.1166%" y="1125" width="1.2042%" height="15" fill="rgb(245,101,19)" fg:x="2750" fg:w="100"/><text x="33.3666%" y="1135.50"></text></g><g><title>_mi_memcpy (100 samples, 1.20%)</title><rect x="33.1166%" y="1109" width="1.2042%" height="15" fill="rgb(243,44,37)" fg:x="2750" fg:w="100"/><text x="33.3666%" y="1119.50"></text></g><g><title>__memcpy_avx_unaligned_erms (100 samples, 1.20%)</title><rect x="33.1166%" y="1093" width="1.2042%" height="15" fill="rgb(228,213,43)" fg:x="2750" fg:w="100"/><text x="33.3666%" y="1103.50"></text></g><g><title>_mi_page_free (1 samples, 0.01%)</title><rect x="34.3208%" y="1125" width="0.0120%" height="15" fill="rgb(219,163,21)" fg:x="2850" fg:w="1"/><text x="34.5708%" y="1135.50"></text></g><g><title>mi_page_queue_remove (1 samples, 0.01%)</title><rect x="34.3208%" y="1109" width="0.0120%" height="15" fill="rgb(234,86,24)" fg:x="2850" fg:w="1"/><text x="34.5708%" y="1119.50"></text></g><g><title>_mi_page_retire (1 samples, 0.01%)</title><rect x="34.3329%" y="1125" width="0.0120%" height="15" fill="rgb(225,10,24)" fg:x="2851" fg:w="1"/><text x="34.5829%" y="1135.50"></text></g><g><title>mi_page_queue_of (1 samples, 0.01%)</title><rect x="34.3329%" y="1109" width="0.0120%" height="15" fill="rgb(218,109,7)" fg:x="2851" fg:w="1"/><text x="34.5829%" y="1119.50"></text></g><g><title>_mi_stat_decrease (2 samples, 0.02%)</title><rect x="34.3449%" y="1093" width="0.0241%" height="15" fill="rgb(210,20,26)" fg:x="2852" fg:w="2"/><text x="34.5949%" y="1103.50"></text></g><g><title>mi_stat_update (2 samples, 0.02%)</title><rect x="34.3449%" y="1077" width="0.0241%" height="15" fill="rgb(216,18,1)" fg:x="2852" fg:w="2"/><text x="34.5949%" y="1087.50"></text></g><g><title>mi_segment_perhaps_decommit (2 samples, 0.02%)</title><rect x="34.3810%" y="1061" width="0.0241%" height="15" fill="rgb(206,163,23)" fg:x="2855" fg:w="2"/><text x="34.6310%" y="1071.50"></text></g><g><title>_mi_clock_now (2 samples, 0.02%)</title><rect x="34.3810%" y="1045" width="0.0241%" height="15" fill="rgb(229,150,31)" fg:x="2855" fg:w="2"/><text x="34.6310%" y="1055.50"></text></g><g><title>__clock_gettime_2 (2 samples, 0.02%)</title><rect x="34.3810%" y="1029" width="0.0241%" height="15" fill="rgb(231,10,5)" fg:x="2855" fg:w="2"/><text x="34.6310%" y="1039.50"></text></g><g><title>__vdso_clock_gettime (2 samples, 0.02%)</title><rect x="34.3810%" y="1013" width="0.0241%" height="15" fill="rgb(250,40,50)" fg:x="2855" fg:w="2"/><text x="34.6310%" y="1023.50"></text></g><g><title>[[vdso]] (2 samples, 0.02%)</title><rect x="34.3810%" y="997" width="0.0241%" height="15" fill="rgb(217,119,7)" fg:x="2855" fg:w="2"/><text x="34.6310%" y="1007.50"></text></g><g><title>_mi_segment_page_free (6 samples, 0.07%)</title><rect x="34.3449%" y="1125" width="0.0723%" height="15" fill="rgb(245,214,40)" fg:x="2852" fg:w="6"/><text x="34.5949%" y="1135.50"></text></g><g><title>mi_segment_page_clear (6 samples, 0.07%)</title><rect x="34.3449%" y="1109" width="0.0723%" height="15" fill="rgb(216,187,1)" fg:x="2852" fg:w="6"/><text x="34.5949%" y="1119.50"></text></g><g><title>mi_segment_span_free_coalesce (4 samples, 0.05%)</title><rect x="34.3690%" y="1093" width="0.0482%" height="15" fill="rgb(237,146,21)" fg:x="2854" fg:w="4"/><text x="34.6190%" y="1103.50"></text></g><g><title>mi_segment_span_free (3 samples, 0.04%)</title><rect x="34.3810%" y="1077" width="0.0361%" height="15" fill="rgb(210,174,47)" fg:x="2855" fg:w="3"/><text x="34.6310%" y="1087.50"></text></g><g><title>mi_span_queue_push (1 samples, 0.01%)</title><rect x="34.4051%" y="1061" width="0.0120%" height="15" fill="rgb(218,111,39)" fg:x="2857" fg:w="1"/><text x="34.6551%" y="1071.50"></text></g><g><title>mi_page_init (3 samples, 0.04%)</title><rect x="34.4171%" y="1045" width="0.0361%" height="15" fill="rgb(224,95,19)" fg:x="2858" fg:w="3"/><text x="34.6671%" y="1055.50"></text></g><g><title>_mi_random_next (3 samples, 0.04%)</title><rect x="34.4171%" y="1029" width="0.0361%" height="15" fill="rgb(234,15,38)" fg:x="2858" fg:w="3"/><text x="34.6671%" y="1039.50"></text></g><g><title>chacha_next32 (3 samples, 0.04%)</title><rect x="34.4171%" y="1013" width="0.0361%" height="15" fill="rgb(246,56,12)" fg:x="2858" fg:w="3"/><text x="34.6671%" y="1023.50"></text></g><g><title>chacha_block (3 samples, 0.04%)</title><rect x="34.4171%" y="997" width="0.0361%" height="15" fill="rgb(247,16,17)" fg:x="2858" fg:w="3"/><text x="34.6671%" y="1007.50"></text></g><g><title>qround (2 samples, 0.02%)</title><rect x="34.4292%" y="981" width="0.0241%" height="15" fill="rgb(215,151,11)" fg:x="2859" fg:w="2"/><text x="34.6792%" y="991.50"></text></g><g><title>mi_segment_delayed_decommit (2 samples, 0.02%)</title><rect x="34.4533%" y="1029" width="0.0241%" height="15" fill="rgb(225,16,24)" fg:x="2861" fg:w="2"/><text x="34.7033%" y="1039.50"></text></g><g><title>_mi_clock_now (1 samples, 0.01%)</title><rect x="34.4653%" y="1013" width="0.0120%" height="15" fill="rgb(217,117,5)" fg:x="2862" fg:w="1"/><text x="34.7153%" y="1023.50"></text></g><g><title>__clock_gettime_2 (1 samples, 0.01%)</title><rect x="34.4653%" y="997" width="0.0120%" height="15" fill="rgb(246,187,53)" fg:x="2862" fg:w="1"/><text x="34.7153%" y="1007.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.01%)</title><rect x="34.4653%" y="981" width="0.0120%" height="15" fill="rgb(241,71,40)" fg:x="2862" fg:w="1"/><text x="34.7153%" y="991.50"></text></g><g><title>[[vdso]] (1 samples, 0.01%)</title><rect x="34.4653%" y="965" width="0.0120%" height="15" fill="rgb(231,67,39)" fg:x="2862" fg:w="1"/><text x="34.7153%" y="975.50"></text></g><g><title>mi_segment_perhaps_decommit (1 samples, 0.01%)</title><rect x="34.4774%" y="981" width="0.0120%" height="15" fill="rgb(222,120,24)" fg:x="2863" fg:w="1"/><text x="34.7274%" y="991.50"></text></g><g><title>mi_segment_commit_mask (1 samples, 0.01%)</title><rect x="34.4774%" y="965" width="0.0120%" height="15" fill="rgb(248,3,3)" fg:x="2863" fg:w="1"/><text x="34.7274%" y="975.50"></text></g><g><title>mi_segment_commit_mask (1 samples, 0.01%)</title><rect x="34.4774%" y="949" width="0.0120%" height="15" fill="rgb(228,218,5)" fg:x="2863" fg:w="1"/><text x="34.7274%" y="959.50"></text></g><g><title>mi_commit_mask_create (1 samples, 0.01%)</title><rect x="34.4774%" y="933" width="0.0120%" height="15" fill="rgb(212,202,43)" fg:x="2863" fg:w="1"/><text x="34.7274%" y="943.50"></text></g><g><title>mi_commit_mask_create (1 samples, 0.01%)</title><rect x="34.4774%" y="917" width="0.0120%" height="15" fill="rgb(235,183,2)" fg:x="2863" fg:w="1"/><text x="34.7274%" y="927.50"></text></g><g><title>mi_commit_mask_create_empty (1 samples, 0.01%)</title><rect x="34.4774%" y="901" width="0.0120%" height="15" fill="rgb(230,165,10)" fg:x="2863" fg:w="1"/><text x="34.7274%" y="911.50"></text></g><g><title>mi_segment_slice_split (2 samples, 0.02%)</title><rect x="34.4774%" y="1013" width="0.0241%" height="15" fill="rgb(219,54,40)" fg:x="2863" fg:w="2"/><text x="34.7274%" y="1023.50"></text></g><g><title>mi_segment_span_free (2 samples, 0.02%)</title><rect x="34.4774%" y="997" width="0.0241%" height="15" fill="rgb(244,73,9)" fg:x="2863" fg:w="2"/><text x="34.7274%" y="1007.50"></text></g><g><title>mi_span_queue_for (1 samples, 0.01%)</title><rect x="34.4894%" y="981" width="0.0120%" height="15" fill="rgb(212,32,45)" fg:x="2864" fg:w="1"/><text x="34.7394%" y="991.50"></text></g><g><title>_mi_clock_now (2 samples, 0.02%)</title><rect x="34.5014%" y="965" width="0.0241%" height="15" fill="rgb(205,58,31)" fg:x="2865" fg:w="2"/><text x="34.7514%" y="975.50"></text></g><g><title>__clock_gettime_2 (2 samples, 0.02%)</title><rect x="34.5014%" y="949" width="0.0241%" height="15" fill="rgb(250,120,43)" fg:x="2865" fg:w="2"/><text x="34.7514%" y="959.50"></text></g><g><title>__vdso_clock_gettime (2 samples, 0.02%)</title><rect x="34.5014%" y="933" width="0.0241%" height="15" fill="rgb(235,13,10)" fg:x="2865" fg:w="2"/><text x="34.7514%" y="943.50"></text></g><g><title>[[vdso]] (2 samples, 0.02%)</title><rect x="34.5014%" y="917" width="0.0241%" height="15" fill="rgb(232,219,31)" fg:x="2865" fg:w="2"/><text x="34.7514%" y="927.50"></text></g><g><title>mi_commit_mask_create_empty (1 samples, 0.01%)</title><rect x="34.5255%" y="949" width="0.0120%" height="15" fill="rgb(218,157,51)" fg:x="2867" fg:w="1"/><text x="34.7755%" y="959.50"></text></g><g><title>_mi_align_up (1 samples, 0.01%)</title><rect x="34.5376%" y="933" width="0.0120%" height="15" fill="rgb(211,91,52)" fg:x="2868" fg:w="1"/><text x="34.7876%" y="943.50"></text></g><g><title>mi_segment_span_allocate (5 samples, 0.06%)</title><rect x="34.5014%" y="1013" width="0.0602%" height="15" fill="rgb(240,173,1)" fg:x="2865" fg:w="5"/><text x="34.7514%" y="1023.50"></text></g><g><title>mi_segment_ensure_committed (5 samples, 0.06%)</title><rect x="34.5014%" y="997" width="0.0602%" height="15" fill="rgb(248,20,47)" fg:x="2865" fg:w="5"/><text x="34.7514%" y="1007.50"></text></g><g><title>mi_segment_commitx (5 samples, 0.06%)</title><rect x="34.5014%" y="981" width="0.0602%" height="15" fill="rgb(217,221,40)" fg:x="2865" fg:w="5"/><text x="34.7514%" y="991.50"></text></g><g><title>mi_segment_commit_mask (3 samples, 0.04%)</title><rect x="34.5255%" y="965" width="0.0361%" height="15" fill="rgb(226,149,51)" fg:x="2867" fg:w="3"/><text x="34.7755%" y="975.50"></text></g><g><title>mi_segment_commit_mask (2 samples, 0.02%)</title><rect x="34.5376%" y="949" width="0.0241%" height="15" fill="rgb(252,193,7)" fg:x="2868" fg:w="2"/><text x="34.7876%" y="959.50"></text></g><g><title>mi_commit_mask_create (1 samples, 0.01%)</title><rect x="34.5496%" y="933" width="0.0120%" height="15" fill="rgb(205,123,0)" fg:x="2869" fg:w="1"/><text x="34.7996%" y="943.50"></text></g><g><title>mi_commit_mask_create (1 samples, 0.01%)</title><rect x="34.5496%" y="917" width="0.0120%" height="15" fill="rgb(233,173,25)" fg:x="2869" fg:w="1"/><text x="34.7996%" y="927.50"></text></g><g><title>serde_json::ser::Formatter::end_string (121 samples, 1.46%)</title><rect x="33.1166%" y="1365" width="1.4571%" height="15" fill="rgb(216,63,32)" fg:x="2750" fg:w="121"/><text x="33.3666%" y="1375.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (121 samples, 1.46%)</title><rect x="33.1166%" y="1349" width="1.4571%" height="15" fill="rgb(209,56,45)" fg:x="2750" fg:w="121"/><text x="33.3666%" y="1359.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (121 samples, 1.46%)</title><rect x="33.1166%" y="1333" width="1.4571%" height="15" fill="rgb(226,111,49)" fg:x="2750" fg:w="121"/><text x="33.3666%" y="1343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (121 samples, 1.46%)</title><rect x="33.1166%" y="1317" width="1.4571%" height="15" fill="rgb(244,181,21)" fg:x="2750" fg:w="121"/><text x="33.3666%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (121 samples, 1.46%)</title><rect x="33.1166%" y="1301" width="1.4571%" height="15" fill="rgb(222,126,15)" fg:x="2750" fg:w="121"/><text x="33.3666%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (121 samples, 1.46%)</title><rect x="33.1166%" y="1285" width="1.4571%" height="15" fill="rgb(222,95,17)" fg:x="2750" fg:w="121"/><text x="33.3666%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (121 samples, 1.46%)</title><rect x="33.1166%" y="1269" width="1.4571%" height="15" fill="rgb(254,46,5)" fg:x="2750" fg:w="121"/><text x="33.3666%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (121 samples, 1.46%)</title><rect x="33.1166%" y="1253" width="1.4571%" height="15" fill="rgb(236,216,35)" fg:x="2750" fg:w="121"/><text x="33.3666%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (121 samples, 1.46%)</title><rect x="33.1166%" y="1237" width="1.4571%" height="15" fill="rgb(217,187,26)" fg:x="2750" fg:w="121"/><text x="33.3666%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (121 samples, 1.46%)</title><rect x="33.1166%" y="1221" width="1.4571%" height="15" fill="rgb(207,192,25)" fg:x="2750" fg:w="121"/><text x="33.3666%" y="1231.50"></text></g><g><title>alloc::raw_vec::finish_grow (121 samples, 1.46%)</title><rect x="33.1166%" y="1205" width="1.4571%" height="15" fill="rgb(253,135,27)" fg:x="2750" fg:w="121"/><text x="33.3666%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (121 samples, 1.46%)</title><rect x="33.1166%" y="1189" width="1.4571%" height="15" fill="rgb(211,122,29)" fg:x="2750" fg:w="121"/><text x="33.3666%" y="1199.50"></text></g><g><title>alloc::alloc::Global::grow_impl (121 samples, 1.46%)</title><rect x="33.1166%" y="1173" width="1.4571%" height="15" fill="rgb(233,162,40)" fg:x="2750" fg:w="121"/><text x="33.3666%" y="1183.50"></text></g><g><title>alloc::alloc::realloc (121 samples, 1.46%)</title><rect x="33.1166%" y="1157" width="1.4571%" height="15" fill="rgb(222,184,47)" fg:x="2750" fg:w="121"/><text x="33.3666%" y="1167.50"></text></g><g><title>_mi_heap_realloc_zero (121 samples, 1.46%)</title><rect x="33.1166%" y="1141" width="1.4571%" height="15" fill="rgb(249,99,23)" fg:x="2750" fg:w="121"/><text x="33.3666%" y="1151.50"></text></g><g><title>mi_heap_malloc (13 samples, 0.16%)</title><rect x="34.4171%" y="1125" width="0.1566%" height="15" fill="rgb(214,60,12)" fg:x="2858" fg:w="13"/><text x="34.6671%" y="1135.50"></text></g><g><title>_mi_malloc_generic (13 samples, 0.16%)</title><rect x="34.4171%" y="1109" width="0.1566%" height="15" fill="rgb(250,229,36)" fg:x="2858" fg:w="13"/><text x="34.6671%" y="1119.50"></text></g><g><title>mi_find_page (13 samples, 0.16%)</title><rect x="34.4171%" y="1093" width="0.1566%" height="15" fill="rgb(232,195,10)" fg:x="2858" fg:w="13"/><text x="34.6671%" y="1103.50"></text></g><g><title>mi_large_huge_page_alloc (13 samples, 0.16%)</title><rect x="34.4171%" y="1077" width="0.1566%" height="15" fill="rgb(205,213,31)" fg:x="2858" fg:w="13"/><text x="34.6671%" y="1087.50"></text></g><g><title>mi_page_fresh_alloc (13 samples, 0.16%)</title><rect x="34.4171%" y="1061" width="0.1566%" height="15" fill="rgb(237,43,8)" fg:x="2858" fg:w="13"/><text x="34.6671%" y="1071.50"></text></g><g><title>mi_segments_page_alloc (10 samples, 0.12%)</title><rect x="34.4533%" y="1045" width="0.1204%" height="15" fill="rgb(216,208,3)" fg:x="2861" fg:w="10"/><text x="34.7033%" y="1055.50"></text></g><g><title>mi_segments_page_find_and_allocate (8 samples, 0.10%)</title><rect x="34.4774%" y="1029" width="0.0963%" height="15" fill="rgb(228,179,44)" fg:x="2863" fg:w="8"/><text x="34.7274%" y="1039.50"></text></g><g><title>mi_span_queue_delete (1 samples, 0.01%)</title><rect x="34.5617%" y="1013" width="0.0120%" height="15" fill="rgb(230,192,27)" fg:x="2870" fg:w="1"/><text x="34.8117%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.18%)</title><rect x="65.2818%" y="1349" width="0.1806%" height="15" fill="rgb(251,30,38)" fg:x="5421" fg:w="15"/><text x="65.5318%" y="1359.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.18%)</title><rect x="65.2818%" y="1333" width="0.1806%" height="15" fill="rgb(246,55,52)" fg:x="5421" fg:w="15"/><text x="65.5318%" y="1343.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="65.4624%" y="1349" width="0.0361%" height="15" fill="rgb(249,79,26)" fg:x="5436" fg:w="3"/><text x="65.7124%" y="1359.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="65.4624%" y="1333" width="0.0361%" height="15" fill="rgb(220,202,16)" fg:x="5436" fg:w="3"/><text x="65.7124%" y="1343.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="65.4624%" y="1317" width="0.0361%" height="15" fill="rgb(250,170,23)" fg:x="5436" fg:w="3"/><text x="65.7124%" y="1327.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="65.4624%" y="1301" width="0.0361%" height="15" fill="rgb(230,7,37)" fg:x="5436" fg:w="3"/><text x="65.7124%" y="1311.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="65.4624%" y="1285" width="0.0361%" height="15" fill="rgb(213,71,1)" fg:x="5436" fg:w="3"/><text x="65.7124%" y="1295.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="65.4745%" y="1269" width="0.0241%" height="15" fill="rgb(227,87,39)" fg:x="5437" fg:w="2"/><text x="65.7245%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="65.4865%" y="1253" width="0.0120%" height="15" fill="rgb(210,41,29)" fg:x="5438" fg:w="1"/><text x="65.7365%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="65.4865%" y="1237" width="0.0120%" height="15" fill="rgb(206,191,31)" fg:x="5438" fg:w="1"/><text x="65.7365%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="65.4865%" y="1221" width="0.0120%" height="15" fill="rgb(247,75,54)" fg:x="5438" fg:w="1"/><text x="65.7365%" y="1231.50"></text></g><g><title>_mi_memcpy_aligned (1 samples, 0.01%)</title><rect x="65.5226%" y="1109" width="0.0120%" height="15" fill="rgb(208,54,50)" fg:x="5441" fg:w="1"/><text x="65.7726%" y="1119.50"></text></g><g><title>_mi_memcpy (1 samples, 0.01%)</title><rect x="65.5226%" y="1093" width="0.0120%" height="15" fill="rgb(214,90,37)" fg:x="5441" fg:w="1"/><text x="65.7726%" y="1103.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="65.5226%" y="1077" width="0.0120%" height="15" fill="rgb(220,132,6)" fg:x="5441" fg:w="1"/><text x="65.7726%" y="1087.50"></text></g><g><title>mi_segment_delayed_decommit (1 samples, 0.01%)</title><rect x="65.5347%" y="1013" width="0.0120%" height="15" fill="rgb(213,167,7)" fg:x="5442" fg:w="1"/><text x="65.7847%" y="1023.50"></text></g><g><title>_mi_clock_now (1 samples, 0.01%)</title><rect x="65.5347%" y="997" width="0.0120%" height="15" fill="rgb(243,36,27)" fg:x="5442" fg:w="1"/><text x="65.7847%" y="1007.50"></text></g><g><title>__clock_gettime_2 (1 samples, 0.01%)</title><rect x="65.5347%" y="981" width="0.0120%" height="15" fill="rgb(235,147,12)" fg:x="5442" fg:w="1"/><text x="65.7847%" y="991.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.01%)</title><rect x="65.5347%" y="965" width="0.0120%" height="15" fill="rgb(212,198,44)" fg:x="5442" fg:w="1"/><text x="65.7847%" y="975.50"></text></g><g><title>[[vdso]] (1 samples, 0.01%)</title><rect x="65.5347%" y="949" width="0.0120%" height="15" fill="rgb(218,68,50)" fg:x="5442" fg:w="1"/><text x="65.7847%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.07%)</title><rect x="65.4986%" y="1253" width="0.0723%" height="15" fill="rgb(224,79,48)" fg:x="5439" fg:w="6"/><text x="65.7486%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.07%)</title><rect x="65.4986%" y="1237" width="0.0723%" height="15" fill="rgb(213,191,50)" fg:x="5439" fg:w="6"/><text x="65.7486%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.07%)</title><rect x="65.4986%" y="1221" width="0.0723%" height="15" fill="rgb(254,146,10)" fg:x="5439" fg:w="6"/><text x="65.7486%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.07%)</title><rect x="65.4986%" y="1205" width="0.0723%" height="15" fill="rgb(215,175,11)" fg:x="5439" fg:w="6"/><text x="65.7486%" y="1215.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.07%)</title><rect x="65.4986%" y="1189" width="0.0723%" height="15" fill="rgb(207,49,7)" fg:x="5439" fg:w="6"/><text x="65.7486%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.05%)</title><rect x="65.5226%" y="1173" width="0.0482%" height="15" fill="rgb(234,144,29)" fg:x="5441" fg:w="4"/><text x="65.7726%" y="1183.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.05%)</title><rect x="65.5226%" y="1157" width="0.0482%" height="15" fill="rgb(213,222,48)" fg:x="5441" fg:w="4"/><text x="65.7726%" y="1167.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.05%)</title><rect x="65.5226%" y="1141" width="0.0482%" height="15" fill="rgb(222,8,6)" fg:x="5441" fg:w="4"/><text x="65.7726%" y="1151.50"></text></g><g><title>_mi_heap_realloc_zero (4 samples, 0.05%)</title><rect x="65.5226%" y="1125" width="0.0482%" height="15" fill="rgb(221,114,49)" fg:x="5441" fg:w="4"/><text x="65.7726%" y="1135.50"></text></g><g><title>mi_heap_malloc (3 samples, 0.04%)</title><rect x="65.5347%" y="1109" width="0.0361%" height="15" fill="rgb(250,140,42)" fg:x="5442" fg:w="3"/><text x="65.7847%" y="1119.50"></text></g><g><title>_mi_malloc_generic (3 samples, 0.04%)</title><rect x="65.5347%" y="1093" width="0.0361%" height="15" fill="rgb(250,150,27)" fg:x="5442" fg:w="3"/><text x="65.7847%" y="1103.50"></text></g><g><title>mi_find_page (3 samples, 0.04%)</title><rect x="65.5347%" y="1077" width="0.0361%" height="15" fill="rgb(252,159,3)" fg:x="5442" fg:w="3"/><text x="65.7847%" y="1087.50"></text></g><g><title>mi_large_huge_page_alloc (3 samples, 0.04%)</title><rect x="65.5347%" y="1061" width="0.0361%" height="15" fill="rgb(241,182,3)" fg:x="5442" fg:w="3"/><text x="65.7847%" y="1071.50"></text></g><g><title>mi_page_fresh_alloc (3 samples, 0.04%)</title><rect x="65.5347%" y="1045" width="0.0361%" height="15" fill="rgb(236,3,9)" fg:x="5442" fg:w="3"/><text x="65.7847%" y="1055.50"></text></g><g><title>mi_segments_page_alloc (3 samples, 0.04%)</title><rect x="65.5347%" y="1029" width="0.0361%" height="15" fill="rgb(223,227,51)" fg:x="5442" fg:w="3"/><text x="65.7847%" y="1039.50"></text></g><g><title>mi_segments_page_find_and_allocate (2 samples, 0.02%)</title><rect x="65.5467%" y="1013" width="0.0241%" height="15" fill="rgb(232,133,30)" fg:x="5443" fg:w="2"/><text x="65.7967%" y="1023.50"></text></g><g><title>mi_segment_span_allocate (1 samples, 0.01%)</title><rect x="65.5588%" y="997" width="0.0120%" height="15" fill="rgb(209,93,27)" fg:x="5444" fg:w="1"/><text x="65.8088%" y="1007.50"></text></g><g><title>mi_segment_ensure_committed (1 samples, 0.01%)</title><rect x="65.5588%" y="981" width="0.0120%" height="15" fill="rgb(208,108,34)" fg:x="5444" fg:w="1"/><text x="65.8088%" y="991.50"></text></g><g><title>mi_segment_commitx (1 samples, 0.01%)</title><rect x="65.5588%" y="965" width="0.0120%" height="15" fill="rgb(215,189,13)" fg:x="5444" fg:w="1"/><text x="65.8088%" y="975.50"></text></g><g><title>_mi_clock_now (1 samples, 0.01%)</title><rect x="65.5588%" y="949" width="0.0120%" height="15" fill="rgb(206,88,23)" fg:x="5444" fg:w="1"/><text x="65.8088%" y="959.50"></text></g><g><title>__clock_gettime_2 (1 samples, 0.01%)</title><rect x="65.5588%" y="933" width="0.0120%" height="15" fill="rgb(240,173,0)" fg:x="5444" fg:w="1"/><text x="65.8088%" y="943.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.01%)</title><rect x="65.5588%" y="917" width="0.0120%" height="15" fill="rgb(223,106,52)" fg:x="5444" fg:w="1"/><text x="65.8088%" y="927.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2,806 samples, 33.79%)</title><rect x="33.1045%" y="1397" width="33.7909%" height="15" fill="rgb(206,130,16)" fg:x="2749" fg:w="2806"/><text x="33.3545%" y="1407.50">&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::S..</text></g><g><title>serde_json::ser::format_escaped_str (2,805 samples, 33.78%)</title><rect x="33.1166%" y="1381" width="33.7789%" height="15" fill="rgb(220,54,25)" fg:x="2750" fg:w="2805"/><text x="33.3666%" y="1391.50">serde_json::ser::format_escaped_str</text></g><g><title>serde_json::ser::format_escaped_str_contents (2,684 samples, 32.32%)</title><rect x="34.5737%" y="1365" width="32.3218%" height="15" fill="rgb(210,4,38)" fg:x="2871" fg:w="2684"/><text x="34.8237%" y="1375.50">serde_json::ser::format_escaped_str_contents</text></g><g><title>serde_json::ser::Formatter::write_string_fragment (116 samples, 1.40%)</title><rect x="65.4986%" y="1349" width="1.3969%" height="15" fill="rgb(238,94,39)" fg:x="5439" fg:w="116"/><text x="65.7486%" y="1359.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (116 samples, 1.40%)</title><rect x="65.4986%" y="1333" width="1.3969%" height="15" fill="rgb(234,124,34)" fg:x="5439" fg:w="116"/><text x="65.7486%" y="1343.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (116 samples, 1.40%)</title><rect x="65.4986%" y="1317" width="1.3969%" height="15" fill="rgb(221,91,40)" fg:x="5439" fg:w="116"/><text x="65.7486%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (116 samples, 1.40%)</title><rect x="65.4986%" y="1301" width="1.3969%" height="15" fill="rgb(246,53,28)" fg:x="5439" fg:w="116"/><text x="65.7486%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (116 samples, 1.40%)</title><rect x="65.4986%" y="1285" width="1.3969%" height="15" fill="rgb(229,109,7)" fg:x="5439" fg:w="116"/><text x="65.7486%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (116 samples, 1.40%)</title><rect x="65.4986%" y="1269" width="1.3969%" height="15" fill="rgb(249,117,8)" fg:x="5439" fg:w="116"/><text x="65.7486%" y="1279.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (110 samples, 1.32%)</title><rect x="65.5708%" y="1253" width="1.3247%" height="15" fill="rgb(210,181,1)" fg:x="5445" fg:w="110"/><text x="65.8208%" y="1263.50"></text></g><g><title>__memcpy_avx_unaligned_erms (110 samples, 1.32%)</title><rect x="65.5708%" y="1237" width="1.3247%" height="15" fill="rgb(211,66,1)" fg:x="5445" fg:w="110"/><text x="65.8208%" y="1247.50"></text></g><g><title>_mi_segment_page_free (1 samples, 0.01%)</title><rect x="66.8955%" y="1397" width="0.0120%" height="15" fill="rgb(221,90,14)" fg:x="5555" fg:w="1"/><text x="67.1455%" y="1407.50"></text></g><g><title>mi_segment_page_clear (1 samples, 0.01%)</title><rect x="66.8955%" y="1381" width="0.0120%" height="15" fill="rgb(219,222,44)" fg:x="5555" fg:w="1"/><text x="67.1455%" y="1391.50"></text></g><g><title>mi_segment_span_free_coalesce (1 samples, 0.01%)</title><rect x="66.8955%" y="1365" width="0.0120%" height="15" fill="rgb(246,34,33)" fg:x="5555" fg:w="1"/><text x="67.1455%" y="1375.50"></text></g><g><title>alloc::string::String::from_utf8 (166 samples, 2.00%)</title><rect x="66.9316%" y="1365" width="1.9990%" height="15" fill="rgb(227,135,41)" fg:x="5558" fg:w="166"/><text x="67.1816%" y="1375.50">a..</text></g><g><title>core::str::converts::from_utf8 (166 samples, 2.00%)</title><rect x="66.9316%" y="1349" width="1.9990%" height="15" fill="rgb(226,15,14)" fg:x="5558" fg:w="166"/><text x="67.1816%" y="1359.50">c..</text></g><g><title>core::str::validations::run_utf8_validation (163 samples, 1.96%)</title><rect x="66.9677%" y="1333" width="1.9629%" height="15" fill="rgb(236,148,47)" fg:x="5561" fg:w="163"/><text x="67.2177%" y="1343.50">c..</text></g><g><title>core::str::validations::contains_nonascii (6 samples, 0.07%)</title><rect x="68.8584%" y="1317" width="0.0723%" height="15" fill="rgb(233,162,52)" fg:x="5718" fg:w="6"/><text x="69.1084%" y="1327.50"></text></g><g><title>__rg_alloc_zeroed (1 samples, 0.01%)</title><rect x="68.9427%" y="1253" width="0.0120%" height="15" fill="rgb(244,35,28)" fg:x="5725" fg:w="1"/><text x="69.1927%" y="1263.50"></text></g><g><title>&lt;mimalloc::MiMalloc as core::alloc::global::GlobalAlloc&gt;::alloc_zeroed (1 samples, 0.01%)</title><rect x="68.9427%" y="1237" width="0.0120%" height="15" fill="rgb(205,121,10)" fg:x="5725" fg:w="1"/><text x="69.1927%" y="1247.50"></text></g><g><title>mimalloc::may_use_unaligned_api (1 samples, 0.01%)</title><rect x="68.9427%" y="1221" width="0.0120%" height="15" fill="rgb(250,58,18)" fg:x="5725" fg:w="1"/><text x="69.1927%" y="1231.50"></text></g><g><title>__memset_avx2_unaligned_erms (70 samples, 0.84%)</title><rect x="68.9547%" y="1237" width="0.8430%" height="15" fill="rgb(216,37,13)" fg:x="5726" fg:w="70"/><text x="69.2047%" y="1247.50"></text></g><g><title>memset@plt (1 samples, 0.01%)</title><rect x="69.7977%" y="1237" width="0.0120%" height="15" fill="rgb(221,215,42)" fg:x="5796" fg:w="1"/><text x="70.0477%" y="1247.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.01%)</title><rect x="69.8097%" y="1157" width="0.0120%" height="15" fill="rgb(217,214,19)" fg:x="5797" fg:w="1"/><text x="70.0597%" y="1167.50"></text></g><g><title>mi_page_free_list_extend (1 samples, 0.01%)</title><rect x="69.8097%" y="1141" width="0.0120%" height="15" fill="rgb(233,139,13)" fg:x="5797" fg:w="1"/><text x="70.0597%" y="1151.50"></text></g><g><title>_mi_heap_random_next (1 samples, 0.01%)</title><rect x="69.8218%" y="1141" width="0.0120%" height="15" fill="rgb(247,168,23)" fg:x="5798" fg:w="1"/><text x="70.0718%" y="1151.50"></text></g><g><title>mi_page_init (3 samples, 0.04%)</title><rect x="69.8218%" y="1157" width="0.0361%" height="15" fill="rgb(207,202,1)" fg:x="5798" fg:w="3"/><text x="70.0718%" y="1167.50"></text></g><g><title>_mi_random_next (2 samples, 0.02%)</title><rect x="69.8338%" y="1141" width="0.0241%" height="15" fill="rgb(220,155,48)" fg:x="5799" fg:w="2"/><text x="70.0838%" y="1151.50"></text></g><g><title>chacha_next32 (2 samples, 0.02%)</title><rect x="69.8338%" y="1125" width="0.0241%" height="15" fill="rgb(250,43,26)" fg:x="5799" fg:w="2"/><text x="70.0838%" y="1135.50"></text></g><g><title>chacha_block (2 samples, 0.02%)</title><rect x="69.8338%" y="1109" width="0.0241%" height="15" fill="rgb(212,190,23)" fg:x="5799" fg:w="2"/><text x="70.0838%" y="1119.50"></text></g><g><title>qround (2 samples, 0.02%)</title><rect x="69.8338%" y="1093" width="0.0241%" height="15" fill="rgb(216,39,24)" fg:x="5799" fg:w="2"/><text x="70.0838%" y="1103.50"></text></g><g><title>rotl (1 samples, 0.01%)</title><rect x="69.8459%" y="1077" width="0.0120%" height="15" fill="rgb(252,113,16)" fg:x="5800" fg:w="1"/><text x="70.0959%" y="1087.50"></text></g><g><title>_mi_heap_malloc_zero (77 samples, 0.93%)</title><rect x="68.9547%" y="1253" width="0.9273%" height="15" fill="rgb(208,113,19)" fg:x="5726" fg:w="77"/><text x="69.2047%" y="1263.50"></text></g><g><title>mi_heap_malloc (6 samples, 0.07%)</title><rect x="69.8097%" y="1237" width="0.0723%" height="15" fill="rgb(234,107,25)" fg:x="5797" fg:w="6"/><text x="70.0597%" y="1247.50"></text></g><g><title>_mi_malloc_generic (6 samples, 0.07%)</title><rect x="69.8097%" y="1221" width="0.0723%" height="15" fill="rgb(234,217,51)" fg:x="5797" fg:w="6"/><text x="70.0597%" y="1231.50"></text></g><g><title>mi_find_page (6 samples, 0.07%)</title><rect x="69.8097%" y="1205" width="0.0723%" height="15" fill="rgb(251,29,42)" fg:x="5797" fg:w="6"/><text x="70.0597%" y="1215.50"></text></g><g><title>mi_large_huge_page_alloc (6 samples, 0.07%)</title><rect x="69.8097%" y="1189" width="0.0723%" height="15" fill="rgb(221,62,51)" fg:x="5797" fg:w="6"/><text x="70.0597%" y="1199.50"></text></g><g><title>mi_page_fresh_alloc (6 samples, 0.07%)</title><rect x="69.8097%" y="1173" width="0.0723%" height="15" fill="rgb(240,192,43)" fg:x="5797" fg:w="6"/><text x="70.0597%" y="1183.50"></text></g><g><title>mi_segments_page_alloc (2 samples, 0.02%)</title><rect x="69.8579%" y="1157" width="0.0241%" height="15" fill="rgb(224,157,47)" fg:x="5801" fg:w="2"/><text x="70.1079%" y="1167.50"></text></g><g><title>mi_segments_page_find_and_allocate (2 samples, 0.02%)</title><rect x="69.8579%" y="1141" width="0.0241%" height="15" fill="rgb(226,84,45)" fg:x="5801" fg:w="2"/><text x="70.1079%" y="1151.50"></text></g><g><title>mi_segment_span_allocate (2 samples, 0.02%)</title><rect x="69.8579%" y="1125" width="0.0241%" height="15" fill="rgb(208,207,23)" fg:x="5801" fg:w="2"/><text x="70.1079%" y="1135.50"></text></g><g><title>mi_segment_ensure_committed (2 samples, 0.02%)</title><rect x="69.8579%" y="1109" width="0.0241%" height="15" fill="rgb(253,34,51)" fg:x="5801" fg:w="2"/><text x="70.1079%" y="1119.50"></text></g><g><title>mi_segment_commitx (2 samples, 0.02%)</title><rect x="69.8579%" y="1093" width="0.0241%" height="15" fill="rgb(227,26,34)" fg:x="5801" fg:w="2"/><text x="70.1079%" y="1103.50"></text></g><g><title>_mi_clock_now (2 samples, 0.02%)</title><rect x="69.8579%" y="1077" width="0.0241%" height="15" fill="rgb(245,75,19)" fg:x="5801" fg:w="2"/><text x="70.1079%" y="1087.50"></text></g><g><title>__clock_gettime_2 (2 samples, 0.02%)</title><rect x="69.8579%" y="1061" width="0.0241%" height="15" fill="rgb(250,191,31)" fg:x="5801" fg:w="2"/><text x="70.1079%" y="1071.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.01%)</title><rect x="69.8699%" y="1045" width="0.0120%" height="15" fill="rgb(224,11,50)" fg:x="5802" fg:w="1"/><text x="70.1199%" y="1055.50"></text></g><g><title>[[vdso]] (1 samples, 0.01%)</title><rect x="69.8699%" y="1029" width="0.0120%" height="15" fill="rgb(231,171,7)" fg:x="5802" fg:w="1"/><text x="70.1199%" y="1039.50"></text></g><g><title>alloc::vec::from_elem (80 samples, 0.96%)</title><rect x="68.9306%" y="1365" width="0.9634%" height="15" fill="rgb(252,214,10)" fg:x="5724" fg:w="80"/><text x="69.1806%" y="1375.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (80 samples, 0.96%)</title><rect x="68.9306%" y="1349" width="0.9634%" height="15" fill="rgb(249,45,46)" fg:x="5724" fg:w="80"/><text x="69.1806%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (79 samples, 0.95%)</title><rect x="68.9427%" y="1333" width="0.9513%" height="15" fill="rgb(240,173,7)" fg:x="5725" fg:w="79"/><text x="69.1927%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (79 samples, 0.95%)</title><rect x="68.9427%" y="1317" width="0.9513%" height="15" fill="rgb(235,214,13)" fg:x="5725" fg:w="79"/><text x="69.1927%" y="1327.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (79 samples, 0.95%)</title><rect x="68.9427%" y="1301" width="0.9513%" height="15" fill="rgb(245,156,8)" fg:x="5725" fg:w="79"/><text x="69.1927%" y="1311.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (79 samples, 0.95%)</title><rect x="68.9427%" y="1285" width="0.9513%" height="15" fill="rgb(235,46,12)" fg:x="5725" fg:w="79"/><text x="69.1927%" y="1295.50"></text></g><g><title>alloc::alloc::alloc_zeroed (79 samples, 0.95%)</title><rect x="68.9427%" y="1269" width="0.9513%" height="15" fill="rgb(221,81,14)" fg:x="5725" fg:w="79"/><text x="69.1927%" y="1279.50"></text></g><g><title>mi_zalloc (1 samples, 0.01%)</title><rect x="69.8820%" y="1253" width="0.0120%" height="15" fill="rgb(238,207,9)" fg:x="5803" fg:w="1"/><text x="70.1320%" y="1263.50"></text></g><g><title>mi_heap_zalloc (1 samples, 0.01%)</title><rect x="69.8820%" y="1237" width="0.0120%" height="15" fill="rgb(224,129,35)" fg:x="5803" fg:w="1"/><text x="70.1320%" y="1247.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="86.6329%" y="1333" width="0.0241%" height="15" fill="rgb(243,218,34)" fg:x="7194" fg:w="2"/><text x="86.8829%" y="1343.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="86.6329%" y="1317" width="0.0241%" height="15" fill="rgb(220,166,13)" fg:x="7194" fg:w="2"/><text x="86.8829%" y="1327.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="86.6329%" y="1301" width="0.0241%" height="15" fill="rgb(227,167,49)" fg:x="7194" fg:w="2"/><text x="86.8829%" y="1311.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="86.6329%" y="1285" width="0.0241%" height="15" fill="rgb(234,142,12)" fg:x="7194" fg:w="2"/><text x="86.8829%" y="1295.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="86.6329%" y="1269" width="0.0241%" height="15" fill="rgb(207,100,48)" fg:x="7194" fg:w="2"/><text x="86.8829%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="86.6450%" y="1253" width="0.0120%" height="15" fill="rgb(210,25,14)" fg:x="7195" fg:w="1"/><text x="86.8950%" y="1263.50"></text></g><g><title>base64::encode::encode_with_padding (34 samples, 0.41%)</title><rect x="86.6570%" y="1285" width="0.4094%" height="15" fill="rgb(246,116,27)" fg:x="7196" fg:w="34"/><text x="86.9070%" y="1295.50"></text></g><g><title>base64::encode::read_u64 (125 samples, 1.51%)</title><rect x="86.6570%" y="1333" width="1.5053%" height="15" fill="rgb(214,193,42)" fg:x="7196" fg:w="125"/><text x="86.9070%" y="1343.50"></text></g><g><title>core::num::&lt;impl u64&gt;::from_be_bytes (125 samples, 1.51%)</title><rect x="86.6570%" y="1317" width="1.5053%" height="15" fill="rgb(214,122,8)" fg:x="7196" fg:w="125"/><text x="86.9070%" y="1327.50"></text></g><g><title>core::num::&lt;impl u64&gt;::from_be (125 samples, 1.51%)</title><rect x="86.6570%" y="1301" width="1.5053%" height="15" fill="rgb(244,173,18)" fg:x="7196" fg:w="125"/><text x="86.9070%" y="1311.50"></text></g><g><title>core::num::&lt;impl u64&gt;::swap_bytes (91 samples, 1.10%)</title><rect x="87.0665%" y="1285" width="1.0959%" height="15" fill="rgb(232,68,19)" fg:x="7230" fg:w="91"/><text x="87.3165%" y="1295.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_sub (1 samples, 0.01%)</title><rect x="88.1623%" y="1333" width="0.0120%" height="15" fill="rgb(236,224,1)" fg:x="7321" fg:w="1"/><text x="88.4123%" y="1343.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.02%)</title><rect x="88.1744%" y="1333" width="0.0241%" height="15" fill="rgb(240,11,8)" fg:x="7322" fg:w="2"/><text x="88.4244%" y="1343.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.02%)</title><rect x="88.1744%" y="1317" width="0.0241%" height="15" fill="rgb(244,159,20)" fg:x="7322" fg:w="2"/><text x="88.4244%" y="1327.50"></text></g><g><title>base64::encode::encode_to_slice (1,524 samples, 18.35%)</title><rect x="69.9061%" y="1349" width="18.3526%" height="15" fill="rgb(240,223,54)" fg:x="5805" fg:w="1524"/><text x="70.1561%" y="1359.50">base64::encode::encode_to_sli..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (5 samples, 0.06%)</title><rect x="88.1985%" y="1333" width="0.0602%" height="15" fill="rgb(237,146,5)" fg:x="7324" fg:w="5"/><text x="88.4485%" y="1343.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (5 samples, 0.06%)</title><rect x="88.1985%" y="1317" width="0.0602%" height="15" fill="rgb(218,221,32)" fg:x="7324" fg:w="5"/><text x="88.4485%" y="1327.50"></text></g><g><title>base64::encode::encode_with_padding (1,534 samples, 18.47%)</title><rect x="69.8940%" y="1365" width="18.4730%" height="15" fill="rgb(244,96,26)" fg:x="5804" fg:w="1534"/><text x="70.1440%" y="1375.50">base64::encode::encode_with_p..</text></g><g><title>base64::encode::encode_with_padding (9 samples, 0.11%)</title><rect x="88.2587%" y="1349" width="0.1084%" height="15" fill="rgb(245,184,37)" fg:x="7329" fg:w="9"/><text x="88.5087%" y="1359.50"></text></g><g><title>base64::encode::encoded_size (2 samples, 0.02%)</title><rect x="88.3671%" y="1365" width="0.0241%" height="15" fill="rgb(248,91,47)" fg:x="7338" fg:w="2"/><text x="88.6171%" y="1375.50"></text></g><g><title>_mi_page_free (1 samples, 0.01%)</title><rect x="88.3911%" y="1285" width="0.0120%" height="15" fill="rgb(243,199,8)" fg:x="7340" fg:w="1"/><text x="88.6411%" y="1295.50"></text></g><g><title>_mi_clock_now (1 samples, 0.01%)</title><rect x="88.4393%" y="1205" width="0.0120%" height="15" fill="rgb(249,12,15)" fg:x="7344" fg:w="1"/><text x="88.6893%" y="1215.50"></text></g><g><title>__clock_gettime_2 (1 samples, 0.01%)</title><rect x="88.4393%" y="1189" width="0.0120%" height="15" fill="rgb(245,97,12)" fg:x="7344" fg:w="1"/><text x="88.6893%" y="1199.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.01%)</title><rect x="88.4393%" y="1173" width="0.0120%" height="15" fill="rgb(244,61,1)" fg:x="7344" fg:w="1"/><text x="88.6893%" y="1183.50"></text></g><g><title>[[vdso]] (1 samples, 0.01%)</title><rect x="88.4393%" y="1157" width="0.0120%" height="15" fill="rgb(222,194,10)" fg:x="7344" fg:w="1"/><text x="88.6893%" y="1167.50"></text></g><g><title>mi_option_get (1 samples, 0.01%)</title><rect x="88.4513%" y="1205" width="0.0120%" height="15" fill="rgb(226,178,8)" fg:x="7345" fg:w="1"/><text x="88.7013%" y="1215.50"></text></g><g><title>_mi_segment_page_free (7 samples, 0.08%)</title><rect x="88.4032%" y="1285" width="0.0843%" height="15" fill="rgb(241,32,34)" fg:x="7341" fg:w="7"/><text x="88.6532%" y="1295.50"></text></g><g><title>mi_segment_page_clear (7 samples, 0.08%)</title><rect x="88.4032%" y="1269" width="0.0843%" height="15" fill="rgb(254,26,6)" fg:x="7341" fg:w="7"/><text x="88.6532%" y="1279.50"></text></g><g><title>mi_segment_span_free_coalesce (6 samples, 0.07%)</title><rect x="88.4152%" y="1253" width="0.0723%" height="15" fill="rgb(249,71,11)" fg:x="7342" fg:w="6"/><text x="88.6652%" y="1263.50"></text></g><g><title>mi_segment_span_free (5 samples, 0.06%)</title><rect x="88.4273%" y="1237" width="0.0602%" height="15" fill="rgb(232,170,27)" fg:x="7343" fg:w="5"/><text x="88.6773%" y="1247.50"></text></g><g><title>mi_segment_perhaps_decommit (4 samples, 0.05%)</title><rect x="88.4393%" y="1221" width="0.0482%" height="15" fill="rgb(214,223,17)" fg:x="7344" fg:w="4"/><text x="88.6893%" y="1231.50"></text></g><g><title>mi_segment_commit_mask (2 samples, 0.02%)</title><rect x="88.4634%" y="1205" width="0.0241%" height="15" fill="rgb(250,18,15)" fg:x="7346" fg:w="2"/><text x="88.7134%" y="1215.50"></text></g><g><title>mi_segment_commit_mask (2 samples, 0.02%)</title><rect x="88.4634%" y="1189" width="0.0241%" height="15" fill="rgb(212,153,51)" fg:x="7346" fg:w="2"/><text x="88.7134%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.12%)</title><rect x="88.3911%" y="1317" width="0.1204%" height="15" fill="rgb(219,194,12)" fg:x="7340" fg:w="10"/><text x="88.6411%" y="1327.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.12%)</title><rect x="88.3911%" y="1301" width="0.1204%" height="15" fill="rgb(212,58,17)" fg:x="7340" fg:w="10"/><text x="88.6411%" y="1311.50"></text></g><g><title>mi_free (2 samples, 0.02%)</title><rect x="88.4875%" y="1285" width="0.0241%" height="15" fill="rgb(254,5,10)" fg:x="7348" fg:w="2"/><text x="88.7375%" y="1295.50"></text></g><g><title>mi_checked_ptr_segment (1 samples, 0.01%)</title><rect x="88.4995%" y="1269" width="0.0120%" height="15" fill="rgb(246,91,7)" fg:x="7349" fg:w="1"/><text x="88.7495%" y="1279.50"></text></g><g><title>_mi_ptr_cookie (1 samples, 0.01%)</title><rect x="88.4995%" y="1253" width="0.0120%" height="15" fill="rgb(218,108,49)" fg:x="7349" fg:w="1"/><text x="88.7495%" y="1263.50"></text></g><g><title>base64::encode::encode (1,795 samples, 21.62%)</title><rect x="66.9075%" y="1397" width="21.6161%" height="15" fill="rgb(238,123,20)" fg:x="5556" fg:w="1795"/><text x="67.1575%" y="1407.50">base64::encode::encode</text></g><g><title>base64::encode::encode_config (1,794 samples, 21.60%)</title><rect x="66.9196%" y="1381" width="21.6040%" height="15" fill="rgb(231,69,23)" fg:x="5557" fg:w="1794"/><text x="67.1696%" y="1391.50">base64::encode::encode_config</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (11 samples, 0.13%)</title><rect x="88.3911%" y="1365" width="0.1325%" height="15" fill="rgb(230,209,3)" fg:x="7340" fg:w="11"/><text x="88.6411%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (11 samples, 0.13%)</title><rect x="88.3911%" y="1349" width="0.1325%" height="15" fill="rgb(231,19,0)" fg:x="7340" fg:w="11"/><text x="88.6411%" y="1359.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.13%)</title><rect x="88.3911%" y="1333" width="0.1325%" height="15" fill="rgb(226,192,25)" fg:x="7340" fg:w="11"/><text x="88.6411%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="88.5116%" y="1317" width="0.0120%" height="15" fill="rgb(223,175,53)" fg:x="7350" fg:w="1"/><text x="88.7616%" y="1327.50"></text></g><g><title>&lt;bincode::config::DefaultOptions as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="88.5236%" y="1381" width="0.0120%" height="15" fill="rgb(248,35,51)" fg:x="7351" fg:w="1"/><text x="88.7736%" y="1391.50"></text></g><g><title>_mi_os_good_alloc_size (4 samples, 0.05%)</title><rect x="88.5477%" y="1189" width="0.0482%" height="15" fill="rgb(230,37,26)" fg:x="7353" fg:w="4"/><text x="88.7977%" y="1199.50"></text></g><g><title>_mi_os_page_size (2 samples, 0.02%)</title><rect x="88.5718%" y="1173" width="0.0241%" height="15" fill="rgb(206,120,22)" fg:x="7355" fg:w="2"/><text x="88.8218%" y="1183.50"></text></g><g><title>_mi_segment_page_alloc (1 samples, 0.01%)</title><rect x="88.5959%" y="1173" width="0.0120%" height="15" fill="rgb(207,165,28)" fg:x="7357" fg:w="1"/><text x="88.8459%" y="1183.50"></text></g><g><title>mi_page_extend_free (3 samples, 0.04%)</title><rect x="88.6079%" y="1173" width="0.0361%" height="15" fill="rgb(226,23,46)" fg:x="7358" fg:w="3"/><text x="88.8579%" y="1183.50"></text></g><g><title>mi_page_free_list_extend (1 samples, 0.01%)</title><rect x="88.6320%" y="1157" width="0.0120%" height="15" fill="rgb(208,130,44)" fg:x="7360" fg:w="1"/><text x="88.8820%" y="1167.50"></text></g><g><title>_mi_page_start (1 samples, 0.01%)</title><rect x="88.6320%" y="1141" width="0.0120%" height="15" fill="rgb(231,67,8)" fg:x="7360" fg:w="1"/><text x="88.8820%" y="1151.50"></text></g><g><title>_mi_segment_page_start (1 samples, 0.01%)</title><rect x="88.6320%" y="1125" width="0.0120%" height="15" fill="rgb(205,183,22)" fg:x="7360" fg:w="1"/><text x="88.8820%" y="1135.50"></text></g><g><title>mi_page_init (3 samples, 0.04%)</title><rect x="88.6440%" y="1173" width="0.0361%" height="15" fill="rgb(224,47,9)" fg:x="7361" fg:w="3"/><text x="88.8940%" y="1183.50"></text></g><g><title>_mi_random_next (3 samples, 0.04%)</title><rect x="88.6440%" y="1157" width="0.0361%" height="15" fill="rgb(250,183,49)" fg:x="7361" fg:w="3"/><text x="88.8940%" y="1167.50"></text></g><g><title>chacha_next32 (3 samples, 0.04%)</title><rect x="88.6440%" y="1141" width="0.0361%" height="15" fill="rgb(220,151,39)" fg:x="7361" fg:w="3"/><text x="88.8940%" y="1151.50"></text></g><g><title>chacha_block (2 samples, 0.02%)</title><rect x="88.6561%" y="1125" width="0.0241%" height="15" fill="rgb(220,118,20)" fg:x="7362" fg:w="2"/><text x="88.9061%" y="1135.50"></text></g><g><title>qround (1 samples, 0.01%)</title><rect x="88.6681%" y="1109" width="0.0120%" height="15" fill="rgb(231,65,51)" fg:x="7363" fg:w="1"/><text x="88.9181%" y="1119.50"></text></g><g><title>rotl (1 samples, 0.01%)</title><rect x="88.6681%" y="1093" width="0.0120%" height="15" fill="rgb(253,125,37)" fg:x="7363" fg:w="1"/><text x="88.9181%" y="1103.50"></text></g><g><title>mi_segment_delayed_decommit (1 samples, 0.01%)</title><rect x="88.6802%" y="1157" width="0.0120%" height="15" fill="rgb(232,102,6)" fg:x="7364" fg:w="1"/><text x="88.9302%" y="1167.50"></text></g><g><title>_mi_clock_now (1 samples, 0.01%)</title><rect x="88.6802%" y="1141" width="0.0120%" height="15" fill="rgb(251,105,13)" fg:x="7364" fg:w="1"/><text x="88.9302%" y="1151.50"></text></g><g><title>__clock_gettime_2 (1 samples, 0.01%)</title><rect x="88.6802%" y="1125" width="0.0120%" height="15" fill="rgb(222,179,29)" fg:x="7364" fg:w="1"/><text x="88.9302%" y="1135.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.01%)</title><rect x="88.6802%" y="1109" width="0.0120%" height="15" fill="rgb(229,180,53)" fg:x="7364" fg:w="1"/><text x="88.9302%" y="1119.50"></text></g><g><title>[[vdso]] (1 samples, 0.01%)</title><rect x="88.6802%" y="1093" width="0.0120%" height="15" fill="rgb(238,104,13)" fg:x="7364" fg:w="1"/><text x="88.9302%" y="1103.50"></text></g><g><title>_mi_clock_now (5 samples, 0.06%)</title><rect x="88.7042%" y="1093" width="0.0602%" height="15" fill="rgb(210,130,5)" fg:x="7366" fg:w="5"/><text x="88.9542%" y="1103.50"></text></g><g><title>__clock_gettime_2 (5 samples, 0.06%)</title><rect x="88.7042%" y="1077" width="0.0602%" height="15" fill="rgb(233,87,49)" fg:x="7366" fg:w="5"/><text x="88.9542%" y="1087.50"></text></g><g><title>__vdso_clock_gettime (3 samples, 0.04%)</title><rect x="88.7283%" y="1061" width="0.0361%" height="15" fill="rgb(243,34,9)" fg:x="7368" fg:w="3"/><text x="88.9783%" y="1071.50"></text></g><g><title>mi_option_get (1 samples, 0.01%)</title><rect x="88.7645%" y="1093" width="0.0120%" height="15" fill="rgb(235,225,10)" fg:x="7371" fg:w="1"/><text x="89.0145%" y="1103.50"></text></g><g><title>mi_segment_span_allocate (8 samples, 0.10%)</title><rect x="88.7042%" y="1141" width="0.0963%" height="15" fill="rgb(212,0,30)" fg:x="7366" fg:w="8"/><text x="88.9542%" y="1151.50"></text></g><g><title>mi_segment_ensure_committed (8 samples, 0.10%)</title><rect x="88.7042%" y="1125" width="0.0963%" height="15" fill="rgb(211,177,0)" fg:x="7366" fg:w="8"/><text x="88.9542%" y="1135.50"></text></g><g><title>mi_segment_commitx (8 samples, 0.10%)</title><rect x="88.7042%" y="1109" width="0.0963%" height="15" fill="rgb(225,220,11)" fg:x="7366" fg:w="8"/><text x="88.9542%" y="1119.50"></text></g><g><title>mi_segment_commit_mask (2 samples, 0.02%)</title><rect x="88.7765%" y="1093" width="0.0241%" height="15" fill="rgb(215,10,13)" fg:x="7372" fg:w="2"/><text x="89.0265%" y="1103.50"></text></g><g><title>mi_segment_commit_mask (2 samples, 0.02%)</title><rect x="88.7765%" y="1077" width="0.0241%" height="15" fill="rgb(240,177,14)" fg:x="7372" fg:w="2"/><text x="89.0265%" y="1087.50"></text></g><g><title>mi_commit_mask_create (2 samples, 0.02%)</title><rect x="88.7765%" y="1061" width="0.0241%" height="15" fill="rgb(243,7,39)" fg:x="7372" fg:w="2"/><text x="89.0265%" y="1071.50"></text></g><g><title>mi_commit_mask_create (2 samples, 0.02%)</title><rect x="88.7765%" y="1045" width="0.0241%" height="15" fill="rgb(212,99,0)" fg:x="7372" fg:w="2"/><text x="89.0265%" y="1055.50"></text></g><g><title>mi_commit_mask_create_empty (1 samples, 0.01%)</title><rect x="88.7885%" y="1029" width="0.0120%" height="15" fill="rgb(225,162,48)" fg:x="7373" fg:w="1"/><text x="89.0385%" y="1039.50"></text></g><g><title>mi_page_fresh_alloc (20 samples, 0.24%)</title><rect x="88.5959%" y="1189" width="0.2408%" height="15" fill="rgb(246,16,25)" fg:x="7357" fg:w="20"/><text x="88.8459%" y="1199.50"></text></g><g><title>mi_segments_page_alloc (13 samples, 0.16%)</title><rect x="88.6802%" y="1173" width="0.1566%" height="15" fill="rgb(220,150,2)" fg:x="7364" fg:w="13"/><text x="88.9302%" y="1183.50"></text></g><g><title>mi_segments_page_find_and_allocate (12 samples, 0.14%)</title><rect x="88.6922%" y="1157" width="0.1445%" height="15" fill="rgb(237,113,11)" fg:x="7365" fg:w="12"/><text x="88.9422%" y="1167.50"></text></g><g><title>mi_span_queue_for (3 samples, 0.04%)</title><rect x="88.8006%" y="1141" width="0.0361%" height="15" fill="rgb(236,70,20)" fg:x="7374" fg:w="3"/><text x="89.0506%" y="1151.50"></text></g><g><title>mi_slice_bin (3 samples, 0.04%)</title><rect x="88.8006%" y="1125" width="0.0361%" height="15" fill="rgb(234,94,7)" fg:x="7374" fg:w="3"/><text x="89.0506%" y="1135.50"></text></g><g><title>mi_slice_bin8 (3 samples, 0.04%)</title><rect x="88.8006%" y="1109" width="0.0361%" height="15" fill="rgb(250,221,0)" fg:x="7374" fg:w="3"/><text x="89.0506%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (26 samples, 0.31%)</title><rect x="88.5356%" y="1349" width="0.3131%" height="15" fill="rgb(245,149,46)" fg:x="7352" fg:w="26"/><text x="88.7856%" y="1359.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (26 samples, 0.31%)</title><rect x="88.5356%" y="1333" width="0.3131%" height="15" fill="rgb(215,37,27)" fg:x="7352" fg:w="26"/><text x="88.7856%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (26 samples, 0.31%)</title><rect x="88.5356%" y="1317" width="0.3131%" height="15" fill="rgb(232,65,3)" fg:x="7352" fg:w="26"/><text x="88.7856%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (26 samples, 0.31%)</title><rect x="88.5356%" y="1301" width="0.3131%" height="15" fill="rgb(214,2,16)" fg:x="7352" fg:w="26"/><text x="88.7856%" y="1311.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (25 samples, 0.30%)</title><rect x="88.5477%" y="1285" width="0.3011%" height="15" fill="rgb(227,131,50)" fg:x="7353" fg:w="25"/><text x="88.7977%" y="1295.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (25 samples, 0.30%)</title><rect x="88.5477%" y="1269" width="0.3011%" height="15" fill="rgb(247,131,45)" fg:x="7353" fg:w="25"/><text x="88.7977%" y="1279.50"></text></g><g><title>alloc::alloc::alloc (25 samples, 0.30%)</title><rect x="88.5477%" y="1253" width="0.3011%" height="15" fill="rgb(215,97,47)" fg:x="7353" fg:w="25"/><text x="88.7977%" y="1263.50"></text></g><g><title>_mi_malloc_generic (25 samples, 0.30%)</title><rect x="88.5477%" y="1237" width="0.3011%" height="15" fill="rgb(233,143,12)" fg:x="7353" fg:w="25"/><text x="88.7977%" y="1247.50"></text></g><g><title>mi_find_page (25 samples, 0.30%)</title><rect x="88.5477%" y="1221" width="0.3011%" height="15" fill="rgb(222,57,17)" fg:x="7353" fg:w="25"/><text x="88.7977%" y="1231.50"></text></g><g><title>mi_large_huge_page_alloc (25 samples, 0.30%)</title><rect x="88.5477%" y="1205" width="0.3011%" height="15" fill="rgb(214,119,38)" fg:x="7353" fg:w="25"/><text x="88.7977%" y="1215.50"></text></g><g><title>mi_page_usable_block_size (1 samples, 0.01%)</title><rect x="88.8367%" y="1189" width="0.0120%" height="15" fill="rgb(217,28,47)" fg:x="7377" fg:w="1"/><text x="89.0867%" y="1199.50"></text></g><g><title>mi_page_block_size (1 samples, 0.01%)</title><rect x="88.8367%" y="1173" width="0.0120%" height="15" fill="rgb(231,14,52)" fg:x="7377" fg:w="1"/><text x="89.0867%" y="1183.50"></text></g><g><title>&lt;vm_library::state::_::&lt;impl serde::ser::Serialize for vm_library::state::LigoContractState&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (113 samples, 1.36%)</title><rect x="88.8487%" y="1253" width="1.3608%" height="15" fill="rgb(220,158,18)" fg:x="7378" fg:w="113"/><text x="89.0987%" y="1263.50"></text></g><g><title>serde_bytes::serialize (113 samples, 1.36%)</title><rect x="88.8487%" y="1237" width="1.3608%" height="15" fill="rgb(222,143,46)" fg:x="7378" fg:w="113"/><text x="89.0987%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as serde_bytes::ser::Serialize&gt;::serialize (113 samples, 1.36%)</title><rect x="88.8487%" y="1221" width="1.3608%" height="15" fill="rgb(227,165,5)" fg:x="7378" fg:w="113"/><text x="89.0987%" y="1231.50"></text></g><g><title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_bytes (113 samples, 1.36%)</title><rect x="88.8487%" y="1205" width="1.3608%" height="15" fill="rgb(216,222,49)" fg:x="7378" fg:w="113"/><text x="89.0987%" y="1215.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (113 samples, 1.36%)</title><rect x="88.8487%" y="1189" width="1.3608%" height="15" fill="rgb(238,73,39)" fg:x="7378" fg:w="113"/><text x="89.0987%" y="1199.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (113 samples, 1.36%)</title><rect x="88.8487%" y="1173" width="1.3608%" height="15" fill="rgb(252,115,9)" fg:x="7378" fg:w="113"/><text x="89.0987%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (113 samples, 1.36%)</title><rect x="88.8487%" y="1157" width="1.3608%" height="15" fill="rgb(238,202,4)" fg:x="7378" fg:w="113"/><text x="89.0987%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (113 samples, 1.36%)</title><rect x="88.8487%" y="1141" width="1.3608%" height="15" fill="rgb(252,153,44)" fg:x="7378" fg:w="113"/><text x="89.0987%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (113 samples, 1.36%)</title><rect x="88.8487%" y="1125" width="1.3608%" height="15" fill="rgb(235,128,27)" fg:x="7378" fg:w="113"/><text x="89.0987%" y="1135.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (113 samples, 1.36%)</title><rect x="88.8487%" y="1109" width="1.3608%" height="15" fill="rgb(221,121,47)" fg:x="7378" fg:w="113"/><text x="89.0987%" y="1119.50"></text></g><g><title>__memcpy_avx_unaligned_erms (113 samples, 1.36%)</title><rect x="88.8487%" y="1093" width="1.3608%" height="15" fill="rgb(247,211,47)" fg:x="7378" fg:w="113"/><text x="89.0987%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;rug::serdeize::Data&gt; (1 samples, 0.01%)</title><rect x="90.2095%" y="1221" width="0.0120%" height="15" fill="rgb(252,47,49)" fg:x="7491" fg:w="1"/><text x="90.4595%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.01%)</title><rect x="90.2095%" y="1205" width="0.0120%" height="15" fill="rgb(219,119,53)" fg:x="7491" fg:w="1"/><text x="90.4595%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.01%)</title><rect x="90.2095%" y="1189" width="0.0120%" height="15" fill="rgb(243,165,53)" fg:x="7491" fg:w="1"/><text x="90.4595%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.01%)</title><rect x="90.2095%" y="1173" width="0.0120%" height="15" fill="rgb(230,12,35)" fg:x="7491" fg:w="1"/><text x="90.4595%" y="1183.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="90.2095%" y="1157" width="0.0120%" height="15" fill="rgb(239,57,49)" fg:x="7491" fg:w="1"/><text x="90.4595%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="90.2095%" y="1141" width="0.0120%" height="15" fill="rgb(231,154,7)" fg:x="7491" fg:w="1"/><text x="90.4595%" y="1151.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="90.2095%" y="1125" width="0.0120%" height="15" fill="rgb(248,81,34)" fg:x="7491" fg:w="1"/><text x="90.4595%" y="1135.50"></text></g><g><title>mi_free (1 samples, 0.01%)</title><rect x="90.2095%" y="1109" width="0.0120%" height="15" fill="rgb(247,9,5)" fg:x="7491" fg:w="1"/><text x="90.4595%" y="1119.50"></text></g><g><title>rug::integer::big::Integer::to_string_radix (1 samples, 0.01%)</title><rect x="90.2216%" y="1221" width="0.0120%" height="15" fill="rgb(228,172,27)" fg:x="7492" fg:w="1"/><text x="90.4716%" y="1231.50"></text></g><g><title>rug::integer::big::append_to_string (1 samples, 0.01%)</title><rect x="90.2216%" y="1205" width="0.0120%" height="15" fill="rgb(230,57,44)" fg:x="7492" fg:w="1"/><text x="90.4716%" y="1215.50"></text></g><g><title>__gmpz_get_str (1 samples, 0.01%)</title><rect x="90.2216%" y="1189" width="0.0120%" height="15" fill="rgb(249,35,22)" fg:x="7492" fg:w="1"/><text x="90.4716%" y="1199.50"></text></g><g><title>__gmpn_get_str (1 samples, 0.01%)</title><rect x="90.2216%" y="1173" width="0.0120%" height="15" fill="rgb(250,137,27)" fg:x="7492" fg:w="1"/><text x="90.4716%" y="1183.50"></text></g><g><title>mpn_bc_get_str (1 samples, 0.01%)</title><rect x="90.2216%" y="1157" width="0.0120%" height="15" fill="rgb(251,57,31)" fg:x="7492" fg:w="1"/><text x="90.4716%" y="1167.50"></text></g><g><title>rug::integer::serde::&lt;impl serde::ser::Serialize for rug::integer::big::Integer&gt;::serialize (3 samples, 0.04%)</title><rect x="90.2095%" y="1237" width="0.0361%" height="15" fill="rgb(238,60,0)" fg:x="7491" fg:w="3"/><text x="90.4595%" y="1247.50"></text></g><g><title>rug::serdeize::serialize (1 samples, 0.01%)</title><rect x="90.2336%" y="1221" width="0.0120%" height="15" fill="rgb(242,185,39)" fg:x="7493" fg:w="1"/><text x="90.4836%" y="1231.50"></text></g><g><title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_map (1 samples, 0.01%)</title><rect x="90.2577%" y="1173" width="0.0120%" height="15" fill="rgb(240,63,43)" fg:x="7495" fg:w="1"/><text x="90.5077%" y="1183.50"></text></g><g><title>bincode::config::int::IntEncoding::serialize_len (1 samples, 0.01%)</title><rect x="90.2577%" y="1157" width="0.0120%" height="15" fill="rgb(236,155,6)" fg:x="7495" fg:w="1"/><text x="90.5077%" y="1167.50"></text></g><g><title>&lt;bincode::config::int::FixintEncoding as bincode::config::int::IntEncoding&gt;::serialize_u64 (1 samples, 0.01%)</title><rect x="90.2577%" y="1141" width="0.0120%" height="15" fill="rgb(215,11,29)" fg:x="7495" fg:w="1"/><text x="90.5077%" y="1151.50"></text></g><g><title>bincode::ser::Serializer&lt;W,O&gt;::serialize_literal_u64 (1 samples, 0.01%)</title><rect x="90.2577%" y="1125" width="0.0120%" height="15" fill="rgb(228,180,48)" fg:x="7495" fg:w="1"/><text x="90.5077%" y="1135.50"></text></g><g><title>bincode::byteorder::WriteBytesExt::write_u64 (1 samples, 0.01%)</title><rect x="90.2577%" y="1109" width="0.0120%" height="15" fill="rgb(241,102,12)" fg:x="7495" fg:w="1"/><text x="90.5077%" y="1119.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.01%)</title><rect x="90.2577%" y="1093" width="0.0120%" height="15" fill="rgb(246,213,4)" fg:x="7495" fg:w="1"/><text x="90.5077%" y="1103.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.01%)</title><rect x="90.2577%" y="1077" width="0.0120%" height="15" fill="rgb(218,134,35)" fg:x="7495" fg:w="1"/><text x="90.5077%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="90.2577%" y="1061" width="0.0120%" height="15" fill="rgb(251,117,35)" fg:x="7495" fg:w="1"/><text x="90.5077%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="90.2577%" y="1045" width="0.0120%" height="15" fill="rgb(206,156,45)" fg:x="7495" fg:w="1"/><text x="90.5077%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="90.2577%" y="1029" width="0.0120%" height="15" fill="rgb(218,52,27)" fg:x="7495" fg:w="1"/><text x="90.5077%" y="1039.50"></text></g><g><title>&lt;im_rc::ord::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="90.2697%" y="1173" width="0.0120%" height="15" fill="rgb(238,83,36)" fg:x="7496" fg:w="1"/><text x="90.5197%" y="1183.50"></text></g><g><title>&lt;im_rc::nodes::btree::Iter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="90.2697%" y="1157" width="0.0120%" height="15" fill="rgb(218,53,43)" fg:x="7496" fg:w="1"/><text x="90.5197%" y="1167.50"></text></g><g><title>im_rc::ord::map::&lt;impl im_rc::nodes::btree::BTreeValue for (K,V)&gt;::cmp_values (1 samples, 0.01%)</title><rect x="90.2697%" y="1141" width="0.0120%" height="15" fill="rgb(239,54,39)" fg:x="7496" fg:w="1"/><text x="90.5197%" y="1151.50"></text></g><g><title>&lt;vm_library::managed::value::Value as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="90.2697%" y="1125" width="0.0120%" height="15" fill="rgb(212,198,13)" fg:x="7496" fg:w="1"/><text x="90.5197%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;im_rc::ord::map::Iter&lt;vm_library::managed::value::Value,vm_library::managed::value::Value&gt;&gt; (1 samples, 0.01%)</title><rect x="90.2818%" y="1173" width="0.0120%" height="15" fill="rgb(234,54,46)" fg:x="7497" fg:w="1"/><text x="90.5318%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;im_rc::nodes::btree::Iter&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt; (1 samples, 0.01%)</title><rect x="90.2818%" y="1157" width="0.0120%" height="15" fill="rgb(217,120,7)" fg:x="7497" fg:w="1"/><text x="90.5318%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(&amp;im_rc::nodes::btree::Node&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;,usize)&gt;&gt; (1 samples, 0.01%)</title><rect x="90.2818%" y="1141" width="0.0120%" height="15" fill="rgb(246,39,15)" fg:x="7497" fg:w="1"/><text x="90.5318%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(&amp;im_rc::nodes::btree::Node&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;,usize)&gt;&gt; (1 samples, 0.01%)</title><rect x="90.2818%" y="1125" width="0.0120%" height="15" fill="rgb(242,143,31)" fg:x="7497" fg:w="1"/><text x="90.5318%" y="1135.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="90.2818%" y="1109" width="0.0120%" height="15" fill="rgb(252,60,24)" fg:x="7497" fg:w="1"/><text x="90.5318%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="90.2818%" y="1093" width="0.0120%" height="15" fill="rgb(249,220,7)" fg:x="7497" fg:w="1"/><text x="90.5318%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="90.2818%" y="1077" width="0.0120%" height="15" fill="rgb(236,67,13)" fg:x="7497" fg:w="1"/><text x="90.5318%" y="1087.50"></text></g><g><title>mi_free (1 samples, 0.01%)</title><rect x="90.2818%" y="1061" width="0.0120%" height="15" fill="rgb(210,62,39)" fg:x="7497" fg:w="1"/><text x="90.5318%" y="1071.50"></text></g><g><title>mi_check_is_double_free (1 samples, 0.01%)</title><rect x="90.2818%" y="1045" width="0.0120%" height="15" fill="rgb(219,122,53)" fg:x="7497" fg:w="1"/><text x="90.5318%" y="1055.50"></text></g><g><title>mi_block_nextx (1 samples, 0.01%)</title><rect x="90.2818%" y="1029" width="0.0120%" height="15" fill="rgb(218,87,25)" fg:x="7497" fg:w="1"/><text x="90.5318%" y="1039.50"></text></g><g><title>mi_ptr_decode (1 samples, 0.01%)</title><rect x="90.2818%" y="1013" width="0.0120%" height="15" fill="rgb(234,179,48)" fg:x="7497" fg:w="1"/><text x="90.5318%" y="1023.50"></text></g><g><title>im_rc::nodes::btree::Node&lt;A&gt;::path_first (2 samples, 0.02%)</title><rect x="90.2938%" y="1141" width="0.0241%" height="15" fill="rgb(248,90,0)" fg:x="7498" fg:w="2"/><text x="90.5438%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="90.3059%" y="1125" width="0.0120%" height="15" fill="rgb(207,228,37)" fg:x="7499" fg:w="1"/><text x="90.5559%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="90.3059%" y="1109" width="0.0120%" height="15" fill="rgb(235,214,15)" fg:x="7499" fg:w="1"/><text x="90.5559%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="90.3059%" y="1093" width="0.0120%" height="15" fill="rgb(210,144,39)" fg:x="7499" fg:w="1"/><text x="90.5559%" y="1103.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="90.3059%" y="1077" width="0.0120%" height="15" fill="rgb(222,67,41)" fg:x="7499" fg:w="1"/><text x="90.5559%" y="1087.50"></text></g><g><title>mi_malloc (1 samples, 0.01%)</title><rect x="90.3059%" y="1061" width="0.0120%" height="15" fill="rgb(205,35,37)" fg:x="7499" fg:w="1"/><text x="90.5559%" y="1071.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.01%)</title><rect x="90.3059%" y="1045" width="0.0120%" height="15" fill="rgb(216,125,40)" fg:x="7499" fg:w="1"/><text x="90.5559%" y="1055.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.01%)</title><rect x="90.3059%" y="1029" width="0.0120%" height="15" fill="rgb(228,227,20)" fg:x="7499" fg:w="1"/><text x="90.5559%" y="1039.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.01%)</title><rect x="90.3059%" y="1013" width="0.0120%" height="15" fill="rgb(242,173,45)" fg:x="7499" fg:w="1"/><text x="90.5559%" y="1023.50"></text></g><g><title>mi_block_next (1 samples, 0.01%)</title><rect x="90.3059%" y="997" width="0.0120%" height="15" fill="rgb(215,79,24)" fg:x="7499" fg:w="1"/><text x="90.5559%" y="1007.50"></text></g><g><title>mi_block_nextx (1 samples, 0.01%)</title><rect x="90.3059%" y="981" width="0.0120%" height="15" fill="rgb(238,164,38)" fg:x="7499" fg:w="1"/><text x="90.5559%" y="991.50"></text></g><g><title>mi_ptr_decode (1 samples, 0.01%)</title><rect x="90.3059%" y="965" width="0.0120%" height="15" fill="rgb(245,196,38)" fg:x="7499" fg:w="1"/><text x="90.5559%" y="975.50"></text></g><g><title>im_rc::ord::map::OrdMap&lt;K,V&gt;::iter (4 samples, 0.05%)</title><rect x="90.2938%" y="1173" width="0.0482%" height="15" fill="rgb(231,217,29)" fg:x="7498" fg:w="4"/><text x="90.5438%" y="1183.50"></text></g><g><title>im_rc::nodes::btree::Iter&lt;A&gt;::new (4 samples, 0.05%)</title><rect x="90.2938%" y="1157" width="0.0482%" height="15" fill="rgb(245,6,4)" fg:x="7498" fg:w="4"/><text x="90.5438%" y="1167.50"></text></g><g><title>im_rc::nodes::btree::Node&lt;A&gt;::path_last (2 samples, 0.02%)</title><rect x="90.3179%" y="1141" width="0.0241%" height="15" fill="rgb(214,76,49)" fg:x="7500" fg:w="2"/><text x="90.5679%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="90.3300%" y="1125" width="0.0120%" height="15" fill="rgb(205,96,12)" fg:x="7501" fg:w="1"/><text x="90.5800%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="90.3300%" y="1109" width="0.0120%" height="15" fill="rgb(243,131,4)" fg:x="7501" fg:w="1"/><text x="90.5800%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="90.3300%" y="1093" width="0.0120%" height="15" fill="rgb(214,114,4)" fg:x="7501" fg:w="1"/><text x="90.5800%" y="1103.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="90.3300%" y="1077" width="0.0120%" height="15" fill="rgb(234,215,15)" fg:x="7501" fg:w="1"/><text x="90.5800%" y="1087.50"></text></g><g><title>mi_malloc (1 samples, 0.01%)</title><rect x="90.3300%" y="1061" width="0.0120%" height="15" fill="rgb(250,216,45)" fg:x="7501" fg:w="1"/><text x="90.5800%" y="1071.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.01%)</title><rect x="90.3300%" y="1045" width="0.0120%" height="15" fill="rgb(236,128,4)" fg:x="7501" fg:w="1"/><text x="90.5800%" y="1055.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.01%)</title><rect x="90.3300%" y="1029" width="0.0120%" height="15" fill="rgb(234,50,33)" fg:x="7501" fg:w="1"/><text x="90.5800%" y="1039.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.01%)</title><rect x="90.3300%" y="1013" width="0.0120%" height="15" fill="rgb(253,131,37)" fg:x="7501" fg:w="1"/><text x="90.5800%" y="1023.50"></text></g><g><title>mi_block_next (1 samples, 0.01%)</title><rect x="90.3300%" y="997" width="0.0120%" height="15" fill="rgb(218,55,27)" fg:x="7501" fg:w="1"/><text x="90.5800%" y="1007.50"></text></g><g><title>mi_block_nextx (1 samples, 0.01%)</title><rect x="90.3300%" y="981" width="0.0120%" height="15" fill="rgb(241,220,28)" fg:x="7501" fg:w="1"/><text x="90.5800%" y="991.50"></text></g><g><title>mi_ptr_decode (1 samples, 0.01%)</title><rect x="90.3300%" y="965" width="0.0120%" height="15" fill="rgb(241,90,48)" fg:x="7501" fg:w="1"/><text x="90.5800%" y="975.50"></text></g><g><title>__gmpz_get_str (2 samples, 0.02%)</title><rect x="90.3420%" y="1093" width="0.0241%" height="15" fill="rgb(216,43,37)" fg:x="7502" fg:w="2"/><text x="90.5920%" y="1103.50"></text></g><g><title>__gmpn_get_str (2 samples, 0.02%)</title><rect x="90.3420%" y="1077" width="0.0241%" height="15" fill="rgb(207,173,9)" fg:x="7502" fg:w="2"/><text x="90.5920%" y="1087.50"></text></g><g><title>mpn_bc_get_str (2 samples, 0.02%)</title><rect x="90.3420%" y="1061" width="0.0241%" height="15" fill="rgb(240,126,30)" fg:x="7502" fg:w="2"/><text x="90.5920%" y="1071.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="90.3661%" y="997" width="0.0120%" height="15" fill="rgb(228,178,53)" fg:x="7504" fg:w="1"/><text x="90.6161%" y="1007.50"></text></g><g><title>rug::integer::big::Integer::to_string_radix (5 samples, 0.06%)</title><rect x="90.3420%" y="1125" width="0.0602%" height="15" fill="rgb(217,33,4)" fg:x="7502" fg:w="5"/><text x="90.5920%" y="1135.50"></text></g><g><title>rug::integer::big::append_to_string (5 samples, 0.06%)</title><rect x="90.3420%" y="1109" width="0.0602%" height="15" fill="rgb(206,124,34)" fg:x="7502" fg:w="5"/><text x="90.5920%" y="1119.50"></text></g><g><title>alloc::string::String::reserve (3 samples, 0.04%)</title><rect x="90.3661%" y="1093" width="0.0361%" height="15" fill="rgb(208,122,53)" fg:x="7504" fg:w="3"/><text x="90.6161%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.04%)</title><rect x="90.3661%" y="1077" width="0.0361%" height="15" fill="rgb(215,202,26)" fg:x="7504" fg:w="3"/><text x="90.6161%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.04%)</title><rect x="90.3661%" y="1061" width="0.0361%" height="15" fill="rgb(232,198,31)" fg:x="7504" fg:w="3"/><text x="90.6161%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.04%)</title><rect x="90.3661%" y="1045" width="0.0361%" height="15" fill="rgb(222,23,35)" fg:x="7504" fg:w="3"/><text x="90.6161%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.04%)</title><rect x="90.3661%" y="1029" width="0.0361%" height="15" fill="rgb(242,27,53)" fg:x="7504" fg:w="3"/><text x="90.6161%" y="1039.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.04%)</title><rect x="90.3661%" y="1013" width="0.0361%" height="15" fill="rgb(210,216,42)" fg:x="7504" fg:w="3"/><text x="90.6161%" y="1023.50"></text></g><g><title>mi_malloc (2 samples, 0.02%)</title><rect x="90.3781%" y="997" width="0.0241%" height="15" fill="rgb(234,39,38)" fg:x="7505" fg:w="2"/><text x="90.6281%" y="1007.50"></text></g><g><title>mi_heap_malloc (2 samples, 0.02%)</title><rect x="90.3781%" y="981" width="0.0241%" height="15" fill="rgb(235,126,54)" fg:x="7505" fg:w="2"/><text x="90.6281%" y="991.50"></text></g><g><title>mi_heap_malloc_small (2 samples, 0.02%)</title><rect x="90.3781%" y="965" width="0.0241%" height="15" fill="rgb(235,150,33)" fg:x="7505" fg:w="2"/><text x="90.6281%" y="975.50"></text></g><g><title>_mi_page_malloc (2 samples, 0.02%)</title><rect x="90.3781%" y="949" width="0.0241%" height="15" fill="rgb(249,49,53)" fg:x="7505" fg:w="2"/><text x="90.6281%" y="959.50"></text></g><g><title>mi_block_next (1 samples, 0.01%)</title><rect x="90.3902%" y="933" width="0.0120%" height="15" fill="rgb(238,60,50)" fg:x="7506" fg:w="1"/><text x="90.6402%" y="943.50"></text></g><g><title>mi_block_nextx (1 samples, 0.01%)</title><rect x="90.3902%" y="917" width="0.0120%" height="15" fill="rgb(210,5,2)" fg:x="7506" fg:w="1"/><text x="90.6402%" y="927.50"></text></g><g><title>mi_ptr_decode (1 samples, 0.01%)</title><rect x="90.3902%" y="901" width="0.0120%" height="15" fill="rgb(214,207,24)" fg:x="7506" fg:w="1"/><text x="90.6402%" y="911.50"></text></g><g><title>rug::integer::serde::&lt;impl serde::ser::Serialize for rug::integer::big::Integer&gt;::serialize (6 samples, 0.07%)</title><rect x="90.3420%" y="1141" width="0.0723%" height="15" fill="rgb(228,173,2)" fg:x="7502" fg:w="6"/><text x="90.5920%" y="1151.50"></text></g><g><title>rug::serdeize::serialize (1 samples, 0.01%)</title><rect x="90.4022%" y="1125" width="0.0120%" height="15" fill="rgb(244,26,8)" fg:x="7507" fg:w="1"/><text x="90.6522%" y="1135.50"></text></g><g><title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.01%)</title><rect x="90.4022%" y="1109" width="0.0120%" height="15" fill="rgb(249,153,35)" fg:x="7507" fg:w="1"/><text x="90.6522%" y="1119.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (1 samples, 0.01%)</title><rect x="90.4022%" y="1093" width="0.0120%" height="15" fill="rgb(221,215,40)" fg:x="7507" fg:w="1"/><text x="90.6522%" y="1103.50"></text></g><g><title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.01%)</title><rect x="90.4022%" y="1077" width="0.0120%" height="15" fill="rgb(238,106,35)" fg:x="7507" fg:w="1"/><text x="90.6522%" y="1087.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.01%)</title><rect x="90.4022%" y="1061" width="0.0120%" height="15" fill="rgb(207,195,21)" fg:x="7507" fg:w="1"/><text x="90.6522%" y="1071.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.01%)</title><rect x="90.4022%" y="1045" width="0.0120%" height="15" fill="rgb(205,43,29)" fg:x="7507" fg:w="1"/><text x="90.6522%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="90.4022%" y="1029" width="0.0120%" height="15" fill="rgb(236,35,21)" fg:x="7507" fg:w="1"/><text x="90.6522%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="90.4022%" y="1013" width="0.0120%" height="15" fill="rgb(244,74,8)" fg:x="7507" fg:w="1"/><text x="90.6522%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="90.4022%" y="997" width="0.0120%" height="15" fill="rgb(241,229,7)" fg:x="7507" fg:w="1"/><text x="90.6522%" y="1007.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="90.4022%" y="981" width="0.0120%" height="15" fill="rgb(212,223,25)" fg:x="7507" fg:w="1"/><text x="90.6522%" y="991.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="90.4022%" y="965" width="0.0120%" height="15" fill="rgb(234,58,53)" fg:x="7507" fg:w="1"/><text x="90.6522%" y="975.50"></text></g><g><title>im_rc::nodes::btree::Iter&lt;A&gt;::get (1 samples, 0.01%)</title><rect x="90.4263%" y="1045" width="0.0120%" height="15" fill="rgb(244,36,1)" fg:x="7509" fg:w="1"/><text x="90.6763%" y="1055.50"></text></g><g><title>&lt;sized_chunks::sized_chunk::Chunk&lt;A,N&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.01%)</title><rect x="90.4263%" y="1029" width="0.0120%" height="15" fill="rgb(222,40,54)" fg:x="7509" fg:w="1"/><text x="90.6763%" y="1039.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.01%)</title><rect x="90.4263%" y="1013" width="0.0120%" height="15" fill="rgb(210,207,39)" fg:x="7509" fg:w="1"/><text x="90.6763%" y="1023.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.01%)</title><rect x="90.4263%" y="997" width="0.0120%" height="15" fill="rgb(234,52,14)" fg:x="7509" fg:w="1"/><text x="90.6763%" y="1007.50"></text></g><g><title>&lt;im_rc::ord::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="90.4143%" y="1077" width="0.0361%" height="15" fill="rgb(239,108,46)" fg:x="7508" fg:w="3"/><text x="90.6643%" y="1087.50"></text></g><g><title>&lt;im_rc::nodes::btree::Iter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="90.4143%" y="1061" width="0.0361%" height="15" fill="rgb(252,223,5)" fg:x="7508" fg:w="3"/><text x="90.6643%" y="1071.50"></text></g><g><title>im_rc::ord::map::&lt;impl im_rc::nodes::btree::BTreeValue for (K,V)&gt;::cmp_values (1 samples, 0.01%)</title><rect x="90.4383%" y="1045" width="0.0120%" height="15" fill="rgb(227,181,11)" fg:x="7510" fg:w="1"/><text x="90.6883%" y="1055.50"></text></g><g><title>&lt;vm_library::managed::value::Value as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="90.4383%" y="1029" width="0.0120%" height="15" fill="rgb(248,126,40)" fg:x="7510" fg:w="1"/><text x="90.6883%" y="1039.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (1 samples, 0.01%)</title><rect x="90.4383%" y="1013" width="0.0120%" height="15" fill="rgb(243,1,18)" fg:x="7510" fg:w="1"/><text x="90.6883%" y="1023.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="90.4504%" y="965" width="0.0120%" height="15" fill="rgb(214,145,23)" fg:x="7511" fg:w="1"/><text x="90.7004%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;im_rc::ord::map::Iter&lt;vm_library::managed::value::Value,vm_library::managed::value::Value&gt;&gt; (2 samples, 0.02%)</title><rect x="90.4504%" y="1077" width="0.0241%" height="15" fill="rgb(241,218,11)" fg:x="7511" fg:w="2"/><text x="90.7004%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;im_rc::nodes::btree::Iter&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt; (2 samples, 0.02%)</title><rect x="90.4504%" y="1061" width="0.0241%" height="15" fill="rgb(214,219,24)" fg:x="7511" fg:w="2"/><text x="90.7004%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(&amp;im_rc::nodes::btree::Node&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;,usize)&gt;&gt; (2 samples, 0.02%)</title><rect x="90.4504%" y="1045" width="0.0241%" height="15" fill="rgb(235,32,7)" fg:x="7511" fg:w="2"/><text x="90.7004%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(&amp;im_rc::nodes::btree::Node&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;,usize)&gt;&gt; (2 samples, 0.02%)</title><rect x="90.4504%" y="1029" width="0.0241%" height="15" fill="rgb(227,121,28)" fg:x="7511" fg:w="2"/><text x="90.7004%" y="1039.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="90.4504%" y="1013" width="0.0241%" height="15" fill="rgb(216,129,49)" fg:x="7511" fg:w="2"/><text x="90.7004%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="90.4504%" y="997" width="0.0241%" height="15" fill="rgb(207,194,50)" fg:x="7511" fg:w="2"/><text x="90.7004%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="90.4504%" y="981" width="0.0241%" height="15" fill="rgb(207,4,18)" fg:x="7511" fg:w="2"/><text x="90.7004%" y="991.50"></text></g><g><title>mi_free (1 samples, 0.01%)</title><rect x="90.4624%" y="965" width="0.0120%" height="15" fill="rgb(213,50,30)" fg:x="7512" fg:w="1"/><text x="90.7124%" y="975.50"></text></g><g><title>_mi_thread_id (1 samples, 0.01%)</title><rect x="90.4624%" y="949" width="0.0120%" height="15" fill="rgb(208,77,22)" fg:x="7512" fg:w="1"/><text x="90.7124%" y="959.50"></text></g><g><title>mi_tls_slot (1 samples, 0.01%)</title><rect x="90.4624%" y="933" width="0.0120%" height="15" fill="rgb(244,204,34)" fg:x="7512" fg:w="1"/><text x="90.7124%" y="943.50"></text></g><g><title>im_rc::ord::map::OrdMap&lt;K,V&gt;::iter (1 samples, 0.01%)</title><rect x="90.4745%" y="1077" width="0.0120%" height="15" fill="rgb(230,20,17)" fg:x="7513" fg:w="1"/><text x="90.7245%" y="1087.50"></text></g><g><title>im_rc::nodes::btree::Iter&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="90.4745%" y="1061" width="0.0120%" height="15" fill="rgb(237,83,15)" fg:x="7513" fg:w="1"/><text x="90.7245%" y="1071.50"></text></g><g><title>im_rc::nodes::btree::Node&lt;A&gt;::path_first (1 samples, 0.01%)</title><rect x="90.4745%" y="1045" width="0.0120%" height="15" fill="rgb(221,109,25)" fg:x="7513" fg:w="1"/><text x="90.7245%" y="1055.50"></text></g><g><title>__gmpz_get_str (1 samples, 0.01%)</title><rect x="90.4865%" y="997" width="0.0120%" height="15" fill="rgb(205,194,52)" fg:x="7514" fg:w="1"/><text x="90.7365%" y="1007.50"></text></g><g><title>alloc::string::String::reserve (1 samples, 0.01%)</title><rect x="90.4986%" y="997" width="0.0120%" height="15" fill="rgb(244,173,54)" fg:x="7515" fg:w="1"/><text x="90.7486%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="90.4986%" y="981" width="0.0120%" height="15" fill="rgb(227,181,18)" fg:x="7515" fg:w="1"/><text x="90.7486%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="90.4986%" y="965" width="0.0120%" height="15" fill="rgb(238,36,30)" fg:x="7515" fg:w="1"/><text x="90.7486%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="90.4986%" y="949" width="0.0120%" height="15" fill="rgb(254,85,0)" fg:x="7515" fg:w="1"/><text x="90.7486%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="90.4986%" y="933" width="0.0120%" height="15" fill="rgb(247,63,33)" fg:x="7515" fg:w="1"/><text x="90.7486%" y="943.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="90.4986%" y="917" width="0.0120%" height="15" fill="rgb(220,7,54)" fg:x="7515" fg:w="1"/><text x="90.7486%" y="927.50"></text></g><g><title>rug::integer::big::Integer::to_string_radix (3 samples, 0.04%)</title><rect x="90.4865%" y="1029" width="0.0361%" height="15" fill="rgb(238,227,21)" fg:x="7514" fg:w="3"/><text x="90.7365%" y="1039.50"></text></g><g><title>rug::integer::big::append_to_string (3 samples, 0.04%)</title><rect x="90.4865%" y="1013" width="0.0361%" height="15" fill="rgb(237,29,31)" fg:x="7514" fg:w="3"/><text x="90.7365%" y="1023.50"></text></g><g><title>rug::integer::big::req_chars (1 samples, 0.01%)</title><rect x="90.5106%" y="997" width="0.0120%" height="15" fill="rgb(211,21,50)" fg:x="7516" fg:w="1"/><text x="90.7606%" y="1007.50"></text></g><g><title>__gmpz_sizeinbase (1 samples, 0.01%)</title><rect x="90.5106%" y="981" width="0.0120%" height="15" fill="rgb(239,119,2)" fg:x="7516" fg:w="1"/><text x="90.7606%" y="991.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (1 samples, 0.01%)</title><rect x="90.5347%" y="997" width="0.0120%" height="15" fill="rgb(250,2,39)" fg:x="7518" fg:w="1"/><text x="90.7847%" y="1007.50"></text></g><g><title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.01%)</title><rect x="90.5347%" y="981" width="0.0120%" height="15" fill="rgb(244,46,53)" fg:x="7518" fg:w="1"/><text x="90.7847%" y="991.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.01%)</title><rect x="90.5347%" y="965" width="0.0120%" height="15" fill="rgb(209,21,19)" fg:x="7518" fg:w="1"/><text x="90.7847%" y="975.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.01%)</title><rect x="90.5347%" y="949" width="0.0120%" height="15" fill="rgb(236,145,4)" fg:x="7518" fg:w="1"/><text x="90.7847%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="90.5347%" y="933" width="0.0120%" height="15" fill="rgb(220,133,36)" fg:x="7518" fg:w="1"/><text x="90.7847%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="90.5347%" y="917" width="0.0120%" height="15" fill="rgb(244,18,3)" fg:x="7518" fg:w="1"/><text x="90.7847%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="90.5347%" y="901" width="0.0120%" height="15" fill="rgb(232,171,48)" fg:x="7518" fg:w="1"/><text x="90.7847%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="90.5347%" y="885" width="0.0120%" height="15" fill="rgb(223,223,53)" fg:x="7518" fg:w="1"/><text x="90.7847%" y="895.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="90.5347%" y="869" width="0.0120%" height="15" fill="rgb(246,92,13)" fg:x="7518" fg:w="1"/><text x="90.7847%" y="879.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (29 samples, 0.35%)</title><rect x="90.2095%" y="1253" width="0.3492%" height="15" fill="rgb(229,171,10)" fg:x="7491" fg:w="29"/><text x="90.4595%" y="1263.50"></text></g><g><title>vm_library::managed::value::_::&lt;impl serde::ser::Serialize for vm_library::managed::value::Value&gt;::serialize (26 samples, 0.31%)</title><rect x="90.2457%" y="1237" width="0.3131%" height="15" fill="rgb(213,131,26)" fg:x="7494" fg:w="26"/><text x="90.4957%" y="1247.50"></text></g><g><title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeStructVariant&gt;::serialize_field (26 samples, 0.31%)</title><rect x="90.2457%" y="1221" width="0.3131%" height="15" fill="rgb(242,87,54)" fg:x="7494" fg:w="26"/><text x="90.4957%" y="1231.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (26 samples, 0.31%)</title><rect x="90.2457%" y="1205" width="0.3131%" height="15" fill="rgb(237,21,35)" fg:x="7494" fg:w="26"/><text x="90.4957%" y="1215.50"></text></g><g><title>im_rc::ser::&lt;impl serde::ser::Serialize for im_rc::ord::map::OrdMap&lt;K,V&gt;&gt;::serialize (26 samples, 0.31%)</title><rect x="90.2457%" y="1189" width="0.3131%" height="15" fill="rgb(253,13,47)" fg:x="7494" fg:w="26"/><text x="90.4957%" y="1199.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (18 samples, 0.22%)</title><rect x="90.3420%" y="1173" width="0.2168%" height="15" fill="rgb(215,122,49)" fg:x="7502" fg:w="18"/><text x="90.5920%" y="1183.50"></text></g><g><title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeMap&gt;::serialize_value (18 samples, 0.22%)</title><rect x="90.3420%" y="1157" width="0.2168%" height="15" fill="rgb(209,179,30)" fg:x="7502" fg:w="18"/><text x="90.5920%" y="1167.50"></text></g><g><title>vm_library::managed::value::_::&lt;impl serde::ser::Serialize for vm_library::managed::value::Value&gt;::serialize (12 samples, 0.14%)</title><rect x="90.4143%" y="1141" width="0.1445%" height="15" fill="rgb(235,100,24)" fg:x="7508" fg:w="12"/><text x="90.6643%" y="1151.50"></text></g><g><title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeStructVariant&gt;::serialize_field (12 samples, 0.14%)</title><rect x="90.4143%" y="1125" width="0.1445%" height="15" fill="rgb(209,67,24)" fg:x="7508" fg:w="12"/><text x="90.6643%" y="1135.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (12 samples, 0.14%)</title><rect x="90.4143%" y="1109" width="0.1445%" height="15" fill="rgb(206,74,32)" fg:x="7508" fg:w="12"/><text x="90.6643%" y="1119.50"></text></g><g><title>im_rc::ser::&lt;impl serde::ser::Serialize for im_rc::ord::map::OrdMap&lt;K,V&gt;&gt;::serialize (12 samples, 0.14%)</title><rect x="90.4143%" y="1093" width="0.1445%" height="15" fill="rgb(212,45,25)" fg:x="7508" fg:w="12"/><text x="90.6643%" y="1103.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.07%)</title><rect x="90.4865%" y="1077" width="0.0723%" height="15" fill="rgb(239,26,3)" fg:x="7514" fg:w="6"/><text x="90.7365%" y="1087.50"></text></g><g><title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.07%)</title><rect x="90.4865%" y="1061" width="0.0723%" height="15" fill="rgb(218,36,15)" fg:x="7514" fg:w="6"/><text x="90.7365%" y="1071.50"></text></g><g><title>rug::integer::serde::&lt;impl serde::ser::Serialize for rug::integer::big::Integer&gt;::serialize (6 samples, 0.07%)</title><rect x="90.4865%" y="1045" width="0.0723%" height="15" fill="rgb(206,108,24)" fg:x="7514" fg:w="6"/><text x="90.7365%" y="1055.50"></text></g><g><title>rug::serdeize::serialize (3 samples, 0.04%)</title><rect x="90.5226%" y="1029" width="0.0361%" height="15" fill="rgb(234,204,42)" fg:x="7517" fg:w="3"/><text x="90.7726%" y="1039.50"></text></g><g><title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.02%)</title><rect x="90.5347%" y="1013" width="0.0241%" height="15" fill="rgb(229,2,11)" fg:x="7518" fg:w="2"/><text x="90.7847%" y="1023.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for i32&gt;::serialize (1 samples, 0.01%)</title><rect x="90.5467%" y="997" width="0.0120%" height="15" fill="rgb(221,20,48)" fg:x="7519" fg:w="1"/><text x="90.7967%" y="1007.50"></text></g><g><title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_i32 (1 samples, 0.01%)</title><rect x="90.5467%" y="981" width="0.0120%" height="15" fill="rgb(244,164,10)" fg:x="7519" fg:w="1"/><text x="90.7967%" y="991.50"></text></g><g><title>&lt;bincode::config::int::FixintEncoding as bincode::config::int::IntEncoding&gt;::serialize_i32 (1 samples, 0.01%)</title><rect x="90.5467%" y="965" width="0.0120%" height="15" fill="rgb(243,229,2)" fg:x="7519" fg:w="1"/><text x="90.7967%" y="975.50"></text></g><g><title>bincode::ser::Serializer&lt;W,O&gt;::serialize_literal_u32 (1 samples, 0.01%)</title><rect x="90.5467%" y="949" width="0.0120%" height="15" fill="rgb(232,131,37)" fg:x="7519" fg:w="1"/><text x="90.7967%" y="959.50"></text></g><g><title>bincode::byteorder::WriteBytesExt::write_u32 (1 samples, 0.01%)</title><rect x="90.5467%" y="933" width="0.0120%" height="15" fill="rgb(217,156,11)" fg:x="7519" fg:w="1"/><text x="90.7967%" y="943.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.01%)</title><rect x="90.5467%" y="917" width="0.0120%" height="15" fill="rgb(239,99,48)" fg:x="7519" fg:w="1"/><text x="90.7967%" y="927.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.01%)</title><rect x="90.5467%" y="901" width="0.0120%" height="15" fill="rgb(231,209,9)" fg:x="7519" fg:w="1"/><text x="90.7967%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="90.5467%" y="885" width="0.0120%" height="15" fill="rgb(254,97,27)" fg:x="7519" fg:w="1"/><text x="90.7967%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="90.5467%" y="869" width="0.0120%" height="15" fill="rgb(223,151,38)" fg:x="7519" fg:w="1"/><text x="90.7967%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="90.5467%" y="853" width="0.0120%" height="15" fill="rgb(219,206,35)" fg:x="7519" fg:w="1"/><text x="90.7967%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="90.5467%" y="837" width="0.0120%" height="15" fill="rgb(216,130,31)" fg:x="7519" fg:w="1"/><text x="90.7967%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="90.5467%" y="821" width="0.0120%" height="15" fill="rgb(251,97,34)" fg:x="7519" fg:w="1"/><text x="90.7967%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.01%)</title><rect x="90.5467%" y="805" width="0.0120%" height="15" fill="rgb(246,159,47)" fg:x="7519" fg:w="1"/><text x="90.7967%" y="815.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (1 samples, 0.01%)</title><rect x="90.5588%" y="1253" width="0.0120%" height="15" fill="rgb(232,87,10)" fg:x="7520" fg:w="1"/><text x="90.8088%" y="1263.50"></text></g><g><title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.01%)</title><rect x="90.5588%" y="1237" width="0.0120%" height="15" fill="rgb(249,1,37)" fg:x="7520" fg:w="1"/><text x="90.8088%" y="1247.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.01%)</title><rect x="90.5588%" y="1221" width="0.0120%" height="15" fill="rgb(239,135,14)" fg:x="7520" fg:w="1"/><text x="90.8088%" y="1231.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.01%)</title><rect x="90.5588%" y="1205" width="0.0120%" height="15" fill="rgb(253,116,46)" fg:x="7520" fg:w="1"/><text x="90.8088%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="90.5588%" y="1189" width="0.0120%" height="15" fill="rgb(222,217,37)" fg:x="7520" fg:w="1"/><text x="90.8088%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="90.5588%" y="1173" width="0.0120%" height="15" fill="rgb(252,96,8)" fg:x="7520" fg:w="1"/><text x="90.8088%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="90.5588%" y="1157" width="0.0120%" height="15" fill="rgb(254,103,41)" fg:x="7520" fg:w="1"/><text x="90.8088%" y="1167.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="90.5588%" y="1141" width="0.0120%" height="15" fill="rgb(218,213,19)" fg:x="7520" fg:w="1"/><text x="90.8088%" y="1151.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="90.5588%" y="1125" width="0.0120%" height="15" fill="rgb(253,95,21)" fg:x="7520" fg:w="1"/><text x="90.8088%" y="1135.50"></text></g><g><title>bincode::config::int::IntEncoding::serialize_len (1 samples, 0.01%)</title><rect x="90.5708%" y="1045" width="0.0120%" height="15" fill="rgb(229,26,28)" fg:x="7521" fg:w="1"/><text x="90.8208%" y="1055.50"></text></g><g><title>&lt;bincode::config::int::FixintEncoding as bincode::config::int::IntEncoding&gt;::serialize_u64 (1 samples, 0.01%)</title><rect x="90.5708%" y="1029" width="0.0120%" height="15" fill="rgb(230,129,16)" fg:x="7521" fg:w="1"/><text x="90.8208%" y="1039.50"></text></g><g><title>bincode::ser::Serializer&lt;W,O&gt;::serialize_literal_u64 (1 samples, 0.01%)</title><rect x="90.5708%" y="1013" width="0.0120%" height="15" fill="rgb(236,126,17)" fg:x="7521" fg:w="1"/><text x="90.8208%" y="1023.50"></text></g><g><title>bincode::byteorder::WriteBytesExt::write_u64 (1 samples, 0.01%)</title><rect x="90.5708%" y="997" width="0.0120%" height="15" fill="rgb(209,33,33)" fg:x="7521" fg:w="1"/><text x="90.8208%" y="1007.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.01%)</title><rect x="90.5708%" y="981" width="0.0120%" height="15" fill="rgb(227,85,29)" fg:x="7521" fg:w="1"/><text x="90.8208%" y="991.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.01%)</title><rect x="90.5708%" y="965" width="0.0120%" height="15" fill="rgb(241,53,46)" fg:x="7521" fg:w="1"/><text x="90.8208%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="90.5708%" y="949" width="0.0120%" height="15" fill="rgb(228,167,53)" fg:x="7521" fg:w="1"/><text x="90.8208%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="90.5708%" y="933" width="0.0120%" height="15" fill="rgb(238,195,45)" fg:x="7521" fg:w="1"/><text x="90.8208%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="90.5708%" y="917" width="0.0120%" height="15" fill="rgb(252,124,45)" fg:x="7521" fg:w="1"/><text x="90.8208%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="90.5708%" y="901" width="0.0120%" height="15" fill="rgb(251,38,35)" fg:x="7521" fg:w="1"/><text x="90.8208%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="90.5708%" y="885" width="0.0120%" height="15" fill="rgb(227,33,2)" fg:x="7521" fg:w="1"/><text x="90.8208%" y="895.50"></text></g><g><title>bincode::internal::serialize_into (147 samples, 1.77%)</title><rect x="88.8487%" y="1349" width="1.7702%" height="15" fill="rgb(223,157,46)" fg:x="7378" fg:w="147"/><text x="89.0987%" y="1359.50">b..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (147 samples, 1.77%)</title><rect x="88.8487%" y="1333" width="1.7702%" height="15" fill="rgb(222,78,41)" fg:x="7378" fg:w="147"/><text x="89.0987%" y="1343.50">s..</text></g><g><title>vm_library::state::_::&lt;impl serde::ser::Serialize for vm_library::state::ContractType&gt;::serialize (147 samples, 1.77%)</title><rect x="88.8487%" y="1317" width="1.7702%" height="15" fill="rgb(248,176,11)" fg:x="7378" fg:w="147"/><text x="89.0987%" y="1327.50">v..</text></g><g><title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (147 samples, 1.77%)</title><rect x="88.8487%" y="1301" width="1.7702%" height="15" fill="rgb(241,221,18)" fg:x="7378" fg:w="147"/><text x="89.0987%" y="1311.50">&lt;..</text></g><g><title>vm_library::state::_::&lt;impl serde::ser::Serialize for vm_library::state::LigoContractState&gt;::serialize (147 samples, 1.77%)</title><rect x="88.8487%" y="1285" width="1.7702%" height="15" fill="rgb(218,85,22)" fg:x="7378" fg:w="147"/><text x="89.0987%" y="1295.50">v..</text></g><g><title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (147 samples, 1.77%)</title><rect x="88.8487%" y="1269" width="1.7702%" height="15" fill="rgb(222,223,7)" fg:x="7378" fg:w="147"/><text x="89.0987%" y="1279.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for core::option::Option&lt;T&gt;&gt;::serialize (4 samples, 0.05%)</title><rect x="90.5708%" y="1253" width="0.0482%" height="15" fill="rgb(254,59,39)" fg:x="7521" fg:w="4"/><text x="90.8208%" y="1263.50"></text></g><g><title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_some (4 samples, 0.05%)</title><rect x="90.5708%" y="1237" width="0.0482%" height="15" fill="rgb(247,100,27)" fg:x="7521" fg:w="4"/><text x="90.8208%" y="1247.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (4 samples, 0.05%)</title><rect x="90.5708%" y="1221" width="0.0482%" height="15" fill="rgb(237,207,10)" fg:x="7521" fg:w="4"/><text x="90.8208%" y="1231.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.05%)</title><rect x="90.5708%" y="1205" width="0.0482%" height="15" fill="rgb(220,121,28)" fg:x="7521" fg:w="4"/><text x="90.8208%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (4 samples, 0.05%)</title><rect x="90.5708%" y="1189" width="0.0482%" height="15" fill="rgb(213,223,20)" fg:x="7521" fg:w="4"/><text x="90.8208%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.05%)</title><rect x="90.5708%" y="1173" width="0.0482%" height="15" fill="rgb(205,121,27)" fg:x="7521" fg:w="4"/><text x="90.8208%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (4 samples, 0.05%)</title><rect x="90.5708%" y="1157" width="0.0482%" height="15" fill="rgb(253,24,53)" fg:x="7521" fg:w="4"/><text x="90.8208%" y="1167.50"></text></g><g><title>serde::ser::Serializer::collect_map::{{closure}} (4 samples, 0.05%)</title><rect x="90.5708%" y="1141" width="0.0482%" height="15" fill="rgb(224,224,47)" fg:x="7521" fg:w="4"/><text x="90.8208%" y="1151.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.05%)</title><rect x="90.5708%" y="1125" width="0.0482%" height="15" fill="rgb(250,125,36)" fg:x="7521" fg:w="4"/><text x="90.8208%" y="1135.50"></text></g><g><title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeMap&gt;::serialize_key (4 samples, 0.05%)</title><rect x="90.5708%" y="1109" width="0.0482%" height="15" fill="rgb(240,144,38)" fg:x="7521" fg:w="4"/><text x="90.8208%" y="1119.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.05%)</title><rect x="90.5708%" y="1093" width="0.0482%" height="15" fill="rgb(250,15,50)" fg:x="7521" fg:w="4"/><text x="90.8208%" y="1103.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (4 samples, 0.05%)</title><rect x="90.5708%" y="1077" width="0.0482%" height="15" fill="rgb(210,24,26)" fg:x="7521" fg:w="4"/><text x="90.8208%" y="1087.50"></text></g><g><title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_str (4 samples, 0.05%)</title><rect x="90.5708%" y="1061" width="0.0482%" height="15" fill="rgb(234,53,53)" fg:x="7521" fg:w="4"/><text x="90.8208%" y="1071.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (3 samples, 0.04%)</title><rect x="90.5829%" y="1045" width="0.0361%" height="15" fill="rgb(208,108,28)" fg:x="7522" fg:w="3"/><text x="90.8329%" y="1055.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (3 samples, 0.04%)</title><rect x="90.5829%" y="1029" width="0.0361%" height="15" fill="rgb(227,143,7)" fg:x="7522" fg:w="3"/><text x="90.8329%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.04%)</title><rect x="90.5829%" y="1013" width="0.0361%" height="15" fill="rgb(238,189,38)" fg:x="7522" fg:w="3"/><text x="90.8329%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.04%)</title><rect x="90.5829%" y="997" width="0.0361%" height="15" fill="rgb(222,69,15)" fg:x="7522" fg:w="3"/><text x="90.8329%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.04%)</title><rect x="90.5829%" y="981" width="0.0361%" height="15" fill="rgb(213,169,7)" fg:x="7522" fg:w="3"/><text x="90.8329%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.04%)</title><rect x="90.5829%" y="965" width="0.0361%" height="15" fill="rgb(251,219,4)" fg:x="7522" fg:w="3"/><text x="90.8329%" y="975.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.04%)</title><rect x="90.5829%" y="949" width="0.0361%" height="15" fill="rgb(241,55,40)" fg:x="7522" fg:w="3"/><text x="90.8329%" y="959.50"></text></g><g><title>rug::integer::serde::&lt;impl serde::ser::Serialize for rug::integer::big::Integer&gt;::serialize (2 samples, 0.02%)</title><rect x="90.6310%" y="1237" width="0.0241%" height="15" fill="rgb(243,57,30)" fg:x="7526" fg:w="2"/><text x="90.8810%" y="1247.50"></text></g><g><title>rug::integer::big::Integer::to_string_radix (2 samples, 0.02%)</title><rect x="90.6310%" y="1221" width="0.0241%" height="15" fill="rgb(234,50,30)" fg:x="7526" fg:w="2"/><text x="90.8810%" y="1231.50"></text></g><g><title>rug::integer::big::append_to_string (2 samples, 0.02%)</title><rect x="90.6310%" y="1205" width="0.0241%" height="15" fill="rgb(239,23,42)" fg:x="7526" fg:w="2"/><text x="90.8810%" y="1215.50"></text></g><g><title>__gmpz_get_str (2 samples, 0.02%)</title><rect x="90.6310%" y="1189" width="0.0241%" height="15" fill="rgb(217,38,19)" fg:x="7526" fg:w="2"/><text x="90.8810%" y="1199.50"></text></g><g><title>__gmpn_get_str (2 samples, 0.02%)</title><rect x="90.6310%" y="1173" width="0.0241%" height="15" fill="rgb(215,179,16)" fg:x="7526" fg:w="2"/><text x="90.8810%" y="1183.50"></text></g><g><title>mpn_bc_get_str (1 samples, 0.01%)</title><rect x="90.6431%" y="1157" width="0.0120%" height="15" fill="rgb(254,21,37)" fg:x="7527" fg:w="1"/><text x="90.8931%" y="1167.50"></text></g><g><title>&lt;im_rc::nodes::btree::Iter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="90.6792%" y="1141" width="0.0120%" height="15" fill="rgb(219,207,48)" fg:x="7530" fg:w="1"/><text x="90.9292%" y="1151.50"></text></g><g><title>im_rc::nodes::btree::Iter&lt;A&gt;::step_forward (1 samples, 0.01%)</title><rect x="90.6912%" y="1141" width="0.0120%" height="15" fill="rgb(227,225,41)" fg:x="7531" fg:w="1"/><text x="90.9412%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.01%)</title><rect x="90.6912%" y="1125" width="0.0120%" height="15" fill="rgb(223,130,1)" fg:x="7531" fg:w="1"/><text x="90.9412%" y="1135.50"></text></g><g><title>&lt;im_rc::ord::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="90.6792%" y="1173" width="0.0361%" height="15" fill="rgb(249,54,42)" fg:x="7530" fg:w="3"/><text x="90.9292%" y="1183.50"></text></g><g><title>&lt;im_rc::nodes::btree::Iter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="90.6792%" y="1157" width="0.0361%" height="15" fill="rgb(248,69,25)" fg:x="7530" fg:w="3"/><text x="90.9292%" y="1167.50"></text></g><g><title>im_rc::ord::map::&lt;impl im_rc::nodes::btree::BTreeValue for (K,V)&gt;::cmp_values (1 samples, 0.01%)</title><rect x="90.7033%" y="1141" width="0.0120%" height="15" fill="rgb(234,21,32)" fg:x="7532" fg:w="1"/><text x="90.9533%" y="1151.50"></text></g><g><title>&lt;vm_library::managed::value::Value as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="90.7033%" y="1125" width="0.0120%" height="15" fill="rgb(252,136,6)" fg:x="7532" fg:w="1"/><text x="90.9533%" y="1135.50"></text></g><g><title>im_rc::nodes::btree::Node&lt;A&gt;::path_first (1 samples, 0.01%)</title><rect x="90.7274%" y="1141" width="0.0120%" height="15" fill="rgb(245,87,12)" fg:x="7534" fg:w="1"/><text x="90.9774%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="90.7274%" y="1125" width="0.0120%" height="15" fill="rgb(208,12,15)" fg:x="7534" fg:w="1"/><text x="90.9774%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="90.7274%" y="1109" width="0.0120%" height="15" fill="rgb(250,98,2)" fg:x="7534" fg:w="1"/><text x="90.9774%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="90.7274%" y="1093" width="0.0120%" height="15" fill="rgb(205,213,15)" fg:x="7534" fg:w="1"/><text x="90.9774%" y="1103.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="90.7274%" y="1077" width="0.0120%" height="15" fill="rgb(248,192,44)" fg:x="7534" fg:w="1"/><text x="90.9774%" y="1087.50"></text></g><g><title>mi_malloc (1 samples, 0.01%)</title><rect x="90.7274%" y="1061" width="0.0120%" height="15" fill="rgb(221,89,17)" fg:x="7534" fg:w="1"/><text x="90.9774%" y="1071.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.01%)</title><rect x="90.7274%" y="1045" width="0.0120%" height="15" fill="rgb(209,55,3)" fg:x="7534" fg:w="1"/><text x="90.9774%" y="1055.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.01%)</title><rect x="90.7274%" y="1029" width="0.0120%" height="15" fill="rgb(247,23,45)" fg:x="7534" fg:w="1"/><text x="90.9774%" y="1039.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.01%)</title><rect x="90.7274%" y="1013" width="0.0120%" height="15" fill="rgb(235,152,23)" fg:x="7534" fg:w="1"/><text x="90.9774%" y="1023.50"></text></g><g><title>mi_block_next (1 samples, 0.01%)</title><rect x="90.7274%" y="997" width="0.0120%" height="15" fill="rgb(244,63,13)" fg:x="7534" fg:w="1"/><text x="90.9774%" y="1007.50"></text></g><g><title>mi_block_nextx (1 samples, 0.01%)</title><rect x="90.7274%" y="981" width="0.0120%" height="15" fill="rgb(227,30,37)" fg:x="7534" fg:w="1"/><text x="90.9774%" y="991.50"></text></g><g><title>mi_ptr_decode (1 samples, 0.01%)</title><rect x="90.7274%" y="965" width="0.0120%" height="15" fill="rgb(224,49,42)" fg:x="7534" fg:w="1"/><text x="90.9774%" y="975.50"></text></g><g><title>im_rc::ord::map::OrdMap&lt;K,V&gt;::iter (3 samples, 0.04%)</title><rect x="90.7153%" y="1173" width="0.0361%" height="15" fill="rgb(218,129,5)" fg:x="7533" fg:w="3"/><text x="90.9653%" y="1183.50"></text></g><g><title>im_rc::nodes::btree::Iter&lt;A&gt;::new (3 samples, 0.04%)</title><rect x="90.7153%" y="1157" width="0.0361%" height="15" fill="rgb(240,199,54)" fg:x="7533" fg:w="3"/><text x="90.9653%" y="1167.50"></text></g><g><title>im_rc::nodes::btree::Node&lt;A&gt;::path_last (1 samples, 0.01%)</title><rect x="90.7394%" y="1141" width="0.0120%" height="15" fill="rgb(234,31,13)" fg:x="7535" fg:w="1"/><text x="90.9894%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="90.7394%" y="1125" width="0.0120%" height="15" fill="rgb(219,73,54)" fg:x="7535" fg:w="1"/><text x="90.9894%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="90.7394%" y="1109" width="0.0120%" height="15" fill="rgb(251,162,10)" fg:x="7535" fg:w="1"/><text x="90.9894%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="90.7394%" y="1093" width="0.0120%" height="15" fill="rgb(240,138,47)" fg:x="7535" fg:w="1"/><text x="90.9894%" y="1103.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="90.7394%" y="1077" width="0.0120%" height="15" fill="rgb(216,138,26)" fg:x="7535" fg:w="1"/><text x="90.9894%" y="1087.50"></text></g><g><title>mi_malloc (1 samples, 0.01%)</title><rect x="90.7394%" y="1061" width="0.0120%" height="15" fill="rgb(243,17,35)" fg:x="7535" fg:w="1"/><text x="90.9894%" y="1071.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.01%)</title><rect x="90.7394%" y="1045" width="0.0120%" height="15" fill="rgb(241,60,18)" fg:x="7535" fg:w="1"/><text x="90.9894%" y="1055.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.01%)</title><rect x="90.7394%" y="1029" width="0.0120%" height="15" fill="rgb(234,2,44)" fg:x="7535" fg:w="1"/><text x="90.9894%" y="1039.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.01%)</title><rect x="90.7394%" y="1013" width="0.0120%" height="15" fill="rgb(225,225,33)" fg:x="7535" fg:w="1"/><text x="90.9894%" y="1023.50"></text></g><g><title>mi_block_next (1 samples, 0.01%)</title><rect x="90.7394%" y="997" width="0.0120%" height="15" fill="rgb(234,50,31)" fg:x="7535" fg:w="1"/><text x="90.9894%" y="1007.50"></text></g><g><title>mi_block_nextx (1 samples, 0.01%)</title><rect x="90.7394%" y="981" width="0.0120%" height="15" fill="rgb(249,6,25)" fg:x="7535" fg:w="1"/><text x="90.9894%" y="991.50"></text></g><g><title>mi_ptr_decode (1 samples, 0.01%)</title><rect x="90.7394%" y="965" width="0.0120%" height="15" fill="rgb(241,5,17)" fg:x="7535" fg:w="1"/><text x="90.9894%" y="975.50"></text></g><g><title>rug::integer::big::Integer::significant_bits (1 samples, 0.01%)</title><rect x="90.7514%" y="1125" width="0.0120%" height="15" fill="rgb(207,116,10)" fg:x="7536" fg:w="1"/><text x="91.0014%" y="1135.50"></text></g><g><title>rug::ext::xmpz::significant_bits (1 samples, 0.01%)</title><rect x="90.7514%" y="1109" width="0.0120%" height="15" fill="rgb(222,128,18)" fg:x="7536" fg:w="1"/><text x="91.0014%" y="1119.50"></text></g><g><title>__gmpn_sizeinbase (1 samples, 0.01%)</title><rect x="90.7514%" y="1093" width="0.0120%" height="15" fill="rgb(229,109,25)" fg:x="7536" fg:w="1"/><text x="91.0014%" y="1103.50"></text></g><g><title>rug::integer::serde::&lt;impl serde::ser::Serialize for rug::integer::big::Integer&gt;::serialize (3 samples, 0.04%)</title><rect x="90.7514%" y="1141" width="0.0361%" height="15" fill="rgb(222,102,25)" fg:x="7536" fg:w="3"/><text x="91.0014%" y="1151.50"></text></g><g><title>rug::integer::big::Integer::to_string_radix (2 samples, 0.02%)</title><rect x="90.7635%" y="1125" width="0.0241%" height="15" fill="rgb(239,211,5)" fg:x="7537" fg:w="2"/><text x="91.0135%" y="1135.50"></text></g><g><title>rug::integer::big::append_to_string (2 samples, 0.02%)</title><rect x="90.7635%" y="1109" width="0.0241%" height="15" fill="rgb(223,136,26)" fg:x="7537" fg:w="2"/><text x="91.0135%" y="1119.50"></text></g><g><title>__gmpz_get_str (2 samples, 0.02%)</title><rect x="90.7635%" y="1093" width="0.0241%" height="15" fill="rgb(227,30,15)" fg:x="7537" fg:w="2"/><text x="91.0135%" y="1103.50"></text></g><g><title>__gmpn_get_str (1 samples, 0.01%)</title><rect x="90.7755%" y="1077" width="0.0120%" height="15" fill="rgb(247,76,4)" fg:x="7538" fg:w="1"/><text x="91.0255%" y="1087.50"></text></g><g><title>mpn_bc_get_str (1 samples, 0.01%)</title><rect x="90.7755%" y="1061" width="0.0120%" height="15" fill="rgb(245,38,48)" fg:x="7538" fg:w="1"/><text x="91.0255%" y="1071.50"></text></g><g><title>&lt;im_rc::ord::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="90.7996%" y="1077" width="0.0120%" height="15" fill="rgb(210,220,14)" fg:x="7540" fg:w="1"/><text x="91.0496%" y="1087.50"></text></g><g><title>&lt;im_rc::nodes::btree::Iter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="90.7996%" y="1061" width="0.0120%" height="15" fill="rgb(224,60,51)" fg:x="7540" fg:w="1"/><text x="91.0496%" y="1071.50"></text></g><g><title>im_rc::nodes::btree::Iter&lt;A&gt;::get (1 samples, 0.01%)</title><rect x="90.7996%" y="1045" width="0.0120%" height="15" fill="rgb(212,133,49)" fg:x="7540" fg:w="1"/><text x="91.0496%" y="1055.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::last (1 samples, 0.01%)</title><rect x="90.7996%" y="1029" width="0.0120%" height="15" fill="rgb(231,39,22)" fg:x="7540" fg:w="1"/><text x="91.0496%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;im_rc::ord::map::Iter&lt;vm_library::managed::value::Value,vm_library::managed::value::Value&gt;&gt; (1 samples, 0.01%)</title><rect x="90.8117%" y="1077" width="0.0120%" height="15" fill="rgb(236,173,22)" fg:x="7541" fg:w="1"/><text x="91.0617%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;im_rc::nodes::btree::Iter&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt; (1 samples, 0.01%)</title><rect x="90.8117%" y="1061" width="0.0120%" height="15" fill="rgb(210,70,0)" fg:x="7541" fg:w="1"/><text x="91.0617%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(&amp;im_rc::nodes::btree::Node&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;,usize)&gt;&gt; (1 samples, 0.01%)</title><rect x="90.8117%" y="1045" width="0.0120%" height="15" fill="rgb(215,170,11)" fg:x="7541" fg:w="1"/><text x="91.0617%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(&amp;im_rc::nodes::btree::Node&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;,usize)&gt;&gt; (1 samples, 0.01%)</title><rect x="90.8117%" y="1029" width="0.0120%" height="15" fill="rgb(220,154,28)" fg:x="7541" fg:w="1"/><text x="91.0617%" y="1039.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="90.8117%" y="1013" width="0.0120%" height="15" fill="rgb(240,160,41)" fg:x="7541" fg:w="1"/><text x="91.0617%" y="1023.50"></text></g><g><title>im_rc::nodes::btree::Node&lt;A&gt;::path_first (1 samples, 0.01%)</title><rect x="90.8237%" y="1045" width="0.0120%" height="15" fill="rgb(243,215,41)" fg:x="7542" fg:w="1"/><text x="91.0737%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="90.8237%" y="1029" width="0.0120%" height="15" fill="rgb(214,208,31)" fg:x="7542" fg:w="1"/><text x="91.0737%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="90.8237%" y="1013" width="0.0120%" height="15" fill="rgb(247,57,22)" fg:x="7542" fg:w="1"/><text x="91.0737%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="90.8237%" y="997" width="0.0120%" height="15" fill="rgb(228,73,52)" fg:x="7542" fg:w="1"/><text x="91.0737%" y="1007.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="90.8237%" y="981" width="0.0120%" height="15" fill="rgb(252,60,9)" fg:x="7542" fg:w="1"/><text x="91.0737%" y="991.50"></text></g><g><title>mi_malloc (1 samples, 0.01%)</title><rect x="90.8237%" y="965" width="0.0120%" height="15" fill="rgb(233,9,51)" fg:x="7542" fg:w="1"/><text x="91.0737%" y="975.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.01%)</title><rect x="90.8237%" y="949" width="0.0120%" height="15" fill="rgb(223,67,14)" fg:x="7542" fg:w="1"/><text x="91.0737%" y="959.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.01%)</title><rect x="90.8237%" y="933" width="0.0120%" height="15" fill="rgb(222,86,2)" fg:x="7542" fg:w="1"/><text x="91.0737%" y="943.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.01%)</title><rect x="90.8237%" y="917" width="0.0120%" height="15" fill="rgb(243,58,54)" fg:x="7542" fg:w="1"/><text x="91.0737%" y="927.50"></text></g><g><title>mi_block_next (1 samples, 0.01%)</title><rect x="90.8237%" y="901" width="0.0120%" height="15" fill="rgb(210,200,39)" fg:x="7542" fg:w="1"/><text x="91.0737%" y="911.50"></text></g><g><title>mi_block_nextx (1 samples, 0.01%)</title><rect x="90.8237%" y="885" width="0.0120%" height="15" fill="rgb(238,135,9)" fg:x="7542" fg:w="1"/><text x="91.0737%" y="895.50"></text></g><g><title>mi_ptr_decode (1 samples, 0.01%)</title><rect x="90.8237%" y="869" width="0.0120%" height="15" fill="rgb(232,179,7)" fg:x="7542" fg:w="1"/><text x="91.0737%" y="879.50"></text></g><g><title>im_rc::ord::map::OrdMap&lt;K,V&gt;::iter (2 samples, 0.02%)</title><rect x="90.8237%" y="1077" width="0.0241%" height="15" fill="rgb(245,65,41)" fg:x="7542" fg:w="2"/><text x="91.0737%" y="1087.50"></text></g><g><title>im_rc::nodes::btree::Iter&lt;A&gt;::new (2 samples, 0.02%)</title><rect x="90.8237%" y="1061" width="0.0241%" height="15" fill="rgb(227,43,8)" fg:x="7542" fg:w="2"/><text x="91.0737%" y="1071.50"></text></g><g><title>im_rc::nodes::btree::Node&lt;A&gt;::path_last (1 samples, 0.01%)</title><rect x="90.8357%" y="1045" width="0.0120%" height="15" fill="rgb(235,91,14)" fg:x="7543" fg:w="1"/><text x="91.0857%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="90.8357%" y="1029" width="0.0120%" height="15" fill="rgb(235,219,31)" fg:x="7543" fg:w="1"/><text x="91.0857%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="90.8357%" y="1013" width="0.0120%" height="15" fill="rgb(227,121,25)" fg:x="7543" fg:w="1"/><text x="91.0857%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="90.8357%" y="997" width="0.0120%" height="15" fill="rgb(254,129,24)" fg:x="7543" fg:w="1"/><text x="91.0857%" y="1007.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="90.8357%" y="981" width="0.0120%" height="15" fill="rgb(226,144,49)" fg:x="7543" fg:w="1"/><text x="91.0857%" y="991.50"></text></g><g><title>mi_malloc (1 samples, 0.01%)</title><rect x="90.8357%" y="965" width="0.0120%" height="15" fill="rgb(214,187,32)" fg:x="7543" fg:w="1"/><text x="91.0857%" y="975.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.01%)</title><rect x="90.8357%" y="949" width="0.0120%" height="15" fill="rgb(243,129,46)" fg:x="7543" fg:w="1"/><text x="91.0857%" y="959.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.01%)</title><rect x="90.8357%" y="933" width="0.0120%" height="15" fill="rgb(221,185,35)" fg:x="7543" fg:w="1"/><text x="91.0857%" y="943.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.01%)</title><rect x="90.8357%" y="917" width="0.0120%" height="15" fill="rgb(205,0,32)" fg:x="7543" fg:w="1"/><text x="91.0857%" y="927.50"></text></g><g><title>mi_block_next (1 samples, 0.01%)</title><rect x="90.8357%" y="901" width="0.0120%" height="15" fill="rgb(229,179,12)" fg:x="7543" fg:w="1"/><text x="91.0857%" y="911.50"></text></g><g><title>mi_is_in_same_page (1 samples, 0.01%)</title><rect x="90.8357%" y="885" width="0.0120%" height="15" fill="rgb(252,107,19)" fg:x="7543" fg:w="1"/><text x="91.0857%" y="895.50"></text></g><g><title>_mi_segment_page_start (1 samples, 0.01%)</title><rect x="90.8357%" y="869" width="0.0120%" height="15" fill="rgb(220,95,27)" fg:x="7543" fg:w="1"/><text x="91.0857%" y="879.50"></text></g><g><title>_mi_segment_page_start_from_slice (1 samples, 0.01%)</title><rect x="90.8357%" y="853" width="0.0120%" height="15" fill="rgb(240,113,40)" fg:x="7543" fg:w="1"/><text x="91.0857%" y="863.50"></text></g><g><title>rug::integer::big::Integer::significant_bits (5 samples, 0.06%)</title><rect x="90.8598%" y="1029" width="0.0602%" height="15" fill="rgb(208,4,43)" fg:x="7545" fg:w="5"/><text x="91.1098%" y="1039.50"></text></g><g><title>rug::ext::xmpz::significant_bits (5 samples, 0.06%)</title><rect x="90.8598%" y="1013" width="0.0602%" height="15" fill="rgb(247,189,30)" fg:x="7545" fg:w="5"/><text x="91.1098%" y="1023.50"></text></g><g><title>__gmpn_sizeinbase (5 samples, 0.06%)</title><rect x="90.8598%" y="997" width="0.0602%" height="15" fill="rgb(231,157,17)" fg:x="7545" fg:w="5"/><text x="91.1098%" y="1007.50"></text></g><g><title>__gmpz_get_str (4 samples, 0.05%)</title><rect x="90.9321%" y="997" width="0.0482%" height="15" fill="rgb(224,139,6)" fg:x="7551" fg:w="4"/><text x="91.1821%" y="1007.50"></text></g><g><title>__gmpn_get_str (3 samples, 0.04%)</title><rect x="90.9441%" y="981" width="0.0361%" height="15" fill="rgb(223,83,16)" fg:x="7552" fg:w="3"/><text x="91.1941%" y="991.50"></text></g><g><title>mpn_bc_get_str (1 samples, 0.01%)</title><rect x="90.9682%" y="965" width="0.0120%" height="15" fill="rgb(232,211,20)" fg:x="7554" fg:w="1"/><text x="91.2182%" y="975.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="90.9803%" y="917" width="0.0241%" height="15" fill="rgb(225,203,35)" fg:x="7555" fg:w="2"/><text x="91.2303%" y="927.50"></text></g><g><title>mi_malloc (2 samples, 0.02%)</title><rect x="90.9803%" y="901" width="0.0241%" height="15" fill="rgb(215,211,44)" fg:x="7555" fg:w="2"/><text x="91.2303%" y="911.50"></text></g><g><title>mi_heap_malloc (2 samples, 0.02%)</title><rect x="90.9803%" y="885" width="0.0241%" height="15" fill="rgb(248,213,26)" fg:x="7555" fg:w="2"/><text x="91.2303%" y="895.50"></text></g><g><title>mi_heap_malloc_small (2 samples, 0.02%)</title><rect x="90.9803%" y="869" width="0.0241%" height="15" fill="rgb(214,23,52)" fg:x="7555" fg:w="2"/><text x="91.2303%" y="879.50"></text></g><g><title>_mi_page_malloc (2 samples, 0.02%)</title><rect x="90.9803%" y="853" width="0.0241%" height="15" fill="rgb(225,173,50)" fg:x="7555" fg:w="2"/><text x="91.2303%" y="863.50"></text></g><g><title>mi_block_next (1 samples, 0.01%)</title><rect x="90.9923%" y="837" width="0.0120%" height="15" fill="rgb(206,150,22)" fg:x="7556" fg:w="1"/><text x="91.2423%" y="847.50"></text></g><g><title>mi_block_nextx (1 samples, 0.01%)</title><rect x="90.9923%" y="821" width="0.0120%" height="15" fill="rgb(239,64,23)" fg:x="7556" fg:w="1"/><text x="91.2423%" y="831.50"></text></g><g><title>mi_ptr_decode (1 samples, 0.01%)</title><rect x="90.9923%" y="805" width="0.0120%" height="15" fill="rgb(242,50,38)" fg:x="7556" fg:w="1"/><text x="91.2423%" y="815.50"></text></g><g><title>alloc::string::String::reserve (4 samples, 0.05%)</title><rect x="90.9803%" y="997" width="0.0482%" height="15" fill="rgb(217,91,15)" fg:x="7555" fg:w="4"/><text x="91.2303%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.05%)</title><rect x="90.9803%" y="981" width="0.0482%" height="15" fill="rgb(230,172,6)" fg:x="7555" fg:w="4"/><text x="91.2303%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.05%)</title><rect x="90.9803%" y="965" width="0.0482%" height="15" fill="rgb(221,98,26)" fg:x="7555" fg:w="4"/><text x="91.2303%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.05%)</title><rect x="90.9803%" y="949" width="0.0482%" height="15" fill="rgb(227,210,45)" fg:x="7555" fg:w="4"/><text x="91.2303%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.05%)</title><rect x="90.9803%" y="933" width="0.0482%" height="15" fill="rgb(206,8,30)" fg:x="7555" fg:w="4"/><text x="91.2303%" y="943.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (2 samples, 0.02%)</title><rect x="91.0043%" y="917" width="0.0241%" height="15" fill="rgb(241,219,17)" fg:x="7557" fg:w="2"/><text x="91.2543%" y="927.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (2 samples, 0.02%)</title><rect x="91.0043%" y="901" width="0.0241%" height="15" fill="rgb(247,121,29)" fg:x="7557" fg:w="2"/><text x="91.2543%" y="911.50"></text></g><g><title>rug::integer::serde::&lt;impl serde::ser::Serialize for rug::integer::big::Integer&gt;::serialize (17 samples, 0.20%)</title><rect x="90.8478%" y="1045" width="0.2047%" height="15" fill="rgb(219,169,49)" fg:x="7544" fg:w="17"/><text x="91.0978%" y="1055.50"></text></g><g><title>rug::integer::big::Integer::to_string_radix (11 samples, 0.13%)</title><rect x="90.9200%" y="1029" width="0.1325%" height="15" fill="rgb(253,49,49)" fg:x="7550" fg:w="11"/><text x="91.1700%" y="1039.50"></text></g><g><title>rug::integer::big::append_to_string (11 samples, 0.13%)</title><rect x="90.9200%" y="1013" width="0.1325%" height="15" fill="rgb(217,178,3)" fg:x="7550" fg:w="11"/><text x="91.1700%" y="1023.50"></text></g><g><title>rug::integer::big::req_chars (2 samples, 0.02%)</title><rect x="91.0284%" y="997" width="0.0241%" height="15" fill="rgb(234,73,37)" fg:x="7559" fg:w="2"/><text x="91.2784%" y="1007.50"></text></g><g><title>__gmpz_sizeinbase (2 samples, 0.02%)</title><rect x="91.0284%" y="981" width="0.0241%" height="15" fill="rgb(250,98,22)" fg:x="7559" fg:w="2"/><text x="91.2784%" y="991.50"></text></g><g><title>im_rc::ser::&lt;impl serde::ser::Serialize for im_rc::ord::map::OrdMap&lt;K,V&gt;&gt;::serialize (22 samples, 0.26%)</title><rect x="90.7996%" y="1093" width="0.2649%" height="15" fill="rgb(220,108,37)" fg:x="7540" fg:w="22"/><text x="91.0496%" y="1103.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (18 samples, 0.22%)</title><rect x="90.8478%" y="1077" width="0.2168%" height="15" fill="rgb(225,168,10)" fg:x="7544" fg:w="18"/><text x="91.0978%" y="1087.50"></text></g><g><title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeMap&gt;::serialize_value (18 samples, 0.22%)</title><rect x="90.8478%" y="1061" width="0.2168%" height="15" fill="rgb(247,215,21)" fg:x="7544" fg:w="18"/><text x="91.0978%" y="1071.50"></text></g><g><title>vm_library::managed::value::_::&lt;impl serde::ser::Serialize for vm_library::managed::value::Value&gt;::serialize (1 samples, 0.01%)</title><rect x="91.0525%" y="1045" width="0.0120%" height="15" fill="rgb(253,189,31)" fg:x="7561" fg:w="1"/><text x="91.3025%" y="1055.50"></text></g><g><title>bincode::serialize (213 samples, 2.57%)</title><rect x="88.5236%" y="1397" width="2.5650%" height="15" fill="rgb(241,54,22)" fg:x="7351" fg:w="213"/><text x="88.7736%" y="1407.50">bi..</text></g><g><title>bincode::config::Options::serialize (212 samples, 2.55%)</title><rect x="88.5356%" y="1381" width="2.5530%" height="15" fill="rgb(211,87,4)" fg:x="7352" fg:w="212"/><text x="88.7856%" y="1391.50">bi..</text></g><g><title>bincode::internal::serialize (212 samples, 2.55%)</title><rect x="88.5356%" y="1365" width="2.5530%" height="15" fill="rgb(245,112,24)" fg:x="7352" fg:w="212"/><text x="88.7856%" y="1375.50">bi..</text></g><g><title>bincode::internal::serialized_size (39 samples, 0.47%)</title><rect x="90.6190%" y="1349" width="0.4697%" height="15" fill="rgb(235,190,41)" fg:x="7525" fg:w="39"/><text x="90.8690%" y="1359.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (39 samples, 0.47%)</title><rect x="90.6190%" y="1333" width="0.4697%" height="15" fill="rgb(214,89,8)" fg:x="7525" fg:w="39"/><text x="90.8690%" y="1343.50"></text></g><g><title>vm_library::state::_::&lt;impl serde::ser::Serialize for vm_library::state::ContractType&gt;::serialize (39 samples, 0.47%)</title><rect x="90.6190%" y="1317" width="0.4697%" height="15" fill="rgb(249,155,35)" fg:x="7525" fg:w="39"/><text x="90.8690%" y="1327.50"></text></g><g><title>&lt;&amp;mut bincode::ser::SizeChecker&lt;O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (38 samples, 0.46%)</title><rect x="90.6310%" y="1301" width="0.4576%" height="15" fill="rgb(249,88,26)" fg:x="7526" fg:w="38"/><text x="90.8810%" y="1311.50"></text></g><g><title>vm_library::state::_::&lt;impl serde::ser::Serialize for vm_library::state::LigoContractState&gt;::serialize (38 samples, 0.46%)</title><rect x="90.6310%" y="1285" width="0.4576%" height="15" fill="rgb(232,56,8)" fg:x="7526" fg:w="38"/><text x="90.8810%" y="1295.50"></text></g><g><title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (38 samples, 0.46%)</title><rect x="90.6310%" y="1269" width="0.4576%" height="15" fill="rgb(240,95,3)" fg:x="7526" fg:w="38"/><text x="90.8810%" y="1279.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (38 samples, 0.46%)</title><rect x="90.6310%" y="1253" width="0.4576%" height="15" fill="rgb(222,44,28)" fg:x="7526" fg:w="38"/><text x="90.8810%" y="1263.50"></text></g><g><title>vm_library::managed::value::_::&lt;impl serde::ser::Serialize for vm_library::managed::value::Value&gt;::serialize (36 samples, 0.43%)</title><rect x="90.6551%" y="1237" width="0.4335%" height="15" fill="rgb(234,16,30)" fg:x="7528" fg:w="36"/><text x="90.9051%" y="1247.50"></text></g><g><title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeStructVariant&gt;::serialize_field (35 samples, 0.42%)</title><rect x="90.6671%" y="1221" width="0.4215%" height="15" fill="rgb(223,26,17)" fg:x="7529" fg:w="35"/><text x="90.9171%" y="1231.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (35 samples, 0.42%)</title><rect x="90.6671%" y="1205" width="0.4215%" height="15" fill="rgb(239,187,47)" fg:x="7529" fg:w="35"/><text x="90.9171%" y="1215.50"></text></g><g><title>im_rc::ser::&lt;impl serde::ser::Serialize for im_rc::ord::map::OrdMap&lt;K,V&gt;&gt;::serialize (34 samples, 0.41%)</title><rect x="90.6792%" y="1189" width="0.4094%" height="15" fill="rgb(247,102,50)" fg:x="7530" fg:w="34"/><text x="90.9292%" y="1199.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (28 samples, 0.34%)</title><rect x="90.7514%" y="1173" width="0.3372%" height="15" fill="rgb(231,216,22)" fg:x="7536" fg:w="28"/><text x="91.0014%" y="1183.50"></text></g><g><title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeMap&gt;::serialize_value (28 samples, 0.34%)</title><rect x="90.7514%" y="1157" width="0.3372%" height="15" fill="rgb(216,201,26)" fg:x="7536" fg:w="28"/><text x="91.0014%" y="1167.50"></text></g><g><title>vm_library::managed::value::_::&lt;impl serde::ser::Serialize for vm_library::managed::value::Value&gt;::serialize (25 samples, 0.30%)</title><rect x="90.7876%" y="1141" width="0.3011%" height="15" fill="rgb(214,186,23)" fg:x="7539" fg:w="25"/><text x="91.0376%" y="1151.50"></text></g><g><title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeStructVariant&gt;::serialize_field (24 samples, 0.29%)</title><rect x="90.7996%" y="1125" width="0.2890%" height="15" fill="rgb(235,184,4)" fg:x="7540" fg:w="24"/><text x="91.0496%" y="1135.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (24 samples, 0.29%)</title><rect x="90.7996%" y="1109" width="0.2890%" height="15" fill="rgb(244,46,17)" fg:x="7540" fg:w="24"/><text x="91.0496%" y="1119.50"></text></g><g><title>vm_library::managed::value::_::&lt;impl serde::ser::Serialize for vm_library::managed::value::Value&gt;::serialize (2 samples, 0.02%)</title><rect x="91.0645%" y="1093" width="0.0241%" height="15" fill="rgb(248,74,46)" fg:x="7562" fg:w="2"/><text x="91.3145%" y="1103.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.01%)</title><rect x="91.0886%" y="1397" width="0.0120%" height="15" fill="rgb(243,79,5)" fg:x="7564" fg:w="1"/><text x="91.3386%" y="1407.50"></text></g><g><title>mi_free (1 samples, 0.01%)</title><rect x="91.1007%" y="1397" width="0.0120%" height="15" fill="rgb(213,148,1)" fg:x="7565" fg:w="1"/><text x="91.3507%" y="1407.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4,822 samples, 58.07%)</title><rect x="33.0684%" y="1461" width="58.0684%" height="15" fill="rgb(221,30,0)" fg:x="2746" fg:w="4822"/><text x="33.3184%" y="1471.50">serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize</text></g><g><title>vm_library::outgoing::_::&lt;impl serde::ser::Serialize for vm_library::outgoing::SetBorrowed&gt;::serialize (4,822 samples, 58.07%)</title><rect x="33.0684%" y="1445" width="58.0684%" height="15" fill="rgb(207,85,29)" fg:x="2746" fg:w="4822"/><text x="33.3184%" y="1455.50">vm_library::outgoing::_::&lt;impl serde::ser::Serialize for vm_library::outgoing::SetBorrowed&gt;::ser..</text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (4,821 samples, 58.06%)</title><rect x="33.0804%" y="1429" width="58.0564%" height="15" fill="rgb(239,31,46)" fg:x="2747" fg:w="4821"/><text x="33.3304%" y="1439.50">&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field</text></g><g><title>vm_library::outgoing::base64ser (4,819 samples, 58.03%)</title><rect x="33.1045%" y="1413" width="58.0323%" height="15" fill="rgb(219,6,1)" fg:x="2749" fg:w="4819"/><text x="33.3545%" y="1423.50">vm_library::outgoing::base64ser</text></g><g><title>vm_library::outgoing::base64ser (2 samples, 0.02%)</title><rect x="91.1127%" y="1397" width="0.0241%" height="15" fill="rgb(229,90,29)" fg:x="7566" fg:w="2"/><text x="91.3627%" y="1407.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (2 samples, 0.02%)</title><rect x="91.1368%" y="1461" width="0.0241%" height="15" fill="rgb(242,201,42)" fg:x="7568" fg:w="2"/><text x="91.3868%" y="1471.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.02%)</title><rect x="91.1368%" y="1445" width="0.0241%" height="15" fill="rgb(243,80,54)" fg:x="7568" fg:w="2"/><text x="91.3868%" y="1455.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.02%)</title><rect x="91.1368%" y="1429" width="0.0241%" height="15" fill="rgb(223,166,15)" fg:x="7568" fg:w="2"/><text x="91.3868%" y="1439.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (2 samples, 0.02%)</title><rect x="91.1368%" y="1413" width="0.0241%" height="15" fill="rgb(238,78,27)" fg:x="7568" fg:w="2"/><text x="91.3868%" y="1423.50"></text></g><g><title>serde_json::ser::Formatter::write_string_fragment (1 samples, 0.01%)</title><rect x="91.1488%" y="1397" width="0.0120%" height="15" fill="rgb(235,28,43)" fg:x="7569" fg:w="1"/><text x="91.3988%" y="1407.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.01%)</title><rect x="91.1488%" y="1381" width="0.0120%" height="15" fill="rgb(240,210,28)" fg:x="7569" fg:w="1"/><text x="91.3988%" y="1391.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.01%)</title><rect x="91.1488%" y="1365" width="0.0120%" height="15" fill="rgb(253,6,46)" fg:x="7569" fg:w="1"/><text x="91.3988%" y="1375.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="91.1488%" y="1349" width="0.0120%" height="15" fill="rgb(250,159,47)" fg:x="7569" fg:w="1"/><text x="91.3988%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="91.1488%" y="1333" width="0.0120%" height="15" fill="rgb(216,139,2)" fg:x="7569" fg:w="1"/><text x="91.3988%" y="1343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="91.1488%" y="1317" width="0.0120%" height="15" fill="rgb(221,124,44)" fg:x="7569" fg:w="1"/><text x="91.3988%" y="1327.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="91.1488%" y="1301" width="0.0120%" height="15" fill="rgb(205,37,22)" fg:x="7569" fg:w="1"/><text x="91.3988%" y="1311.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="91.1488%" y="1285" width="0.0120%" height="15" fill="rgb(250,55,8)" fg:x="7569" fg:w="1"/><text x="91.3988%" y="1295.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (2 samples, 0.02%)</title><rect x="91.1609%" y="1413" width="0.0241%" height="15" fill="rgb(215,83,48)" fg:x="7570" fg:w="2"/><text x="91.4109%" y="1423.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T]&gt;::serialize (1 samples, 0.01%)</title><rect x="91.1850%" y="1381" width="0.0120%" height="15" fill="rgb(253,2,32)" fg:x="7572" fg:w="1"/><text x="91.4350%" y="1391.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.01%)</title><rect x="91.1850%" y="1365" width="0.0120%" height="15" fill="rgb(236,67,28)" fg:x="7572" fg:w="1"/><text x="91.4350%" y="1375.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::end (1 samples, 0.01%)</title><rect x="91.1850%" y="1349" width="0.0120%" height="15" fill="rgb(252,55,15)" fg:x="7572" fg:w="1"/><text x="91.4350%" y="1359.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.02%)</title><rect x="91.1850%" y="1397" width="0.0241%" height="15" fill="rgb(243,173,17)" fg:x="7572" fg:w="2"/><text x="91.4350%" y="1407.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.01%)</title><rect x="91.1970%" y="1381" width="0.0120%" height="15" fill="rgb(215,212,13)" fg:x="7573" fg:w="1"/><text x="91.4470%" y="1391.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.01%)</title><rect x="91.1970%" y="1365" width="0.0120%" height="15" fill="rgb(253,176,6)" fg:x="7573" fg:w="1"/><text x="91.4470%" y="1375.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.01%)</title><rect x="91.1970%" y="1349" width="0.0120%" height="15" fill="rgb(236,105,26)" fg:x="7573" fg:w="1"/><text x="91.4470%" y="1359.50"></text></g><g><title>serde_json::ser::Formatter::begin_string (1 samples, 0.01%)</title><rect x="91.1970%" y="1333" width="0.0120%" height="15" fill="rgb(239,226,32)" fg:x="7573" fg:w="1"/><text x="91.4470%" y="1343.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.01%)</title><rect x="91.1970%" y="1317" width="0.0120%" height="15" fill="rgb(236,104,51)" fg:x="7573" fg:w="1"/><text x="91.4470%" y="1327.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.01%)</title><rect x="91.1970%" y="1301" width="0.0120%" height="15" fill="rgb(220,172,33)" fg:x="7573" fg:w="1"/><text x="91.4470%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="91.1970%" y="1285" width="0.0120%" height="15" fill="rgb(224,182,25)" fg:x="7573" fg:w="1"/><text x="91.4470%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="91.1970%" y="1269" width="0.0120%" height="15" fill="rgb(236,184,24)" fg:x="7573" fg:w="1"/><text x="91.4470%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="91.1970%" y="1253" width="0.0120%" height="15" fill="rgb(241,221,14)" fg:x="7573" fg:w="1"/><text x="91.4470%" y="1263.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.01%)</title><rect x="91.1970%" y="1237" width="0.0120%" height="15" fill="rgb(227,146,5)" fg:x="7573" fg:w="1"/><text x="91.4470%" y="1247.50"></text></g><g><title>vm_library::pipe::IO::write_with_fail (4,872 samples, 58.67%)</title><rect x="32.5506%" y="1573" width="58.6705%" height="15" fill="rgb(214,15,23)" fg:x="2703" fg:w="4872"/><text x="32.8006%" y="1583.50">vm_library::pipe::IO::write_with_fail</text></g><g><title>serde_json::ser::to_string (4,836 samples, 58.24%)</title><rect x="32.9841%" y="1557" width="58.2370%" height="15" fill="rgb(233,157,31)" fg:x="2739" fg:w="4836"/><text x="33.2341%" y="1567.50">serde_json::ser::to_string</text></g><g><title>serde_json::ser::to_vec (4,836 samples, 58.24%)</title><rect x="32.9841%" y="1541" width="58.2370%" height="15" fill="rgb(211,27,52)" fg:x="2739" fg:w="4836"/><text x="33.2341%" y="1551.50">serde_json::ser::to_vec</text></g><g><title>serde_json::ser::to_writer (4,831 samples, 58.18%)</title><rect x="33.0443%" y="1525" width="58.1768%" height="15" fill="rgb(212,223,15)" fg:x="2744" fg:w="4831"/><text x="33.2943%" y="1535.50">serde_json::ser::to_writer</text></g><g><title>&lt;vm_library::vm_server::ServerMessage as serde::ser::Serialize&gt;::serialize (4,831 samples, 58.18%)</title><rect x="33.0443%" y="1509" width="58.1768%" height="15" fill="rgb(254,211,0)" fg:x="2744" fg:w="4831"/><text x="33.2943%" y="1519.50">&lt;vm_library::vm_server::ServerMessage as serde::ser::Serialize&gt;::serialize</text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeTuple&gt;::serialize_element (4,829 samples, 58.15%)</title><rect x="33.0684%" y="1493" width="58.1527%" height="15" fill="rgb(205,43,38)" fg:x="2746" fg:w="4829"/><text x="33.3184%" y="1503.50">&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeTuple&gt;::serialize_element</text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (4,829 samples, 58.15%)</title><rect x="33.0684%" y="1477" width="58.1527%" height="15" fill="rgb(242,206,46)" fg:x="2746" fg:w="4829"/><text x="33.3184%" y="1487.50">&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element</text></g><g><title>vm_library::vm_server::_::&lt;impl serde::ser::Serialize for vm_library::vm_server::TicketDeposit&gt;::serialize (5 samples, 0.06%)</title><rect x="91.1609%" y="1461" width="0.0602%" height="15" fill="rgb(220,221,12)" fg:x="7570" fg:w="5"/><text x="91.4109%" y="1471.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.06%)</title><rect x="91.1609%" y="1445" width="0.0602%" height="15" fill="rgb(217,156,35)" fg:x="7570" fg:w="5"/><text x="91.4109%" y="1455.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.06%)</title><rect x="91.1609%" y="1429" width="0.0602%" height="15" fill="rgb(207,181,49)" fg:x="7570" fg:w="5"/><text x="91.4109%" y="1439.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.04%)</title><rect x="91.1850%" y="1413" width="0.0361%" height="15" fill="rgb(235,103,47)" fg:x="7572" fg:w="3"/><text x="91.4350%" y="1423.50"></text></g><g><title>serde_json::ser::Formatter::begin_object_value (1 samples, 0.01%)</title><rect x="91.2091%" y="1397" width="0.0120%" height="15" fill="rgb(222,63,28)" fg:x="7574" fg:w="1"/><text x="91.4591%" y="1407.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.01%)</title><rect x="91.2091%" y="1381" width="0.0120%" height="15" fill="rgb(244,137,21)" fg:x="7574" fg:w="1"/><text x="91.4591%" y="1391.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.01%)</title><rect x="91.2091%" y="1365" width="0.0120%" height="15" fill="rgb(228,35,27)" fg:x="7574" fg:w="1"/><text x="91.4591%" y="1375.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="91.2091%" y="1349" width="0.0120%" height="15" fill="rgb(226,191,41)" fg:x="7574" fg:w="1"/><text x="91.4591%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="91.2091%" y="1333" width="0.0120%" height="15" fill="rgb(210,154,3)" fg:x="7574" fg:w="1"/><text x="91.4591%" y="1343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="91.2091%" y="1317" width="0.0120%" height="15" fill="rgb(216,60,49)" fg:x="7574" fg:w="1"/><text x="91.4591%" y="1327.50"></text></g><g><title>vm_library::state::ContractType::set_storage (2 samples, 0.02%)</title><rect x="91.2211%" y="1573" width="0.0241%" height="15" fill="rgb(226,17,20)" fg:x="7575" fg:w="2"/><text x="91.4711%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;vm_library::managed::value::Value&gt;&gt; (2 samples, 0.02%)</title><rect x="91.2211%" y="1557" width="0.0241%" height="15" fill="rgb(206,115,35)" fg:x="7575" fg:w="2"/><text x="91.4711%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;vm_library::managed::value::Value&gt; (2 samples, 0.02%)</title><rect x="91.2211%" y="1541" width="0.0241%" height="15" fill="rgb(227,88,1)" fg:x="7575" fg:w="2"/><text x="91.4711%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;vm_library::managed::value::Value&gt;&gt; (1 samples, 0.01%)</title><rect x="91.2331%" y="1525" width="0.0120%" height="15" fill="rgb(230,222,24)" fg:x="7576" fg:w="1"/><text x="91.4831%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;vm_library::managed::value::Value&gt; (1 samples, 0.01%)</title><rect x="91.2331%" y="1509" width="0.0120%" height="15" fill="rgb(214,124,32)" fg:x="7576" fg:w="1"/><text x="91.4831%" y="1519.50"></text></g><g><title>vm_library::state::ContractType::storage (1 samples, 0.01%)</title><rect x="91.2452%" y="1573" width="0.0120%" height="15" fill="rgb(240,41,36)" fg:x="7577" fg:w="1"/><text x="91.4952%" y="1583.50"></text></g><g><title>vm_library::run_loop::handle_invoke (6,213 samples, 74.82%)</title><rect x="16.4499%" y="1589" width="74.8194%" height="15" fill="rgb(221,17,52)" fg:x="1366" fg:w="6213"/><text x="16.6999%" y="1599.50">vm_library::run_loop::handle_invoke</text></g><g><title>vm_library::state::State::get (1 samples, 0.01%)</title><rect x="91.2572%" y="1573" width="0.0120%" height="15" fill="rgb(252,70,16)" fg:x="7578" fg:w="1"/><text x="91.5072%" y="1583.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (1 samples, 0.01%)</title><rect x="91.2572%" y="1557" width="0.0120%" height="15" fill="rgb(250,177,4)" fg:x="7578" fg:w="1"/><text x="91.5072%" y="1567.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (1 samples, 0.01%)</title><rect x="91.2572%" y="1541" width="0.0120%" height="15" fill="rgb(240,188,47)" fg:x="7578" fg:w="1"/><text x="91.5072%" y="1551.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (1 samples, 0.01%)</title><rect x="91.2572%" y="1525" width="0.0120%" height="15" fill="rgb(215,92,12)" fg:x="7578" fg:w="1"/><text x="91.5072%" y="1535.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1 samples, 0.01%)</title><rect x="91.2572%" y="1509" width="0.0120%" height="15" fill="rgb(242,110,29)" fg:x="7578" fg:w="1"/><text x="91.5072%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="91.2572%" y="1493" width="0.0120%" height="15" fill="rgb(208,211,26)" fg:x="7578" fg:w="1"/><text x="91.5072%" y="1503.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.01%)</title><rect x="91.2572%" y="1477" width="0.0120%" height="15" fill="rgb(244,147,6)" fg:x="7578" fg:w="1"/><text x="91.5072%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.01%)</title><rect x="91.2572%" y="1461" width="0.0120%" height="15" fill="rgb(211,130,42)" fg:x="7578" fg:w="1"/><text x="91.5072%" y="1471.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.01%)</title><rect x="91.2572%" y="1445" width="0.0120%" height="15" fill="rgb(220,63,1)" fg:x="7578" fg:w="1"/><text x="91.5072%" y="1455.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="91.2572%" y="1429" width="0.0120%" height="15" fill="rgb(241,212,30)" fg:x="7578" fg:w="1"/><text x="91.5072%" y="1439.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.01%)</title><rect x="91.2572%" y="1413" width="0.0120%" height="15" fill="rgb(233,153,17)" fg:x="7578" fg:w="1"/><text x="91.5072%" y="1423.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="91.2572%" y="1397" width="0.0120%" height="15" fill="rgb(236,3,10)" fg:x="7578" fg:w="1"/><text x="91.5072%" y="1407.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="91.2572%" y="1381" width="0.0120%" height="15" fill="rgb(232,41,21)" fg:x="7578" fg:w="1"/><text x="91.5072%" y="1391.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="91.2572%" y="1365" width="0.0120%" height="15" fill="rgb(206,63,51)" fg:x="7578" fg:w="1"/><text x="91.5072%" y="1375.50"></text></g><g><title>vm_library::compile::compile_managed_module (1 samples, 0.01%)</title><rect x="91.2693%" y="1573" width="0.0120%" height="15" fill="rgb(250,214,3)" fg:x="7579" fg:w="1"/><text x="91.5193%" y="1583.50"></text></g><g><title>wasmer::sys::module::Module::new (1 samples, 0.01%)</title><rect x="91.2693%" y="1557" width="0.0120%" height="15" fill="rgb(254,89,27)" fg:x="7579" fg:w="1"/><text x="91.5193%" y="1567.50"></text></g><g><title>wasmer::sys::module::Module::from_binary (1 samples, 0.01%)</title><rect x="91.2693%" y="1541" width="0.0120%" height="15" fill="rgb(249,41,14)" fg:x="7579" fg:w="1"/><text x="91.5193%" y="1551.50"></text></g><g><title>wasmer::sys::module::Module::from_binary_unchecked (1 samples, 0.01%)</title><rect x="91.2693%" y="1525" width="0.0120%" height="15" fill="rgb(221,196,51)" fg:x="7579" fg:w="1"/><text x="91.5193%" y="1535.50"></text></g><g><title>wasmer::sys::module::Module::compile (1 samples, 0.01%)</title><rect x="91.2693%" y="1509" width="0.0120%" height="15" fill="rgb(214,116,26)" fg:x="7579" fg:w="1"/><text x="91.5193%" y="1519.50"></text></g><g><title>&lt;wasmer_engine_universal::engine::UniversalEngine as wasmer_engine::engine::Engine&gt;::compile (1 samples, 0.01%)</title><rect x="91.2693%" y="1493" width="0.0120%" height="15" fill="rgb(236,67,7)" fg:x="7579" fg:w="1"/><text x="91.5193%" y="1503.50"></text></g><g><title>wasmer_engine_universal::artifact::UniversalArtifact::new (1 samples, 0.01%)</title><rect x="91.2693%" y="1477" width="0.0120%" height="15" fill="rgb(253,179,32)" fg:x="7579" fg:w="1"/><text x="91.5193%" y="1487.50"></text></g><g><title>wasmer_engine_universal::artifact::UniversalArtifact::from_parts (1 samples, 0.01%)</title><rect x="91.2693%" y="1461" width="0.0120%" height="15" fill="rgb(218,33,15)" fg:x="7579" fg:w="1"/><text x="91.5193%" y="1471.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="91.2693%" y="1445" width="0.0120%" height="15" fill="rgb(217,202,41)" fg:x="7579" fg:w="1"/><text x="91.5193%" y="1455.50"></text></g><g><title>&lt;wasmer_types::entity::primary_map::PrimaryMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;V&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="91.2693%" y="1429" width="0.0120%" height="15" fill="rgb(234,133,5)" fg:x="7579" fg:w="1"/><text x="91.5193%" y="1439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="91.2693%" y="1413" width="0.0120%" height="15" fill="rgb(240,47,40)" fg:x="7579" fg:w="1"/><text x="91.5193%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="91.2693%" y="1397" width="0.0120%" height="15" fill="rgb(234,166,26)" fg:x="7579" fg:w="1"/><text x="91.5193%" y="1407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="91.2693%" y="1381" width="0.0120%" height="15" fill="rgb(244,125,51)" fg:x="7579" fg:w="1"/><text x="91.5193%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="91.2693%" y="1365" width="0.0120%" height="15" fill="rgb(229,171,11)" fg:x="7579" fg:w="1"/><text x="91.5193%" y="1375.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.01%)</title><rect x="91.2693%" y="1349" width="0.0120%" height="15" fill="rgb(224,38,45)" fg:x="7579" fg:w="1"/><text x="91.5193%" y="1359.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="91.2693%" y="1333" width="0.0120%" height="15" fill="rgb(237,27,7)" fg:x="7579" fg:w="1"/><text x="91.5193%" y="1343.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="91.2693%" y="1317" width="0.0120%" height="15" fill="rgb(216,52,7)" fg:x="7579" fg:w="1"/><text x="91.5193%" y="1327.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.01%)</title><rect x="91.2693%" y="1301" width="0.0120%" height="15" fill="rgb(243,11,11)" fg:x="7579" fg:w="1"/><text x="91.5193%" y="1311.50"></text></g><g><title>wasmer_engine_universal::artifact::UniversalArtifact::from_parts::{{closure}} (1 samples, 0.01%)</title><rect x="91.2693%" y="1285" width="0.0120%" height="15" fill="rgb(253,167,20)" fg:x="7579" fg:w="1"/><text x="91.5193%" y="1295.50"></text></g><g><title>wasmer_vm::sig_registry::SignatureRegistry::register (1 samples, 0.01%)</title><rect x="91.2693%" y="1269" width="0.0120%" height="15" fill="rgb(215,207,5)" fg:x="7579" fg:w="1"/><text x="91.5193%" y="1279.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.01%)</title><rect x="91.2693%" y="1253" width="0.0120%" height="15" fill="rgb(252,127,31)" fg:x="7579" fg:w="1"/><text x="91.5193%" y="1263.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="91.2693%" y="1237" width="0.0120%" height="15" fill="rgb(209,106,27)" fg:x="7579" fg:w="1"/><text x="91.5193%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.01%)</title><rect x="91.2693%" y="1221" width="0.0120%" height="15" fill="rgb(214,220,18)" fg:x="7579" fg:w="1"/><text x="91.5193%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="91.2693%" y="1205" width="0.0120%" height="15" fill="rgb(237,89,12)" fg:x="7579" fg:w="1"/><text x="91.5193%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="91.2693%" y="1189" width="0.0120%" height="15" fill="rgb(209,167,36)" fg:x="7579" fg:w="1"/><text x="91.5193%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (1 samples, 0.01%)</title><rect x="91.2693%" y="1173" width="0.0120%" height="15" fill="rgb(243,45,22)" fg:x="7579" fg:w="1"/><text x="91.5193%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (1 samples, 0.01%)</title><rect x="91.2693%" y="1157" width="0.0120%" height="15" fill="rgb(239,2,46)" fg:x="7579" fg:w="1"/><text x="91.5193%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (1 samples, 0.01%)</title><rect x="91.2693%" y="1141" width="0.0120%" height="15" fill="rgb(241,101,0)" fg:x="7579" fg:w="1"/><text x="91.5193%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.01%)</title><rect x="91.2693%" y="1125" width="0.0120%" height="15" fill="rgb(244,34,31)" fg:x="7579" fg:w="1"/><text x="91.5193%" y="1135.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.01%)</title><rect x="91.2693%" y="1109" width="0.0120%" height="15" fill="rgb(248,23,22)" fg:x="7579" fg:w="1"/><text x="91.5193%" y="1119.50"></text></g><g><title>vm_library::pipe::IO::write_with_fail (1 samples, 0.01%)</title><rect x="91.2813%" y="1573" width="0.0120%" height="15" fill="rgb(218,27,48)" fg:x="7580" fg:w="1"/><text x="91.5313%" y="1583.50"></text></g><g><title>serde_json::ser::to_string (1 samples, 0.01%)</title><rect x="91.2813%" y="1557" width="0.0120%" height="15" fill="rgb(232,78,1)" fg:x="7580" fg:w="1"/><text x="91.5313%" y="1567.50"></text></g><g><title>serde_json::ser::to_vec (1 samples, 0.01%)</title><rect x="91.2813%" y="1541" width="0.0120%" height="15" fill="rgb(233,169,12)" fg:x="7580" fg:w="1"/><text x="91.5313%" y="1551.50"></text></g><g><title>serde_json::ser::to_writer (1 samples, 0.01%)</title><rect x="91.2813%" y="1525" width="0.0120%" height="15" fill="rgb(225,222,54)" fg:x="7580" fg:w="1"/><text x="91.5313%" y="1535.50"></text></g><g><title>&lt;vm_library::vm_server::ServerMessage as serde::ser::Serialize&gt;::serialize (1 samples, 0.01%)</title><rect x="91.2813%" y="1509" width="0.0120%" height="15" fill="rgb(245,126,29)" fg:x="7580" fg:w="1"/><text x="91.5313%" y="1519.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeTuple&gt;::serialize_element (1 samples, 0.01%)</title><rect x="91.2813%" y="1493" width="0.0120%" height="15" fill="rgb(241,63,48)" fg:x="7580" fg:w="1"/><text x="91.5313%" y="1503.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (1 samples, 0.01%)</title><rect x="91.2813%" y="1477" width="0.0120%" height="15" fill="rgb(235,126,38)" fg:x="7580" fg:w="1"/><text x="91.5313%" y="1487.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.01%)</title><rect x="91.2813%" y="1461" width="0.0120%" height="15" fill="rgb(232,96,49)" fg:x="7580" fg:w="1"/><text x="91.5313%" y="1471.50"></text></g><g><title>vm_library::outgoing::_::&lt;impl serde::ser::Serialize for vm_library::outgoing::SetBorrowed&gt;::serialize (1 samples, 0.01%)</title><rect x="91.2813%" y="1445" width="0.0120%" height="15" fill="rgb(211,146,40)" fg:x="7580" fg:w="1"/><text x="91.5313%" y="1455.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.01%)</title><rect x="91.2813%" y="1429" width="0.0120%" height="15" fill="rgb(247,93,44)" fg:x="7580" fg:w="1"/><text x="91.5313%" y="1439.50"></text></g><g><title>vm_library::outgoing::base64ser (1 samples, 0.01%)</title><rect x="91.2813%" y="1413" width="0.0120%" height="15" fill="rgb(251,41,49)" fg:x="7580" fg:w="1"/><text x="91.5313%" y="1423.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.01%)</title><rect x="91.2813%" y="1397" width="0.0120%" height="15" fill="rgb(218,155,12)" fg:x="7580" fg:w="1"/><text x="91.5313%" y="1407.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.01%)</title><rect x="91.2813%" y="1381" width="0.0120%" height="15" fill="rgb(221,161,30)" fg:x="7580" fg:w="1"/><text x="91.5313%" y="1391.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (1 samples, 0.01%)</title><rect x="91.2813%" y="1365" width="0.0120%" height="15" fill="rgb(221,179,11)" fg:x="7580" fg:w="1"/><text x="91.5313%" y="1375.50"></text></g><g><title>vm_library::run_loop::handle_originate (3 samples, 0.04%)</title><rect x="91.2693%" y="1589" width="0.0361%" height="15" fill="rgb(224,170,48)" fg:x="7579" fg:w="3"/><text x="91.5193%" y="1599.50"></text></g><g><title>wasmer::sys::module::Module::serialize (1 samples, 0.01%)</title><rect x="91.2934%" y="1573" width="0.0120%" height="15" fill="rgb(223,117,5)" fg:x="7581" fg:w="1"/><text x="91.5434%" y="1583.50"></text></g><g><title>&lt;wasmer_engine_universal::artifact::UniversalArtifact as wasmer_artifact::artifact::ArtifactCreate&gt;::serialize (1 samples, 0.01%)</title><rect x="91.2934%" y="1557" width="0.0120%" height="15" fill="rgb(209,52,20)" fg:x="7581" fg:w="1"/><text x="91.5434%" y="1567.50"></text></g><g><title>&lt;wasmer_engine_universal_artifact::artifact::UniversalArtifactBuild as wasmer_artifact::artifact::ArtifactCreate&gt;::serialize (1 samples, 0.01%)</title><rect x="91.2934%" y="1541" width="0.0120%" height="15" fill="rgb(209,19,41)" fg:x="7581" fg:w="1"/><text x="91.5434%" y="1551.50"></text></g><g><title>wasmer_engine_universal_artifact::serialize::SerializableModule::serialize (1 samples, 0.01%)</title><rect x="91.2934%" y="1525" width="0.0120%" height="15" fill="rgb(210,177,12)" fg:x="7581" fg:w="1"/><text x="91.5434%" y="1535.50"></text></g><g><title>rkyv::ser::Serializer::serialize_value (1 samples, 0.01%)</title><rect x="91.2934%" y="1509" width="0.0120%" height="15" fill="rgb(211,159,37)" fg:x="7581" fg:w="1"/><text x="91.5434%" y="1519.50"></text></g><g><title>wasmer_engine_universal_artifact::serialize::_::&lt;impl rkyv::Serialize&lt;__S&gt; for wasmer_engine_universal_artifact::serialize::SerializableModule&gt;::serialize (1 samples, 0.01%)</title><rect x="91.2934%" y="1493" width="0.0120%" height="15" fill="rgb(209,20,2)" fg:x="7581" fg:w="1"/><text x="91.5434%" y="1503.50"></text></g><g><title>wasmer_engine_universal_artifact::serialize::_::&lt;impl rkyv::Serialize&lt;__S&gt; for wasmer_engine_universal_artifact::serialize::SerializableCompilation&gt;::serialize (1 samples, 0.01%)</title><rect x="91.2934%" y="1477" width="0.0120%" height="15" fill="rgb(244,3,46)" fg:x="7581" fg:w="1"/><text x="91.5434%" y="1487.50"></text></g><g><title>wasmer_types::entity::primary_map::_::&lt;impl rkyv::Serialize&lt;__S&gt; for wasmer_types::entity::primary_map::PrimaryMap&lt;K,V&gt;&gt;::serialize (1 samples, 0.01%)</title><rect x="91.2934%" y="1461" width="0.0120%" height="15" fill="rgb(220,94,38)" fg:x="7581" fg:w="1"/><text x="91.5434%" y="1471.50"></text></g><g><title>rkyv::impls::alloc::vec::&lt;impl rkyv::Serialize&lt;S&gt; for alloc::vec::Vec&lt;T&gt;&gt;::serialize (1 samples, 0.01%)</title><rect x="91.2934%" y="1445" width="0.0120%" height="15" fill="rgb(253,14,31)" fg:x="7581" fg:w="1"/><text x="91.5434%" y="1455.50"></text></g><g><title>rkyv::vec::ArchivedVec&lt;T&gt;::serialize_from_slice (1 samples, 0.01%)</title><rect x="91.2934%" y="1429" width="0.0120%" height="15" fill="rgb(234,176,13)" fg:x="7581" fg:w="1"/><text x="91.5434%" y="1439.50"></text></g><g><title>rkyv::impls::core::&lt;impl rkyv::SerializeUnsized&lt;S&gt; for [T]&gt;::serialize_unsized (1 samples, 0.01%)</title><rect x="91.2934%" y="1413" width="0.0120%" height="15" fill="rgb(218,62,25)" fg:x="7581" fg:w="1"/><text x="91.5434%" y="1423.50"></text></g><g><title>wasmer_compiler::function::_::&lt;impl rkyv::Serialize&lt;__S&gt; for wasmer_compiler::function::FunctionBody&gt;::serialize (1 samples, 0.01%)</title><rect x="91.2934%" y="1397" width="0.0120%" height="15" fill="rgb(216,124,40)" fg:x="7581" fg:w="1"/><text x="91.5434%" y="1407.50"></text></g><g><title>rkyv::impls::alloc::vec::&lt;impl rkyv::Serialize&lt;S&gt; for alloc::vec::Vec&lt;T&gt;&gt;::serialize (1 samples, 0.01%)</title><rect x="91.2934%" y="1381" width="0.0120%" height="15" fill="rgb(228,170,12)" fg:x="7581" fg:w="1"/><text x="91.5434%" y="1391.50"></text></g><g><title>rkyv::vec::ArchivedVec&lt;T&gt;::serialize_from_slice (1 samples, 0.01%)</title><rect x="91.2934%" y="1365" width="0.0120%" height="15" fill="rgb(231,226,5)" fg:x="7581" fg:w="1"/><text x="91.5434%" y="1375.50"></text></g><g><title>rkyv::impls::core::&lt;impl rkyv::SerializeUnsized&lt;S&gt; for [T]&gt;::serialize_unsized (1 samples, 0.01%)</title><rect x="91.2934%" y="1349" width="0.0120%" height="15" fill="rgb(237,122,22)" fg:x="7581" fg:w="1"/><text x="91.5434%" y="1359.50"></text></g><g><title>&lt;rkyv::ser::serializers::CompositeSerializer&lt;S,C,H&gt; as rkyv::ser::Serializer&gt;::resolve_aligned (1 samples, 0.01%)</title><rect x="91.2934%" y="1333" width="0.0120%" height="15" fill="rgb(209,185,25)" fg:x="7581" fg:w="1"/><text x="91.5434%" y="1343.50"></text></g><g><title>&lt;rkyv::ser::serializers::alloc::AlignedSerializer&lt;A&gt; as rkyv::ser::Serializer&gt;::resolve_aligned (1 samples, 0.01%)</title><rect x="91.2934%" y="1317" width="0.0120%" height="15" fill="rgb(228,200,32)" fg:x="7581" fg:w="1"/><text x="91.5434%" y="1327.50"></text></g><g><title>&lt;rkyv::ser::serializers::alloc::AlignedSerializer&lt;A&gt; as rkyv::ser::Serializer&gt;::pos (1 samples, 0.01%)</title><rect x="91.2934%" y="1301" width="0.0120%" height="15" fill="rgb(217,140,10)" fg:x="7581" fg:w="1"/><text x="91.5434%" y="1311.50"></text></g><g><title>__libc_start_main_alias_2 (6,450 samples, 77.67%)</title><rect x="13.6440%" y="1941" width="77.6734%" height="15" fill="rgb(253,17,24)" fg:x="1133" fg:w="6450"/><text x="13.8940%" y="1951.50">__libc_start_main_alias_2</text></g><g><title>__libc_start_call_main (6,450 samples, 77.67%)</title><rect x="13.6440%" y="1925" width="77.6734%" height="15" fill="rgb(212,61,6)" fg:x="1133" fg:w="6450"/><text x="13.8940%" y="1935.50">__libc_start_call_main</text></g><g><title>main (6,450 samples, 77.67%)</title><rect x="13.6440%" y="1909" width="77.6734%" height="15" fill="rgb(205,14,25)" fg:x="1133" fg:w="6450"/><text x="13.8940%" y="1919.50">main</text></g><g><title>std::rt::lang_start_internal (6,450 samples, 77.67%)</title><rect x="13.6440%" y="1893" width="77.6734%" height="15" fill="rgb(232,69,41)" fg:x="1133" fg:w="6450"/><text x="13.8940%" y="1903.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (6,450 samples, 77.67%)</title><rect x="13.6440%" y="1877" width="77.6734%" height="15" fill="rgb(241,106,47)" fg:x="1133" fg:w="6450"/><text x="13.8940%" y="1887.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (6,450 samples, 77.67%)</title><rect x="13.6440%" y="1861" width="77.6734%" height="15" fill="rgb(210,213,53)" fg:x="1133" fg:w="6450"/><text x="13.8940%" y="1871.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (6,450 samples, 77.67%)</title><rect x="13.6440%" y="1845" width="77.6734%" height="15" fill="rgb(253,175,27)" fg:x="1133" fg:w="6450"/><text x="13.8940%" y="1855.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (6,450 samples, 77.67%)</title><rect x="13.6440%" y="1829" width="77.6734%" height="15" fill="rgb(211,171,24)" fg:x="1133" fg:w="6450"/><text x="13.8940%" y="1839.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (6,450 samples, 77.67%)</title><rect x="13.6440%" y="1813" width="77.6734%" height="15" fill="rgb(229,80,7)" fg:x="1133" fg:w="6450"/><text x="13.8940%" y="1823.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (6,450 samples, 77.67%)</title><rect x="13.6440%" y="1797" width="77.6734%" height="15" fill="rgb(212,46,39)" fg:x="1133" fg:w="6450"/><text x="13.8940%" y="1807.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (6,450 samples, 77.67%)</title><rect x="13.6440%" y="1781" width="77.6734%" height="15" fill="rgb(240,80,45)" fg:x="1133" fg:w="6450"/><text x="13.8940%" y="1791.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (6,450 samples, 77.67%)</title><rect x="13.6440%" y="1765" width="77.6734%" height="15" fill="rgb(253,177,40)" fg:x="1133" fg:w="6450"/><text x="13.8940%" y="1775.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (6,450 samples, 77.67%)</title><rect x="13.6440%" y="1749" width="77.6734%" height="15" fill="rgb(249,200,15)" fg:x="1133" fg:w="6450"/><text x="13.8940%" y="1759.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (6,450 samples, 77.67%)</title><rect x="13.6440%" y="1733" width="77.6734%" height="15" fill="rgb(217,78,26)" fg:x="1133" fg:w="6450"/><text x="13.8940%" y="1743.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (6,450 samples, 77.67%)</title><rect x="13.6440%" y="1717" width="77.6734%" height="15" fill="rgb(254,151,32)" fg:x="1133" fg:w="6450"/><text x="13.8940%" y="1727.50">core::ops::function::FnOnce::call_once</text></g><g><title>vm_library::main (6,450 samples, 77.67%)</title><rect x="13.6440%" y="1701" width="77.6734%" height="15" fill="rgb(226,165,27)" fg:x="1133" fg:w="6450"/><text x="13.8940%" y="1711.50">vm_library::main</text></g><g><title>std::panic::catch_unwind (6,450 samples, 77.67%)</title><rect x="13.6440%" y="1685" width="77.6734%" height="15" fill="rgb(250,206,4)" fg:x="1133" fg:w="6450"/><text x="13.8940%" y="1695.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (6,450 samples, 77.67%)</title><rect x="13.6440%" y="1669" width="77.6734%" height="15" fill="rgb(231,229,27)" fg:x="1133" fg:w="6450"/><text x="13.8940%" y="1679.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (6,450 samples, 77.67%)</title><rect x="13.6440%" y="1653" width="77.6734%" height="15" fill="rgb(239,217,8)" fg:x="1133" fg:w="6450"/><text x="13.8940%" y="1663.50">std::panicking::try::do_call</text></g><g><title>vm_library::main::{{closure}} (6,450 samples, 77.67%)</title><rect x="13.6440%" y="1637" width="77.6734%" height="15" fill="rgb(225,204,27)" fg:x="1133" fg:w="6450"/><text x="13.8940%" y="1647.50">vm_library::main::{{closure}}</text></g><g><title>vm_library::run_loop::run_loop (6,450 samples, 77.67%)</title><rect x="13.6440%" y="1621" width="77.6734%" height="15" fill="rgb(230,56,32)" fg:x="1133" fg:w="6450"/><text x="13.8940%" y="1631.50">vm_library::run_loop::run_loop</text></g><g><title>vm_library::run_loop::handle_transaction (6,312 samples, 76.01%)</title><rect x="15.3059%" y="1605" width="76.0116%" height="15" fill="rgb(222,56,27)" fg:x="1271" fg:w="6312"/><text x="15.5559%" y="1615.50">vm_library::run_loop::handle_transaction</text></g><g><title>vm_library::run_loop::handle_transaction (1 samples, 0.01%)</title><rect x="91.3054%" y="1589" width="0.0120%" height="15" fill="rgb(253,108,27)" fg:x="7582" fg:w="1"/><text x="91.5554%" y="1599.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="91.3174%" y="1925" width="0.0120%" height="15" fill="rgb(212,87,36)" fg:x="7583" fg:w="1"/><text x="91.5674%" y="1935.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="91.3174%" y="1909" width="0.0120%" height="15" fill="rgb(247,82,36)" fg:x="7583" fg:w="1"/><text x="91.5674%" y="1919.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="91.3174%" y="1893" width="0.0120%" height="15" fill="rgb(222,143,9)" fg:x="7583" fg:w="1"/><text x="91.5674%" y="1903.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="91.3174%" y="1877" width="0.0120%" height="15" fill="rgb(238,162,48)" fg:x="7583" fg:w="1"/><text x="91.5674%" y="1887.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="91.3174%" y="1861" width="0.0120%" height="15" fill="rgb(221,59,43)" fg:x="7583" fg:w="1"/><text x="91.5674%" y="1871.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="91.3174%" y="1845" width="0.0120%" height="15" fill="rgb(205,166,41)" fg:x="7583" fg:w="1"/><text x="91.5674%" y="1855.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="91.3174%" y="1829" width="0.0120%" height="15" fill="rgb(241,186,40)" fg:x="7583" fg:w="1"/><text x="91.5674%" y="1839.50"></text></g><g><title>_dl_start_final (1 samples, 0.01%)</title><rect x="91.3295%" y="1925" width="0.0120%" height="15" fill="rgb(216,119,35)" fg:x="7584" fg:w="1"/><text x="91.5795%" y="1935.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.01%)</title><rect x="91.3295%" y="1909" width="0.0120%" height="15" fill="rgb(208,68,38)" fg:x="7584" fg:w="1"/><text x="91.5795%" y="1919.50"></text></g><g><title>dl_main (1 samples, 0.01%)</title><rect x="91.3295%" y="1893" width="0.0120%" height="15" fill="rgb(217,113,1)" fg:x="7584" fg:w="1"/><text x="91.5795%" y="1903.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.01%)</title><rect x="91.3295%" y="1877" width="0.0120%" height="15" fill="rgb(242,153,3)" fg:x="7584" fg:w="1"/><text x="91.5795%" y="1887.50"></text></g><g><title>elf_dynamic_do_Rela (1 samples, 0.01%)</title><rect x="91.3295%" y="1861" width="0.0120%" height="15" fill="rgb(229,76,35)" fg:x="7584" fg:w="1"/><text x="91.5795%" y="1871.50"></text></g><g><title>elf_machine_rela (1 samples, 0.01%)</title><rect x="91.3295%" y="1845" width="0.0120%" height="15" fill="rgb(229,125,34)" fg:x="7584" fg:w="1"/><text x="91.5795%" y="1855.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="91.3295%" y="1829" width="0.0120%" height="15" fill="rgb(238,179,36)" fg:x="7584" fg:w="1"/><text x="91.5795%" y="1839.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="91.3295%" y="1813" width="0.0120%" height="15" fill="rgb(244,183,19)" fg:x="7584" fg:w="1"/><text x="91.5795%" y="1823.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="91.3295%" y="1797" width="0.0120%" height="15" fill="rgb(216,85,49)" fg:x="7584" fg:w="1"/><text x="91.5795%" y="1807.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="91.3295%" y="1781" width="0.0120%" height="15" fill="rgb(208,161,47)" fg:x="7584" fg:w="1"/><text x="91.5795%" y="1791.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="91.3295%" y="1765" width="0.0120%" height="15" fill="rgb(233,210,18)" fg:x="7584" fg:w="1"/><text x="91.5795%" y="1775.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="91.3295%" y="1749" width="0.0120%" height="15" fill="rgb(205,104,42)" fg:x="7584" fg:w="1"/><text x="91.5795%" y="1759.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="91.3295%" y="1733" width="0.0120%" height="15" fill="rgb(248,90,43)" fg:x="7584" fg:w="1"/><text x="91.5795%" y="1743.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="91.3295%" y="1717" width="0.0120%" height="15" fill="rgb(206,198,11)" fg:x="7584" fg:w="1"/><text x="91.5795%" y="1727.50"></text></g><g><title>elf_dynamic_do_Rela (1 samples, 0.01%)</title><rect x="91.3415%" y="1925" width="0.0120%" height="15" fill="rgb(239,165,27)" fg:x="7585" fg:w="1"/><text x="91.5915%" y="1935.50"></text></g><g><title>_start (6,455 samples, 77.73%)</title><rect x="13.6320%" y="1957" width="77.7336%" height="15" fill="rgb(246,44,32)" fg:x="1132" fg:w="6455"/><text x="13.8820%" y="1967.50">_start</text></g><g><title>_dl_start (4 samples, 0.05%)</title><rect x="91.3174%" y="1941" width="0.0482%" height="15" fill="rgb(252,65,42)" fg:x="7583" fg:w="4"/><text x="91.5674%" y="1951.50"></text></g><g><title>rtld_timer_start (1 samples, 0.01%)</title><rect x="91.3536%" y="1925" width="0.0120%" height="15" fill="rgb(246,197,18)" fg:x="7586" fg:w="1"/><text x="91.6036%" y="1935.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="91.3536%" y="1909" width="0.0120%" height="15" fill="rgb(216,192,4)" fg:x="7586" fg:w="1"/><text x="91.6036%" y="1919.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="91.3536%" y="1893" width="0.0120%" height="15" fill="rgb(208,117,10)" fg:x="7586" fg:w="1"/><text x="91.6036%" y="1903.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="91.3536%" y="1877" width="0.0120%" height="15" fill="rgb(240,61,47)" fg:x="7586" fg:w="1"/><text x="91.6036%" y="1887.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="91.3536%" y="1861" width="0.0120%" height="15" fill="rgb(228,178,21)" fg:x="7586" fg:w="1"/><text x="91.6036%" y="1871.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="91.3536%" y="1845" width="0.0120%" height="15" fill="rgb(219,96,54)" fg:x="7586" fg:w="1"/><text x="91.6036%" y="1855.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="91.3536%" y="1829" width="0.0120%" height="15" fill="rgb(250,177,24)" fg:x="7586" fg:w="1"/><text x="91.6036%" y="1839.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="91.3536%" y="1813" width="0.0120%" height="15" fill="rgb(242,154,46)" fg:x="7586" fg:w="1"/><text x="91.6036%" y="1823.50"></text></g><g><title>&lt;im_rc::ord::map::OrdMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="91.4258%" y="1829" width="0.0361%" height="15" fill="rgb(226,176,29)" fg:x="7592" fg:w="3"/><text x="91.6758%" y="1839.50"></text></g><g><title>&lt;im_rc::fakepool::Rc&lt;A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="91.4258%" y="1813" width="0.0361%" height="15" fill="rgb(226,29,2)" fg:x="7592" fg:w="3"/><text x="91.6758%" y="1823.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="91.4258%" y="1797" width="0.0361%" height="15" fill="rgb(237,104,14)" fg:x="7592" fg:w="3"/><text x="91.6758%" y="1807.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (3 samples, 0.04%)</title><rect x="91.4258%" y="1781" width="0.0361%" height="15" fill="rgb(245,207,31)" fg:x="7592" fg:w="3"/><text x="91.6758%" y="1791.50"></text></g><g><title>&lt;vm_library::managed::value::Value as core::clone::Clone&gt;::clone (7 samples, 0.08%)</title><rect x="91.4017%" y="1845" width="0.0843%" height="15" fill="rgb(229,211,45)" fg:x="7590" fg:w="7"/><text x="91.6517%" y="1855.50"></text></g><g><title>rug::integer::traits::&lt;impl core::clone::Clone for rug::integer::big::Integer&gt;::clone (2 samples, 0.02%)</title><rect x="91.4619%" y="1829" width="0.0241%" height="15" fill="rgb(229,113,15)" fg:x="7595" fg:w="2"/><text x="91.7119%" y="1839.50"></text></g><g><title>rug::ext::xmpz::init_set (2 samples, 0.02%)</title><rect x="91.4619%" y="1813" width="0.0241%" height="15" fill="rgb(237,147,15)" fg:x="7595" fg:w="2"/><text x="91.7119%" y="1823.50"></text></g><g><title>__gmpz_init_set (2 samples, 0.02%)</title><rect x="91.4619%" y="1797" width="0.0241%" height="15" fill="rgb(244,120,12)" fg:x="7595" fg:w="2"/><text x="91.7119%" y="1807.50"></text></g><g><title>__gmp_default_allocate (2 samples, 0.02%)</title><rect x="91.4619%" y="1781" width="0.0241%" height="15" fill="rgb(205,120,12)" fg:x="7595" fg:w="2"/><text x="91.7119%" y="1791.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="91.4740%" y="1765" width="0.0120%" height="15" fill="rgb(231,26,45)" fg:x="7596" fg:w="1"/><text x="91.7240%" y="1775.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (8 samples, 0.10%)</title><rect x="91.4017%" y="1861" width="0.0963%" height="15" fill="rgb(246,98,1)" fg:x="7590" fg:w="8"/><text x="91.6517%" y="1871.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.01%)</title><rect x="91.4860%" y="1845" width="0.0120%" height="15" fill="rgb(207,68,45)" fg:x="7597" fg:w="1"/><text x="91.7360%" y="1855.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="91.4860%" y="1829" width="0.0120%" height="15" fill="rgb(231,27,38)" fg:x="7597" fg:w="1"/><text x="91.7360%" y="1839.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.11%)</title><rect x="91.4017%" y="1877" width="0.1084%" height="15" fill="rgb(214,223,3)" fg:x="7590" fg:w="9"/><text x="91.6517%" y="1887.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1 samples, 0.01%)</title><rect x="91.4981%" y="1861" width="0.0120%" height="15" fill="rgb(228,195,46)" fg:x="7598" fg:w="1"/><text x="91.7481%" y="1871.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1 samples, 0.01%)</title><rect x="91.4981%" y="1845" width="0.0120%" height="15" fill="rgb(231,100,42)" fg:x="7598" fg:w="1"/><text x="91.7481%" y="1855.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="91.4981%" y="1829" width="0.0120%" height="15" fill="rgb(236,53,4)" fg:x="7598" fg:w="1"/><text x="91.7481%" y="1839.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="91.4981%" y="1813" width="0.0120%" height="15" fill="rgb(230,152,12)" fg:x="7598" fg:w="1"/><text x="91.7481%" y="1823.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="91.4981%" y="1797" width="0.0120%" height="15" fill="rgb(226,101,19)" fg:x="7598" fg:w="1"/><text x="91.7481%" y="1807.50"></text></g><g><title>mi_malloc (1 samples, 0.01%)</title><rect x="91.4981%" y="1781" width="0.0120%" height="15" fill="rgb(250,149,32)" fg:x="7598" fg:w="1"/><text x="91.7481%" y="1791.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.01%)</title><rect x="91.4981%" y="1765" width="0.0120%" height="15" fill="rgb(232,178,12)" fg:x="7598" fg:w="1"/><text x="91.7481%" y="1775.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.01%)</title><rect x="91.4981%" y="1749" width="0.0120%" height="15" fill="rgb(246,151,17)" fg:x="7598" fg:w="1"/><text x="91.7481%" y="1759.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.01%)</title><rect x="91.4981%" y="1733" width="0.0120%" height="15" fill="rgb(252,17,51)" fg:x="7598" fg:w="1"/><text x="91.7481%" y="1743.50"></text></g><g><title>mi_block_next (1 samples, 0.01%)</title><rect x="91.4981%" y="1717" width="0.0120%" height="15" fill="rgb(250,207,23)" fg:x="7598" fg:w="1"/><text x="91.7481%" y="1727.50"></text></g><g><title>mi_block_nextx (1 samples, 0.01%)</title><rect x="91.4981%" y="1701" width="0.0120%" height="15" fill="rgb(205,27,5)" fg:x="7598" fg:w="1"/><text x="91.7481%" y="1711.50"></text></g><g><title>mi_ptr_decode (1 samples, 0.01%)</title><rect x="91.4981%" y="1685" width="0.0120%" height="15" fill="rgb(224,32,19)" fg:x="7598" fg:w="1"/><text x="91.7481%" y="1695.50"></text></g><g><title>mi_block_nextx (3 samples, 0.04%)</title><rect x="91.5342%" y="1621" width="0.0361%" height="15" fill="rgb(247,214,40)" fg:x="7601" fg:w="3"/><text x="91.7842%" y="1631.50"></text></g><g><title>mi_ptr_decode (3 samples, 0.04%)</title><rect x="91.5342%" y="1605" width="0.0361%" height="15" fill="rgb(239,199,17)" fg:x="7601" fg:w="3"/><text x="91.7842%" y="1615.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (7 samples, 0.08%)</title><rect x="91.5101%" y="1877" width="0.0843%" height="15" fill="rgb(251,159,9)" fg:x="7599" fg:w="7"/><text x="91.7601%" y="1887.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.08%)</title><rect x="91.5101%" y="1861" width="0.0843%" height="15" fill="rgb(225,78,32)" fg:x="7599" fg:w="7"/><text x="91.7601%" y="1871.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 0.08%)</title><rect x="91.5101%" y="1845" width="0.0843%" height="15" fill="rgb(206,97,47)" fg:x="7599" fg:w="7"/><text x="91.7601%" y="1855.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.08%)</title><rect x="91.5101%" y="1829" width="0.0843%" height="15" fill="rgb(227,107,4)" fg:x="7599" fg:w="7"/><text x="91.7601%" y="1839.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 0.08%)</title><rect x="91.5101%" y="1813" width="0.0843%" height="15" fill="rgb(241,146,50)" fg:x="7599" fg:w="7"/><text x="91.7601%" y="1823.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.08%)</title><rect x="91.5101%" y="1797" width="0.0843%" height="15" fill="rgb(232,92,30)" fg:x="7599" fg:w="7"/><text x="91.7601%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.08%)</title><rect x="91.5101%" y="1781" width="0.0843%" height="15" fill="rgb(222,0,40)" fg:x="7599" fg:w="7"/><text x="91.7601%" y="1791.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.08%)</title><rect x="91.5101%" y="1765" width="0.0843%" height="15" fill="rgb(219,54,33)" fg:x="7599" fg:w="7"/><text x="91.7601%" y="1775.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.08%)</title><rect x="91.5101%" y="1749" width="0.0843%" height="15" fill="rgb(226,209,28)" fg:x="7599" fg:w="7"/><text x="91.7601%" y="1759.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.08%)</title><rect x="91.5101%" y="1733" width="0.0843%" height="15" fill="rgb(254,205,35)" fg:x="7599" fg:w="7"/><text x="91.7601%" y="1743.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.08%)</title><rect x="91.5101%" y="1717" width="0.0843%" height="15" fill="rgb(230,159,3)" fg:x="7599" fg:w="7"/><text x="91.7601%" y="1727.50"></text></g><g><title>mi_malloc (7 samples, 0.08%)</title><rect x="91.5101%" y="1701" width="0.0843%" height="15" fill="rgb(232,190,24)" fg:x="7599" fg:w="7"/><text x="91.7601%" y="1711.50"></text></g><g><title>mi_heap_malloc (5 samples, 0.06%)</title><rect x="91.5342%" y="1685" width="0.0602%" height="15" fill="rgb(217,227,44)" fg:x="7601" fg:w="5"/><text x="91.7842%" y="1695.50"></text></g><g><title>mi_heap_malloc_small (5 samples, 0.06%)</title><rect x="91.5342%" y="1669" width="0.0602%" height="15" fill="rgb(236,211,1)" fg:x="7601" fg:w="5"/><text x="91.7842%" y="1679.50"></text></g><g><title>_mi_page_malloc (5 samples, 0.06%)</title><rect x="91.5342%" y="1653" width="0.0602%" height="15" fill="rgb(250,127,46)" fg:x="7601" fg:w="5"/><text x="91.7842%" y="1663.50"></text></g><g><title>mi_block_next (5 samples, 0.06%)</title><rect x="91.5342%" y="1637" width="0.0602%" height="15" fill="rgb(229,213,6)" fg:x="7601" fg:w="5"/><text x="91.7842%" y="1647.50"></text></g><g><title>mi_is_in_same_page (2 samples, 0.02%)</title><rect x="91.5703%" y="1621" width="0.0241%" height="15" fill="rgb(237,15,36)" fg:x="7604" fg:w="2"/><text x="91.8203%" y="1631.50"></text></g><g><title>_mi_segment_page_start (1 samples, 0.01%)</title><rect x="91.5824%" y="1605" width="0.0120%" height="15" fill="rgb(213,131,41)" fg:x="7605" fg:w="1"/><text x="91.8324%" y="1615.50"></text></g><g><title>_mi_segment_page_start_from_slice (1 samples, 0.01%)</title><rect x="91.5824%" y="1589" width="0.0120%" height="15" fill="rgb(225,82,44)" fg:x="7605" fg:w="1"/><text x="91.8324%" y="1599.50"></text></g><g><title>core::clone::Clone::clone (19 samples, 0.23%)</title><rect x="91.3776%" y="1909" width="0.2288%" height="15" fill="rgb(249,42,11)" fg:x="7588" fg:w="19"/><text x="91.6276%" y="1919.50"></text></g><g><title>&lt;vm_library::managed::value::Value as core::clone::Clone&gt;::clone (19 samples, 0.23%)</title><rect x="91.3776%" y="1893" width="0.2288%" height="15" fill="rgb(253,11,29)" fg:x="7588" fg:w="19"/><text x="91.6276%" y="1903.50"></text></g><g><title>rug::integer::traits::&lt;impl core::clone::Clone for rug::integer::big::Integer&gt;::clone (1 samples, 0.01%)</title><rect x="91.5944%" y="1877" width="0.0120%" height="15" fill="rgb(206,8,54)" fg:x="7606" fg:w="1"/><text x="91.8444%" y="1887.50"></text></g><g><title>rug::ext::xmpz::init_set (1 samples, 0.01%)</title><rect x="91.5944%" y="1861" width="0.0120%" height="15" fill="rgb(222,186,2)" fg:x="7606" fg:w="1"/><text x="91.8444%" y="1871.50"></text></g><g><title>__gmpz_init_set (1 samples, 0.01%)</title><rect x="91.5944%" y="1845" width="0.0120%" height="15" fill="rgb(221,206,53)" fg:x="7606" fg:w="1"/><text x="91.8444%" y="1855.50"></text></g><g><title>__gmp_default_allocate (1 samples, 0.01%)</title><rect x="91.5944%" y="1829" width="0.0120%" height="15" fill="rgb(230,150,21)" fg:x="7606" fg:w="1"/><text x="91.8444%" y="1839.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="91.5944%" y="1813" width="0.0120%" height="15" fill="rgb(253,202,10)" fg:x="7606" fg:w="1"/><text x="91.8444%" y="1823.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="91.5944%" y="1797" width="0.0120%" height="15" fill="rgb(238,109,40)" fg:x="7606" fg:w="1"/><text x="91.8444%" y="1807.50"></text></g><g><title>&lt;sized_chunks::sized_chunk::Chunk&lt;A,N&gt; as core::clone::Clone&gt;::clone (21 samples, 0.25%)</title><rect x="91.3776%" y="1925" width="0.2529%" height="15" fill="rgb(247,120,22)" fg:x="7588" fg:w="21"/><text x="91.6276%" y="1935.50"></text></g><g><title>sized_chunks::sized_chunk::Chunk&lt;A,N&gt;::force_write (2 samples, 0.02%)</title><rect x="91.6065%" y="1909" width="0.0241%" height="15" fill="rgb(207,43,30)" fg:x="7607" fg:w="2"/><text x="91.8565%" y="1919.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (2 samples, 0.02%)</title><rect x="91.6065%" y="1893" width="0.0241%" height="15" fill="rgb(213,211,24)" fg:x="7607" fg:w="2"/><text x="91.8565%" y="1903.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="91.6065%" y="1877" width="0.0241%" height="15" fill="rgb(239,73,39)" fg:x="7607" fg:w="2"/><text x="91.8565%" y="1887.50"></text></g><g><title>&lt;im_rc::nodes::btree::Node&lt;A&gt; as core::clone::Clone&gt;::clone (60 samples, 0.72%)</title><rect x="91.3776%" y="1941" width="0.7225%" height="15" fill="rgb(245,182,19)" fg:x="7588" fg:w="60"/><text x="91.6276%" y="1951.50"></text></g><g><title>__memcpy_avx_unaligned_erms (39 samples, 0.47%)</title><rect x="91.6305%" y="1925" width="0.4697%" height="15" fill="rgb(247,143,26)" fg:x="7609" fg:w="39"/><text x="91.8805%" y="1935.50"></text></g><g><title>__memcpy_avx_unaligned_erms (37 samples, 0.45%)</title><rect x="92.1002%" y="1941" width="0.4456%" height="15" fill="rgb(228,191,23)" fg:x="7648" fg:w="37"/><text x="92.3502%" y="1951.50"></text></g><g><title>_mi_deferred_free (2 samples, 0.02%)</title><rect x="92.5578%" y="1861" width="0.0241%" height="15" fill="rgb(253,165,31)" fg:x="7686" fg:w="2"/><text x="92.8078%" y="1871.50"></text></g><g><title>_mi_heap_delayed_free (1 samples, 0.01%)</title><rect x="92.5819%" y="1861" width="0.0120%" height="15" fill="rgb(234,138,20)" fg:x="7688" fg:w="1"/><text x="92.8319%" y="1871.50"></text></g><g><title>mi_block_nextx (5 samples, 0.06%)</title><rect x="92.5939%" y="1829" width="0.0602%" height="15" fill="rgb(218,191,29)" fg:x="7689" fg:w="5"/><text x="92.8439%" y="1839.50"></text></g><g><title>mi_ptr_decode (5 samples, 0.06%)</title><rect x="92.5939%" y="1813" width="0.0602%" height="15" fill="rgb(221,157,19)" fg:x="7689" fg:w="5"/><text x="92.8439%" y="1823.50"></text></g><g><title>_mi_page_malloc (6 samples, 0.07%)</title><rect x="92.5939%" y="1861" width="0.0723%" height="15" fill="rgb(237,26,42)" fg:x="7689" fg:w="6"/><text x="92.8439%" y="1871.50"></text></g><g><title>mi_block_next (6 samples, 0.07%)</title><rect x="92.5939%" y="1845" width="0.0723%" height="15" fill="rgb(220,163,24)" fg:x="7689" fg:w="6"/><text x="92.8439%" y="1855.50"></text></g><g><title>mi_is_in_same_page (1 samples, 0.01%)</title><rect x="92.6541%" y="1829" width="0.0120%" height="15" fill="rgb(242,115,20)" fg:x="7694" fg:w="1"/><text x="92.9041%" y="1839.50"></text></g><g><title>im_rc::nodes::btree::ConsumingIter&lt;A&gt;::new (112 samples, 1.35%)</title><rect x="91.3656%" y="1957" width="1.3487%" height="15" fill="rgb(210,206,9)" fg:x="7587" fg:w="112"/><text x="91.6156%" y="1967.50"></text></g><g><title>alloc::alloc::exchange_malloc (14 samples, 0.17%)</title><rect x="92.5458%" y="1941" width="0.1686%" height="15" fill="rgb(208,71,17)" fg:x="7685" fg:w="14"/><text x="92.7958%" y="1951.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.17%)</title><rect x="92.5458%" y="1925" width="0.1686%" height="15" fill="rgb(233,7,5)" fg:x="7685" fg:w="14"/><text x="92.7958%" y="1935.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.17%)</title><rect x="92.5458%" y="1909" width="0.1686%" height="15" fill="rgb(207,92,33)" fg:x="7685" fg:w="14"/><text x="92.7958%" y="1919.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.17%)</title><rect x="92.5458%" y="1893" width="0.1686%" height="15" fill="rgb(218,87,9)" fg:x="7685" fg:w="14"/><text x="92.7958%" y="1903.50"></text></g><g><title>_mi_malloc_generic (13 samples, 0.16%)</title><rect x="92.5578%" y="1877" width="0.1566%" height="15" fill="rgb(219,47,37)" fg:x="7686" fg:w="13"/><text x="92.8078%" y="1887.50"></text></g><g><title>mi_find_page (4 samples, 0.05%)</title><rect x="92.6662%" y="1861" width="0.0482%" height="15" fill="rgb(221,152,34)" fg:x="7695" fg:w="4"/><text x="92.9162%" y="1871.50"></text></g><g><title>mi_find_free_page (2 samples, 0.02%)</title><rect x="92.6903%" y="1845" width="0.0241%" height="15" fill="rgb(235,176,21)" fg:x="7697" fg:w="2"/><text x="92.9403%" y="1855.50"></text></g><g><title>mi_page_queue (2 samples, 0.02%)</title><rect x="92.6903%" y="1829" width="0.0241%" height="15" fill="rgb(232,212,21)" fg:x="7697" fg:w="2"/><text x="92.9403%" y="1839.50"></text></g><g><title>_mi_bin (2 samples, 0.02%)</title><rect x="92.6903%" y="1813" width="0.0241%" height="15" fill="rgb(245,82,39)" fg:x="7697" fg:w="2"/><text x="92.9403%" y="1823.50"></text></g><g><title>mi_bin (1 samples, 0.01%)</title><rect x="92.7023%" y="1797" width="0.0120%" height="15" fill="rgb(241,52,51)" fg:x="7698" fg:w="1"/><text x="92.9523%" y="1807.50"></text></g><g><title>&lt;vm_library::managed::value::Value as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="92.7264%" y="1893" width="0.0120%" height="15" fill="rgb(219,91,24)" fg:x="7700" fg:w="1"/><text x="92.9764%" y="1903.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (1 samples, 0.01%)</title><rect x="92.7264%" y="1877" width="0.0120%" height="15" fill="rgb(241,142,12)" fg:x="7700" fg:w="1"/><text x="92.9764%" y="1887.50"></text></g><g><title>im_rc::nodes::btree::Node&lt;A&gt;::insert (4 samples, 0.05%)</title><rect x="92.7144%" y="1957" width="0.0482%" height="15" fill="rgb(230,27,9)" fg:x="7699" fg:w="4"/><text x="92.9644%" y="1967.50"></text></g><g><title>im_rc::ord::map::&lt;impl im_rc::nodes::btree::BTreeValue for (K,V)&gt;::search_value (3 samples, 0.04%)</title><rect x="92.7264%" y="1941" width="0.0361%" height="15" fill="rgb(249,181,32)" fg:x="7700" fg:w="3"/><text x="92.9764%" y="1951.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (3 samples, 0.04%)</title><rect x="92.7264%" y="1925" width="0.0361%" height="15" fill="rgb(230,107,3)" fg:x="7700" fg:w="3"/><text x="92.9764%" y="1935.50"></text></g><g><title>im_rc::ord::map::&lt;impl im_rc::nodes::btree::BTreeValue for (K,V)&gt;::search_value::{{closure}} (3 samples, 0.04%)</title><rect x="92.7264%" y="1909" width="0.0361%" height="15" fill="rgb(246,204,14)" fg:x="7700" fg:w="3"/><text x="92.9764%" y="1919.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (2 samples, 0.02%)</title><rect x="92.7384%" y="1893" width="0.0241%" height="15" fill="rgb(213,192,47)" fg:x="7701" fg:w="2"/><text x="92.9884%" y="1903.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (2 samples, 0.02%)</title><rect x="92.7384%" y="1877" width="0.0241%" height="15" fill="rgb(240,44,36)" fg:x="7701" fg:w="2"/><text x="92.9884%" y="1887.50"></text></g><g><title>&lt;vm_library::managed::value::Value as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="92.7866%" y="1797" width="0.0120%" height="15" fill="rgb(244,209,38)" fg:x="7705" fg:w="1"/><text x="93.0366%" y="1807.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="92.7866%" y="1829" width="0.0361%" height="15" fill="rgb(219,34,37)" fg:x="7705" fg:w="3"/><text x="93.0366%" y="1839.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (3 samples, 0.04%)</title><rect x="92.7866%" y="1813" width="0.0361%" height="15" fill="rgb(210,28,6)" fg:x="7705" fg:w="3"/><text x="93.0366%" y="1823.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (2 samples, 0.02%)</title><rect x="92.7987%" y="1797" width="0.0241%" height="15" fill="rgb(244,110,52)" fg:x="7706" fg:w="2"/><text x="93.0487%" y="1807.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="92.7987%" y="1781" width="0.0241%" height="15" fill="rgb(254,124,47)" fg:x="7706" fg:w="2"/><text x="93.0487%" y="1791.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="92.8348%" y="1749" width="0.0241%" height="15" fill="rgb(254,110,13)" fg:x="7709" fg:w="2"/><text x="93.0848%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="92.8348%" y="1733" width="0.0241%" height="15" fill="rgb(252,57,21)" fg:x="7709" fg:w="2"/><text x="93.0848%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="92.8348%" y="1717" width="0.0241%" height="15" fill="rgb(242,60,45)" fg:x="7709" fg:w="2"/><text x="93.0848%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="92.8348%" y="1701" width="0.0241%" height="15" fill="rgb(234,49,30)" fg:x="7709" fg:w="2"/><text x="93.0848%" y="1711.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="92.8348%" y="1685" width="0.0241%" height="15" fill="rgb(218,98,6)" fg:x="7709" fg:w="2"/><text x="93.0848%" y="1695.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="92.8348%" y="1669" width="0.0241%" height="15" fill="rgb(220,174,29)" fg:x="7709" fg:w="2"/><text x="93.0848%" y="1679.50"></text></g><g><title>mi_malloc (2 samples, 0.02%)</title><rect x="92.8348%" y="1653" width="0.0241%" height="15" fill="rgb(236,163,23)" fg:x="7709" fg:w="2"/><text x="93.0848%" y="1663.50"></text></g><g><title>mi_heap_malloc (2 samples, 0.02%)</title><rect x="92.8348%" y="1637" width="0.0241%" height="15" fill="rgb(242,114,45)" fg:x="7709" fg:w="2"/><text x="93.0848%" y="1647.50"></text></g><g><title>mi_heap_malloc_small (2 samples, 0.02%)</title><rect x="92.8348%" y="1621" width="0.0241%" height="15" fill="rgb(232,10,53)" fg:x="7709" fg:w="2"/><text x="93.0848%" y="1631.50"></text></g><g><title>_mi_page_malloc (2 samples, 0.02%)</title><rect x="92.8348%" y="1605" width="0.0241%" height="15" fill="rgb(245,108,29)" fg:x="7709" fg:w="2"/><text x="93.0848%" y="1615.50"></text></g><g><title>mi_block_next (2 samples, 0.02%)</title><rect x="92.8348%" y="1589" width="0.0241%" height="15" fill="rgb(240,89,53)" fg:x="7709" fg:w="2"/><text x="93.0848%" y="1599.50"></text></g><g><title>mi_block_nextx (2 samples, 0.02%)</title><rect x="92.8348%" y="1573" width="0.0241%" height="15" fill="rgb(226,60,45)" fg:x="7709" fg:w="2"/><text x="93.0848%" y="1583.50"></text></g><g><title>mi_ptr_decode (2 samples, 0.02%)</title><rect x="92.8348%" y="1557" width="0.0241%" height="15" fill="rgb(230,41,44)" fg:x="7709" fg:w="2"/><text x="93.0848%" y="1567.50"></text></g><g><title>&lt;sized_chunks::sized_chunk::Chunk&lt;A,N&gt; as core::clone::Clone&gt;::clone (9 samples, 0.11%)</title><rect x="92.7625%" y="1877" width="0.1084%" height="15" fill="rgb(230,26,20)" fg:x="7703" fg:w="9"/><text x="93.0125%" y="1887.50"></text></g><g><title>core::clone::Clone::clone (9 samples, 0.11%)</title><rect x="92.7625%" y="1861" width="0.1084%" height="15" fill="rgb(237,170,32)" fg:x="7703" fg:w="9"/><text x="93.0125%" y="1871.50"></text></g><g><title>&lt;vm_library::managed::value::Value as core::clone::Clone&gt;::clone (9 samples, 0.11%)</title><rect x="92.7625%" y="1845" width="0.1084%" height="15" fill="rgb(212,35,42)" fg:x="7703" fg:w="9"/><text x="93.0125%" y="1855.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="92.8227%" y="1829" width="0.0482%" height="15" fill="rgb(227,31,34)" fg:x="7708" fg:w="4"/><text x="93.0727%" y="1839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="92.8348%" y="1813" width="0.0361%" height="15" fill="rgb(216,19,18)" fg:x="7709" fg:w="3"/><text x="93.0848%" y="1823.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.04%)</title><rect x="92.8348%" y="1797" width="0.0361%" height="15" fill="rgb(211,133,42)" fg:x="7709" fg:w="3"/><text x="93.0848%" y="1807.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.04%)</title><rect x="92.8348%" y="1781" width="0.0361%" height="15" fill="rgb(244,66,13)" fg:x="7709" fg:w="3"/><text x="93.0848%" y="1791.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.04%)</title><rect x="92.8348%" y="1765" width="0.0361%" height="15" fill="rgb(218,185,50)" fg:x="7709" fg:w="3"/><text x="93.0848%" y="1775.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="92.8589%" y="1749" width="0.0120%" height="15" fill="rgb(219,149,13)" fg:x="7711" fg:w="1"/><text x="93.1089%" y="1759.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="92.8589%" y="1733" width="0.0120%" height="15" fill="rgb(221,125,0)" fg:x="7711" fg:w="1"/><text x="93.1089%" y="1743.50"></text></g><g><title>&lt;im_rc::nodes::btree::Node&lt;A&gt; as core::clone::Clone&gt;::clone (22 samples, 0.26%)</title><rect x="92.7625%" y="1893" width="0.2649%" height="15" fill="rgb(247,126,27)" fg:x="7703" fg:w="22"/><text x="93.0125%" y="1903.50"></text></g><g><title>__memcpy_avx_unaligned_erms (13 samples, 0.16%)</title><rect x="92.8709%" y="1877" width="0.1566%" height="15" fill="rgb(250,138,30)" fg:x="7712" fg:w="13"/><text x="93.1209%" y="1887.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (12 samples, 0.14%)</title><rect x="93.0275%" y="1893" width="0.1445%" height="15" fill="rgb(230,151,9)" fg:x="7725" fg:w="12"/><text x="93.2775%" y="1903.50"></text></g><g><title>core::ptr::write (12 samples, 0.14%)</title><rect x="93.0275%" y="1877" width="0.1445%" height="15" fill="rgb(233,80,38)" fg:x="7725" fg:w="12"/><text x="93.2775%" y="1887.50"></text></g><g><title>__memcpy_avx_unaligned_erms (12 samples, 0.14%)</title><rect x="93.0275%" y="1861" width="0.1445%" height="15" fill="rgb(232,68,43)" fg:x="7725" fg:w="12"/><text x="93.2775%" y="1871.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (35 samples, 0.42%)</title><rect x="92.7625%" y="1909" width="0.4215%" height="15" fill="rgb(254,5,50)" fg:x="7703" fg:w="35"/><text x="93.0125%" y="1919.50"></text></g><g><title>im_rc::ord::map::OrdMap&lt;K,V&gt;::insert (1 samples, 0.01%)</title><rect x="93.1720%" y="1893" width="0.0120%" height="15" fill="rgb(225,45,5)" fg:x="7737" fg:w="1"/><text x="93.4220%" y="1903.50"></text></g><g><title>im_rc::fakepool::Rc&lt;A&gt;::make_mut (36 samples, 0.43%)</title><rect x="92.7625%" y="1941" width="0.4335%" height="15" fill="rgb(239,22,3)" fg:x="7703" fg:w="36"/><text x="93.0125%" y="1951.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::make_mut (36 samples, 0.43%)</title><rect x="92.7625%" y="1925" width="0.4335%" height="15" fill="rgb(243,129,0)" fg:x="7703" fg:w="36"/><text x="93.0125%" y="1935.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_uninit (1 samples, 0.01%)</title><rect x="93.1840%" y="1909" width="0.0120%" height="15" fill="rgb(223,164,0)" fg:x="7738" fg:w="1"/><text x="93.4340%" y="1919.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::allocate_for_layout (1 samples, 0.01%)</title><rect x="93.1840%" y="1893" width="0.0120%" height="15" fill="rgb(221,46,29)" fg:x="7738" fg:w="1"/><text x="93.4340%" y="1903.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::try_allocate_for_layout (1 samples, 0.01%)</title><rect x="93.1840%" y="1877" width="0.0120%" height="15" fill="rgb(205,97,47)" fg:x="7738" fg:w="1"/><text x="93.4340%" y="1887.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_uninit::{{closure}} (1 samples, 0.01%)</title><rect x="93.1840%" y="1861" width="0.0120%" height="15" fill="rgb(249,14,8)" fg:x="7738" fg:w="1"/><text x="93.4340%" y="1871.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="93.1840%" y="1845" width="0.0120%" height="15" fill="rgb(216,77,3)" fg:x="7738" fg:w="1"/><text x="93.4340%" y="1855.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="93.1840%" y="1829" width="0.0120%" height="15" fill="rgb(206,168,54)" fg:x="7738" fg:w="1"/><text x="93.4340%" y="1839.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="93.1840%" y="1813" width="0.0120%" height="15" fill="rgb(236,3,41)" fg:x="7738" fg:w="1"/><text x="93.4340%" y="1823.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.01%)</title><rect x="93.1840%" y="1797" width="0.0120%" height="15" fill="rgb(231,132,24)" fg:x="7738" fg:w="1"/><text x="93.4340%" y="1807.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.01%)</title><rect x="93.1840%" y="1781" width="0.0120%" height="15" fill="rgb(227,221,40)" fg:x="7738" fg:w="1"/><text x="93.4340%" y="1791.50"></text></g><g><title>mi_block_next (1 samples, 0.01%)</title><rect x="93.1840%" y="1765" width="0.0120%" height="15" fill="rgb(233,151,11)" fg:x="7738" fg:w="1"/><text x="93.4340%" y="1775.50"></text></g><g><title>mi_is_in_same_page (1 samples, 0.01%)</title><rect x="93.1840%" y="1749" width="0.0120%" height="15" fill="rgb(247,81,35)" fg:x="7738" fg:w="1"/><text x="93.4340%" y="1759.50"></text></g><g><title>_mi_ptr_segment (1 samples, 0.01%)</title><rect x="93.1840%" y="1733" width="0.0120%" height="15" fill="rgb(243,128,48)" fg:x="7738" fg:w="1"/><text x="93.4340%" y="1743.50"></text></g><g><title>im_rc::ord::map::OrdMap&lt;K,V&gt;::insert (38 samples, 0.46%)</title><rect x="92.7625%" y="1957" width="0.4576%" height="15" fill="rgb(253,16,10)" fg:x="7703" fg:w="38"/><text x="93.0125%" y="1967.50"></text></g><g><title>im_rc::nodes::btree::Node&lt;A&gt;::insert (2 samples, 0.02%)</title><rect x="93.1961%" y="1941" width="0.0241%" height="15" fill="rgb(228,67,27)" fg:x="7739" fg:w="2"/><text x="93.4461%" y="1951.50"></text></g><g><title>__rust_probestack (1 samples, 0.01%)</title><rect x="93.2081%" y="1925" width="0.0120%" height="15" fill="rgb(231,105,25)" fg:x="7740" fg:w="1"/><text x="93.4581%" y="1935.50"></text></g><g><title>mi_page_free_list_extend_secure (1 samples, 0.01%)</title><rect x="93.2201%" y="1957" width="0.0120%" height="15" fill="rgb(213,166,47)" fg:x="7741" fg:w="1"/><text x="93.4701%" y="1967.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="93.2201%" y="1941" width="0.0120%" height="15" fill="rgb(209,27,10)" fg:x="7741" fg:w="1"/><text x="93.4701%" y="1951.50"></text></g><g><title>mi_segment_commitx (4 samples, 0.05%)</title><rect x="93.2322%" y="1957" width="0.0482%" height="15" fill="rgb(241,44,30)" fg:x="7742" fg:w="4"/><text x="93.4822%" y="1967.50"></text></g><g><title>_mi_os_commit (4 samples, 0.05%)</title><rect x="93.2322%" y="1941" width="0.0482%" height="15" fill="rgb(223,216,15)" fg:x="7742" fg:w="4"/><text x="93.4822%" y="1951.50"></text></g><g><title>mi_os_commitx (4 samples, 0.05%)</title><rect x="93.2322%" y="1925" width="0.0482%" height="15" fill="rgb(227,14,7)" fg:x="7742" fg:w="4"/><text x="93.4822%" y="1935.50"></text></g><g><title>__GI___mprotect (4 samples, 0.05%)</title><rect x="93.2322%" y="1909" width="0.0482%" height="15" fill="rgb(237,14,5)" fg:x="7742" fg:w="4"/><text x="93.4822%" y="1919.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="93.2322%" y="1893" width="0.0482%" height="15" fill="rgb(232,14,36)" fg:x="7742" fg:w="4"/><text x="93.4822%" y="1903.50"></text></g><g><title>corosensei::coroutine::on_stack::wrapper (1 samples, 0.01%)</title><rect x="93.4249%" y="1925" width="0.0120%" height="15" fill="rgb(234,0,38)" fg:x="7758" fg:w="1"/><text x="93.6749%" y="1935.50"></text></g><g><title>vm_library::managed::imports::sender (1 samples, 0.01%)</title><rect x="93.5453%" y="1701" width="0.0120%" height="15" fill="rgb(207,170,14)" fg:x="7768" fg:w="1"/><text x="93.7953%" y="1711.50"></text></g><g><title>vm_library::env::Context::bump (1 samples, 0.01%)</title><rect x="93.5453%" y="1685" width="0.0120%" height="15" fill="rgb(252,45,13)" fg:x="7768" fg:w="1"/><text x="93.7953%" y="1695.50"></text></g><g><title>&lt;Func as wasmer::sys::externals::function::inner::HostFunction&lt;(),Rets,wasmer::sys::externals::function::inner::WithEnv,Env&gt;&gt;::function_body_ptr::func_wrapper::{{closure}} (3 samples, 0.04%)</title><rect x="93.5453%" y="1829" width="0.0361%" height="15" fill="rgb(213,142,7)" fg:x="7768" fg:w="3"/><text x="93.7953%" y="1839.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.04%)</title><rect x="93.5453%" y="1813" width="0.0361%" height="15" fill="rgb(216,157,23)" fg:x="7768" fg:w="3"/><text x="93.7953%" y="1823.50"></text></g><g><title>std::panicking::try (3 samples, 0.04%)</title><rect x="93.5453%" y="1797" width="0.0361%" height="15" fill="rgb(212,145,33)" fg:x="7768" fg:w="3"/><text x="93.7953%" y="1807.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.04%)</title><rect x="93.5453%" y="1781" width="0.0361%" height="15" fill="rgb(233,26,13)" fg:x="7768" fg:w="3"/><text x="93.7953%" y="1791.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.04%)</title><rect x="93.5453%" y="1765" width="0.0361%" height="15" fill="rgb(219,196,19)" fg:x="7768" fg:w="3"/><text x="93.7953%" y="1775.50"></text></g><g><title>core::ops::function::FnOnce::call_once (3 samples, 0.04%)</title><rect x="93.5453%" y="1749" width="0.0361%" height="15" fill="rgb(246,56,21)" fg:x="7768" fg:w="3"/><text x="93.7953%" y="1759.50"></text></g><g><title>&lt;Func as wasmer::sys::externals::function::inner::HostFunction&lt;(),Rets,wasmer::sys::externals::function::inner::WithEnv,Env&gt;&gt;::function_body_ptr::func_wrapper::{{closure}}::{{closure}} (3 samples, 0.04%)</title><rect x="93.5453%" y="1733" width="0.0361%" height="15" fill="rgb(222,28,53)" fg:x="7768" fg:w="3"/><text x="93.7953%" y="1743.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.04%)</title><rect x="93.5453%" y="1717" width="0.0361%" height="15" fill="rgb(224,5,27)" fg:x="7768" fg:w="3"/><text x="93.7953%" y="1727.50"></text></g><g><title>vm_library::managed::imports::unit (2 samples, 0.02%)</title><rect x="93.5573%" y="1701" width="0.0241%" height="15" fill="rgb(220,153,33)" fg:x="7769" fg:w="2"/><text x="93.8073%" y="1711.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.02%)</title><rect x="93.5573%" y="1685" width="0.0241%" height="15" fill="rgb(226,58,19)" fg:x="7769" fg:w="2"/><text x="93.8073%" y="1695.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.02%)</title><rect x="93.5573%" y="1669" width="0.0241%" height="15" fill="rgb(239,112,23)" fg:x="7769" fg:w="2"/><text x="93.8073%" y="1679.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.02%)</title><rect x="93.5573%" y="1653" width="0.0241%" height="15" fill="rgb(251,213,20)" fg:x="7769" fg:w="2"/><text x="93.8073%" y="1663.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.02%)</title><rect x="93.5573%" y="1637" width="0.0241%" height="15" fill="rgb(215,181,21)" fg:x="7769" fg:w="2"/><text x="93.8073%" y="1647.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="93.5573%" y="1621" width="0.0241%" height="15" fill="rgb(240,8,35)" fg:x="7769" fg:w="2"/><text x="93.8073%" y="1631.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.02%)</title><rect x="93.5573%" y="1605" width="0.0241%" height="15" fill="rgb(232,203,3)" fg:x="7769" fg:w="2"/><text x="93.8073%" y="1615.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.05%)</title><rect x="93.6898%" y="1733" width="0.0482%" height="15" fill="rgb(214,202,43)" fg:x="7780" fg:w="4"/><text x="93.9398%" y="1743.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as wasmer::sys::externals::function::inner::IntoResult&lt;T&gt;&gt;::into_result (1 samples, 0.01%)</title><rect x="93.7380%" y="1733" width="0.0120%" height="15" fill="rgb(254,35,11)" fg:x="7784" fg:w="1"/><text x="93.9880%" y="1743.50"></text></g><g><title>&lt;slotmap::DefaultKey as core::convert::From&lt;slotmap::KeyData&gt;&gt;::from (1 samples, 0.01%)</title><rect x="93.7861%" y="1717" width="0.0120%" height="15" fill="rgb(239,173,13)" fg:x="7788" fg:w="1"/><text x="94.0361%" y="1727.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.01%)</title><rect x="93.7982%" y="1685" width="0.0120%" height="15" fill="rgb(220,141,0)" fg:x="7789" fg:w="1"/><text x="94.0482%" y="1695.50"></text></g><g><title>rug::integer::traits::&lt;impl core::convert::From&lt;i8&gt; for rug::integer::big::Integer&gt;::from (1 samples, 0.01%)</title><rect x="93.7982%" y="1669" width="0.0120%" height="15" fill="rgb(210,98,12)" fg:x="7789" fg:w="1"/><text x="94.0482%" y="1679.50"></text></g><g><title>rug::integer::traits::&lt;impl core::convert::From&lt;i32&gt; for rug::integer::big::Integer&gt;::from (1 samples, 0.01%)</title><rect x="93.7982%" y="1653" width="0.0120%" height="15" fill="rgb(254,153,22)" fg:x="7789" fg:w="1"/><text x="94.0482%" y="1663.50"></text></g><g><title>rug::ext::xmpz::init_set_i32 (1 samples, 0.01%)</title><rect x="93.7982%" y="1637" width="0.0120%" height="15" fill="rgb(247,223,17)" fg:x="7789" fg:w="1"/><text x="94.0482%" y="1647.50"></text></g><g><title>rug::ext::xmpz64::init_set_u32 (1 samples, 0.01%)</title><rect x="93.7982%" y="1621" width="0.0120%" height="15" fill="rgb(246,56,7)" fg:x="7789" fg:w="1"/><text x="94.0482%" y="1631.50"></text></g><g><title>rug::ext::xmpz64::init_set_u64 (1 samples, 0.01%)</title><rect x="93.7982%" y="1605" width="0.0120%" height="15" fill="rgb(240,226,12)" fg:x="7789" fg:w="1"/><text x="94.0482%" y="1615.50"></text></g><g><title>__gmpz_init2 (1 samples, 0.01%)</title><rect x="93.7982%" y="1589" width="0.0120%" height="15" fill="rgb(205,87,46)" fg:x="7789" fg:w="1"/><text x="94.0482%" y="1599.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (1 samples, 0.01%)</title><rect x="93.8343%" y="1669" width="0.0120%" height="15" fill="rgb(245,214,51)" fg:x="7792" fg:w="1"/><text x="94.0843%" y="1679.50"></text></g><g><title>&lt;vm_library::managed::value::Value as core::cmp::Ord&gt;::cmp (4 samples, 0.05%)</title><rect x="93.8102%" y="1685" width="0.0482%" height="15" fill="rgb(223,172,33)" fg:x="7790" fg:w="4"/><text x="94.0602%" y="1695.50"></text></g><g><title>rug::integer::cmp::&lt;impl core::cmp::Ord for rug::integer::big::Integer&gt;::cmp (1 samples, 0.01%)</title><rect x="93.8463%" y="1669" width="0.0120%" height="15" fill="rgb(227,203,34)" fg:x="7793" fg:w="1"/><text x="94.0963%" y="1679.50"></text></g><g><title>rug::ext::xmpz::cmp (1 samples, 0.01%)</title><rect x="93.8463%" y="1653" width="0.0120%" height="15" fill="rgb(248,143,44)" fg:x="7793" fg:w="1"/><text x="94.0963%" y="1663.50"></text></g><g><title>__gmpz_cmp (1 samples, 0.01%)</title><rect x="93.8463%" y="1637" width="0.0120%" height="15" fill="rgb(226,162,5)" fg:x="7793" fg:w="1"/><text x="94.0963%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;vm_library::managed::value::Value&gt; (2 samples, 0.02%)</title><rect x="93.8584%" y="1685" width="0.0241%" height="15" fill="rgb(211,143,1)" fg:x="7794" fg:w="2"/><text x="94.1084%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;rug::integer::big::Integer&gt; (1 samples, 0.01%)</title><rect x="93.8704%" y="1669" width="0.0120%" height="15" fill="rgb(224,96,15)" fg:x="7795" fg:w="1"/><text x="94.1204%" y="1679.50"></text></g><g><title>rug::integer::traits::&lt;impl core::ops::drop::Drop for rug::integer::big::Integer&gt;::drop (1 samples, 0.01%)</title><rect x="93.8704%" y="1653" width="0.0120%" height="15" fill="rgb(222,4,38)" fg:x="7795" fg:w="1"/><text x="94.1204%" y="1663.50"></text></g><g><title>rug::ext::xmpz::clear (1 samples, 0.01%)</title><rect x="93.8704%" y="1637" width="0.0120%" height="15" fill="rgb(253,228,15)" fg:x="7795" fg:w="1"/><text x="94.1204%" y="1647.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.01%)</title><rect x="93.8945%" y="1605" width="0.0120%" height="15" fill="rgb(242,194,12)" fg:x="7797" fg:w="1"/><text x="94.1445%" y="1615.50"></text></g><g><title>wasmer_types::values::&lt;impl core::convert::TryFrom&lt;wasmer_types::values::Value&lt;T&gt;&gt; for i32&gt;::try_from (1 samples, 0.01%)</title><rect x="93.8945%" y="1589" width="0.0120%" height="15" fill="rgb(214,177,31)" fg:x="7797" fg:w="1"/><text x="94.1445%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;wasmer_types::values::Value&lt;wasmer::sys::externals::function::Function&gt;&gt; (1 samples, 0.01%)</title><rect x="93.8945%" y="1573" width="0.0120%" height="15" fill="rgb(226,58,51)" fg:x="7797" fg:w="1"/><text x="94.1445%" y="1583.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="93.9066%" y="1525" width="0.0120%" height="15" fill="rgb(250,119,16)" fg:x="7798" fg:w="1"/><text x="94.1566%" y="1535.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="93.9066%" y="1509" width="0.0120%" height="15" fill="rgb(223,128,53)" fg:x="7798" fg:w="1"/><text x="94.1566%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="93.9066%" y="1493" width="0.0120%" height="15" fill="rgb(251,199,15)" fg:x="7798" fg:w="1"/><text x="94.1566%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.01%)</title><rect x="93.9066%" y="1477" width="0.0120%" height="15" fill="rgb(235,168,42)" fg:x="7798" fg:w="1"/><text x="94.1566%" y="1487.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (2 samples, 0.02%)</title><rect x="93.9066%" y="1541" width="0.0241%" height="15" fill="rgb(250,210,17)" fg:x="7798" fg:w="2"/><text x="94.1566%" y="1551.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="93.9186%" y="1525" width="0.0120%" height="15" fill="rgb(226,36,41)" fg:x="7799" fg:w="1"/><text x="94.1686%" y="1535.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="93.9186%" y="1509" width="0.0120%" height="15" fill="rgb(225,87,10)" fg:x="7799" fg:w="1"/><text x="94.1686%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="93.9186%" y="1493" width="0.0120%" height="15" fill="rgb(228,83,9)" fg:x="7799" fg:w="1"/><text x="94.1686%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="93.9186%" y="1477" width="0.0120%" height="15" fill="rgb(225,16,36)" fg:x="7799" fg:w="1"/><text x="94.1686%" y="1487.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="93.9186%" y="1461" width="0.0120%" height="15" fill="rgb(242,198,13)" fg:x="7799" fg:w="1"/><text x="94.1686%" y="1471.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::{{closure}} (2 samples, 0.02%)</title><rect x="93.9306%" y="1477" width="0.0241%" height="15" fill="rgb(239,25,51)" fg:x="7800" fg:w="2"/><text x="94.1806%" y="1487.50"></text></g><g><title>indexmap::map::core::equivalent::{{closure}} (2 samples, 0.02%)</title><rect x="93.9306%" y="1461" width="0.0241%" height="15" fill="rgb(239,28,37)" fg:x="7800" fg:w="2"/><text x="94.1806%" y="1471.50"></text></g><g><title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (2 samples, 0.02%)</title><rect x="93.9306%" y="1445" width="0.0241%" height="15" fill="rgb(234,70,17)" fg:x="7800" fg:w="2"/><text x="94.1806%" y="1455.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.02%)</title><rect x="93.9306%" y="1429" width="0.0241%" height="15" fill="rgb(231,215,53)" fg:x="7800" fg:w="2"/><text x="94.1806%" y="1439.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.02%)</title><rect x="93.9306%" y="1413" width="0.0241%" height="15" fill="rgb(218,140,42)" fg:x="7800" fg:w="2"/><text x="94.1806%" y="1423.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.02%)</title><rect x="93.9306%" y="1397" width="0.0241%" height="15" fill="rgb(233,227,45)" fg:x="7800" fg:w="2"/><text x="94.1806%" y="1407.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.02%)</title><rect x="93.9306%" y="1381" width="0.0241%" height="15" fill="rgb(225,189,21)" fg:x="7800" fg:w="2"/><text x="94.1806%" y="1391.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="93.9427%" y="1365" width="0.0120%" height="15" fill="rgb(237,176,54)" fg:x="7801" fg:w="1"/><text x="94.1927%" y="1375.50"></text></g><g><title>wasmer::sys::exports::Exports::get_global (5 samples, 0.06%)</title><rect x="93.9066%" y="1605" width="0.0602%" height="15" fill="rgb(215,131,46)" fg:x="7798" fg:w="5"/><text x="94.1566%" y="1615.50"></text></g><g><title>wasmer::sys::exports::Exports::get (5 samples, 0.06%)</title><rect x="93.9066%" y="1589" width="0.0602%" height="15" fill="rgb(218,95,20)" fg:x="7798" fg:w="5"/><text x="94.1566%" y="1599.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (5 samples, 0.06%)</title><rect x="93.9066%" y="1573" width="0.0602%" height="15" fill="rgb(208,198,12)" fg:x="7798" fg:w="5"/><text x="94.1566%" y="1583.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (5 samples, 0.06%)</title><rect x="93.9066%" y="1557" width="0.0602%" height="15" fill="rgb(239,107,50)" fg:x="7798" fg:w="5"/><text x="94.1566%" y="1567.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (3 samples, 0.04%)</title><rect x="93.9306%" y="1541" width="0.0361%" height="15" fill="rgb(240,217,37)" fg:x="7800" fg:w="3"/><text x="94.1806%" y="1551.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (3 samples, 0.04%)</title><rect x="93.9306%" y="1525" width="0.0361%" height="15" fill="rgb(242,197,49)" fg:x="7800" fg:w="3"/><text x="94.1806%" y="1535.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (3 samples, 0.04%)</title><rect x="93.9306%" y="1509" width="0.0361%" height="15" fill="rgb(219,171,17)" fg:x="7800" fg:w="3"/><text x="94.1806%" y="1519.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (3 samples, 0.04%)</title><rect x="93.9306%" y="1493" width="0.0361%" height="15" fill="rgb(209,81,40)" fg:x="7800" fg:w="3"/><text x="94.1806%" y="1503.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="93.9547%" y="1477" width="0.0120%" height="15" fill="rgb(237,156,30)" fg:x="7802" fg:w="1"/><text x="94.2047%" y="1487.50"></text></g><g><title>vm_library::env::Context::get_gas_left (7 samples, 0.08%)</title><rect x="93.8945%" y="1669" width="0.0843%" height="15" fill="rgb(212,127,16)" fg:x="7797" fg:w="7"/><text x="94.1445%" y="1679.50"></text></g><g><title>vm_library::env::Context::with_instance (7 samples, 0.08%)</title><rect x="93.8945%" y="1653" width="0.0843%" height="15" fill="rgb(226,66,32)" fg:x="7797" fg:w="7"/><text x="94.1445%" y="1663.50"></text></g><g><title>vm_library::env::Context::get_gas_left::{{closure}} (7 samples, 0.08%)</title><rect x="93.8945%" y="1637" width="0.0843%" height="15" fill="rgb(245,22,46)" fg:x="7797" fg:w="7"/><text x="94.1445%" y="1647.50"></text></g><g><title>wasmer_middlewares::metering::get_remaining_points (7 samples, 0.08%)</title><rect x="93.8945%" y="1621" width="0.0843%" height="15" fill="rgb(210,112,21)" fg:x="7797" fg:w="7"/><text x="94.1445%" y="1631.50"></text></g><g><title>wasmer::sys::externals::global::Global::get (1 samples, 0.01%)</title><rect x="93.9668%" y="1605" width="0.0120%" height="15" fill="rgb(207,118,39)" fg:x="7803" fg:w="1"/><text x="94.2168%" y="1615.50"></text></g><g><title>wasmer_vm::global::Global::get (1 samples, 0.01%)</title><rect x="93.9668%" y="1589" width="0.0120%" height="15" fill="rgb(205,206,35)" fg:x="7803" fg:w="1"/><text x="94.2168%" y="1599.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="93.9668%" y="1573" width="0.0120%" height="15" fill="rgb(222,120,2)" fg:x="7803" fg:w="1"/><text x="94.2168%" y="1583.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.01%)</title><rect x="93.9668%" y="1557" width="0.0120%" height="15" fill="rgb(205,38,18)" fg:x="7803" fg:w="1"/><text x="94.2168%" y="1567.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (1 samples, 0.01%)</title><rect x="93.9668%" y="1541" width="0.0120%" height="15" fill="rgb(226,61,2)" fg:x="7803" fg:w="1"/><text x="94.2168%" y="1551.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::convert::AsRef&lt;T&gt;&gt;::as_ref (1 samples, 0.01%)</title><rect x="93.9788%" y="1637" width="0.0120%" height="15" fill="rgb(242,161,23)" fg:x="7804" fg:w="1"/><text x="94.2288%" y="1647.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="93.9908%" y="1525" width="0.0120%" height="15" fill="rgb(213,13,52)" fg:x="7805" fg:w="1"/><text x="94.2408%" y="1535.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="93.9908%" y="1509" width="0.0120%" height="15" fill="rgb(246,209,47)" fg:x="7805" fg:w="1"/><text x="94.2408%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="93.9908%" y="1493" width="0.0120%" height="15" fill="rgb(214,41,3)" fg:x="7805" fg:w="1"/><text x="94.2408%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="93.9908%" y="1477" width="0.0120%" height="15" fill="rgb(236,119,38)" fg:x="7805" fg:w="1"/><text x="94.2408%" y="1487.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="93.9908%" y="1461" width="0.0120%" height="15" fill="rgb(218,50,11)" fg:x="7805" fg:w="1"/><text x="94.2408%" y="1471.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (2 samples, 0.02%)</title><rect x="93.9908%" y="1541" width="0.0241%" height="15" fill="rgb(228,38,11)" fg:x="7805" fg:w="2"/><text x="94.2408%" y="1551.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="94.0029%" y="1525" width="0.0120%" height="15" fill="rgb(212,13,9)" fg:x="7806" fg:w="1"/><text x="94.2529%" y="1535.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="94.0029%" y="1509" width="0.0120%" height="15" fill="rgb(208,211,9)" fg:x="7806" fg:w="1"/><text x="94.2529%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="94.0029%" y="1493" width="0.0120%" height="15" fill="rgb(239,39,32)" fg:x="7806" fg:w="1"/><text x="94.2529%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="94.0029%" y="1477" width="0.0120%" height="15" fill="rgb(254,179,26)" fg:x="7806" fg:w="1"/><text x="94.2529%" y="1487.50"></text></g><g><title>wasmer::sys::exports::Exports::get_global (3 samples, 0.04%)</title><rect x="93.9908%" y="1605" width="0.0361%" height="15" fill="rgb(249,165,28)" fg:x="7805" fg:w="3"/><text x="94.2408%" y="1615.50"></text></g><g><title>wasmer::sys::exports::Exports::get (3 samples, 0.04%)</title><rect x="93.9908%" y="1589" width="0.0361%" height="15" fill="rgb(225,59,50)" fg:x="7805" fg:w="3"/><text x="94.2408%" y="1599.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (3 samples, 0.04%)</title><rect x="93.9908%" y="1573" width="0.0361%" height="15" fill="rgb(209,122,5)" fg:x="7805" fg:w="3"/><text x="94.2408%" y="1583.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (3 samples, 0.04%)</title><rect x="93.9908%" y="1557" width="0.0361%" height="15" fill="rgb(214,65,34)" fg:x="7805" fg:w="3"/><text x="94.2408%" y="1567.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (1 samples, 0.01%)</title><rect x="94.0149%" y="1541" width="0.0120%" height="15" fill="rgb(249,183,32)" fg:x="7807" fg:w="1"/><text x="94.2649%" y="1551.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="94.0149%" y="1525" width="0.0120%" height="15" fill="rgb(218,122,24)" fg:x="7807" fg:w="1"/><text x="94.2649%" y="1535.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="94.0149%" y="1509" width="0.0120%" height="15" fill="rgb(224,109,18)" fg:x="7807" fg:w="1"/><text x="94.2649%" y="1519.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.01%)</title><rect x="94.0149%" y="1493" width="0.0120%" height="15" fill="rgb(210,68,50)" fg:x="7807" fg:w="1"/><text x="94.2649%" y="1503.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.01%)</title><rect x="94.0149%" y="1477" width="0.0120%" height="15" fill="rgb(212,184,34)" fg:x="7807" fg:w="1"/><text x="94.2649%" y="1487.50"></text></g><g><title>indexmap::map::core::equivalent::{{closure}} (1 samples, 0.01%)</title><rect x="94.0149%" y="1461" width="0.0120%" height="15" fill="rgb(238,105,48)" fg:x="7807" fg:w="1"/><text x="94.2649%" y="1471.50"></text></g><g><title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.01%)</title><rect x="94.0149%" y="1445" width="0.0120%" height="15" fill="rgb(222,134,54)" fg:x="7807" fg:w="1"/><text x="94.2649%" y="1455.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.01%)</title><rect x="94.0149%" y="1429" width="0.0120%" height="15" fill="rgb(246,24,43)" fg:x="7807" fg:w="1"/><text x="94.2649%" y="1439.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="94.0149%" y="1413" width="0.0120%" height="15" fill="rgb(227,169,22)" fg:x="7807" fg:w="1"/><text x="94.2649%" y="1423.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="94.0149%" y="1397" width="0.0120%" height="15" fill="rgb(253,152,4)" fg:x="7807" fg:w="1"/><text x="94.2649%" y="1407.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="94.0149%" y="1381" width="0.0120%" height="15" fill="rgb(219,158,36)" fg:x="7807" fg:w="1"/><text x="94.2649%" y="1391.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="94.0149%" y="1365" width="0.0120%" height="15" fill="rgb(251,128,40)" fg:x="7807" fg:w="1"/><text x="94.2649%" y="1375.50"></text></g><g><title>vm_library::managed::imports::compare (20 samples, 0.24%)</title><rect x="93.7982%" y="1701" width="0.2408%" height="15" fill="rgb(254,101,39)" fg:x="7789" fg:w="20"/><text x="94.0482%" y="1711.50"></text></g><g><title>vm_library::env::Context::update_gas (13 samples, 0.16%)</title><rect x="93.8825%" y="1685" width="0.1566%" height="15" fill="rgb(221,168,40)" fg:x="7796" fg:w="13"/><text x="94.1325%" y="1695.50"></text></g><g><title>vm_library::env::Context::set_gas_left (5 samples, 0.06%)</title><rect x="93.9788%" y="1669" width="0.0602%" height="15" fill="rgb(221,14,27)" fg:x="7804" fg:w="5"/><text x="94.2288%" y="1679.50"></text></g><g><title>vm_library::env::Context::with_instance (5 samples, 0.06%)</title><rect x="93.9788%" y="1653" width="0.0602%" height="15" fill="rgb(207,36,43)" fg:x="7804" fg:w="5"/><text x="94.2288%" y="1663.50"></text></g><g><title>vm_library::env::Context::set_gas_left::{{closure}} (4 samples, 0.05%)</title><rect x="93.9908%" y="1637" width="0.0482%" height="15" fill="rgb(240,172,53)" fg:x="7805" fg:w="4"/><text x="94.2408%" y="1647.50"></text></g><g><title>wasmer_middlewares::metering::set_remaining_points (4 samples, 0.05%)</title><rect x="93.9908%" y="1621" width="0.0482%" height="15" fill="rgb(241,138,43)" fg:x="7805" fg:w="4"/><text x="94.2408%" y="1631.50"></text></g><g><title>wasmer::sys::externals::global::Global::set (1 samples, 0.01%)</title><rect x="94.0270%" y="1605" width="0.0120%" height="15" fill="rgb(227,78,19)" fg:x="7808" fg:w="1"/><text x="94.2770%" y="1615.50"></text></g><g><title>wasmer_vm::global::Global::set (1 samples, 0.01%)</title><rect x="94.0270%" y="1589" width="0.0120%" height="15" fill="rgb(215,127,44)" fg:x="7808" fg:w="1"/><text x="94.2770%" y="1599.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::convert::From&lt;T&gt;&gt;::from (1 samples, 0.01%)</title><rect x="94.0511%" y="1653" width="0.0120%" height="15" fill="rgb(227,13,10)" fg:x="7810" fg:w="1"/><text x="94.3011%" y="1663.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="94.0511%" y="1637" width="0.0120%" height="15" fill="rgb(249,177,6)" fg:x="7810" fg:w="1"/><text x="94.3011%" y="1647.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="94.0511%" y="1621" width="0.0120%" height="15" fill="rgb(215,154,26)" fg:x="7810" fg:w="1"/><text x="94.3011%" y="1631.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="94.0511%" y="1605" width="0.0120%" height="15" fill="rgb(250,168,20)" fg:x="7810" fg:w="1"/><text x="94.3011%" y="1615.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="94.0511%" y="1589" width="0.0120%" height="15" fill="rgb(222,53,38)" fg:x="7810" fg:w="1"/><text x="94.3011%" y="1599.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="94.0511%" y="1573" width="0.0120%" height="15" fill="rgb(245,154,5)" fg:x="7810" fg:w="1"/><text x="94.3011%" y="1583.50"></text></g><g><title>mi_malloc (1 samples, 0.01%)</title><rect x="94.0511%" y="1557" width="0.0120%" height="15" fill="rgb(214,89,50)" fg:x="7810" fg:w="1"/><text x="94.3011%" y="1567.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="94.0872%" y="1589" width="0.0120%" height="15" fill="rgb(232,73,14)" fg:x="7813" fg:w="1"/><text x="94.3372%" y="1599.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (1 samples, 0.01%)</title><rect x="94.0872%" y="1573" width="0.0120%" height="15" fill="rgb(230,101,20)" fg:x="7813" fg:w="1"/><text x="94.3372%" y="1583.50"></text></g><g><title>&lt;vm_library::managed::value::Value as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="94.0872%" y="1557" width="0.0120%" height="15" fill="rgb(208,56,28)" fg:x="7813" fg:w="1"/><text x="94.3372%" y="1567.50"></text></g><g><title>&lt;vm_library::managed::value::Value as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="94.0631%" y="1605" width="0.0482%" height="15" fill="rgb(247,205,22)" fg:x="7811" fg:w="4"/><text x="94.3131%" y="1615.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="94.0992%" y="1589" width="0.0120%" height="15" fill="rgb(252,109,51)" fg:x="7814" fg:w="1"/><text x="94.3492%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="94.0992%" y="1573" width="0.0120%" height="15" fill="rgb(220,40,24)" fg:x="7814" fg:w="1"/><text x="94.3492%" y="1583.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="94.0992%" y="1557" width="0.0120%" height="15" fill="rgb(251,108,7)" fg:x="7814" fg:w="1"/><text x="94.3492%" y="1567.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="94.0992%" y="1541" width="0.0120%" height="15" fill="rgb(238,102,51)" fg:x="7814" fg:w="1"/><text x="94.3492%" y="1551.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="94.0992%" y="1525" width="0.0120%" height="15" fill="rgb(219,149,34)" fg:x="7814" fg:w="1"/><text x="94.3492%" y="1535.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="94.0992%" y="1509" width="0.0120%" height="15" fill="rgb(239,70,0)" fg:x="7814" fg:w="1"/><text x="94.3492%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="94.0992%" y="1493" width="0.0120%" height="15" fill="rgb(246,214,23)" fg:x="7814" fg:w="1"/><text x="94.3492%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="94.0992%" y="1477" width="0.0120%" height="15" fill="rgb(239,221,51)" fg:x="7814" fg:w="1"/><text x="94.3492%" y="1487.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="94.0992%" y="1461" width="0.0120%" height="15" fill="rgb(254,62,14)" fg:x="7814" fg:w="1"/><text x="94.3492%" y="1471.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="94.0992%" y="1445" width="0.0120%" height="15" fill="rgb(253,57,33)" fg:x="7814" fg:w="1"/><text x="94.3492%" y="1455.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="94.0992%" y="1429" width="0.0120%" height="15" fill="rgb(229,34,6)" fg:x="7814" fg:w="1"/><text x="94.3492%" y="1439.50"></text></g><g><title>mi_malloc (1 samples, 0.01%)</title><rect x="94.0992%" y="1413" width="0.0120%" height="15" fill="rgb(235,191,23)" fg:x="7814" fg:w="1"/><text x="94.3492%" y="1423.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.01%)</title><rect x="94.0992%" y="1397" width="0.0120%" height="15" fill="rgb(217,207,27)" fg:x="7814" fg:w="1"/><text x="94.3492%" y="1407.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.01%)</title><rect x="94.0992%" y="1381" width="0.0120%" height="15" fill="rgb(232,41,44)" fg:x="7814" fg:w="1"/><text x="94.3492%" y="1391.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.01%)</title><rect x="94.0992%" y="1365" width="0.0120%" height="15" fill="rgb(221,188,19)" fg:x="7814" fg:w="1"/><text x="94.3492%" y="1375.50"></text></g><g><title>mi_block_next (1 samples, 0.01%)</title><rect x="94.0992%" y="1349" width="0.0120%" height="15" fill="rgb(245,180,45)" fg:x="7814" fg:w="1"/><text x="94.3492%" y="1359.50"></text></g><g><title>mi_block_nextx (1 samples, 0.01%)</title><rect x="94.0992%" y="1333" width="0.0120%" height="15" fill="rgb(250,220,42)" fg:x="7814" fg:w="1"/><text x="94.3492%" y="1343.50"></text></g><g><title>mi_ptr_decode (1 samples, 0.01%)</title><rect x="94.0992%" y="1317" width="0.0120%" height="15" fill="rgb(234,16,34)" fg:x="7814" fg:w="1"/><text x="94.3492%" y="1327.50"></text></g><g><title>&lt;vm_library::managed::value::Value as core::clone::Clone&gt;::clone (5 samples, 0.06%)</title><rect x="94.0631%" y="1653" width="0.0602%" height="15" fill="rgb(233,217,23)" fg:x="7811" fg:w="5"/><text x="94.3131%" y="1663.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.06%)</title><rect x="94.0631%" y="1637" width="0.0602%" height="15" fill="rgb(209,22,46)" fg:x="7811" fg:w="5"/><text x="94.3131%" y="1647.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (5 samples, 0.06%)</title><rect x="94.0631%" y="1621" width="0.0602%" height="15" fill="rgb(213,101,18)" fg:x="7811" fg:w="5"/><text x="94.3131%" y="1631.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.01%)</title><rect x="94.1113%" y="1605" width="0.0120%" height="15" fill="rgb(215,179,52)" fg:x="7815" fg:w="1"/><text x="94.3613%" y="1615.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="94.1113%" y="1589" width="0.0120%" height="15" fill="rgb(223,50,25)" fg:x="7815" fg:w="1"/><text x="94.3613%" y="1599.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.01%)</title><rect x="94.1233%" y="1653" width="0.0120%" height="15" fill="rgb(224,51,44)" fg:x="7816" fg:w="1"/><text x="94.3733%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="94.1233%" y="1637" width="0.0120%" height="15" fill="rgb(224,13,54)" fg:x="7816" fg:w="1"/><text x="94.3733%" y="1647.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="94.1233%" y="1621" width="0.0120%" height="15" fill="rgb(219,58,47)" fg:x="7816" fg:w="1"/><text x="94.3733%" y="1631.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="94.1233%" y="1605" width="0.0120%" height="15" fill="rgb(246,124,34)" fg:x="7816" fg:w="1"/><text x="94.3733%" y="1615.50"></text></g><g><title>wasmer_vm::trap::traphandlers::lazy_per_thread_init (1 samples, 0.01%)</title><rect x="94.1474%" y="1589" width="0.0120%" height="15" fill="rgb(245,109,25)" fg:x="7818" fg:w="1"/><text x="94.3974%" y="1599.50"></text></g><g><title>&lt;wasmer_vm::trap::traphandlers::on_wasm_stack::STACK_POOL as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="94.1594%" y="1573" width="0.0120%" height="15" fill="rgb(235,48,23)" fg:x="7819" fg:w="1"/><text x="94.4094%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;scopeguard::ScopeGuard&lt;corosensei::stack::unix::DefaultStack,wasmer_vm::trap::traphandlers::on_wasm_stack&lt;wasmer_vm::trap::traphandlers::wasmer_call_trampoline&lt;wasmer::sys::store::Store&gt;::{{closure}},()&gt;::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="94.1715%" y="1573" width="0.0120%" height="15" fill="rgb(229,203,36)" fg:x="7820" fg:w="1"/><text x="94.4215%" y="1583.50"></text></g><g><title>&lt;scopeguard::ScopeGuard&lt;T,F,S&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="94.1715%" y="1557" width="0.0120%" height="15" fill="rgb(234,180,9)" fg:x="7820" fg:w="1"/><text x="94.4215%" y="1567.50"></text></g><g><title>wasmer_vm::trap::traphandlers::on_wasm_stack::{{closure}} (1 samples, 0.01%)</title><rect x="94.1715%" y="1541" width="0.0120%" height="15" fill="rgb(228,98,45)" fg:x="7820" fg:w="1"/><text x="94.4215%" y="1551.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (12 samples, 0.14%)</title><rect x="94.0511%" y="1685" width="0.1445%" height="15" fill="rgb(240,24,36)" fg:x="7810" fg:w="12"/><text x="94.3011%" y="1695.50"></text></g><g><title>vm_library::managed::imports::exec::{{closure}} (12 samples, 0.14%)</title><rect x="94.0511%" y="1669" width="0.1445%" height="15" fill="rgb(227,154,19)" fg:x="7810" fg:w="12"/><text x="94.3011%" y="1679.50"></text></g><g><title>vm_library::env::Context::call (5 samples, 0.06%)</title><rect x="94.1354%" y="1653" width="0.0602%" height="15" fill="rgb(231,2,48)" fg:x="7817" fg:w="5"/><text x="94.3854%" y="1663.50"></text></g><g><title>wasmer::sys::native::NativeFunc&lt;(A1,A2),Rets&gt;::call (5 samples, 0.06%)</title><rect x="94.1354%" y="1637" width="0.0602%" height="15" fill="rgb(219,216,0)" fg:x="7817" fg:w="5"/><text x="94.3854%" y="1647.50"></text></g><g><title>wasmer_vm::trap::traphandlers::wasmer_call_trampoline (4 samples, 0.05%)</title><rect x="94.1474%" y="1621" width="0.0482%" height="15" fill="rgb(251,88,0)" fg:x="7818" fg:w="4"/><text x="94.3974%" y="1631.50"></text></g><g><title>wasmer_vm::trap::traphandlers::catch_traps (4 samples, 0.05%)</title><rect x="94.1474%" y="1605" width="0.0482%" height="15" fill="rgb(242,45,45)" fg:x="7818" fg:w="4"/><text x="94.3974%" y="1615.50"></text></g><g><title>wasmer_vm::trap::traphandlers::on_wasm_stack (3 samples, 0.04%)</title><rect x="94.1594%" y="1589" width="0.0361%" height="15" fill="rgb(218,149,45)" fg:x="7819" fg:w="3"/><text x="94.4094%" y="1599.50"></text></g><g><title>corosensei::coroutine::ScopedCoroutine&lt;Input,Yield,Return,Stack&gt;::with_stack (1 samples, 0.01%)</title><rect x="94.1835%" y="1573" width="0.0120%" height="15" fill="rgb(247,194,10)" fg:x="7821" fg:w="1"/><text x="94.4335%" y="1583.50"></text></g><g><title>corosensei::arch::x86_64::init_stack (1 samples, 0.01%)</title><rect x="94.1835%" y="1557" width="0.0120%" height="15" fill="rgb(234,33,37)" fg:x="7821" fg:w="1"/><text x="94.4335%" y="1567.50"></text></g><g><title>corosensei::arch::push (1 samples, 0.01%)</title><rect x="94.1835%" y="1541" width="0.0120%" height="15" fill="rgb(218,61,13)" fg:x="7821" fg:w="1"/><text x="94.4335%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;vm_library::managed::value::Value&gt; (2 samples, 0.02%)</title><rect x="94.1956%" y="1685" width="0.0241%" height="15" fill="rgb(210,80,52)" fg:x="7822" fg:w="2"/><text x="94.4456%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;vm_library::managed::value::Value&gt;&gt; (2 samples, 0.02%)</title><rect x="94.1956%" y="1669" width="0.0241%" height="15" fill="rgb(218,203,27)" fg:x="7822" fg:w="2"/><text x="94.4456%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;vm_library::managed::value::Value&gt; (2 samples, 0.02%)</title><rect x="94.1956%" y="1653" width="0.0241%" height="15" fill="rgb(209,126,33)" fg:x="7822" fg:w="2"/><text x="94.4456%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;vm_library::managed::value::Value&gt;&gt; (2 samples, 0.02%)</title><rect x="94.1956%" y="1637" width="0.0241%" height="15" fill="rgb(234,173,41)" fg:x="7822" fg:w="2"/><text x="94.4456%" y="1647.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="94.1956%" y="1621" width="0.0241%" height="15" fill="rgb(228,166,9)" fg:x="7822" fg:w="2"/><text x="94.4456%" y="1631.50"></text></g><g><title>mi_block_set_next (1 samples, 0.01%)</title><rect x="94.2197%" y="1669" width="0.0120%" height="15" fill="rgb(208,124,43)" fg:x="7824" fg:w="1"/><text x="94.4697%" y="1679.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.01%)</title><rect x="94.2197%" y="1653" width="0.0120%" height="15" fill="rgb(212,154,38)" fg:x="7824" fg:w="1"/><text x="94.4697%" y="1663.50"></text></g><g><title>mi_ptr_encode (1 samples, 0.01%)</title><rect x="94.2197%" y="1637" width="0.0120%" height="15" fill="rgb(246,179,35)" fg:x="7824" fg:w="1"/><text x="94.4697%" y="1647.50"></text></g><g><title>vm_library::managed::imports::exec (17 samples, 0.20%)</title><rect x="94.0390%" y="1701" width="0.2047%" height="15" fill="rgb(251,3,50)" fg:x="7809" fg:w="17"/><text x="94.2890%" y="1711.50"></text></g><g><title>mi_free (2 samples, 0.02%)</title><rect x="94.2197%" y="1685" width="0.0241%" height="15" fill="rgb(219,96,8)" fg:x="7824" fg:w="2"/><text x="94.4697%" y="1695.50"></text></g><g><title>mi_check_is_double_free (1 samples, 0.01%)</title><rect x="94.2317%" y="1669" width="0.0120%" height="15" fill="rgb(251,216,33)" fg:x="7825" fg:w="1"/><text x="94.4817%" y="1679.50"></text></g><g><title>mi_block_nextx (1 samples, 0.01%)</title><rect x="94.2317%" y="1653" width="0.0120%" height="15" fill="rgb(243,145,29)" fg:x="7825" fg:w="1"/><text x="94.4817%" y="1663.50"></text></g><g><title>mi_ptr_decode (1 samples, 0.01%)</title><rect x="94.2317%" y="1637" width="0.0120%" height="15" fill="rgb(210,75,20)" fg:x="7825" fg:w="1"/><text x="94.4817%" y="1647.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::convert::From&lt;T&gt;&gt;::from (1 samples, 0.01%)</title><rect x="94.2437%" y="1653" width="0.0120%" height="15" fill="rgb(235,56,8)" fg:x="7826" fg:w="1"/><text x="94.4937%" y="1663.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="94.2437%" y="1637" width="0.0120%" height="15" fill="rgb(226,175,49)" fg:x="7826" fg:w="1"/><text x="94.4937%" y="1647.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="94.2437%" y="1621" width="0.0120%" height="15" fill="rgb(242,204,23)" fg:x="7826" fg:w="1"/><text x="94.4937%" y="1631.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="94.2437%" y="1605" width="0.0120%" height="15" fill="rgb(225,104,24)" fg:x="7826" fg:w="1"/><text x="94.4937%" y="1615.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="94.2437%" y="1589" width="0.0120%" height="15" fill="rgb(253,34,1)" fg:x="7826" fg:w="1"/><text x="94.4937%" y="1599.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="94.2437%" y="1573" width="0.0120%" height="15" fill="rgb(233,199,23)" fg:x="7826" fg:w="1"/><text x="94.4937%" y="1583.50"></text></g><g><title>mi_malloc (1 samples, 0.01%)</title><rect x="94.2437%" y="1557" width="0.0120%" height="15" fill="rgb(247,7,51)" fg:x="7826" fg:w="1"/><text x="94.4937%" y="1567.50"></text></g><g><title>&lt;vm_library::managed::value::Value as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="94.2558%" y="1605" width="0.0120%" height="15" fill="rgb(214,146,12)" fg:x="7827" fg:w="1"/><text x="94.5058%" y="1615.50"></text></g><g><title>rug::integer::traits::&lt;impl core::clone::Clone for rug::integer::big::Integer&gt;::clone (1 samples, 0.01%)</title><rect x="94.2558%" y="1589" width="0.0120%" height="15" fill="rgb(234,181,43)" fg:x="7827" fg:w="1"/><text x="94.5058%" y="1599.50"></text></g><g><title>rug::ext::xmpz::init_set (1 samples, 0.01%)</title><rect x="94.2558%" y="1573" width="0.0120%" height="15" fill="rgb(239,148,6)" fg:x="7827" fg:w="1"/><text x="94.5058%" y="1583.50"></text></g><g><title>__gmpz_init_set (1 samples, 0.01%)</title><rect x="94.2558%" y="1557" width="0.0120%" height="15" fill="rgb(206,151,17)" fg:x="7827" fg:w="1"/><text x="94.5058%" y="1567.50"></text></g><g><title>__gmp_default_allocate (1 samples, 0.01%)</title><rect x="94.2558%" y="1541" width="0.0120%" height="15" fill="rgb(213,215,10)" fg:x="7827" fg:w="1"/><text x="94.5058%" y="1551.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (2 samples, 0.02%)</title><rect x="94.2558%" y="1621" width="0.0241%" height="15" fill="rgb(215,220,44)" fg:x="7827" fg:w="2"/><text x="94.5058%" y="1631.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.01%)</title><rect x="94.2678%" y="1605" width="0.0120%" height="15" fill="rgb(245,205,37)" fg:x="7828" fg:w="1"/><text x="94.5178%" y="1615.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="94.2678%" y="1589" width="0.0120%" height="15" fill="rgb(245,130,43)" fg:x="7828" fg:w="1"/><text x="94.5178%" y="1599.50"></text></g><g><title>__rg_alloc (1 samples, 0.01%)</title><rect x="94.2799%" y="1541" width="0.0120%" height="15" fill="rgb(231,227,38)" fg:x="7829" fg:w="1"/><text x="94.5299%" y="1551.50"></text></g><g><title>&lt;mimalloc::MiMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.01%)</title><rect x="94.2799%" y="1525" width="0.0120%" height="15" fill="rgb(233,185,4)" fg:x="7829" fg:w="1"/><text x="94.5299%" y="1535.50"></text></g><g><title>mimalloc::may_use_unaligned_api (1 samples, 0.01%)</title><rect x="94.2799%" y="1509" width="0.0120%" height="15" fill="rgb(224,154,43)" fg:x="7829" fg:w="1"/><text x="94.5299%" y="1519.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.07%)</title><rect x="94.2437%" y="1685" width="0.0723%" height="15" fill="rgb(235,156,15)" fg:x="7826" fg:w="6"/><text x="94.4937%" y="1695.50"></text></g><g><title>vm_library::managed::imports::map_get::{{closure}} (6 samples, 0.07%)</title><rect x="94.2437%" y="1669" width="0.0723%" height="15" fill="rgb(211,55,43)" fg:x="7826" fg:w="6"/><text x="94.4937%" y="1679.50"></text></g><g><title>&lt;vm_library::managed::value::Value as core::clone::Clone&gt;::clone (5 samples, 0.06%)</title><rect x="94.2558%" y="1653" width="0.0602%" height="15" fill="rgb(247,149,40)" fg:x="7827" fg:w="5"/><text x="94.5058%" y="1663.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.06%)</title><rect x="94.2558%" y="1637" width="0.0602%" height="15" fill="rgb(232,171,16)" fg:x="7827" fg:w="5"/><text x="94.5058%" y="1647.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (3 samples, 0.04%)</title><rect x="94.2799%" y="1621" width="0.0361%" height="15" fill="rgb(215,117,49)" fg:x="7829" fg:w="3"/><text x="94.5299%" y="1631.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (3 samples, 0.04%)</title><rect x="94.2799%" y="1605" width="0.0361%" height="15" fill="rgb(246,194,11)" fg:x="7829" fg:w="3"/><text x="94.5299%" y="1615.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="94.2799%" y="1589" width="0.0361%" height="15" fill="rgb(242,101,44)" fg:x="7829" fg:w="3"/><text x="94.5299%" y="1599.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.04%)</title><rect x="94.2799%" y="1573" width="0.0361%" height="15" fill="rgb(226,174,6)" fg:x="7829" fg:w="3"/><text x="94.5299%" y="1583.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="94.2799%" y="1557" width="0.0361%" height="15" fill="rgb(213,150,20)" fg:x="7829" fg:w="3"/><text x="94.5299%" y="1567.50"></text></g><g><title>mi_malloc (2 samples, 0.02%)</title><rect x="94.2919%" y="1541" width="0.0241%" height="15" fill="rgb(222,124,42)" fg:x="7830" fg:w="2"/><text x="94.5419%" y="1551.50"></text></g><g><title>mi_heap_malloc (2 samples, 0.02%)</title><rect x="94.2919%" y="1525" width="0.0241%" height="15" fill="rgb(250,19,47)" fg:x="7830" fg:w="2"/><text x="94.5419%" y="1535.50"></text></g><g><title>mi_heap_malloc_small (2 samples, 0.02%)</title><rect x="94.2919%" y="1509" width="0.0241%" height="15" fill="rgb(241,217,19)" fg:x="7830" fg:w="2"/><text x="94.5419%" y="1519.50"></text></g><g><title>_mi_page_malloc (2 samples, 0.02%)</title><rect x="94.2919%" y="1493" width="0.0241%" height="15" fill="rgb(207,210,34)" fg:x="7830" fg:w="2"/><text x="94.5419%" y="1503.50"></text></g><g><title>mi_block_next (2 samples, 0.02%)</title><rect x="94.2919%" y="1477" width="0.0241%" height="15" fill="rgb(244,45,4)" fg:x="7830" fg:w="2"/><text x="94.5419%" y="1487.50"></text></g><g><title>mi_block_nextx (2 samples, 0.02%)</title><rect x="94.2919%" y="1461" width="0.0241%" height="15" fill="rgb(252,134,50)" fg:x="7830" fg:w="2"/><text x="94.5419%" y="1471.50"></text></g><g><title>mi_ptr_decode (2 samples, 0.02%)</title><rect x="94.2919%" y="1445" width="0.0241%" height="15" fill="rgb(238,74,2)" fg:x="7830" fg:w="2"/><text x="94.5419%" y="1455.50"></text></g><g><title>im_rc::ord::map::OrdMap&lt;K,V&gt;::get (1 samples, 0.01%)</title><rect x="94.3160%" y="1685" width="0.0120%" height="15" fill="rgb(226,58,46)" fg:x="7832" fg:w="1"/><text x="94.5660%" y="1695.50"></text></g><g><title>im_rc::nodes::btree::Node&lt;A&gt;::lookup (1 samples, 0.01%)</title><rect x="94.3160%" y="1669" width="0.0120%" height="15" fill="rgb(232,83,35)" fg:x="7832" fg:w="1"/><text x="94.5660%" y="1679.50"></text></g><g><title>im_rc::ord::map::&lt;impl im_rc::nodes::btree::BTreeValue for (K,V)&gt;::search_key (1 samples, 0.01%)</title><rect x="94.3160%" y="1653" width="0.0120%" height="15" fill="rgb(212,148,47)" fg:x="7832" fg:w="1"/><text x="94.5660%" y="1663.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.01%)</title><rect x="94.3160%" y="1637" width="0.0120%" height="15" fill="rgb(235,29,1)" fg:x="7832" fg:w="1"/><text x="94.5660%" y="1647.50"></text></g><g><title>im_rc::ord::map::&lt;impl im_rc::nodes::btree::BTreeValue for (K,V)&gt;::search_key::{{closure}} (1 samples, 0.01%)</title><rect x="94.3160%" y="1621" width="0.0120%" height="15" fill="rgb(247,55,37)" fg:x="7832" fg:w="1"/><text x="94.5660%" y="1631.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1 samples, 0.01%)</title><rect x="94.3160%" y="1605" width="0.0120%" height="15" fill="rgb(222,48,3)" fg:x="7832" fg:w="1"/><text x="94.5660%" y="1615.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (1 samples, 0.01%)</title><rect x="94.3160%" y="1589" width="0.0120%" height="15" fill="rgb(234,21,33)" fg:x="7832" fg:w="1"/><text x="94.5660%" y="1599.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="94.3160%" y="1573" width="0.0120%" height="15" fill="rgb(247,178,53)" fg:x="7832" fg:w="1"/><text x="94.5660%" y="1583.50"></text></g><g><title>vm_library::env::Context::bump (1 samples, 0.01%)</title><rect x="94.3280%" y="1685" width="0.0120%" height="15" fill="rgb(225,75,7)" fg:x="7833" fg:w="1"/><text x="94.5780%" y="1695.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::insert (1 samples, 0.01%)</title><rect x="94.3280%" y="1669" width="0.0120%" height="15" fill="rgb(219,199,7)" fg:x="7833" fg:w="1"/><text x="94.5780%" y="1679.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::insert_with_key (1 samples, 0.01%)</title><rect x="94.3280%" y="1653" width="0.0120%" height="15" fill="rgb(209,93,42)" fg:x="7833" fg:w="1"/><text x="94.5780%" y="1663.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.01%)</title><rect x="94.3280%" y="1637" width="0.0120%" height="15" fill="rgb(240,175,17)" fg:x="7833" fg:w="1"/><text x="94.5780%" y="1647.50"></text></g><g><title>&lt;slotmap::DefaultKey as core::convert::From&lt;slotmap::KeyData&gt;&gt;::from (1 samples, 0.01%)</title><rect x="94.3280%" y="1621" width="0.0120%" height="15" fill="rgb(232,106,7)" fg:x="7833" fg:w="1"/><text x="94.5780%" y="1631.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.01%)</title><rect x="94.3401%" y="1605" width="0.0120%" height="15" fill="rgb(242,106,43)" fg:x="7834" fg:w="1"/><text x="94.5901%" y="1615.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (1 samples, 0.01%)</title><rect x="94.3521%" y="1541" width="0.0120%" height="15" fill="rgb(242,61,37)" fg:x="7835" fg:w="1"/><text x="94.6021%" y="1551.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="94.3521%" y="1525" width="0.0120%" height="15" fill="rgb(205,72,10)" fg:x="7835" fg:w="1"/><text x="94.6021%" y="1535.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="94.3521%" y="1509" width="0.0120%" height="15" fill="rgb(214,184,36)" fg:x="7835" fg:w="1"/><text x="94.6021%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="94.3521%" y="1493" width="0.0120%" height="15" fill="rgb(206,107,18)" fg:x="7835" fg:w="1"/><text x="94.6021%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="94.3521%" y="1477" width="0.0120%" height="15" fill="rgb(210,75,5)" fg:x="7835" fg:w="1"/><text x="94.6021%" y="1487.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="94.3521%" y="1461" width="0.0120%" height="15" fill="rgb(205,3,19)" fg:x="7835" fg:w="1"/><text x="94.6021%" y="1471.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.01%)</title><rect x="94.3642%" y="1477" width="0.0120%" height="15" fill="rgb(207,181,42)" fg:x="7836" fg:w="1"/><text x="94.6142%" y="1487.50"></text></g><g><title>indexmap::map::core::equivalent::{{closure}} (1 samples, 0.01%)</title><rect x="94.3642%" y="1461" width="0.0120%" height="15" fill="rgb(229,179,43)" fg:x="7836" fg:w="1"/><text x="94.6142%" y="1471.50"></text></g><g><title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.01%)</title><rect x="94.3642%" y="1445" width="0.0120%" height="15" fill="rgb(246,95,30)" fg:x="7836" fg:w="1"/><text x="94.6142%" y="1455.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.01%)</title><rect x="94.3642%" y="1429" width="0.0120%" height="15" fill="rgb(234,144,45)" fg:x="7836" fg:w="1"/><text x="94.6142%" y="1439.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="94.3642%" y="1413" width="0.0120%" height="15" fill="rgb(250,54,25)" fg:x="7836" fg:w="1"/><text x="94.6142%" y="1423.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="94.3642%" y="1397" width="0.0120%" height="15" fill="rgb(215,195,40)" fg:x="7836" fg:w="1"/><text x="94.6142%" y="1407.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="94.3642%" y="1381" width="0.0120%" height="15" fill="rgb(233,188,42)" fg:x="7836" fg:w="1"/><text x="94.6142%" y="1391.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="94.3642%" y="1365" width="0.0120%" height="15" fill="rgb(247,227,35)" fg:x="7836" fg:w="1"/><text x="94.6142%" y="1375.50"></text></g><g><title>vm_library::env::Context::get_gas_left (4 samples, 0.05%)</title><rect x="94.3401%" y="1669" width="0.0482%" height="15" fill="rgb(249,124,27)" fg:x="7834" fg:w="4"/><text x="94.5901%" y="1679.50"></text></g><g><title>vm_library::env::Context::with_instance (4 samples, 0.05%)</title><rect x="94.3401%" y="1653" width="0.0482%" height="15" fill="rgb(219,207,25)" fg:x="7834" fg:w="4"/><text x="94.5901%" y="1663.50"></text></g><g><title>vm_library::env::Context::get_gas_left::{{closure}} (4 samples, 0.05%)</title><rect x="94.3401%" y="1637" width="0.0482%" height="15" fill="rgb(241,216,47)" fg:x="7834" fg:w="4"/><text x="94.5901%" y="1647.50"></text></g><g><title>wasmer_middlewares::metering::get_remaining_points (4 samples, 0.05%)</title><rect x="94.3401%" y="1621" width="0.0482%" height="15" fill="rgb(233,82,50)" fg:x="7834" fg:w="4"/><text x="94.5901%" y="1631.50"></text></g><g><title>wasmer::sys::exports::Exports::get_global (3 samples, 0.04%)</title><rect x="94.3521%" y="1605" width="0.0361%" height="15" fill="rgb(232,63,2)" fg:x="7835" fg:w="3"/><text x="94.6021%" y="1615.50"></text></g><g><title>wasmer::sys::exports::Exports::get (3 samples, 0.04%)</title><rect x="94.3521%" y="1589" width="0.0361%" height="15" fill="rgb(236,184,28)" fg:x="7835" fg:w="3"/><text x="94.6021%" y="1599.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (3 samples, 0.04%)</title><rect x="94.3521%" y="1573" width="0.0361%" height="15" fill="rgb(254,63,27)" fg:x="7835" fg:w="3"/><text x="94.6021%" y="1583.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (3 samples, 0.04%)</title><rect x="94.3521%" y="1557" width="0.0361%" height="15" fill="rgb(253,106,28)" fg:x="7835" fg:w="3"/><text x="94.6021%" y="1567.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (2 samples, 0.02%)</title><rect x="94.3642%" y="1541" width="0.0241%" height="15" fill="rgb(225,141,39)" fg:x="7836" fg:w="2"/><text x="94.6142%" y="1551.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (2 samples, 0.02%)</title><rect x="94.3642%" y="1525" width="0.0241%" height="15" fill="rgb(222,157,20)" fg:x="7836" fg:w="2"/><text x="94.6142%" y="1535.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="94.3642%" y="1509" width="0.0241%" height="15" fill="rgb(210,190,9)" fg:x="7836" fg:w="2"/><text x="94.6142%" y="1519.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.02%)</title><rect x="94.3642%" y="1493" width="0.0241%" height="15" fill="rgb(242,167,7)" fg:x="7836" fg:w="2"/><text x="94.6142%" y="1503.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (1 samples, 0.01%)</title><rect x="94.3762%" y="1477" width="0.0120%" height="15" fill="rgb(227,82,41)" fg:x="7837" fg:w="1"/><text x="94.6262%" y="1487.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.01%)</title><rect x="94.3762%" y="1461" width="0.0120%" height="15" fill="rgb(222,131,13)" fg:x="7837" fg:w="1"/><text x="94.6262%" y="1471.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (1 samples, 0.01%)</title><rect x="94.3882%" y="1541" width="0.0120%" height="15" fill="rgb(221,98,26)" fg:x="7838" fg:w="1"/><text x="94.6382%" y="1551.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="94.3882%" y="1525" width="0.0120%" height="15" fill="rgb(251,63,52)" fg:x="7838" fg:w="1"/><text x="94.6382%" y="1535.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="94.3882%" y="1509" width="0.0120%" height="15" fill="rgb(246,25,43)" fg:x="7838" fg:w="1"/><text x="94.6382%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="94.3882%" y="1493" width="0.0120%" height="15" fill="rgb(247,167,15)" fg:x="7838" fg:w="1"/><text x="94.6382%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="94.3882%" y="1477" width="0.0120%" height="15" fill="rgb(240,104,42)" fg:x="7838" fg:w="1"/><text x="94.6382%" y="1487.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="94.3882%" y="1461" width="0.0120%" height="15" fill="rgb(224,54,6)" fg:x="7838" fg:w="1"/><text x="94.6382%" y="1471.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="94.3882%" y="1445" width="0.0120%" height="15" fill="rgb(244,108,35)" fg:x="7838" fg:w="1"/><text x="94.6382%" y="1455.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="94.3882%" y="1429" width="0.0120%" height="15" fill="rgb(216,154,2)" fg:x="7838" fg:w="1"/><text x="94.6382%" y="1439.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::{{closure}} (2 samples, 0.02%)</title><rect x="94.4123%" y="1477" width="0.0241%" height="15" fill="rgb(222,8,47)" fg:x="7840" fg:w="2"/><text x="94.6623%" y="1487.50"></text></g><g><title>indexmap::map::core::equivalent::{{closure}} (2 samples, 0.02%)</title><rect x="94.4123%" y="1461" width="0.0241%" height="15" fill="rgb(252,93,1)" fg:x="7840" fg:w="2"/><text x="94.6623%" y="1471.50"></text></g><g><title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (2 samples, 0.02%)</title><rect x="94.4123%" y="1445" width="0.0241%" height="15" fill="rgb(223,226,51)" fg:x="7840" fg:w="2"/><text x="94.6623%" y="1455.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.02%)</title><rect x="94.4123%" y="1429" width="0.0241%" height="15" fill="rgb(206,147,9)" fg:x="7840" fg:w="2"/><text x="94.6623%" y="1439.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.02%)</title><rect x="94.4123%" y="1413" width="0.0241%" height="15" fill="rgb(248,180,41)" fg:x="7840" fg:w="2"/><text x="94.6623%" y="1423.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.02%)</title><rect x="94.4123%" y="1397" width="0.0241%" height="15" fill="rgb(209,47,50)" fg:x="7840" fg:w="2"/><text x="94.6623%" y="1407.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.02%)</title><rect x="94.4123%" y="1381" width="0.0241%" height="15" fill="rgb(243,65,31)" fg:x="7840" fg:w="2"/><text x="94.6623%" y="1391.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="94.4244%" y="1365" width="0.0120%" height="15" fill="rgb(228,128,1)" fg:x="7841" fg:w="1"/><text x="94.6744%" y="1375.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (1 samples, 0.01%)</title><rect x="94.4364%" y="1477" width="0.0120%" height="15" fill="rgb(231,192,16)" fg:x="7842" fg:w="1"/><text x="94.6864%" y="1487.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="94.4364%" y="1461" width="0.0120%" height="15" fill="rgb(224,26,40)" fg:x="7842" fg:w="1"/><text x="94.6864%" y="1471.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="94.4364%" y="1445" width="0.0120%" height="15" fill="rgb(214,192,17)" fg:x="7842" fg:w="1"/><text x="94.6864%" y="1455.50"></text></g><g><title>wasmer::sys::exports::Exports::get_global (6 samples, 0.07%)</title><rect x="94.3882%" y="1605" width="0.0723%" height="15" fill="rgb(225,147,18)" fg:x="7838" fg:w="6"/><text x="94.6382%" y="1615.50"></text></g><g><title>wasmer::sys::exports::Exports::get (6 samples, 0.07%)</title><rect x="94.3882%" y="1589" width="0.0723%" height="15" fill="rgb(205,35,11)" fg:x="7838" fg:w="6"/><text x="94.6382%" y="1599.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (6 samples, 0.07%)</title><rect x="94.3882%" y="1573" width="0.0723%" height="15" fill="rgb(242,40,42)" fg:x="7838" fg:w="6"/><text x="94.6382%" y="1583.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (6 samples, 0.07%)</title><rect x="94.3882%" y="1557" width="0.0723%" height="15" fill="rgb(250,170,13)" fg:x="7838" fg:w="6"/><text x="94.6382%" y="1567.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (5 samples, 0.06%)</title><rect x="94.4003%" y="1541" width="0.0602%" height="15" fill="rgb(240,161,28)" fg:x="7839" fg:w="5"/><text x="94.6503%" y="1551.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (5 samples, 0.06%)</title><rect x="94.4003%" y="1525" width="0.0602%" height="15" fill="rgb(245,179,12)" fg:x="7839" fg:w="5"/><text x="94.6503%" y="1535.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (5 samples, 0.06%)</title><rect x="94.4003%" y="1509" width="0.0602%" height="15" fill="rgb(250,92,32)" fg:x="7839" fg:w="5"/><text x="94.6503%" y="1519.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (5 samples, 0.06%)</title><rect x="94.4003%" y="1493" width="0.0602%" height="15" fill="rgb(233,10,40)" fg:x="7839" fg:w="5"/><text x="94.6503%" y="1503.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="94.4485%" y="1477" width="0.0120%" height="15" fill="rgb(217,98,1)" fg:x="7843" fg:w="1"/><text x="94.6985%" y="1487.50"></text></g><g><title>vm_library::managed::imports::map_get (19 samples, 0.23%)</title><rect x="94.2437%" y="1701" width="0.2288%" height="15" fill="rgb(238,202,7)" fg:x="7826" fg:w="19"/><text x="94.4937%" y="1711.50"></text></g><g><title>vm_library::env::Context::update_gas (11 samples, 0.13%)</title><rect x="94.3401%" y="1685" width="0.1325%" height="15" fill="rgb(222,91,3)" fg:x="7834" fg:w="11"/><text x="94.5901%" y="1695.50"></text></g><g><title>vm_library::env::Context::set_gas_left (7 samples, 0.08%)</title><rect x="94.3882%" y="1669" width="0.0843%" height="15" fill="rgb(211,170,49)" fg:x="7838" fg:w="7"/><text x="94.6382%" y="1679.50"></text></g><g><title>vm_library::env::Context::with_instance (7 samples, 0.08%)</title><rect x="94.3882%" y="1653" width="0.0843%" height="15" fill="rgb(253,139,18)" fg:x="7838" fg:w="7"/><text x="94.6382%" y="1663.50"></text></g><g><title>vm_library::env::Context::set_gas_left::{{closure}} (7 samples, 0.08%)</title><rect x="94.3882%" y="1637" width="0.0843%" height="15" fill="rgb(222,4,43)" fg:x="7838" fg:w="7"/><text x="94.6382%" y="1647.50"></text></g><g><title>wasmer_middlewares::metering::set_remaining_points (7 samples, 0.08%)</title><rect x="94.3882%" y="1621" width="0.0843%" height="15" fill="rgb(207,205,12)" fg:x="7838" fg:w="7"/><text x="94.6382%" y="1631.50"></text></g><g><title>wasmer::sys::externals::global::Global::set (1 samples, 0.01%)</title><rect x="94.4605%" y="1605" width="0.0120%" height="15" fill="rgb(216,159,46)" fg:x="7844" fg:w="1"/><text x="94.7105%" y="1615.50"></text></g><g><title>__rg_alloc (1 samples, 0.01%)</title><rect x="94.4725%" y="1589" width="0.0120%" height="15" fill="rgb(236,115,1)" fg:x="7845" fg:w="1"/><text x="94.7225%" y="1599.50"></text></g><g><title>&lt;mimalloc::MiMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.01%)</title><rect x="94.4725%" y="1573" width="0.0120%" height="15" fill="rgb(251,35,33)" fg:x="7845" fg:w="1"/><text x="94.7225%" y="1583.50"></text></g><g><title>mimalloc::may_use_unaligned_api (1 samples, 0.01%)</title><rect x="94.4725%" y="1557" width="0.0120%" height="15" fill="rgb(248,62,51)" fg:x="7845" fg:w="1"/><text x="94.7225%" y="1567.50"></text></g><g><title>mi_block_nextx (1 samples, 0.01%)</title><rect x="94.4846%" y="1509" width="0.0120%" height="15" fill="rgb(254,180,19)" fg:x="7846" fg:w="1"/><text x="94.7346%" y="1519.50"></text></g><g><title>mi_ptr_decode (1 samples, 0.01%)</title><rect x="94.4846%" y="1493" width="0.0120%" height="15" fill="rgb(217,100,32)" fg:x="7846" fg:w="1"/><text x="94.7346%" y="1503.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::convert::From&lt;T&gt;&gt;::from (3 samples, 0.04%)</title><rect x="94.4725%" y="1685" width="0.0361%" height="15" fill="rgb(224,71,22)" fg:x="7845" fg:w="3"/><text x="94.7225%" y="1695.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (3 samples, 0.04%)</title><rect x="94.4725%" y="1669" width="0.0361%" height="15" fill="rgb(251,185,33)" fg:x="7845" fg:w="3"/><text x="94.7225%" y="1679.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.04%)</title><rect x="94.4725%" y="1653" width="0.0361%" height="15" fill="rgb(209,75,48)" fg:x="7845" fg:w="3"/><text x="94.7225%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="94.4725%" y="1637" width="0.0361%" height="15" fill="rgb(253,190,16)" fg:x="7845" fg:w="3"/><text x="94.7225%" y="1647.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.04%)</title><rect x="94.4725%" y="1621" width="0.0361%" height="15" fill="rgb(226,140,1)" fg:x="7845" fg:w="3"/><text x="94.7225%" y="1631.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="94.4725%" y="1605" width="0.0361%" height="15" fill="rgb(206,75,30)" fg:x="7845" fg:w="3"/><text x="94.7225%" y="1615.50"></text></g><g><title>mi_malloc (2 samples, 0.02%)</title><rect x="94.4846%" y="1589" width="0.0241%" height="15" fill="rgb(231,208,37)" fg:x="7846" fg:w="2"/><text x="94.7346%" y="1599.50"></text></g><g><title>mi_heap_malloc (2 samples, 0.02%)</title><rect x="94.4846%" y="1573" width="0.0241%" height="15" fill="rgb(238,136,40)" fg:x="7846" fg:w="2"/><text x="94.7346%" y="1583.50"></text></g><g><title>mi_heap_malloc_small (2 samples, 0.02%)</title><rect x="94.4846%" y="1557" width="0.0241%" height="15" fill="rgb(247,137,17)" fg:x="7846" fg:w="2"/><text x="94.7346%" y="1567.50"></text></g><g><title>_mi_page_malloc (2 samples, 0.02%)</title><rect x="94.4846%" y="1541" width="0.0241%" height="15" fill="rgb(240,60,40)" fg:x="7846" fg:w="2"/><text x="94.7346%" y="1551.50"></text></g><g><title>mi_block_next (2 samples, 0.02%)</title><rect x="94.4846%" y="1525" width="0.0241%" height="15" fill="rgb(236,68,50)" fg:x="7846" fg:w="2"/><text x="94.7346%" y="1535.50"></text></g><g><title>mi_is_in_same_page (1 samples, 0.01%)</title><rect x="94.4966%" y="1509" width="0.0120%" height="15" fill="rgb(230,42,12)" fg:x="7847" fg:w="1"/><text x="94.7466%" y="1519.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.01%)</title><rect x="94.5328%" y="1637" width="0.0120%" height="15" fill="rgb(219,16,16)" fg:x="7850" fg:w="1"/><text x="94.7828%" y="1647.50"></text></g><g><title>&lt;slotmap::DefaultKey as core::convert::From&lt;slotmap::KeyData&gt;&gt;::from (1 samples, 0.01%)</title><rect x="94.5328%" y="1621" width="0.0120%" height="15" fill="rgb(220,38,35)" fg:x="7850" fg:w="1"/><text x="94.7828%" y="1631.50"></text></g><g><title>vm_library::env::Context::bump (4 samples, 0.05%)</title><rect x="94.5087%" y="1685" width="0.0482%" height="15" fill="rgb(228,33,1)" fg:x="7848" fg:w="4"/><text x="94.7587%" y="1695.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::insert (2 samples, 0.02%)</title><rect x="94.5328%" y="1669" width="0.0241%" height="15" fill="rgb(241,46,31)" fg:x="7850" fg:w="2"/><text x="94.7828%" y="1679.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::insert_with_key (2 samples, 0.02%)</title><rect x="94.5328%" y="1653" width="0.0241%" height="15" fill="rgb(232,58,20)" fg:x="7850" fg:w="2"/><text x="94.7828%" y="1663.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::insert::{{closure}} (1 samples, 0.01%)</title><rect x="94.5448%" y="1637" width="0.0120%" height="15" fill="rgb(206,228,53)" fg:x="7851" fg:w="1"/><text x="94.7948%" y="1647.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (2 samples, 0.02%)</title><rect x="94.5568%" y="1605" width="0.0241%" height="15" fill="rgb(206,88,33)" fg:x="7852" fg:w="2"/><text x="94.8068%" y="1615.50"></text></g><g><title>wasmer_types::values::&lt;impl core::convert::TryFrom&lt;wasmer_types::values::Value&lt;T&gt;&gt; for i32&gt;::try_from (1 samples, 0.01%)</title><rect x="94.5689%" y="1589" width="0.0120%" height="15" fill="rgb(238,69,7)" fg:x="7853" fg:w="1"/><text x="94.8189%" y="1599.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (1 samples, 0.01%)</title><rect x="94.5689%" y="1573" width="0.0120%" height="15" fill="rgb(250,21,46)" fg:x="7853" fg:w="1"/><text x="94.8189%" y="1583.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="94.5809%" y="1525" width="0.0120%" height="15" fill="rgb(215,212,21)" fg:x="7854" fg:w="1"/><text x="94.8309%" y="1535.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="94.5809%" y="1509" width="0.0120%" height="15" fill="rgb(211,35,12)" fg:x="7854" fg:w="1"/><text x="94.8309%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="94.5809%" y="1493" width="0.0120%" height="15" fill="rgb(231,184,16)" fg:x="7854" fg:w="1"/><text x="94.8309%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.01%)</title><rect x="94.5809%" y="1477" width="0.0120%" height="15" fill="rgb(242,140,15)" fg:x="7854" fg:w="1"/><text x="94.8309%" y="1487.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="94.5809%" y="1461" width="0.0120%" height="15" fill="rgb(220,37,14)" fg:x="7854" fg:w="1"/><text x="94.8309%" y="1471.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="94.6050%" y="1461" width="0.0241%" height="15" fill="rgb(223,146,22)" fg:x="7856" fg:w="2"/><text x="94.8550%" y="1471.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="94.6171%" y="1445" width="0.0120%" height="15" fill="rgb(216,132,15)" fg:x="7857" fg:w="1"/><text x="94.8671%" y="1455.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="94.6171%" y="1429" width="0.0120%" height="15" fill="rgb(248,83,5)" fg:x="7857" fg:w="1"/><text x="94.8671%" y="1439.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (5 samples, 0.06%)</title><rect x="94.5809%" y="1541" width="0.0602%" height="15" fill="rgb(231,206,48)" fg:x="7854" fg:w="5"/><text x="94.8309%" y="1551.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (4 samples, 0.05%)</title><rect x="94.5930%" y="1525" width="0.0482%" height="15" fill="rgb(253,185,37)" fg:x="7855" fg:w="4"/><text x="94.8430%" y="1535.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (4 samples, 0.05%)</title><rect x="94.5930%" y="1509" width="0.0482%" height="15" fill="rgb(208,21,44)" fg:x="7855" fg:w="4"/><text x="94.8430%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (4 samples, 0.05%)</title><rect x="94.5930%" y="1493" width="0.0482%" height="15" fill="rgb(236,125,4)" fg:x="7855" fg:w="4"/><text x="94.8430%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (4 samples, 0.05%)</title><rect x="94.5930%" y="1477" width="0.0482%" height="15" fill="rgb(226,134,25)" fg:x="7855" fg:w="4"/><text x="94.8430%" y="1487.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.01%)</title><rect x="94.6291%" y="1461" width="0.0120%" height="15" fill="rgb(250,201,12)" fg:x="7858" fg:w="1"/><text x="94.8791%" y="1471.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="94.6291%" y="1445" width="0.0120%" height="15" fill="rgb(225,92,18)" fg:x="7858" fg:w="1"/><text x="94.8791%" y="1455.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="94.6291%" y="1429" width="0.0120%" height="15" fill="rgb(227,35,22)" fg:x="7858" fg:w="1"/><text x="94.8791%" y="1439.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::{{closure}} (4 samples, 0.05%)</title><rect x="94.6532%" y="1477" width="0.0482%" height="15" fill="rgb(214,180,52)" fg:x="7860" fg:w="4"/><text x="94.9032%" y="1487.50"></text></g><g><title>indexmap::map::core::equivalent::{{closure}} (4 samples, 0.05%)</title><rect x="94.6532%" y="1461" width="0.0482%" height="15" fill="rgb(233,55,38)" fg:x="7860" fg:w="4"/><text x="94.9032%" y="1471.50"></text></g><g><title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (3 samples, 0.04%)</title><rect x="94.6652%" y="1445" width="0.0361%" height="15" fill="rgb(249,171,43)" fg:x="7861" fg:w="3"/><text x="94.9152%" y="1455.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (3 samples, 0.04%)</title><rect x="94.6652%" y="1429" width="0.0361%" height="15" fill="rgb(239,87,2)" fg:x="7861" fg:w="3"/><text x="94.9152%" y="1439.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.04%)</title><rect x="94.6652%" y="1413" width="0.0361%" height="15" fill="rgb(248,141,5)" fg:x="7861" fg:w="3"/><text x="94.9152%" y="1423.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.04%)</title><rect x="94.6652%" y="1397" width="0.0361%" height="15" fill="rgb(238,33,42)" fg:x="7861" fg:w="3"/><text x="94.9152%" y="1407.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.04%)</title><rect x="94.6652%" y="1381" width="0.0361%" height="15" fill="rgb(231,57,19)" fg:x="7861" fg:w="3"/><text x="94.9152%" y="1391.50"></text></g><g><title>__memcmp_avx2_movbe (3 samples, 0.04%)</title><rect x="94.6652%" y="1365" width="0.0361%" height="15" fill="rgb(214,78,53)" fg:x="7861" fg:w="3"/><text x="94.9152%" y="1375.50"></text></g><g><title>wasmer::sys::exports::Exports::get_global (11 samples, 0.13%)</title><rect x="94.5809%" y="1605" width="0.1325%" height="15" fill="rgb(206,132,29)" fg:x="7854" fg:w="11"/><text x="94.8309%" y="1615.50"></text></g><g><title>wasmer::sys::exports::Exports::get (11 samples, 0.13%)</title><rect x="94.5809%" y="1589" width="0.1325%" height="15" fill="rgb(248,174,31)" fg:x="7854" fg:w="11"/><text x="94.8309%" y="1599.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (11 samples, 0.13%)</title><rect x="94.5809%" y="1573" width="0.1325%" height="15" fill="rgb(221,87,13)" fg:x="7854" fg:w="11"/><text x="94.8309%" y="1583.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (11 samples, 0.13%)</title><rect x="94.5809%" y="1557" width="0.1325%" height="15" fill="rgb(223,197,17)" fg:x="7854" fg:w="11"/><text x="94.8309%" y="1567.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (6 samples, 0.07%)</title><rect x="94.6411%" y="1541" width="0.0723%" height="15" fill="rgb(220,144,50)" fg:x="7859" fg:w="6"/><text x="94.8911%" y="1551.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (6 samples, 0.07%)</title><rect x="94.6411%" y="1525" width="0.0723%" height="15" fill="rgb(244,201,11)" fg:x="7859" fg:w="6"/><text x="94.8911%" y="1535.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (6 samples, 0.07%)</title><rect x="94.6411%" y="1509" width="0.0723%" height="15" fill="rgb(249,81,34)" fg:x="7859" fg:w="6"/><text x="94.8911%" y="1519.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (6 samples, 0.07%)</title><rect x="94.6411%" y="1493" width="0.0723%" height="15" fill="rgb(205,161,12)" fg:x="7859" fg:w="6"/><text x="94.8911%" y="1503.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (1 samples, 0.01%)</title><rect x="94.7013%" y="1477" width="0.0120%" height="15" fill="rgb(252,139,50)" fg:x="7864" fg:w="1"/><text x="94.9513%" y="1487.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.01%)</title><rect x="94.7013%" y="1461" width="0.0120%" height="15" fill="rgb(205,169,14)" fg:x="7864" fg:w="1"/><text x="94.9513%" y="1471.50"></text></g><g><title>vm_library::env::Context::get_gas_left (17 samples, 0.20%)</title><rect x="94.5568%" y="1669" width="0.2047%" height="15" fill="rgb(248,198,33)" fg:x="7852" fg:w="17"/><text x="94.8068%" y="1679.50"></text></g><g><title>vm_library::env::Context::with_instance (17 samples, 0.20%)</title><rect x="94.5568%" y="1653" width="0.2047%" height="15" fill="rgb(236,23,21)" fg:x="7852" fg:w="17"/><text x="94.8068%" y="1663.50"></text></g><g><title>vm_library::env::Context::get_gas_left::{{closure}} (17 samples, 0.20%)</title><rect x="94.5568%" y="1637" width="0.2047%" height="15" fill="rgb(231,13,38)" fg:x="7852" fg:w="17"/><text x="94.8068%" y="1647.50"></text></g><g><title>wasmer_middlewares::metering::get_remaining_points (17 samples, 0.20%)</title><rect x="94.5568%" y="1621" width="0.2047%" height="15" fill="rgb(239,139,21)" fg:x="7852" fg:w="17"/><text x="94.8068%" y="1631.50"></text></g><g><title>wasmer::sys::externals::global::Global::get (4 samples, 0.05%)</title><rect x="94.7134%" y="1605" width="0.0482%" height="15" fill="rgb(222,164,45)" fg:x="7865" fg:w="4"/><text x="94.9634%" y="1615.50"></text></g><g><title>wasmer_vm::global::Global::get (3 samples, 0.04%)</title><rect x="94.7254%" y="1589" width="0.0361%" height="15" fill="rgb(230,52,27)" fg:x="7866" fg:w="3"/><text x="94.9754%" y="1599.50"></text></g><g><title>vm_library::env::Context::set_gas_left (1 samples, 0.01%)</title><rect x="94.7736%" y="1653" width="0.0120%" height="15" fill="rgb(227,143,42)" fg:x="7870" fg:w="1"/><text x="95.0236%" y="1663.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::convert::AsRef&lt;T&gt;&gt;::as_ref (1 samples, 0.01%)</title><rect x="94.7856%" y="1637" width="0.0120%" height="15" fill="rgb(249,127,1)" fg:x="7871" fg:w="1"/><text x="95.0356%" y="1647.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="94.8097%" y="1493" width="0.0120%" height="15" fill="rgb(243,107,26)" fg:x="7873" fg:w="1"/><text x="95.0597%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="94.8097%" y="1477" width="0.0120%" height="15" fill="rgb(225,7,45)" fg:x="7873" fg:w="1"/><text x="95.0597%" y="1487.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="94.8097%" y="1461" width="0.0120%" height="15" fill="rgb(241,88,38)" fg:x="7873" fg:w="1"/><text x="95.0597%" y="1471.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="94.8097%" y="1525" width="0.0241%" height="15" fill="rgb(226,121,9)" fg:x="7873" fg:w="2"/><text x="95.0597%" y="1535.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="94.8097%" y="1509" width="0.0241%" height="15" fill="rgb(253,60,29)" fg:x="7873" fg:w="2"/><text x="95.0597%" y="1519.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="94.8218%" y="1493" width="0.0120%" height="15" fill="rgb(244,181,39)" fg:x="7874" fg:w="1"/><text x="95.0718%" y="1503.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (10 samples, 0.12%)</title><rect x="94.8097%" y="1541" width="0.1204%" height="15" fill="rgb(252,203,31)" fg:x="7873" fg:w="10"/><text x="95.0597%" y="1551.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (8 samples, 0.10%)</title><rect x="94.8338%" y="1525" width="0.0963%" height="15" fill="rgb(224,120,8)" fg:x="7875" fg:w="8"/><text x="95.0838%" y="1535.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (8 samples, 0.10%)</title><rect x="94.8338%" y="1509" width="0.0963%" height="15" fill="rgb(205,171,54)" fg:x="7875" fg:w="8"/><text x="95.0838%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (8 samples, 0.10%)</title><rect x="94.8338%" y="1493" width="0.0963%" height="15" fill="rgb(235,89,11)" fg:x="7875" fg:w="8"/><text x="95.0838%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (8 samples, 0.10%)</title><rect x="94.8338%" y="1477" width="0.0963%" height="15" fill="rgb(212,180,28)" fg:x="7875" fg:w="8"/><text x="95.0838%" y="1487.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.10%)</title><rect x="94.8338%" y="1461" width="0.0963%" height="15" fill="rgb(247,84,49)" fg:x="7875" fg:w="8"/><text x="95.0838%" y="1471.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="94.9061%" y="1445" width="0.0241%" height="15" fill="rgb(236,187,52)" fg:x="7881" fg:w="2"/><text x="95.1561%" y="1455.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="94.9061%" y="1429" width="0.0241%" height="15" fill="rgb(227,24,15)" fg:x="7881" fg:w="2"/><text x="95.1561%" y="1439.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::is_empty (1 samples, 0.01%)</title><rect x="94.9302%" y="1541" width="0.0120%" height="15" fill="rgb(227,211,13)" fg:x="7883" fg:w="1"/><text x="95.1802%" y="1551.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::{{closure}} (4 samples, 0.05%)</title><rect x="94.9422%" y="1477" width="0.0482%" height="15" fill="rgb(245,52,14)" fg:x="7884" fg:w="4"/><text x="95.1922%" y="1487.50"></text></g><g><title>indexmap::map::core::equivalent::{{closure}} (4 samples, 0.05%)</title><rect x="94.9422%" y="1461" width="0.0482%" height="15" fill="rgb(225,185,13)" fg:x="7884" fg:w="4"/><text x="95.1922%" y="1471.50"></text></g><g><title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (4 samples, 0.05%)</title><rect x="94.9422%" y="1445" width="0.0482%" height="15" fill="rgb(217,160,29)" fg:x="7884" fg:w="4"/><text x="95.1922%" y="1455.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (4 samples, 0.05%)</title><rect x="94.9422%" y="1429" width="0.0482%" height="15" fill="rgb(216,115,53)" fg:x="7884" fg:w="4"/><text x="95.1922%" y="1439.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.05%)</title><rect x="94.9422%" y="1413" width="0.0482%" height="15" fill="rgb(236,99,5)" fg:x="7884" fg:w="4"/><text x="95.1922%" y="1423.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.05%)</title><rect x="94.9422%" y="1397" width="0.0482%" height="15" fill="rgb(222,60,38)" fg:x="7884" fg:w="4"/><text x="95.1922%" y="1407.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.05%)</title><rect x="94.9422%" y="1381" width="0.0482%" height="15" fill="rgb(212,82,22)" fg:x="7884" fg:w="4"/><text x="95.1922%" y="1391.50"></text></g><g><title>__memcmp_avx2_movbe (4 samples, 0.05%)</title><rect x="94.9422%" y="1365" width="0.0482%" height="15" fill="rgb(214,48,28)" fg:x="7884" fg:w="4"/><text x="95.1922%" y="1375.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.01%)</title><rect x="94.9904%" y="1477" width="0.0120%" height="15" fill="rgb(245,196,50)" fg:x="7888" fg:w="1"/><text x="95.2404%" y="1487.50"></text></g><g><title>wasmer::sys::exports::Exports::get_global (19 samples, 0.23%)</title><rect x="94.8097%" y="1605" width="0.2288%" height="15" fill="rgb(225,159,46)" fg:x="7873" fg:w="19"/><text x="95.0597%" y="1615.50"></text></g><g><title>wasmer::sys::exports::Exports::get (19 samples, 0.23%)</title><rect x="94.8097%" y="1589" width="0.2288%" height="15" fill="rgb(207,195,48)" fg:x="7873" fg:w="19"/><text x="95.0597%" y="1599.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (19 samples, 0.23%)</title><rect x="94.8097%" y="1573" width="0.2288%" height="15" fill="rgb(240,73,3)" fg:x="7873" fg:w="19"/><text x="95.0597%" y="1583.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (19 samples, 0.23%)</title><rect x="94.8097%" y="1557" width="0.2288%" height="15" fill="rgb(245,57,23)" fg:x="7873" fg:w="19"/><text x="95.0597%" y="1567.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (8 samples, 0.10%)</title><rect x="94.9422%" y="1541" width="0.0963%" height="15" fill="rgb(240,75,18)" fg:x="7884" fg:w="8"/><text x="95.1922%" y="1551.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (8 samples, 0.10%)</title><rect x="94.9422%" y="1525" width="0.0963%" height="15" fill="rgb(238,168,12)" fg:x="7884" fg:w="8"/><text x="95.1922%" y="1535.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (8 samples, 0.10%)</title><rect x="94.9422%" y="1509" width="0.0963%" height="15" fill="rgb(226,20,40)" fg:x="7884" fg:w="8"/><text x="95.1922%" y="1519.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (8 samples, 0.10%)</title><rect x="94.9422%" y="1493" width="0.0963%" height="15" fill="rgb(224,130,35)" fg:x="7884" fg:w="8"/><text x="95.1922%" y="1503.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (3 samples, 0.04%)</title><rect x="95.0024%" y="1477" width="0.0361%" height="15" fill="rgb(225,63,41)" fg:x="7889" fg:w="3"/><text x="95.2524%" y="1487.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (3 samples, 0.04%)</title><rect x="95.0024%" y="1461" width="0.0361%" height="15" fill="rgb(219,3,3)" fg:x="7889" fg:w="3"/><text x="95.2524%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (1 samples, 0.01%)</title><rect x="95.1108%" y="1573" width="0.0120%" height="15" fill="rgb(218,157,4)" fg:x="7898" fg:w="1"/><text x="95.3608%" y="1583.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="95.1108%" y="1557" width="0.0120%" height="15" fill="rgb(232,76,36)" fg:x="7898" fg:w="1"/><text x="95.3608%" y="1567.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.01%)</title><rect x="95.1108%" y="1541" width="0.0120%" height="15" fill="rgb(247,36,0)" fg:x="7898" fg:w="1"/><text x="95.3608%" y="1551.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (1 samples, 0.01%)</title><rect x="95.1108%" y="1525" width="0.0120%" height="15" fill="rgb(205,2,34)" fg:x="7898" fg:w="1"/><text x="95.3608%" y="1535.50"></text></g><g><title>vm_library::managed::imports::pair (57 samples, 0.69%)</title><rect x="94.4725%" y="1701" width="0.6864%" height="15" fill="rgb(239,136,13)" fg:x="7845" fg:w="57"/><text x="94.7225%" y="1711.50"></text></g><g><title>vm_library::env::Context::update_gas (50 samples, 0.60%)</title><rect x="94.5568%" y="1685" width="0.6021%" height="15" fill="rgb(253,122,12)" fg:x="7852" fg:w="50"/><text x="94.8068%" y="1695.50"></text></g><g><title>vm_library::env::Context::set_gas_left (33 samples, 0.40%)</title><rect x="94.7616%" y="1669" width="0.3974%" height="15" fill="rgb(222,174,7)" fg:x="7869" fg:w="33"/><text x="95.0116%" y="1679.50"></text></g><g><title>vm_library::env::Context::with_instance (31 samples, 0.37%)</title><rect x="94.7856%" y="1653" width="0.3733%" height="15" fill="rgb(208,191,42)" fg:x="7871" fg:w="31"/><text x="95.0356%" y="1663.50"></text></g><g><title>vm_library::env::Context::set_gas_left::{{closure}} (30 samples, 0.36%)</title><rect x="94.7977%" y="1637" width="0.3613%" height="15" fill="rgb(237,212,15)" fg:x="7872" fg:w="30"/><text x="95.0477%" y="1647.50"></text></g><g><title>wasmer_middlewares::metering::set_remaining_points (30 samples, 0.36%)</title><rect x="94.7977%" y="1621" width="0.3613%" height="15" fill="rgb(215,65,20)" fg:x="7872" fg:w="30"/><text x="95.0477%" y="1631.50"></text></g><g><title>wasmer::sys::externals::global::Global::set (10 samples, 0.12%)</title><rect x="95.0385%" y="1605" width="0.1204%" height="15" fill="rgb(232,103,11)" fg:x="7892" fg:w="10"/><text x="95.2885%" y="1615.50"></text></g><g><title>wasmer_vm::global::Global::set (6 samples, 0.07%)</title><rect x="95.0867%" y="1589" width="0.0723%" height="15" fill="rgb(235,148,18)" fg:x="7896" fg:w="6"/><text x="95.3367%" y="1599.50"></text></g><g><title>wasmer_vm::global::Global::ty (3 samples, 0.04%)</title><rect x="95.1228%" y="1573" width="0.0361%" height="15" fill="rgb(240,173,7)" fg:x="7899" fg:w="3"/><text x="95.3728%" y="1583.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.01%)</title><rect x="95.1590%" y="1605" width="0.0120%" height="15" fill="rgb(228,182,25)" fg:x="7902" fg:w="1"/><text x="95.4090%" y="1615.50"></text></g><g><title>wasmer_types::values::&lt;impl core::convert::TryFrom&lt;wasmer_types::values::Value&lt;T&gt;&gt; for u64&gt;::try_from (1 samples, 0.01%)</title><rect x="95.1590%" y="1589" width="0.0120%" height="15" fill="rgb(247,3,52)" fg:x="7902" fg:w="1"/><text x="95.4090%" y="1599.50"></text></g><g><title>wasmer_types::values::Value&lt;T&gt;::i64 (1 samples, 0.01%)</title><rect x="95.1590%" y="1573" width="0.0120%" height="15" fill="rgb(226,155,8)" fg:x="7902" fg:w="1"/><text x="95.4090%" y="1583.50"></text></g><g><title>vm_library::env::Context::get_gas_left (2 samples, 0.02%)</title><rect x="95.1590%" y="1669" width="0.0241%" height="15" fill="rgb(243,195,38)" fg:x="7902" fg:w="2"/><text x="95.4090%" y="1679.50"></text></g><g><title>vm_library::env::Context::with_instance (2 samples, 0.02%)</title><rect x="95.1590%" y="1653" width="0.0241%" height="15" fill="rgb(254,181,33)" fg:x="7902" fg:w="2"/><text x="95.4090%" y="1663.50"></text></g><g><title>vm_library::env::Context::get_gas_left::{{closure}} (2 samples, 0.02%)</title><rect x="95.1590%" y="1637" width="0.0241%" height="15" fill="rgb(232,98,23)" fg:x="7902" fg:w="2"/><text x="95.4090%" y="1647.50"></text></g><g><title>wasmer_middlewares::metering::get_remaining_points (2 samples, 0.02%)</title><rect x="95.1590%" y="1621" width="0.0241%" height="15" fill="rgb(205,23,10)" fg:x="7902" fg:w="2"/><text x="95.4090%" y="1631.50"></text></g><g><title>wasmer::sys::externals::global::Global::get (1 samples, 0.01%)</title><rect x="95.1710%" y="1605" width="0.0120%" height="15" fill="rgb(212,124,38)" fg:x="7903" fg:w="1"/><text x="95.4210%" y="1615.50"></text></g><g><title>wasmer_vm::global::Global::get (1 samples, 0.01%)</title><rect x="95.1710%" y="1589" width="0.0120%" height="15" fill="rgb(228,207,2)" fg:x="7903" fg:w="1"/><text x="95.4210%" y="1599.50"></text></g><g><title>vm_library::managed::imports::z_add (3 samples, 0.04%)</title><rect x="95.1590%" y="1701" width="0.0361%" height="15" fill="rgb(215,120,22)" fg:x="7902" fg:w="3"/><text x="95.4090%" y="1711.50"></text></g><g><title>vm_library::env::Context::update_gas (3 samples, 0.04%)</title><rect x="95.1590%" y="1685" width="0.0361%" height="15" fill="rgb(251,172,33)" fg:x="7902" fg:w="3"/><text x="95.4090%" y="1695.50"></text></g><g><title>vm_library::env::Context::set_gas_left (1 samples, 0.01%)</title><rect x="95.1830%" y="1669" width="0.0120%" height="15" fill="rgb(250,83,2)" fg:x="7904" fg:w="1"/><text x="95.4330%" y="1679.50"></text></g><g><title>vm_library::env::Context::with_instance (1 samples, 0.01%)</title><rect x="95.1830%" y="1653" width="0.0120%" height="15" fill="rgb(210,132,53)" fg:x="7904" fg:w="1"/><text x="95.4330%" y="1663.50"></text></g><g><title>vm_library::env::Context::set_gas_left::{{closure}} (1 samples, 0.01%)</title><rect x="95.1830%" y="1637" width="0.0120%" height="15" fill="rgb(221,208,36)" fg:x="7904" fg:w="1"/><text x="95.4330%" y="1647.50"></text></g><g><title>wasmer_middlewares::metering::set_remaining_points (1 samples, 0.01%)</title><rect x="95.1830%" y="1621" width="0.0120%" height="15" fill="rgb(205,192,46)" fg:x="7904" fg:w="1"/><text x="95.4330%" y="1631.50"></text></g><g><title>wasmer::sys::externals::global::Global::set (1 samples, 0.01%)</title><rect x="95.1830%" y="1605" width="0.0120%" height="15" fill="rgb(223,163,14)" fg:x="7904" fg:w="1"/><text x="95.4330%" y="1615.50"></text></g><g><title>wasmer_vm::global::Global::set (1 samples, 0.01%)</title><rect x="95.1830%" y="1589" width="0.0120%" height="15" fill="rgb(218,41,28)" fg:x="7904" fg:w="1"/><text x="95.4330%" y="1599.50"></text></g><g><title>wasmer_vm::global::Global::set_unchecked (1 samples, 0.01%)</title><rect x="95.1830%" y="1573" width="0.0120%" height="15" fill="rgb(235,104,10)" fg:x="7904" fg:w="1"/><text x="95.4330%" y="1583.50"></text></g><g><title>wasmer_vm::vmcontext::VMGlobalDefinition::as_i64_mut (1 samples, 0.01%)</title><rect x="95.1830%" y="1557" width="0.0120%" height="15" fill="rgb(246,17,4)" fg:x="7904" fg:w="1"/><text x="95.4330%" y="1567.50"></text></g><g><title>rug::integer::arith::&lt;impl core::ops::arith::Sub for rug::integer::big::Integer&gt;::sub (4 samples, 0.05%)</title><rect x="95.1951%" y="1685" width="0.0482%" height="15" fill="rgb(240,7,16)" fg:x="7905" fg:w="4"/><text x="95.4451%" y="1695.50"></text></g><g><title>rug::integer::arith::&lt;impl core::ops::arith::SubAssign&lt;&amp;rug::integer::big::Integer&gt; for rug::integer::big::Integer&gt;::sub_assign (4 samples, 0.05%)</title><rect x="95.1951%" y="1669" width="0.0482%" height="15" fill="rgb(213,160,23)" fg:x="7905" fg:w="4"/><text x="95.4451%" y="1679.50"></text></g><g><title>rug::ext::xmpz::sub (4 samples, 0.05%)</title><rect x="95.1951%" y="1653" width="0.0482%" height="15" fill="rgb(251,179,49)" fg:x="7905" fg:w="4"/><text x="95.4451%" y="1663.50"></text></g><g><title>__gmpz_sub (4 samples, 0.05%)</title><rect x="95.1951%" y="1637" width="0.0482%" height="15" fill="rgb(247,198,10)" fg:x="7905" fg:w="4"/><text x="95.4451%" y="1647.50"></text></g><g><title>__gmpz_realloc (3 samples, 0.04%)</title><rect x="95.2071%" y="1621" width="0.0361%" height="15" fill="rgb(220,65,29)" fg:x="7906" fg:w="3"/><text x="95.4571%" y="1631.50"></text></g><g><title>__gmp_default_reallocate (2 samples, 0.02%)</title><rect x="95.2192%" y="1605" width="0.0241%" height="15" fill="rgb(237,171,28)" fg:x="7907" fg:w="2"/><text x="95.4692%" y="1615.50"></text></g><g><title>__realloc (2 samples, 0.02%)</title><rect x="95.2192%" y="1589" width="0.0241%" height="15" fill="rgb(228,44,26)" fg:x="7907" fg:w="2"/><text x="95.4692%" y="1599.50"></text></g><g><title>vm_library::env::Context::get_gas_left (1 samples, 0.01%)</title><rect x="95.2433%" y="1669" width="0.0120%" height="15" fill="rgb(216,210,27)" fg:x="7909" fg:w="1"/><text x="95.4933%" y="1679.50"></text></g><g><title>vm_library::env::Context::with_instance (1 samples, 0.01%)</title><rect x="95.2433%" y="1653" width="0.0120%" height="15" fill="rgb(252,10,17)" fg:x="7909" fg:w="1"/><text x="95.4933%" y="1663.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::convert::AsRef&lt;T&gt;&gt;::as_ref (1 samples, 0.01%)</title><rect x="95.2433%" y="1637" width="0.0120%" height="15" fill="rgb(214,172,30)" fg:x="7909" fg:w="1"/><text x="95.4933%" y="1647.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (1 samples, 0.01%)</title><rect x="95.2553%" y="1541" width="0.0120%" height="15" fill="rgb(253,130,48)" fg:x="7910" fg:w="1"/><text x="95.5053%" y="1551.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="95.2553%" y="1525" width="0.0120%" height="15" fill="rgb(226,99,43)" fg:x="7910" fg:w="1"/><text x="95.5053%" y="1535.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="95.2553%" y="1509" width="0.0120%" height="15" fill="rgb(239,111,26)" fg:x="7910" fg:w="1"/><text x="95.5053%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="95.2553%" y="1493" width="0.0120%" height="15" fill="rgb(240,27,53)" fg:x="7910" fg:w="1"/><text x="95.5053%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="95.2553%" y="1477" width="0.0120%" height="15" fill="rgb(254,163,12)" fg:x="7910" fg:w="1"/><text x="95.5053%" y="1487.50"></text></g><g><title>vm_library::env::Context::update_gas (3 samples, 0.04%)</title><rect x="95.2433%" y="1685" width="0.0361%" height="15" fill="rgb(225,51,48)" fg:x="7909" fg:w="3"/><text x="95.4933%" y="1695.50"></text></g><g><title>vm_library::env::Context::set_gas_left (2 samples, 0.02%)</title><rect x="95.2553%" y="1669" width="0.0241%" height="15" fill="rgb(205,19,32)" fg:x="7910" fg:w="2"/><text x="95.5053%" y="1679.50"></text></g><g><title>vm_library::env::Context::with_instance (2 samples, 0.02%)</title><rect x="95.2553%" y="1653" width="0.0241%" height="15" fill="rgb(218,119,26)" fg:x="7910" fg:w="2"/><text x="95.5053%" y="1663.50"></text></g><g><title>vm_library::env::Context::set_gas_left::{{closure}} (2 samples, 0.02%)</title><rect x="95.2553%" y="1637" width="0.0241%" height="15" fill="rgb(231,173,33)" fg:x="7910" fg:w="2"/><text x="95.5053%" y="1647.50"></text></g><g><title>wasmer_middlewares::metering::set_remaining_points (2 samples, 0.02%)</title><rect x="95.2553%" y="1621" width="0.0241%" height="15" fill="rgb(241,100,29)" fg:x="7910" fg:w="2"/><text x="95.5053%" y="1631.50"></text></g><g><title>wasmer::sys::exports::Exports::get_global (2 samples, 0.02%)</title><rect x="95.2553%" y="1605" width="0.0241%" height="15" fill="rgb(250,194,34)" fg:x="7910" fg:w="2"/><text x="95.5053%" y="1615.50"></text></g><g><title>wasmer::sys::exports::Exports::get (2 samples, 0.02%)</title><rect x="95.2553%" y="1589" width="0.0241%" height="15" fill="rgb(215,23,50)" fg:x="7910" fg:w="2"/><text x="95.5053%" y="1599.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (2 samples, 0.02%)</title><rect x="95.2553%" y="1573" width="0.0241%" height="15" fill="rgb(206,49,37)" fg:x="7910" fg:w="2"/><text x="95.5053%" y="1583.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (2 samples, 0.02%)</title><rect x="95.2553%" y="1557" width="0.0241%" height="15" fill="rgb(247,39,21)" fg:x="7910" fg:w="2"/><text x="95.5053%" y="1567.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (1 samples, 0.01%)</title><rect x="95.2673%" y="1541" width="0.0120%" height="15" fill="rgb(209,220,15)" fg:x="7911" fg:w="1"/><text x="95.5173%" y="1551.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="95.2673%" y="1525" width="0.0120%" height="15" fill="rgb(206,41,33)" fg:x="7911" fg:w="1"/><text x="95.5173%" y="1535.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="95.2673%" y="1509" width="0.0120%" height="15" fill="rgb(221,225,45)" fg:x="7911" fg:w="1"/><text x="95.5173%" y="1519.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.01%)</title><rect x="95.2673%" y="1493" width="0.0120%" height="15" fill="rgb(216,27,18)" fg:x="7911" fg:w="1"/><text x="95.5173%" y="1503.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.01%)</title><rect x="95.2673%" y="1477" width="0.0120%" height="15" fill="rgb(250,193,34)" fg:x="7911" fg:w="1"/><text x="95.5173%" y="1487.50"></text></g><g><title>indexmap::map::core::equivalent::{{closure}} (1 samples, 0.01%)</title><rect x="95.2673%" y="1461" width="0.0120%" height="15" fill="rgb(227,215,20)" fg:x="7911" fg:w="1"/><text x="95.5173%" y="1471.50"></text></g><g><title>core::ops::function::Fn::call (124 samples, 1.49%)</title><rect x="93.7982%" y="1717" width="1.4933%" height="15" fill="rgb(242,211,27)" fg:x="7789" fg:w="124"/><text x="94.0482%" y="1727.50"></text></g><g><title>vm_library::managed::imports::z_sub (8 samples, 0.10%)</title><rect x="95.1951%" y="1701" width="0.0963%" height="15" fill="rgb(229,190,30)" fg:x="7905" fg:w="8"/><text x="95.4451%" y="1711.50"></text></g><g><title>vm_library::managed::imports::z_sub (1 samples, 0.01%)</title><rect x="95.2794%" y="1685" width="0.0120%" height="15" fill="rgb(253,31,29)" fg:x="7912" fg:w="1"/><text x="95.5294%" y="1695.50"></text></g><g><title>&lt;once_cell::unsync::Lazy&lt;T,F&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.01%)</title><rect x="95.3155%" y="1701" width="0.0120%" height="15" fill="rgb(229,177,52)" fg:x="7915" fg:w="1"/><text x="95.5655%" y="1711.50"></text></g><g><title>once_cell::unsync::Lazy&lt;T,F&gt;::force (1 samples, 0.01%)</title><rect x="95.3155%" y="1685" width="0.0120%" height="15" fill="rgb(226,88,8)" fg:x="7915" fg:w="1"/><text x="95.5655%" y="1695.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (1 samples, 0.01%)</title><rect x="95.3276%" y="1701" width="0.0120%" height="15" fill="rgb(214,55,27)" fg:x="7916" fg:w="1"/><text x="95.5776%" y="1711.50"></text></g><g><title>&lt;slotmap::DefaultKey as slotmap::Key&gt;::data (4 samples, 0.05%)</title><rect x="95.3878%" y="1669" width="0.0482%" height="15" fill="rgb(233,202,5)" fg:x="7921" fg:w="4"/><text x="95.6378%" y="1679.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::remove (9 samples, 0.11%)</title><rect x="95.3396%" y="1701" width="0.1084%" height="15" fill="rgb(251,49,30)" fg:x="7917" fg:w="9"/><text x="95.5896%" y="1711.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::contains_key (5 samples, 0.06%)</title><rect x="95.3878%" y="1685" width="0.0602%" height="15" fill="rgb(235,18,52)" fg:x="7921" fg:w="5"/><text x="95.6378%" y="1695.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (1 samples, 0.01%)</title><rect x="95.4359%" y="1669" width="0.0120%" height="15" fill="rgb(250,111,51)" fg:x="7925" fg:w="1"/><text x="95.6859%" y="1679.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::contains_key::{{closure}} (1 samples, 0.01%)</title><rect x="95.4359%" y="1653" width="0.0120%" height="15" fill="rgb(218,13,25)" fg:x="7925" fg:w="1"/><text x="95.6859%" y="1663.50"></text></g><g><title>&lt;Func as wasmer::sys::externals::function::inner::HostFunction&lt;(A1,A2),Rets,wasmer::sys::externals::function::inner::WithEnv,Env&gt;&gt;::function_body_ptr::func_wrapper::{{closure}} (160 samples, 1.93%)</title><rect x="93.5814%" y="1829" width="1.9268%" height="15" fill="rgb(248,96,7)" fg:x="7771" fg:w="160"/><text x="93.8314%" y="1839.50">&lt;..</text></g><g><title>std::panic::catch_unwind (160 samples, 1.93%)</title><rect x="93.5814%" y="1813" width="1.9268%" height="15" fill="rgb(217,31,15)" fg:x="7771" fg:w="160"/><text x="93.8314%" y="1823.50">s..</text></g><g><title>std::panicking::try (160 samples, 1.93%)</title><rect x="93.5814%" y="1797" width="1.9268%" height="15" fill="rgb(228,59,49)" fg:x="7771" fg:w="160"/><text x="93.8314%" y="1807.50">s..</text></g><g><title>std::panicking::try::do_call (160 samples, 1.93%)</title><rect x="93.5814%" y="1781" width="1.9268%" height="15" fill="rgb(210,152,38)" fg:x="7771" fg:w="160"/><text x="93.8314%" y="1791.50">s..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (155 samples, 1.87%)</title><rect x="93.6416%" y="1765" width="1.8666%" height="15" fill="rgb(206,71,11)" fg:x="7776" fg:w="155"/><text x="93.8916%" y="1775.50">&lt;..</text></g><g><title>&lt;Func as wasmer::sys::externals::function::inner::HostFunction&lt;(A1,A2),Rets,wasmer::sys::externals::function::inner::WithEnv,Env&gt;&gt;::function_body_ptr::func_wrapper::{{closure}}::{{closure}} (151 samples, 1.82%)</title><rect x="93.6898%" y="1749" width="1.8184%" height="15" fill="rgb(244,199,5)" fg:x="7780" fg:w="151"/><text x="93.9398%" y="1759.50">&lt;..</text></g><g><title>vm_library::managed::imports::call2::{{closure}} (146 samples, 1.76%)</title><rect x="93.7500%" y="1733" width="1.7582%" height="15" fill="rgb(253,49,1)" fg:x="7785" fg:w="146"/><text x="94.0000%" y="1743.50"></text></g><g><title>vm_library::env::Context::get (18 samples, 0.22%)</title><rect x="95.2914%" y="1717" width="0.2168%" height="15" fill="rgb(225,206,40)" fg:x="7913" fg:w="18"/><text x="95.5414%" y="1727.50"></text></g><g><title>vm_library::env::Context::get (5 samples, 0.06%)</title><rect x="95.4480%" y="1701" width="0.0602%" height="15" fill="rgb(243,116,47)" fg:x="7926" fg:w="5"/><text x="95.6980%" y="1711.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.01%)</title><rect x="95.5202%" y="1717" width="0.0120%" height="15" fill="rgb(219,225,16)" fg:x="7932" fg:w="1"/><text x="95.7702%" y="1727.50"></text></g><g><title>vm_library::managed::imports::update (1 samples, 0.01%)</title><rect x="95.5202%" y="1701" width="0.0120%" height="15" fill="rgb(233,29,47)" fg:x="7932" fg:w="1"/><text x="95.7702%" y="1711.50"></text></g><g><title>__rust_probestack (1 samples, 0.01%)</title><rect x="95.5202%" y="1685" width="0.0120%" height="15" fill="rgb(250,179,18)" fg:x="7932" fg:w="1"/><text x="95.7702%" y="1695.50"></text></g><g><title>&lt;once_cell::unsync::Lazy&lt;T,F&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.01%)</title><rect x="95.5323%" y="1701" width="0.0120%" height="15" fill="rgb(215,176,6)" fg:x="7933" fg:w="1"/><text x="95.7823%" y="1711.50"></text></g><g><title>once_cell::unsync::Lazy&lt;T,F&gt;::force (1 samples, 0.01%)</title><rect x="95.5323%" y="1685" width="0.0120%" height="15" fill="rgb(214,117,39)" fg:x="7933" fg:w="1"/><text x="95.7823%" y="1695.50"></text></g><g><title>&lt;Func as wasmer::sys::externals::function::inner::HostFunction&lt;(A1,A2,A3),Rets,wasmer::sys::externals::function::inner::WithEnv,Env&gt;&gt;::function_body_ptr::func_wrapper::{{closure}} (5 samples, 0.06%)</title><rect x="95.5082%" y="1829" width="0.0602%" height="15" fill="rgb(247,183,36)" fg:x="7931" fg:w="5"/><text x="95.7582%" y="1839.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.06%)</title><rect x="95.5082%" y="1813" width="0.0602%" height="15" fill="rgb(237,200,3)" fg:x="7931" fg:w="5"/><text x="95.7582%" y="1823.50"></text></g><g><title>std::panicking::try (5 samples, 0.06%)</title><rect x="95.5082%" y="1797" width="0.0602%" height="15" fill="rgb(212,220,24)" fg:x="7931" fg:w="5"/><text x="95.7582%" y="1807.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.06%)</title><rect x="95.5082%" y="1781" width="0.0602%" height="15" fill="rgb(245,216,20)" fg:x="7931" fg:w="5"/><text x="95.7582%" y="1791.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.06%)</title><rect x="95.5082%" y="1765" width="0.0602%" height="15" fill="rgb(219,124,7)" fg:x="7931" fg:w="5"/><text x="95.7582%" y="1775.50"></text></g><g><title>&lt;Func as wasmer::sys::externals::function::inner::HostFunction&lt;(A1,A2,A3),Rets,wasmer::sys::externals::function::inner::WithEnv,Env&gt;&gt;::function_body_ptr::func_wrapper::{{closure}}::{{closure}} (4 samples, 0.05%)</title><rect x="95.5202%" y="1749" width="0.0482%" height="15" fill="rgb(227,167,8)" fg:x="7932" fg:w="4"/><text x="95.7702%" y="1759.50"></text></g><g><title>vm_library::managed::imports::call3::{{closure}} (4 samples, 0.05%)</title><rect x="95.5202%" y="1733" width="0.0482%" height="15" fill="rgb(241,37,2)" fg:x="7932" fg:w="4"/><text x="95.7702%" y="1743.50"></text></g><g><title>vm_library::env::Context::get (3 samples, 0.04%)</title><rect x="95.5323%" y="1717" width="0.0361%" height="15" fill="rgb(238,134,33)" fg:x="7933" fg:w="3"/><text x="95.7823%" y="1727.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::remove (2 samples, 0.02%)</title><rect x="95.5443%" y="1701" width="0.0241%" height="15" fill="rgb(248,48,27)" fg:x="7934" fg:w="2"/><text x="95.7943%" y="1711.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as wasmer::sys::externals::function::inner::IntoResult&lt;T&gt;&gt;::into_result (5 samples, 0.06%)</title><rect x="95.6527%" y="1733" width="0.0602%" height="15" fill="rgb(212,14,16)" fg:x="7943" fg:w="5"/><text x="95.9027%" y="1743.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="95.7129%" y="1541" width="0.0120%" height="15" fill="rgb(217,205,37)" fg:x="7948" fg:w="1"/><text x="95.9629%" y="1551.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="95.7129%" y="1525" width="0.0120%" height="15" fill="rgb(233,185,47)" fg:x="7948" fg:w="1"/><text x="95.9629%" y="1535.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="95.7129%" y="1509" width="0.0120%" height="15" fill="rgb(244,88,8)" fg:x="7948" fg:w="1"/><text x="95.9629%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.01%)</title><rect x="95.7129%" y="1493" width="0.0120%" height="15" fill="rgb(213,0,20)" fg:x="7948" fg:w="1"/><text x="95.9629%" y="1503.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="95.7129%" y="1477" width="0.0120%" height="15" fill="rgb(238,159,36)" fg:x="7948" fg:w="1"/><text x="95.9629%" y="1487.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (2 samples, 0.02%)</title><rect x="95.7129%" y="1557" width="0.0241%" height="15" fill="rgb(253,173,17)" fg:x="7948" fg:w="2"/><text x="95.9629%" y="1567.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="95.7250%" y="1541" width="0.0120%" height="15" fill="rgb(221,23,28)" fg:x="7949" fg:w="1"/><text x="95.9750%" y="1551.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="95.7250%" y="1525" width="0.0120%" height="15" fill="rgb(218,113,15)" fg:x="7949" fg:w="1"/><text x="95.9750%" y="1535.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="95.7250%" y="1509" width="0.0120%" height="15" fill="rgb(233,58,3)" fg:x="7949" fg:w="1"/><text x="95.9750%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="95.7250%" y="1493" width="0.0120%" height="15" fill="rgb(250,46,35)" fg:x="7949" fg:w="1"/><text x="95.9750%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="95.7250%" y="1477" width="0.0120%" height="15" fill="rgb(210,169,11)" fg:x="7949" fg:w="1"/><text x="95.9750%" y="1487.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="95.7250%" y="1461" width="0.0120%" height="15" fill="rgb(246,88,19)" fg:x="7949" fg:w="1"/><text x="95.9750%" y="1471.50"></text></g><g><title>vm_library::env::Context::get_gas_left (3 samples, 0.04%)</title><rect x="95.7129%" y="1685" width="0.0361%" height="15" fill="rgb(206,81,49)" fg:x="7948" fg:w="3"/><text x="95.9629%" y="1695.50"></text></g><g><title>vm_library::env::Context::with_instance (3 samples, 0.04%)</title><rect x="95.7129%" y="1669" width="0.0361%" height="15" fill="rgb(232,144,18)" fg:x="7948" fg:w="3"/><text x="95.9629%" y="1679.50"></text></g><g><title>vm_library::env::Context::get_gas_left::{{closure}} (3 samples, 0.04%)</title><rect x="95.7129%" y="1653" width="0.0361%" height="15" fill="rgb(235,2,27)" fg:x="7948" fg:w="3"/><text x="95.9629%" y="1663.50"></text></g><g><title>wasmer_middlewares::metering::get_remaining_points (3 samples, 0.04%)</title><rect x="95.7129%" y="1637" width="0.0361%" height="15" fill="rgb(239,157,39)" fg:x="7948" fg:w="3"/><text x="95.9629%" y="1647.50"></text></g><g><title>wasmer::sys::exports::Exports::get_global (3 samples, 0.04%)</title><rect x="95.7129%" y="1621" width="0.0361%" height="15" fill="rgb(220,11,17)" fg:x="7948" fg:w="3"/><text x="95.9629%" y="1631.50"></text></g><g><title>wasmer::sys::exports::Exports::get (3 samples, 0.04%)</title><rect x="95.7129%" y="1605" width="0.0361%" height="15" fill="rgb(243,94,50)" fg:x="7948" fg:w="3"/><text x="95.9629%" y="1615.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (3 samples, 0.04%)</title><rect x="95.7129%" y="1589" width="0.0361%" height="15" fill="rgb(218,22,0)" fg:x="7948" fg:w="3"/><text x="95.9629%" y="1599.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (3 samples, 0.04%)</title><rect x="95.7129%" y="1573" width="0.0361%" height="15" fill="rgb(249,70,21)" fg:x="7948" fg:w="3"/><text x="95.9629%" y="1583.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (1 samples, 0.01%)</title><rect x="95.7370%" y="1557" width="0.0120%" height="15" fill="rgb(245,111,46)" fg:x="7950" fg:w="1"/><text x="95.9870%" y="1567.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="95.7370%" y="1541" width="0.0120%" height="15" fill="rgb(244,183,12)" fg:x="7950" fg:w="1"/><text x="95.9870%" y="1551.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="95.7370%" y="1525" width="0.0120%" height="15" fill="rgb(207,117,0)" fg:x="7950" fg:w="1"/><text x="95.9870%" y="1535.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.01%)</title><rect x="95.7370%" y="1509" width="0.0120%" height="15" fill="rgb(206,20,43)" fg:x="7950" fg:w="1"/><text x="95.9870%" y="1519.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="95.7370%" y="1493" width="0.0120%" height="15" fill="rgb(221,104,11)" fg:x="7950" fg:w="1"/><text x="95.9870%" y="1503.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.02%)</title><rect x="95.7490%" y="1589" width="0.0241%" height="15" fill="rgb(254,36,50)" fg:x="7951" fg:w="2"/><text x="95.9990%" y="1599.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (2 samples, 0.02%)</title><rect x="95.7490%" y="1573" width="0.0241%" height="15" fill="rgb(252,17,15)" fg:x="7951" fg:w="2"/><text x="95.9990%" y="1583.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (2 samples, 0.02%)</title><rect x="95.7490%" y="1557" width="0.0241%" height="15" fill="rgb(219,129,43)" fg:x="7951" fg:w="2"/><text x="95.9990%" y="1567.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (1 samples, 0.01%)</title><rect x="95.7611%" y="1541" width="0.0120%" height="15" fill="rgb(205,34,45)" fg:x="7952" fg:w="1"/><text x="96.0111%" y="1551.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="95.7611%" y="1525" width="0.0120%" height="15" fill="rgb(251,201,32)" fg:x="7952" fg:w="1"/><text x="96.0111%" y="1535.50"></text></g><g><title>vm_library::managed::imports::closure (7 samples, 0.08%)</title><rect x="95.7129%" y="1717" width="0.0843%" height="15" fill="rgb(205,56,0)" fg:x="7948" fg:w="7"/><text x="95.9629%" y="1727.50"></text></g><g><title>vm_library::env::Context::update_gas (7 samples, 0.08%)</title><rect x="95.7129%" y="1701" width="0.0843%" height="15" fill="rgb(211,193,27)" fg:x="7948" fg:w="7"/><text x="95.9629%" y="1711.50"></text></g><g><title>vm_library::env::Context::set_gas_left (4 samples, 0.05%)</title><rect x="95.7490%" y="1685" width="0.0482%" height="15" fill="rgb(231,100,42)" fg:x="7951" fg:w="4"/><text x="95.9990%" y="1695.50"></text></g><g><title>vm_library::env::Context::with_instance (4 samples, 0.05%)</title><rect x="95.7490%" y="1669" width="0.0482%" height="15" fill="rgb(245,85,27)" fg:x="7951" fg:w="4"/><text x="95.9990%" y="1679.50"></text></g><g><title>vm_library::env::Context::set_gas_left::{{closure}} (4 samples, 0.05%)</title><rect x="95.7490%" y="1653" width="0.0482%" height="15" fill="rgb(241,76,24)" fg:x="7951" fg:w="4"/><text x="95.9990%" y="1663.50"></text></g><g><title>wasmer_middlewares::metering::set_remaining_points (4 samples, 0.05%)</title><rect x="95.7490%" y="1637" width="0.0482%" height="15" fill="rgb(249,157,15)" fg:x="7951" fg:w="4"/><text x="95.9990%" y="1647.50"></text></g><g><title>wasmer::sys::externals::global::Global::set (4 samples, 0.05%)</title><rect x="95.7490%" y="1621" width="0.0482%" height="15" fill="rgb(222,218,25)" fg:x="7951" fg:w="4"/><text x="95.9990%" y="1631.50"></text></g><g><title>wasmer_vm::global::Global::set (4 samples, 0.05%)</title><rect x="95.7490%" y="1605" width="0.0482%" height="15" fill="rgb(252,156,52)" fg:x="7951" fg:w="4"/><text x="95.9990%" y="1615.50"></text></g><g><title>wasmer_vm::global::Global::set_unchecked (2 samples, 0.02%)</title><rect x="95.7731%" y="1589" width="0.0241%" height="15" fill="rgb(211,185,7)" fg:x="7953" fg:w="2"/><text x="96.0231%" y="1599.50"></text></g><g><title>&lt;slotmap::DefaultKey as core::convert::From&lt;slotmap::KeyData&gt;&gt;::from (1 samples, 0.01%)</title><rect x="95.7972%" y="1701" width="0.0120%" height="15" fill="rgb(234,108,24)" fg:x="7955" fg:w="1"/><text x="96.0472%" y="1711.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="95.8695%" y="1637" width="0.0241%" height="15" fill="rgb(227,218,2)" fg:x="7961" fg:w="2"/><text x="96.1195%" y="1647.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (2 samples, 0.02%)</title><rect x="95.8695%" y="1621" width="0.0241%" height="15" fill="rgb(224,0,36)" fg:x="7961" fg:w="2"/><text x="96.1195%" y="1631.50"></text></g><g><title>&lt;vm_library::managed::value::Value as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="95.8695%" y="1605" width="0.0241%" height="15" fill="rgb(233,201,10)" fg:x="7961" fg:w="2"/><text x="96.1195%" y="1615.50"></text></g><g><title>rug::integer::traits::&lt;impl core::clone::Clone for rug::integer::big::Integer&gt;::clone (1 samples, 0.01%)</title><rect x="95.8815%" y="1589" width="0.0120%" height="15" fill="rgb(252,209,14)" fg:x="7962" fg:w="1"/><text x="96.1315%" y="1599.50"></text></g><g><title>rug::ext::xmpz::init_set (1 samples, 0.01%)</title><rect x="95.8815%" y="1573" width="0.0120%" height="15" fill="rgb(205,93,49)" fg:x="7962" fg:w="1"/><text x="96.1315%" y="1583.50"></text></g><g><title>__gmpz_init_set (1 samples, 0.01%)</title><rect x="95.8815%" y="1557" width="0.0120%" height="15" fill="rgb(234,116,45)" fg:x="7962" fg:w="1"/><text x="96.1315%" y="1567.50"></text></g><g><title>__gmp_default_allocate (1 samples, 0.01%)</title><rect x="95.8815%" y="1541" width="0.0120%" height="15" fill="rgb(248,89,35)" fg:x="7962" fg:w="1"/><text x="96.1315%" y="1551.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="95.8815%" y="1525" width="0.0120%" height="15" fill="rgb(233,167,45)" fg:x="7962" fg:w="1"/><text x="96.1315%" y="1535.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="95.8935%" y="1637" width="0.0241%" height="15" fill="rgb(248,228,14)" fg:x="7963" fg:w="2"/><text x="96.1435%" y="1647.50"></text></g><g><title>&lt;vm_library::managed::value::Value as core::clone::Clone&gt;::clone (10 samples, 0.12%)</title><rect x="95.8213%" y="1653" width="0.1204%" height="15" fill="rgb(246,91,14)" fg:x="7957" fg:w="10"/><text x="96.0713%" y="1663.50"></text></g><g><title>&lt;im_rc::ord::map::OrdMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="95.9176%" y="1637" width="0.0241%" height="15" fill="rgb(227,142,5)" fg:x="7965" fg:w="2"/><text x="96.1676%" y="1647.50"></text></g><g><title>&lt;im_rc::fakepool::Rc&lt;A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="95.9297%" y="1621" width="0.0120%" height="15" fill="rgb(221,63,33)" fg:x="7966" fg:w="1"/><text x="96.1797%" y="1631.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="95.9297%" y="1605" width="0.0120%" height="15" fill="rgb(233,49,0)" fg:x="7966" fg:w="1"/><text x="96.1797%" y="1615.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (1 samples, 0.01%)</title><rect x="95.9297%" y="1589" width="0.0120%" height="15" fill="rgb(251,115,38)" fg:x="7966" fg:w="1"/><text x="96.1797%" y="1599.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (16 samples, 0.19%)</title><rect x="95.8213%" y="1669" width="0.1927%" height="15" fill="rgb(231,214,32)" fg:x="7957" fg:w="16"/><text x="96.0713%" y="1679.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (6 samples, 0.07%)</title><rect x="95.9417%" y="1653" width="0.0723%" height="15" fill="rgb(248,73,46)" fg:x="7967" fg:w="6"/><text x="96.1917%" y="1663.50"></text></g><g><title>core::ptr::write (6 samples, 0.07%)</title><rect x="95.9417%" y="1637" width="0.0723%" height="15" fill="rgb(237,156,4)" fg:x="7967" fg:w="6"/><text x="96.1917%" y="1647.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="96.0140%" y="1589" width="0.0120%" height="15" fill="rgb(227,132,2)" fg:x="7973" fg:w="1"/><text x="96.2640%" y="1599.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.01%)</title><rect x="96.0260%" y="1589" width="0.0120%" height="15" fill="rgb(248,161,9)" fg:x="7974" fg:w="1"/><text x="96.2760%" y="1599.50"></text></g><g><title>mi_find_page (1 samples, 0.01%)</title><rect x="96.0260%" y="1573" width="0.0120%" height="15" fill="rgb(238,77,38)" fg:x="7974" fg:w="1"/><text x="96.2760%" y="1583.50"></text></g><g><title>mi_find_free_page (1 samples, 0.01%)</title><rect x="96.0260%" y="1557" width="0.0120%" height="15" fill="rgb(222,166,40)" fg:x="7974" fg:w="1"/><text x="96.2760%" y="1567.50"></text></g><g><title>mi_page_queue (1 samples, 0.01%)</title><rect x="96.0260%" y="1541" width="0.0120%" height="15" fill="rgb(214,168,45)" fg:x="7974" fg:w="1"/><text x="96.2760%" y="1551.50"></text></g><g><title>_mi_bin (1 samples, 0.01%)</title><rect x="96.0260%" y="1525" width="0.0120%" height="15" fill="rgb(226,64,37)" fg:x="7974" fg:w="1"/><text x="96.2760%" y="1535.50"></text></g><g><title>mi_bin (1 samples, 0.01%)</title><rect x="96.0260%" y="1509" width="0.0120%" height="15" fill="rgb(232,210,43)" fg:x="7974" fg:w="1"/><text x="96.2760%" y="1519.50"></text></g><g><title>mi_block_nextx (2 samples, 0.02%)</title><rect x="96.0621%" y="1509" width="0.0241%" height="15" fill="rgb(214,76,33)" fg:x="7977" fg:w="2"/><text x="96.3121%" y="1519.50"></text></g><g><title>mi_ptr_decode (2 samples, 0.02%)</title><rect x="96.0621%" y="1493" width="0.0241%" height="15" fill="rgb(210,78,5)" fg:x="7977" fg:w="2"/><text x="96.3121%" y="1503.50"></text></g><g><title>&lt;vm_library::managed::value::Value as core::clone::Clone&gt;::clone (24 samples, 0.29%)</title><rect x="95.8092%" y="1701" width="0.2890%" height="15" fill="rgb(211,107,37)" fg:x="7956" fg:w="24"/><text x="96.0592%" y="1711.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (23 samples, 0.28%)</title><rect x="95.8213%" y="1685" width="0.2770%" height="15" fill="rgb(249,67,16)" fg:x="7957" fg:w="23"/><text x="96.0713%" y="1695.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (7 samples, 0.08%)</title><rect x="96.0140%" y="1669" width="0.0843%" height="15" fill="rgb(222,114,31)" fg:x="7973" fg:w="7"/><text x="96.2640%" y="1679.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (7 samples, 0.08%)</title><rect x="96.0140%" y="1653" width="0.0843%" height="15" fill="rgb(242,118,19)" fg:x="7973" fg:w="7"/><text x="96.2640%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.08%)</title><rect x="96.0140%" y="1637" width="0.0843%" height="15" fill="rgb(223,115,1)" fg:x="7973" fg:w="7"/><text x="96.2640%" y="1647.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.08%)</title><rect x="96.0140%" y="1621" width="0.0843%" height="15" fill="rgb(241,182,54)" fg:x="7973" fg:w="7"/><text x="96.2640%" y="1631.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.08%)</title><rect x="96.0140%" y="1605" width="0.0843%" height="15" fill="rgb(244,166,36)" fg:x="7973" fg:w="7"/><text x="96.2640%" y="1615.50"></text></g><g><title>mi_malloc (5 samples, 0.06%)</title><rect x="96.0381%" y="1589" width="0.0602%" height="15" fill="rgb(241,52,43)" fg:x="7975" fg:w="5"/><text x="96.2881%" y="1599.50"></text></g><g><title>mi_heap_malloc (4 samples, 0.05%)</title><rect x="96.0501%" y="1573" width="0.0482%" height="15" fill="rgb(236,82,9)" fg:x="7976" fg:w="4"/><text x="96.3001%" y="1583.50"></text></g><g><title>mi_heap_malloc_small (4 samples, 0.05%)</title><rect x="96.0501%" y="1557" width="0.0482%" height="15" fill="rgb(241,119,0)" fg:x="7976" fg:w="4"/><text x="96.3001%" y="1567.50"></text></g><g><title>_mi_page_malloc (4 samples, 0.05%)</title><rect x="96.0501%" y="1541" width="0.0482%" height="15" fill="rgb(221,19,22)" fg:x="7976" fg:w="4"/><text x="96.3001%" y="1551.50"></text></g><g><title>mi_block_next (3 samples, 0.04%)</title><rect x="96.0621%" y="1525" width="0.0361%" height="15" fill="rgb(254,144,35)" fg:x="7977" fg:w="3"/><text x="96.3121%" y="1535.50"></text></g><g><title>mi_is_in_same_page (1 samples, 0.01%)</title><rect x="96.0862%" y="1509" width="0.0120%" height="15" fill="rgb(246,132,30)" fg:x="7979" fg:w="1"/><text x="96.3362%" y="1519.50"></text></g><g><title>_mi_segment_page_of (1 samples, 0.01%)</title><rect x="96.0862%" y="1493" width="0.0120%" height="15" fill="rgb(234,69,28)" fg:x="7979" fg:w="1"/><text x="96.3362%" y="1503.50"></text></g><g><title>mi_slice_first (1 samples, 0.01%)</title><rect x="96.0862%" y="1477" width="0.0120%" height="15" fill="rgb(219,106,47)" fg:x="7979" fg:w="1"/><text x="96.3362%" y="1487.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::insert (1 samples, 0.01%)</title><rect x="96.0983%" y="1669" width="0.0120%" height="15" fill="rgb(218,79,24)" fg:x="7980" fg:w="1"/><text x="96.3483%" y="1679.50"></text></g><g><title>vm_library::env::Context::bump (2 samples, 0.02%)</title><rect x="96.0983%" y="1701" width="0.0241%" height="15" fill="rgb(225,26,21)" fg:x="7980" fg:w="2"/><text x="96.3483%" y="1711.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::insert (2 samples, 0.02%)</title><rect x="96.0983%" y="1685" width="0.0241%" height="15" fill="rgb(217,68,49)" fg:x="7980" fg:w="2"/><text x="96.3483%" y="1695.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::insert_with_key (1 samples, 0.01%)</title><rect x="96.1103%" y="1669" width="0.0120%" height="15" fill="rgb(220,204,28)" fg:x="7981" fg:w="1"/><text x="96.3603%" y="1679.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::insert::{{closure}} (1 samples, 0.01%)</title><rect x="96.1103%" y="1653" width="0.0120%" height="15" fill="rgb(237,208,43)" fg:x="7981" fg:w="1"/><text x="96.3603%" y="1663.50"></text></g><g><title>&lt;() as wasmer::sys::externals::function::inner::WasmTypeList&gt;::from_array (1 samples, 0.01%)</title><rect x="96.1224%" y="1669" width="0.0120%" height="15" fill="rgb(213,97,42)" fg:x="7982" fg:w="1"/><text x="96.3724%" y="1679.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.01%)</title><rect x="96.1344%" y="1637" width="0.0120%" height="15" fill="rgb(238,96,52)" fg:x="7983" fg:w="1"/><text x="96.3844%" y="1647.50"></text></g><g><title>wasmer_vm::trap::traphandlers::lazy_per_thread_init (1 samples, 0.01%)</title><rect x="96.1464%" y="1637" width="0.0120%" height="15" fill="rgb(228,14,13)" fg:x="7984" fg:w="1"/><text x="96.3964%" y="1647.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="96.1464%" y="1621" width="0.0120%" height="15" fill="rgb(219,123,13)" fg:x="7984" fg:w="1"/><text x="96.3964%" y="1631.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="96.1464%" y="1605" width="0.0120%" height="15" fill="rgb(216,144,17)" fg:x="7984" fg:w="1"/><text x="96.3964%" y="1615.50"></text></g><g><title>wasmer_vm::trap::traphandlers::lazy_per_thread_init::{{closure}} (1 samples, 0.01%)</title><rect x="96.1464%" y="1589" width="0.0120%" height="15" fill="rgb(230,228,29)" fg:x="7984" fg:w="1"/><text x="96.3964%" y="1599.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.01%)</title><rect x="96.1705%" y="1621" width="0.0120%" height="15" fill="rgb(233,18,5)" fg:x="7986" fg:w="1"/><text x="96.4205%" y="1631.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="96.1705%" y="1605" width="0.0120%" height="15" fill="rgb(233,197,12)" fg:x="7986" fg:w="1"/><text x="96.4205%" y="1615.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_default (1 samples, 0.01%)</title><rect x="96.1826%" y="1621" width="0.0120%" height="15" fill="rgb(234,140,29)" fg:x="7987" fg:w="1"/><text x="96.4326%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;scopeguard::ScopeGuard&lt;corosensei::stack::unix::DefaultStack,wasmer_vm::trap::traphandlers::on_wasm_stack&lt;wasmer_vm::trap::traphandlers::wasmer_call_trampoline&lt;wasmer::sys::store::Store&gt;::{{closure}},()&gt;::{{closure}}&gt;&gt; (4 samples, 0.05%)</title><rect x="96.1946%" y="1621" width="0.0482%" height="15" fill="rgb(233,113,19)" fg:x="7988" fg:w="4"/><text x="96.4446%" y="1631.50"></text></g><g><title>&lt;scopeguard::ScopeGuard&lt;T,F,S&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.05%)</title><rect x="96.1946%" y="1605" width="0.0482%" height="15" fill="rgb(246,209,13)" fg:x="7988" fg:w="4"/><text x="96.4446%" y="1615.50"></text></g><g><title>wasmer_vm::trap::traphandlers::on_wasm_stack::{{closure}} (4 samples, 0.05%)</title><rect x="96.1946%" y="1589" width="0.0482%" height="15" fill="rgb(242,79,54)" fg:x="7988" fg:w="4"/><text x="96.4446%" y="1599.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.02%)</title><rect x="96.2187%" y="1573" width="0.0241%" height="15" fill="rgb(219,73,16)" fg:x="7990" fg:w="2"/><text x="96.4687%" y="1583.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (2 samples, 0.02%)</title><rect x="96.2187%" y="1557" width="0.0241%" height="15" fill="rgb(224,52,10)" fg:x="7990" fg:w="2"/><text x="96.4687%" y="1567.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (2 samples, 0.02%)</title><rect x="96.2187%" y="1541" width="0.0241%" height="15" fill="rgb(237,179,5)" fg:x="7990" fg:w="2"/><text x="96.4687%" y="1551.50"></text></g><g><title>corosensei::coroutine::ScopedCoroutine&lt;Input,Yield,Return,Stack&gt;::with_stack (1 samples, 0.01%)</title><rect x="96.2428%" y="1621" width="0.0120%" height="15" fill="rgb(231,20,6)" fg:x="7992" fg:w="1"/><text x="96.4928%" y="1631.50"></text></g><g><title>corosensei::arch::x86_64::init_stack (1 samples, 0.01%)</title><rect x="96.2428%" y="1605" width="0.0120%" height="15" fill="rgb(253,171,45)" fg:x="7992" fg:w="1"/><text x="96.4928%" y="1615.50"></text></g><g><title>corosensei::arch::push (1 samples, 0.01%)</title><rect x="96.2428%" y="1589" width="0.0120%" height="15" fill="rgb(230,75,49)" fg:x="7992" fg:w="1"/><text x="96.4928%" y="1599.50"></text></g><g><title>wasmer_vm::trap::traphandlers::on_wasm_stack (9 samples, 0.11%)</title><rect x="96.1585%" y="1637" width="0.1084%" height="15" fill="rgb(216,83,46)" fg:x="7985" fg:w="9"/><text x="96.4085%" y="1647.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="96.2548%" y="1621" width="0.0120%" height="15" fill="rgb(236,56,9)" fg:x="7993" fg:w="1"/><text x="96.5048%" y="1631.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.01%)</title><rect x="96.2548%" y="1605" width="0.0120%" height="15" fill="rgb(215,28,34)" fg:x="7993" fg:w="1"/><text x="96.5048%" y="1615.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (1 samples, 0.01%)</title><rect x="96.2548%" y="1589" width="0.0120%" height="15" fill="rgb(230,222,20)" fg:x="7993" fg:w="1"/><text x="96.5048%" y="1599.50"></text></g><g><title>core::ops::function::Fn::call (47 samples, 0.57%)</title><rect x="95.7129%" y="1733" width="0.5660%" height="15" fill="rgb(235,209,51)" fg:x="7948" fg:w="47"/><text x="95.9629%" y="1743.50"></text></g><g><title>vm_library::managed::imports::dup_host (40 samples, 0.48%)</title><rect x="95.7972%" y="1717" width="0.4817%" height="15" fill="rgb(235,167,1)" fg:x="7955" fg:w="40"/><text x="96.0472%" y="1727.50"></text></g><g><title>vm_library::env::Context::push_value (13 samples, 0.16%)</title><rect x="96.1224%" y="1701" width="0.1566%" height="15" fill="rgb(248,220,0)" fg:x="7982" fg:w="13"/><text x="96.3724%" y="1711.50"></text></g><g><title>wasmer::sys::native::NativeFunc&lt;A1,Rets&gt;::call (13 samples, 0.16%)</title><rect x="96.1224%" y="1685" width="0.1566%" height="15" fill="rgb(239,0,18)" fg:x="7982" fg:w="13"/><text x="96.3724%" y="1695.50"></text></g><g><title>wasmer_vm::trap::traphandlers::wasmer_call_trampoline (12 samples, 0.14%)</title><rect x="96.1344%" y="1669" width="0.1445%" height="15" fill="rgb(229,179,11)" fg:x="7983" fg:w="12"/><text x="96.3844%" y="1679.50"></text></g><g><title>wasmer_vm::trap::traphandlers::catch_traps (12 samples, 0.14%)</title><rect x="96.1344%" y="1653" width="0.1445%" height="15" fill="rgb(226,116,53)" fg:x="7983" fg:w="12"/><text x="96.3844%" y="1663.50"></text></g><g><title>wasmer_vm::trap::traphandlers::wasmer_call_trampoline (1 samples, 0.01%)</title><rect x="96.2669%" y="1637" width="0.0120%" height="15" fill="rgb(218,1,49)" fg:x="7994" fg:w="1"/><text x="96.5169%" y="1647.50"></text></g><g><title>std::panicking::try (2 samples, 0.02%)</title><rect x="96.2789%" y="1733" width="0.0241%" height="15" fill="rgb(208,184,47)" fg:x="7995" fg:w="2"/><text x="96.5289%" y="1743.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="96.3391%" y="1493" width="0.0120%" height="15" fill="rgb(238,174,3)" fg:x="8000" fg:w="1"/><text x="96.5891%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="96.3391%" y="1477" width="0.0120%" height="15" fill="rgb(247,188,6)" fg:x="8000" fg:w="1"/><text x="96.5891%" y="1487.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="96.3391%" y="1461" width="0.0120%" height="15" fill="rgb(211,165,46)" fg:x="8000" fg:w="1"/><text x="96.5891%" y="1471.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="96.3391%" y="1525" width="0.0241%" height="15" fill="rgb(222,190,10)" fg:x="8000" fg:w="2"/><text x="96.5891%" y="1535.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="96.3391%" y="1509" width="0.0241%" height="15" fill="rgb(206,185,3)" fg:x="8000" fg:w="2"/><text x="96.5891%" y="1519.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="96.3512%" y="1493" width="0.0120%" height="15" fill="rgb(244,125,37)" fg:x="8001" fg:w="1"/><text x="96.6012%" y="1503.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.01%)</title><rect x="96.3632%" y="1525" width="0.0120%" height="15" fill="rgb(211,43,7)" fg:x="8002" fg:w="1"/><text x="96.6132%" y="1535.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.01%)</title><rect x="96.3632%" y="1509" width="0.0120%" height="15" fill="rgb(250,41,42)" fg:x="8002" fg:w="1"/><text x="96.6132%" y="1519.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.01%)</title><rect x="96.3632%" y="1493" width="0.0120%" height="15" fill="rgb(254,54,42)" fg:x="8002" fg:w="1"/><text x="96.6132%" y="1503.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.01%)</title><rect x="96.3632%" y="1477" width="0.0120%" height="15" fill="rgb(213,71,43)" fg:x="8002" fg:w="1"/><text x="96.6132%" y="1487.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="96.3752%" y="1461" width="0.0120%" height="15" fill="rgb(249,3,44)" fg:x="8003" fg:w="1"/><text x="96.6252%" y="1471.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (5 samples, 0.06%)</title><rect x="96.3391%" y="1541" width="0.0602%" height="15" fill="rgb(229,80,41)" fg:x="8000" fg:w="5"/><text x="96.5891%" y="1551.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.02%)</title><rect x="96.3752%" y="1525" width="0.0241%" height="15" fill="rgb(231,25,28)" fg:x="8003" fg:w="2"/><text x="96.6252%" y="1535.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="96.3752%" y="1509" width="0.0241%" height="15" fill="rgb(208,79,48)" fg:x="8003" fg:w="2"/><text x="96.6252%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="96.3752%" y="1493" width="0.0241%" height="15" fill="rgb(207,196,38)" fg:x="8003" fg:w="2"/><text x="96.6252%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="96.3752%" y="1477" width="0.0241%" height="15" fill="rgb(228,105,49)" fg:x="8003" fg:w="2"/><text x="96.6252%" y="1487.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.01%)</title><rect x="96.3873%" y="1461" width="0.0120%" height="15" fill="rgb(237,99,15)" fg:x="8004" fg:w="1"/><text x="96.6373%" y="1471.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="96.3873%" y="1445" width="0.0120%" height="15" fill="rgb(224,207,46)" fg:x="8004" fg:w="1"/><text x="96.6373%" y="1455.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="96.3873%" y="1429" width="0.0120%" height="15" fill="rgb(249,117,50)" fg:x="8004" fg:w="1"/><text x="96.6373%" y="1439.50"></text></g><g><title>vm_library::env::Context::get_gas_left (6 samples, 0.07%)</title><rect x="96.3391%" y="1669" width="0.0723%" height="15" fill="rgb(248,17,13)" fg:x="8000" fg:w="6"/><text x="96.5891%" y="1679.50"></text></g><g><title>vm_library::env::Context::with_instance (6 samples, 0.07%)</title><rect x="96.3391%" y="1653" width="0.0723%" height="15" fill="rgb(228,187,36)" fg:x="8000" fg:w="6"/><text x="96.5891%" y="1663.50"></text></g><g><title>vm_library::env::Context::get_gas_left::{{closure}} (6 samples, 0.07%)</title><rect x="96.3391%" y="1637" width="0.0723%" height="15" fill="rgb(234,132,20)" fg:x="8000" fg:w="6"/><text x="96.5891%" y="1647.50"></text></g><g><title>wasmer_middlewares::metering::get_remaining_points (6 samples, 0.07%)</title><rect x="96.3391%" y="1621" width="0.0723%" height="15" fill="rgb(209,170,46)" fg:x="8000" fg:w="6"/><text x="96.5891%" y="1631.50"></text></g><g><title>wasmer::sys::exports::Exports::get_global (6 samples, 0.07%)</title><rect x="96.3391%" y="1605" width="0.0723%" height="15" fill="rgb(237,23,19)" fg:x="8000" fg:w="6"/><text x="96.5891%" y="1615.50"></text></g><g><title>wasmer::sys::exports::Exports::get (6 samples, 0.07%)</title><rect x="96.3391%" y="1589" width="0.0723%" height="15" fill="rgb(227,21,26)" fg:x="8000" fg:w="6"/><text x="96.5891%" y="1599.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (6 samples, 0.07%)</title><rect x="96.3391%" y="1573" width="0.0723%" height="15" fill="rgb(222,220,48)" fg:x="8000" fg:w="6"/><text x="96.5891%" y="1583.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (6 samples, 0.07%)</title><rect x="96.3391%" y="1557" width="0.0723%" height="15" fill="rgb(214,9,16)" fg:x="8000" fg:w="6"/><text x="96.5891%" y="1567.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (1 samples, 0.01%)</title><rect x="96.3993%" y="1541" width="0.0120%" height="15" fill="rgb(209,73,30)" fg:x="8005" fg:w="1"/><text x="96.6493%" y="1551.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="96.3993%" y="1525" width="0.0120%" height="15" fill="rgb(207,20,33)" fg:x="8005" fg:w="1"/><text x="96.6493%" y="1535.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="96.3993%" y="1509" width="0.0120%" height="15" fill="rgb(219,153,12)" fg:x="8005" fg:w="1"/><text x="96.6493%" y="1519.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.01%)</title><rect x="96.3993%" y="1493" width="0.0120%" height="15" fill="rgb(235,97,25)" fg:x="8005" fg:w="1"/><text x="96.6493%" y="1503.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.01%)</title><rect x="96.3993%" y="1477" width="0.0120%" height="15" fill="rgb(244,30,34)" fg:x="8005" fg:w="1"/><text x="96.6493%" y="1487.50"></text></g><g><title>indexmap::map::core::equivalent::{{closure}} (1 samples, 0.01%)</title><rect x="96.3993%" y="1461" width="0.0120%" height="15" fill="rgb(214,106,45)" fg:x="8005" fg:w="1"/><text x="96.6493%" y="1471.50"></text></g><g><title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.01%)</title><rect x="96.3993%" y="1445" width="0.0120%" height="15" fill="rgb(226,41,9)" fg:x="8005" fg:w="1"/><text x="96.6493%" y="1455.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.01%)</title><rect x="96.3993%" y="1429" width="0.0120%" height="15" fill="rgb(253,139,29)" fg:x="8005" fg:w="1"/><text x="96.6493%" y="1439.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="96.3993%" y="1413" width="0.0120%" height="15" fill="rgb(213,205,39)" fg:x="8005" fg:w="1"/><text x="96.6493%" y="1423.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="96.3993%" y="1397" width="0.0120%" height="15" fill="rgb(209,27,10)" fg:x="8005" fg:w="1"/><text x="96.6493%" y="1407.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="96.3993%" y="1381" width="0.0120%" height="15" fill="rgb(249,142,16)" fg:x="8005" fg:w="1"/><text x="96.6493%" y="1391.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="96.3993%" y="1365" width="0.0120%" height="15" fill="rgb(242,65,12)" fg:x="8005" fg:w="1"/><text x="96.6493%" y="1375.50"></text></g><g><title>vm_library::managed::imports::abs (8 samples, 0.10%)</title><rect x="96.3271%" y="1701" width="0.0963%" height="15" fill="rgb(232,48,10)" fg:x="7999" fg:w="8"/><text x="96.5771%" y="1711.50"></text></g><g><title>vm_library::env::Context::update_gas (8 samples, 0.10%)</title><rect x="96.3271%" y="1685" width="0.0963%" height="15" fill="rgb(253,67,19)" fg:x="7999" fg:w="8"/><text x="96.5771%" y="1695.50"></text></g><g><title>vm_library::env::Context::set_gas_left (1 samples, 0.01%)</title><rect x="96.4114%" y="1669" width="0.0120%" height="15" fill="rgb(227,93,29)" fg:x="8006" fg:w="1"/><text x="96.6614%" y="1679.50"></text></g><g><title>vm_library::env::Context::with_instance (1 samples, 0.01%)</title><rect x="96.4114%" y="1653" width="0.0120%" height="15" fill="rgb(226,189,53)" fg:x="8006" fg:w="1"/><text x="96.6614%" y="1663.50"></text></g><g><title>vm_library::env::Context::set_gas_left::{{closure}} (1 samples, 0.01%)</title><rect x="96.4114%" y="1637" width="0.0120%" height="15" fill="rgb(223,224,1)" fg:x="8006" fg:w="1"/><text x="96.6614%" y="1647.50"></text></g><g><title>wasmer_middlewares::metering::set_remaining_points (1 samples, 0.01%)</title><rect x="96.4114%" y="1621" width="0.0120%" height="15" fill="rgb(221,84,32)" fg:x="8006" fg:w="1"/><text x="96.6614%" y="1631.50"></text></g><g><title>wasmer::sys::externals::global::Global::set (1 samples, 0.01%)</title><rect x="96.4114%" y="1605" width="0.0120%" height="15" fill="rgb(214,189,28)" fg:x="8006" fg:w="1"/><text x="96.6614%" y="1615.50"></text></g><g><title>wasmer_vm::global::Global::set (1 samples, 0.01%)</title><rect x="96.4114%" y="1589" width="0.0120%" height="15" fill="rgb(234,7,52)" fg:x="8006" fg:w="1"/><text x="96.6614%" y="1599.50"></text></g><g><title>__free (3 samples, 0.04%)</title><rect x="96.4234%" y="1669" width="0.0361%" height="15" fill="rgb(249,73,31)" fg:x="8007" fg:w="3"/><text x="96.6734%" y="1679.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="96.4355%" y="1653" width="0.0241%" height="15" fill="rgb(253,153,41)" fg:x="8008" fg:w="2"/><text x="96.6855%" y="1663.50"></text></g><g><title>__gmpz_clear (1 samples, 0.01%)</title><rect x="96.4595%" y="1669" width="0.0120%" height="15" fill="rgb(249,52,34)" fg:x="8010" fg:w="1"/><text x="96.7095%" y="1679.50"></text></g><g><title>_mi_segment_page_of (1 samples, 0.01%)</title><rect x="96.4716%" y="1605" width="0.0120%" height="15" fill="rgb(236,177,47)" fg:x="8011" fg:w="1"/><text x="96.7216%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;vm_library::managed::value::Value&gt;&gt; (6 samples, 0.07%)</title><rect x="96.4234%" y="1685" width="0.0723%" height="15" fill="rgb(252,185,45)" fg:x="8007" fg:w="6"/><text x="96.6734%" y="1695.50"></text></g><g><title>alloc::alloc::box_free (2 samples, 0.02%)</title><rect x="96.4716%" y="1669" width="0.0241%" height="15" fill="rgb(251,15,30)" fg:x="8011" fg:w="2"/><text x="96.7216%" y="1679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="96.4716%" y="1653" width="0.0241%" height="15" fill="rgb(233,31,4)" fg:x="8011" fg:w="2"/><text x="96.7216%" y="1663.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="96.4716%" y="1637" width="0.0241%" height="15" fill="rgb(254,44,24)" fg:x="8011" fg:w="2"/><text x="96.7216%" y="1647.50"></text></g><g><title>mi_free (2 samples, 0.02%)</title><rect x="96.4716%" y="1621" width="0.0241%" height="15" fill="rgb(218,54,1)" fg:x="8011" fg:w="2"/><text x="96.7216%" y="1631.50"></text></g><g><title>mi_block_set_next (1 samples, 0.01%)</title><rect x="96.4836%" y="1605" width="0.0120%" height="15" fill="rgb(243,209,39)" fg:x="8012" fg:w="1"/><text x="96.7336%" y="1615.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.01%)</title><rect x="96.4836%" y="1589" width="0.0120%" height="15" fill="rgb(206,75,33)" fg:x="8012" fg:w="1"/><text x="96.7336%" y="1599.50"></text></g><g><title>mi_ptr_encode (1 samples, 0.01%)</title><rect x="96.4836%" y="1573" width="0.0120%" height="15" fill="rgb(223,108,18)" fg:x="8012" fg:w="1"/><text x="96.7336%" y="1583.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::insert (1 samples, 0.01%)</title><rect x="96.4957%" y="1653" width="0.0120%" height="15" fill="rgb(244,89,31)" fg:x="8013" fg:w="1"/><text x="96.7457%" y="1663.50"></text></g><g><title>vm_library::env::Context::bump (3 samples, 0.04%)</title><rect x="96.4957%" y="1685" width="0.0361%" height="15" fill="rgb(222,167,27)" fg:x="8013" fg:w="3"/><text x="96.7457%" y="1695.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::insert (3 samples, 0.04%)</title><rect x="96.4957%" y="1669" width="0.0361%" height="15" fill="rgb(247,41,16)" fg:x="8013" fg:w="3"/><text x="96.7457%" y="1679.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::insert_with_key (2 samples, 0.02%)</title><rect x="96.5077%" y="1653" width="0.0241%" height="15" fill="rgb(233,168,40)" fg:x="8014" fg:w="2"/><text x="96.7577%" y="1663.50"></text></g><g><title>slotmap::KeyData::new (1 samples, 0.01%)</title><rect x="96.5197%" y="1637" width="0.0120%" height="15" fill="rgb(205,211,8)" fg:x="8015" fg:w="1"/><text x="96.7697%" y="1647.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.01%)</title><rect x="96.5438%" y="1605" width="0.0120%" height="15" fill="rgb(238,105,11)" fg:x="8017" fg:w="1"/><text x="96.7938%" y="1615.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="96.5679%" y="1477" width="0.0120%" height="15" fill="rgb(223,142,52)" fg:x="8019" fg:w="1"/><text x="96.8179%" y="1487.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="96.5679%" y="1461" width="0.0120%" height="15" fill="rgb(238,51,33)" fg:x="8019" fg:w="1"/><text x="96.8179%" y="1471.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="96.5679%" y="1493" width="0.0241%" height="15" fill="rgb(231,188,43)" fg:x="8019" fg:w="2"/><text x="96.8179%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.01%)</title><rect x="96.5800%" y="1477" width="0.0120%" height="15" fill="rgb(216,92,17)" fg:x="8020" fg:w="1"/><text x="96.8300%" y="1487.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.04%)</title><rect x="96.5679%" y="1525" width="0.0361%" height="15" fill="rgb(228,2,40)" fg:x="8019" fg:w="3"/><text x="96.8179%" y="1535.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.04%)</title><rect x="96.5679%" y="1509" width="0.0361%" height="15" fill="rgb(226,73,15)" fg:x="8019" fg:w="3"/><text x="96.8179%" y="1519.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="96.5920%" y="1493" width="0.0120%" height="15" fill="rgb(227,66,46)" fg:x="8021" fg:w="1"/><text x="96.8420%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.06%)</title><rect x="96.6040%" y="1461" width="0.0602%" height="15" fill="rgb(209,71,6)" fg:x="8022" fg:w="5"/><text x="96.8540%" y="1471.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="96.6402%" y="1445" width="0.0241%" height="15" fill="rgb(246,100,25)" fg:x="8025" fg:w="2"/><text x="96.8902%" y="1455.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="96.6522%" y="1429" width="0.0120%" height="15" fill="rgb(248,185,27)" fg:x="8026" fg:w="1"/><text x="96.9022%" y="1439.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (10 samples, 0.12%)</title><rect x="96.5679%" y="1541" width="0.1204%" height="15" fill="rgb(225,118,47)" fg:x="8019" fg:w="10"/><text x="96.8179%" y="1551.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (7 samples, 0.08%)</title><rect x="96.6040%" y="1525" width="0.0843%" height="15" fill="rgb(220,185,44)" fg:x="8022" fg:w="7"/><text x="96.8540%" y="1535.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (7 samples, 0.08%)</title><rect x="96.6040%" y="1509" width="0.0843%" height="15" fill="rgb(227,95,24)" fg:x="8022" fg:w="7"/><text x="96.8540%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (7 samples, 0.08%)</title><rect x="96.6040%" y="1493" width="0.0843%" height="15" fill="rgb(252,84,24)" fg:x="8022" fg:w="7"/><text x="96.8540%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (7 samples, 0.08%)</title><rect x="96.6040%" y="1477" width="0.0843%" height="15" fill="rgb(240,34,44)" fg:x="8022" fg:w="7"/><text x="96.8540%" y="1487.50"></text></g><g><title>core::hash::Hasher::write_u8 (2 samples, 0.02%)</title><rect x="96.6643%" y="1461" width="0.0241%" height="15" fill="rgb(209,72,54)" fg:x="8027" fg:w="2"/><text x="96.9143%" y="1471.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="96.6763%" y="1445" width="0.0120%" height="15" fill="rgb(226,19,45)" fg:x="8028" fg:w="1"/><text x="96.9263%" y="1455.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::{{closure}} (2 samples, 0.02%)</title><rect x="96.6883%" y="1477" width="0.0241%" height="15" fill="rgb(246,7,45)" fg:x="8029" fg:w="2"/><text x="96.9383%" y="1487.50"></text></g><g><title>indexmap::map::core::equivalent::{{closure}} (2 samples, 0.02%)</title><rect x="96.6883%" y="1461" width="0.0241%" height="15" fill="rgb(225,45,2)" fg:x="8029" fg:w="2"/><text x="96.9383%" y="1471.50"></text></g><g><title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (2 samples, 0.02%)</title><rect x="96.6883%" y="1445" width="0.0241%" height="15" fill="rgb(221,80,29)" fg:x="8029" fg:w="2"/><text x="96.9383%" y="1455.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.02%)</title><rect x="96.6883%" y="1429" width="0.0241%" height="15" fill="rgb(228,11,19)" fg:x="8029" fg:w="2"/><text x="96.9383%" y="1439.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.02%)</title><rect x="96.6883%" y="1413" width="0.0241%" height="15" fill="rgb(243,17,21)" fg:x="8029" fg:w="2"/><text x="96.9383%" y="1423.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.02%)</title><rect x="96.6883%" y="1397" width="0.0241%" height="15" fill="rgb(243,88,8)" fg:x="8029" fg:w="2"/><text x="96.9383%" y="1407.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.02%)</title><rect x="96.6883%" y="1381" width="0.0241%" height="15" fill="rgb(214,17,9)" fg:x="8029" fg:w="2"/><text x="96.9383%" y="1391.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="96.7004%" y="1365" width="0.0120%" height="15" fill="rgb(232,169,15)" fg:x="8030" fg:w="1"/><text x="96.9504%" y="1375.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (1 samples, 0.01%)</title><rect x="96.7124%" y="1477" width="0.0120%" height="15" fill="rgb(232,86,53)" fg:x="8031" fg:w="1"/><text x="96.9624%" y="1487.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="96.7124%" y="1461" width="0.0120%" height="15" fill="rgb(222,100,4)" fg:x="8031" fg:w="1"/><text x="96.9624%" y="1471.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="96.7124%" y="1445" width="0.0120%" height="15" fill="rgb(253,151,38)" fg:x="8031" fg:w="1"/><text x="96.9624%" y="1455.50"></text></g><g><title>wasmer::sys::exports::Exports::get_global (17 samples, 0.20%)</title><rect x="96.5559%" y="1605" width="0.2047%" height="15" fill="rgb(238,215,29)" fg:x="8018" fg:w="17"/><text x="96.8059%" y="1615.50"></text></g><g><title>wasmer::sys::exports::Exports::get (16 samples, 0.19%)</title><rect x="96.5679%" y="1589" width="0.1927%" height="15" fill="rgb(205,128,53)" fg:x="8019" fg:w="16"/><text x="96.8179%" y="1599.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (16 samples, 0.19%)</title><rect x="96.5679%" y="1573" width="0.1927%" height="15" fill="rgb(248,183,14)" fg:x="8019" fg:w="16"/><text x="96.8179%" y="1583.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (16 samples, 0.19%)</title><rect x="96.5679%" y="1557" width="0.1927%" height="15" fill="rgb(244,172,35)" fg:x="8019" fg:w="16"/><text x="96.8179%" y="1567.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (6 samples, 0.07%)</title><rect x="96.6883%" y="1541" width="0.0723%" height="15" fill="rgb(234,93,19)" fg:x="8029" fg:w="6"/><text x="96.9383%" y="1551.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (6 samples, 0.07%)</title><rect x="96.6883%" y="1525" width="0.0723%" height="15" fill="rgb(227,109,7)" fg:x="8029" fg:w="6"/><text x="96.9383%" y="1535.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (6 samples, 0.07%)</title><rect x="96.6883%" y="1509" width="0.0723%" height="15" fill="rgb(233,136,54)" fg:x="8029" fg:w="6"/><text x="96.9383%" y="1519.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (6 samples, 0.07%)</title><rect x="96.6883%" y="1493" width="0.0723%" height="15" fill="rgb(233,19,40)" fg:x="8029" fg:w="6"/><text x="96.9383%" y="1503.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (3 samples, 0.04%)</title><rect x="96.7245%" y="1477" width="0.0361%" height="15" fill="rgb(247,41,18)" fg:x="8032" fg:w="3"/><text x="96.9745%" y="1487.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (3 samples, 0.04%)</title><rect x="96.7245%" y="1461" width="0.0361%" height="15" fill="rgb(220,34,34)" fg:x="8032" fg:w="3"/><text x="96.9745%" y="1471.50"></text></g><g><title>vm_library::env::Context::get_gas_left (20 samples, 0.24%)</title><rect x="96.5318%" y="1669" width="0.2408%" height="15" fill="rgb(222,135,32)" fg:x="8016" fg:w="20"/><text x="96.7818%" y="1679.50"></text></g><g><title>vm_library::env::Context::with_instance (20 samples, 0.24%)</title><rect x="96.5318%" y="1653" width="0.2408%" height="15" fill="rgb(214,80,19)" fg:x="8016" fg:w="20"/><text x="96.7818%" y="1663.50"></text></g><g><title>vm_library::env::Context::get_gas_left::{{closure}} (20 samples, 0.24%)</title><rect x="96.5318%" y="1637" width="0.2408%" height="15" fill="rgb(234,54,46)" fg:x="8016" fg:w="20"/><text x="96.7818%" y="1647.50"></text></g><g><title>wasmer_middlewares::metering::get_remaining_points (20 samples, 0.24%)</title><rect x="96.5318%" y="1621" width="0.2408%" height="15" fill="rgb(251,48,23)" fg:x="8016" fg:w="20"/><text x="96.7818%" y="1631.50"></text></g><g><title>wasmer::sys::externals::global::Global::get (1 samples, 0.01%)</title><rect x="96.7606%" y="1605" width="0.0120%" height="15" fill="rgb(254,109,52)" fg:x="8035" fg:w="1"/><text x="97.0106%" y="1615.50"></text></g><g><title>wasmer_vm::global::Global::get (1 samples, 0.01%)</title><rect x="96.7606%" y="1589" width="0.0120%" height="15" fill="rgb(240,186,19)" fg:x="8035" fg:w="1"/><text x="97.0106%" y="1599.50"></text></g><g><title>wasmer_vm::global::Global::ty (1 samples, 0.01%)</title><rect x="96.7606%" y="1573" width="0.0120%" height="15" fill="rgb(246,187,17)" fg:x="8035" fg:w="1"/><text x="97.0106%" y="1583.50"></text></g><g><title>&lt;wasmer::sys::externals::global::Global as wasmer::sys::exports::Exportable&gt;::get_self_from_extern (1 samples, 0.01%)</title><rect x="96.7726%" y="1573" width="0.0120%" height="15" fill="rgb(212,21,5)" fg:x="8036" fg:w="1"/><text x="97.0226%" y="1583.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (1 samples, 0.01%)</title><rect x="96.7847%" y="1541" width="0.0120%" height="15" fill="rgb(225,185,18)" fg:x="8037" fg:w="1"/><text x="97.0347%" y="1551.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="96.7847%" y="1525" width="0.0120%" height="15" fill="rgb(245,114,17)" fg:x="8037" fg:w="1"/><text x="97.0347%" y="1535.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="96.7847%" y="1509" width="0.0120%" height="15" fill="rgb(223,164,24)" fg:x="8037" fg:w="1"/><text x="97.0347%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="96.7847%" y="1493" width="0.0120%" height="15" fill="rgb(211,228,3)" fg:x="8037" fg:w="1"/><text x="97.0347%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="96.7847%" y="1477" width="0.0120%" height="15" fill="rgb(223,16,38)" fg:x="8037" fg:w="1"/><text x="97.0347%" y="1487.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="96.7847%" y="1461" width="0.0120%" height="15" fill="rgb(207,31,54)" fg:x="8037" fg:w="1"/><text x="97.0347%" y="1471.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::{{closure}} (6 samples, 0.07%)</title><rect x="96.8208%" y="1477" width="0.0723%" height="15" fill="rgb(220,39,11)" fg:x="8040" fg:w="6"/><text x="97.0708%" y="1487.50"></text></g><g><title>indexmap::map::core::equivalent::{{closure}} (5 samples, 0.06%)</title><rect x="96.8329%" y="1461" width="0.0602%" height="15" fill="rgb(235,185,0)" fg:x="8041" fg:w="5"/><text x="97.0829%" y="1471.50"></text></g><g><title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (4 samples, 0.05%)</title><rect x="96.8449%" y="1445" width="0.0482%" height="15" fill="rgb(249,39,18)" fg:x="8042" fg:w="4"/><text x="97.0949%" y="1455.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (4 samples, 0.05%)</title><rect x="96.8449%" y="1429" width="0.0482%" height="15" fill="rgb(240,110,33)" fg:x="8042" fg:w="4"/><text x="97.0949%" y="1439.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.05%)</title><rect x="96.8449%" y="1413" width="0.0482%" height="15" fill="rgb(210,92,42)" fg:x="8042" fg:w="4"/><text x="97.0949%" y="1423.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.05%)</title><rect x="96.8449%" y="1397" width="0.0482%" height="15" fill="rgb(218,215,28)" fg:x="8042" fg:w="4"/><text x="97.0949%" y="1407.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.05%)</title><rect x="96.8449%" y="1381" width="0.0482%" height="15" fill="rgb(238,215,36)" fg:x="8042" fg:w="4"/><text x="97.0949%" y="1391.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (2 samples, 0.02%)</title><rect x="96.8931%" y="1477" width="0.0241%" height="15" fill="rgb(220,31,10)" fg:x="8046" fg:w="2"/><text x="97.1431%" y="1487.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.02%)</title><rect x="96.8931%" y="1461" width="0.0241%" height="15" fill="rgb(212,93,14)" fg:x="8046" fg:w="2"/><text x="97.1431%" y="1471.50"></text></g><g><title>wasmer::sys::exports::Exports::get_global (14 samples, 0.17%)</title><rect x="96.7726%" y="1605" width="0.1686%" height="15" fill="rgb(254,207,2)" fg:x="8036" fg:w="14"/><text x="97.0226%" y="1615.50"></text></g><g><title>wasmer::sys::exports::Exports::get (14 samples, 0.17%)</title><rect x="96.7726%" y="1589" width="0.1686%" height="15" fill="rgb(205,57,44)" fg:x="8036" fg:w="14"/><text x="97.0226%" y="1599.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (13 samples, 0.16%)</title><rect x="96.7847%" y="1573" width="0.1566%" height="15" fill="rgb(226,151,19)" fg:x="8037" fg:w="13"/><text x="97.0347%" y="1583.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (13 samples, 0.16%)</title><rect x="96.7847%" y="1557" width="0.1566%" height="15" fill="rgb(230,72,30)" fg:x="8037" fg:w="13"/><text x="97.0347%" y="1567.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (12 samples, 0.14%)</title><rect x="96.7967%" y="1541" width="0.1445%" height="15" fill="rgb(244,0,8)" fg:x="8038" fg:w="12"/><text x="97.0467%" y="1551.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (12 samples, 0.14%)</title><rect x="96.7967%" y="1525" width="0.1445%" height="15" fill="rgb(230,192,6)" fg:x="8038" fg:w="12"/><text x="97.0467%" y="1535.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (12 samples, 0.14%)</title><rect x="96.7967%" y="1509" width="0.1445%" height="15" fill="rgb(233,207,13)" fg:x="8038" fg:w="12"/><text x="97.0467%" y="1519.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (12 samples, 0.14%)</title><rect x="96.7967%" y="1493" width="0.1445%" height="15" fill="rgb(206,227,7)" fg:x="8038" fg:w="12"/><text x="97.0467%" y="1503.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (2 samples, 0.02%)</title><rect x="96.9171%" y="1477" width="0.0241%" height="15" fill="rgb(213,217,25)" fg:x="8048" fg:w="2"/><text x="97.1671%" y="1487.50"></text></g><g><title>vm_library::managed::imports::car (48 samples, 0.58%)</title><rect x="96.4234%" y="1701" width="0.5780%" height="15" fill="rgb(249,75,4)" fg:x="8007" fg:w="48"/><text x="96.6734%" y="1711.50"></text></g><g><title>vm_library::env::Context::update_gas (39 samples, 0.47%)</title><rect x="96.5318%" y="1685" width="0.4697%" height="15" fill="rgb(225,114,18)" fg:x="8016" fg:w="39"/><text x="96.7818%" y="1695.50"></text></g><g><title>vm_library::env::Context::set_gas_left (19 samples, 0.23%)</title><rect x="96.7726%" y="1669" width="0.2288%" height="15" fill="rgb(211,162,40)" fg:x="8036" fg:w="19"/><text x="97.0226%" y="1679.50"></text></g><g><title>vm_library::env::Context::with_instance (19 samples, 0.23%)</title><rect x="96.7726%" y="1653" width="0.2288%" height="15" fill="rgb(206,49,29)" fg:x="8036" fg:w="19"/><text x="97.0226%" y="1663.50"></text></g><g><title>vm_library::env::Context::set_gas_left::{{closure}} (19 samples, 0.23%)</title><rect x="96.7726%" y="1637" width="0.2288%" height="15" fill="rgb(244,8,6)" fg:x="8036" fg:w="19"/><text x="97.0226%" y="1647.50"></text></g><g><title>wasmer_middlewares::metering::set_remaining_points (19 samples, 0.23%)</title><rect x="96.7726%" y="1621" width="0.2288%" height="15" fill="rgb(231,194,28)" fg:x="8036" fg:w="19"/><text x="97.0226%" y="1631.50"></text></g><g><title>wasmer::sys::externals::global::Global::set (5 samples, 0.06%)</title><rect x="96.9412%" y="1605" width="0.0602%" height="15" fill="rgb(210,69,5)" fg:x="8050" fg:w="5"/><text x="97.1912%" y="1615.50"></text></g><g><title>wasmer_vm::global::Global::set (1 samples, 0.01%)</title><rect x="96.9894%" y="1589" width="0.0120%" height="15" fill="rgb(216,186,12)" fg:x="8054" fg:w="1"/><text x="97.2394%" y="1599.50"></text></g><g><title>_mi_segment_page_of (1 samples, 0.01%)</title><rect x="97.0135%" y="1621" width="0.0120%" height="15" fill="rgb(238,61,15)" fg:x="8056" fg:w="1"/><text x="97.2635%" y="1631.50"></text></g><g><title>alloc::alloc::box_free (2 samples, 0.02%)</title><rect x="97.0135%" y="1685" width="0.0241%" height="15" fill="rgb(226,104,1)" fg:x="8056" fg:w="2"/><text x="97.2635%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="97.0135%" y="1669" width="0.0241%" height="15" fill="rgb(229,128,15)" fg:x="8056" fg:w="2"/><text x="97.2635%" y="1679.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="97.0135%" y="1653" width="0.0241%" height="15" fill="rgb(247,110,15)" fg:x="8056" fg:w="2"/><text x="97.2635%" y="1663.50"></text></g><g><title>mi_free (2 samples, 0.02%)</title><rect x="97.0135%" y="1637" width="0.0241%" height="15" fill="rgb(210,74,48)" fg:x="8056" fg:w="2"/><text x="97.2635%" y="1647.50"></text></g><g><title>mi_check_is_double_free (1 samples, 0.01%)</title><rect x="97.0255%" y="1621" width="0.0120%" height="15" fill="rgb(246,121,10)" fg:x="8057" fg:w="1"/><text x="97.2755%" y="1631.50"></text></g><g><title>mi_block_nextx (1 samples, 0.01%)</title><rect x="97.0255%" y="1605" width="0.0120%" height="15" fill="rgb(214,156,37)" fg:x="8057" fg:w="1"/><text x="97.2755%" y="1615.50"></text></g><g><title>mi_ptr_decode (1 samples, 0.01%)</title><rect x="97.0255%" y="1589" width="0.0120%" height="15" fill="rgb(214,210,34)" fg:x="8057" fg:w="1"/><text x="97.2755%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;vm_library::managed::value::Value&gt; (1 samples, 0.01%)</title><rect x="97.0376%" y="1669" width="0.0120%" height="15" fill="rgb(237,93,35)" fg:x="8058" fg:w="1"/><text x="97.2876%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;vm_library::managed::value::Value&gt;&gt; (2 samples, 0.02%)</title><rect x="97.0376%" y="1685" width="0.0241%" height="15" fill="rgb(206,36,8)" fg:x="8058" fg:w="2"/><text x="97.2876%" y="1695.50"></text></g><g><title>mi_free (1 samples, 0.01%)</title><rect x="97.0496%" y="1669" width="0.0120%" height="15" fill="rgb(208,151,12)" fg:x="8059" fg:w="1"/><text x="97.2996%" y="1679.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (3 samples, 0.04%)</title><rect x="97.0617%" y="1605" width="0.0361%" height="15" fill="rgb(225,133,52)" fg:x="8060" fg:w="3"/><text x="97.3117%" y="1615.50"></text></g><g><title>wasmer_types::values::&lt;impl core::convert::TryFrom&lt;wasmer_types::values::Value&lt;T&gt;&gt; for i32&gt;::try_from (1 samples, 0.01%)</title><rect x="97.0857%" y="1589" width="0.0120%" height="15" fill="rgb(231,71,53)" fg:x="8062" fg:w="1"/><text x="97.3357%" y="1599.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (1 samples, 0.01%)</title><rect x="97.0857%" y="1573" width="0.0120%" height="15" fill="rgb(243,76,21)" fg:x="8062" fg:w="1"/><text x="97.3357%" y="1583.50"></text></g><g><title>&lt;wasmer::sys::externals::global::Global as wasmer::sys::exports::Exportable&gt;::get_self_from_extern (1 samples, 0.01%)</title><rect x="97.1098%" y="1573" width="0.0120%" height="15" fill="rgb(252,144,3)" fg:x="8064" fg:w="1"/><text x="97.3598%" y="1583.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="97.1219%" y="1525" width="0.0120%" height="15" fill="rgb(231,199,10)" fg:x="8065" fg:w="1"/><text x="97.3719%" y="1535.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="97.1219%" y="1509" width="0.0120%" height="15" fill="rgb(215,18,11)" fg:x="8065" fg:w="1"/><text x="97.3719%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="97.1219%" y="1493" width="0.0120%" height="15" fill="rgb(241,65,24)" fg:x="8065" fg:w="1"/><text x="97.3719%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="97.1219%" y="1477" width="0.0120%" height="15" fill="rgb(251,192,38)" fg:x="8065" fg:w="1"/><text x="97.3719%" y="1487.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="97.1219%" y="1461" width="0.0120%" height="15" fill="rgb(205,9,35)" fg:x="8065" fg:w="1"/><text x="97.3719%" y="1471.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (4 samples, 0.05%)</title><rect x="97.1219%" y="1541" width="0.0482%" height="15" fill="rgb(229,225,49)" fg:x="8065" fg:w="4"/><text x="97.3719%" y="1551.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (3 samples, 0.04%)</title><rect x="97.1339%" y="1525" width="0.0361%" height="15" fill="rgb(207,125,39)" fg:x="8066" fg:w="3"/><text x="97.3839%" y="1535.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="97.1339%" y="1509" width="0.0361%" height="15" fill="rgb(222,78,19)" fg:x="8066" fg:w="3"/><text x="97.3839%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="97.1339%" y="1493" width="0.0361%" height="15" fill="rgb(248,207,20)" fg:x="8066" fg:w="3"/><text x="97.3839%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="97.1339%" y="1477" width="0.0361%" height="15" fill="rgb(205,103,49)" fg:x="8066" fg:w="3"/><text x="97.3839%" y="1487.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="97.1339%" y="1461" width="0.0361%" height="15" fill="rgb(216,42,28)" fg:x="8066" fg:w="3"/><text x="97.3839%" y="1471.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="97.1460%" y="1445" width="0.0241%" height="15" fill="rgb(213,205,53)" fg:x="8067" fg:w="2"/><text x="97.3960%" y="1455.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="97.1460%" y="1429" width="0.0241%" height="15" fill="rgb(239,140,53)" fg:x="8067" fg:w="2"/><text x="97.3960%" y="1439.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::{{closure}} (4 samples, 0.05%)</title><rect x="97.1700%" y="1477" width="0.0482%" height="15" fill="rgb(248,95,9)" fg:x="8069" fg:w="4"/><text x="97.4200%" y="1487.50"></text></g><g><title>indexmap::map::core::equivalent::{{closure}} (4 samples, 0.05%)</title><rect x="97.1700%" y="1461" width="0.0482%" height="15" fill="rgb(254,58,47)" fg:x="8069" fg:w="4"/><text x="97.4200%" y="1471.50"></text></g><g><title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (4 samples, 0.05%)</title><rect x="97.1700%" y="1445" width="0.0482%" height="15" fill="rgb(234,227,14)" fg:x="8069" fg:w="4"/><text x="97.4200%" y="1455.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (4 samples, 0.05%)</title><rect x="97.1700%" y="1429" width="0.0482%" height="15" fill="rgb(205,192,45)" fg:x="8069" fg:w="4"/><text x="97.4200%" y="1439.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.05%)</title><rect x="97.1700%" y="1413" width="0.0482%" height="15" fill="rgb(253,187,31)" fg:x="8069" fg:w="4"/><text x="97.4200%" y="1423.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.05%)</title><rect x="97.1700%" y="1397" width="0.0482%" height="15" fill="rgb(222,6,32)" fg:x="8069" fg:w="4"/><text x="97.4200%" y="1407.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.05%)</title><rect x="97.1700%" y="1381" width="0.0482%" height="15" fill="rgb(249,190,19)" fg:x="8069" fg:w="4"/><text x="97.4200%" y="1391.50"></text></g><g><title>__memcmp_avx2_movbe (3 samples, 0.04%)</title><rect x="97.1821%" y="1365" width="0.0361%" height="15" fill="rgb(251,28,20)" fg:x="8070" fg:w="3"/><text x="97.4321%" y="1375.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (1 samples, 0.01%)</title><rect x="97.2182%" y="1477" width="0.0120%" height="15" fill="rgb(210,223,40)" fg:x="8073" fg:w="1"/><text x="97.4682%" y="1487.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.01%)</title><rect x="97.2182%" y="1461" width="0.0120%" height="15" fill="rgb(216,137,22)" fg:x="8073" fg:w="1"/><text x="97.4682%" y="1471.50"></text></g><g><title>wasmer::sys::exports::Exports::get_global (12 samples, 0.14%)</title><rect x="97.0978%" y="1605" width="0.1445%" height="15" fill="rgb(247,39,34)" fg:x="8063" fg:w="12"/><text x="97.3478%" y="1615.50"></text></g><g><title>wasmer::sys::exports::Exports::get (12 samples, 0.14%)</title><rect x="97.0978%" y="1589" width="0.1445%" height="15" fill="rgb(239,43,50)" fg:x="8063" fg:w="12"/><text x="97.3478%" y="1599.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (10 samples, 0.12%)</title><rect x="97.1219%" y="1573" width="0.1204%" height="15" fill="rgb(241,212,9)" fg:x="8065" fg:w="10"/><text x="97.3719%" y="1583.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (10 samples, 0.12%)</title><rect x="97.1219%" y="1557" width="0.1204%" height="15" fill="rgb(205,8,2)" fg:x="8065" fg:w="10"/><text x="97.3719%" y="1567.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (6 samples, 0.07%)</title><rect x="97.1700%" y="1541" width="0.0723%" height="15" fill="rgb(217,173,54)" fg:x="8069" fg:w="6"/><text x="97.4200%" y="1551.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (6 samples, 0.07%)</title><rect x="97.1700%" y="1525" width="0.0723%" height="15" fill="rgb(208,149,52)" fg:x="8069" fg:w="6"/><text x="97.4200%" y="1535.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (6 samples, 0.07%)</title><rect x="97.1700%" y="1509" width="0.0723%" height="15" fill="rgb(239,99,40)" fg:x="8069" fg:w="6"/><text x="97.4200%" y="1519.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (6 samples, 0.07%)</title><rect x="97.1700%" y="1493" width="0.0723%" height="15" fill="rgb(233,214,26)" fg:x="8069" fg:w="6"/><text x="97.4200%" y="1503.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="97.2303%" y="1477" width="0.0120%" height="15" fill="rgb(231,225,37)" fg:x="8074" fg:w="1"/><text x="97.4803%" y="1487.50"></text></g><g><title>vm_library::env::Context::get_gas_left (17 samples, 0.20%)</title><rect x="97.0617%" y="1669" width="0.2047%" height="15" fill="rgb(252,55,35)" fg:x="8060" fg:w="17"/><text x="97.3117%" y="1679.50"></text></g><g><title>vm_library::env::Context::with_instance (17 samples, 0.20%)</title><rect x="97.0617%" y="1653" width="0.2047%" height="15" fill="rgb(239,43,18)" fg:x="8060" fg:w="17"/><text x="97.3117%" y="1663.50"></text></g><g><title>vm_library::env::Context::get_gas_left::{{closure}} (17 samples, 0.20%)</title><rect x="97.0617%" y="1637" width="0.2047%" height="15" fill="rgb(251,125,49)" fg:x="8060" fg:w="17"/><text x="97.3117%" y="1647.50"></text></g><g><title>wasmer_middlewares::metering::get_remaining_points (17 samples, 0.20%)</title><rect x="97.0617%" y="1621" width="0.2047%" height="15" fill="rgb(212,83,54)" fg:x="8060" fg:w="17"/><text x="97.3117%" y="1631.50"></text></g><g><title>wasmer::sys::externals::global::Global::get (2 samples, 0.02%)</title><rect x="97.2423%" y="1605" width="0.0241%" height="15" fill="rgb(250,75,6)" fg:x="8075" fg:w="2"/><text x="97.4923%" y="1615.50"></text></g><g><title>wasmer_vm::global::Global::get (2 samples, 0.02%)</title><rect x="97.2423%" y="1589" width="0.0241%" height="15" fill="rgb(252,36,40)" fg:x="8075" fg:w="2"/><text x="97.4923%" y="1599.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="97.2784%" y="1445" width="0.0120%" height="15" fill="rgb(230,91,51)" fg:x="8078" fg:w="1"/><text x="97.5284%" y="1455.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="97.2784%" y="1429" width="0.0120%" height="15" fill="rgb(212,92,28)" fg:x="8078" fg:w="1"/><text x="97.5284%" y="1439.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (3 samples, 0.04%)</title><rect x="97.2664%" y="1541" width="0.0361%" height="15" fill="rgb(227,13,22)" fg:x="8077" fg:w="3"/><text x="97.5164%" y="1551.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (3 samples, 0.04%)</title><rect x="97.2664%" y="1525" width="0.0361%" height="15" fill="rgb(239,204,32)" fg:x="8077" fg:w="3"/><text x="97.5164%" y="1535.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="97.2664%" y="1509" width="0.0361%" height="15" fill="rgb(228,49,41)" fg:x="8077" fg:w="3"/><text x="97.5164%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="97.2664%" y="1493" width="0.0361%" height="15" fill="rgb(206,95,6)" fg:x="8077" fg:w="3"/><text x="97.5164%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="97.2664%" y="1477" width="0.0361%" height="15" fill="rgb(251,20,14)" fg:x="8077" fg:w="3"/><text x="97.5164%" y="1487.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="97.2664%" y="1461" width="0.0361%" height="15" fill="rgb(214,99,28)" fg:x="8077" fg:w="3"/><text x="97.5164%" y="1471.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="97.2905%" y="1445" width="0.0120%" height="15" fill="rgb(239,122,54)" fg:x="8079" fg:w="1"/><text x="97.5405%" y="1455.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::is_empty (1 samples, 0.01%)</title><rect x="97.3025%" y="1541" width="0.0120%" height="15" fill="rgb(218,217,46)" fg:x="8080" fg:w="1"/><text x="97.5525%" y="1551.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.01%)</title><rect x="97.3266%" y="1477" width="0.0120%" height="15" fill="rgb(249,106,28)" fg:x="8082" fg:w="1"/><text x="97.5766%" y="1487.50"></text></g><g><title>indexmap::map::core::equivalent::{{closure}} (1 samples, 0.01%)</title><rect x="97.3266%" y="1461" width="0.0120%" height="15" fill="rgb(250,158,18)" fg:x="8082" fg:w="1"/><text x="97.5766%" y="1471.50"></text></g><g><title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.01%)</title><rect x="97.3266%" y="1445" width="0.0120%" height="15" fill="rgb(226,137,29)" fg:x="8082" fg:w="1"/><text x="97.5766%" y="1455.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.01%)</title><rect x="97.3266%" y="1429" width="0.0120%" height="15" fill="rgb(210,188,1)" fg:x="8082" fg:w="1"/><text x="97.5766%" y="1439.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="97.3266%" y="1413" width="0.0120%" height="15" fill="rgb(227,84,42)" fg:x="8082" fg:w="1"/><text x="97.5766%" y="1423.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="97.3266%" y="1397" width="0.0120%" height="15" fill="rgb(222,147,48)" fg:x="8082" fg:w="1"/><text x="97.5766%" y="1407.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="97.3266%" y="1381" width="0.0120%" height="15" fill="rgb(241,150,43)" fg:x="8082" fg:w="1"/><text x="97.5766%" y="1391.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="97.3266%" y="1365" width="0.0120%" height="15" fill="rgb(206,139,52)" fg:x="8082" fg:w="1"/><text x="97.5766%" y="1375.50"></text></g><g><title>wasmer::sys::exports::Exports::get_global (9 samples, 0.11%)</title><rect x="97.2664%" y="1605" width="0.1084%" height="15" fill="rgb(230,63,14)" fg:x="8077" fg:w="9"/><text x="97.5164%" y="1615.50"></text></g><g><title>wasmer::sys::exports::Exports::get (9 samples, 0.11%)</title><rect x="97.2664%" y="1589" width="0.1084%" height="15" fill="rgb(247,8,20)" fg:x="8077" fg:w="9"/><text x="97.5164%" y="1599.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (9 samples, 0.11%)</title><rect x="97.2664%" y="1573" width="0.1084%" height="15" fill="rgb(213,115,4)" fg:x="8077" fg:w="9"/><text x="97.5164%" y="1583.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (9 samples, 0.11%)</title><rect x="97.2664%" y="1557" width="0.1084%" height="15" fill="rgb(241,79,49)" fg:x="8077" fg:w="9"/><text x="97.5164%" y="1567.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (5 samples, 0.06%)</title><rect x="97.3145%" y="1541" width="0.0602%" height="15" fill="rgb(222,42,35)" fg:x="8081" fg:w="5"/><text x="97.5645%" y="1551.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (5 samples, 0.06%)</title><rect x="97.3145%" y="1525" width="0.0602%" height="15" fill="rgb(247,59,23)" fg:x="8081" fg:w="5"/><text x="97.5645%" y="1535.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (5 samples, 0.06%)</title><rect x="97.3145%" y="1509" width="0.0602%" height="15" fill="rgb(247,93,18)" fg:x="8081" fg:w="5"/><text x="97.5645%" y="1519.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (5 samples, 0.06%)</title><rect x="97.3145%" y="1493" width="0.0602%" height="15" fill="rgb(249,107,47)" fg:x="8081" fg:w="5"/><text x="97.5645%" y="1503.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (3 samples, 0.04%)</title><rect x="97.3386%" y="1477" width="0.0361%" height="15" fill="rgb(219,27,1)" fg:x="8083" fg:w="3"/><text x="97.5886%" y="1487.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (3 samples, 0.04%)</title><rect x="97.3386%" y="1461" width="0.0361%" height="15" fill="rgb(217,82,32)" fg:x="8083" fg:w="3"/><text x="97.5886%" y="1471.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="97.4229%" y="1573" width="0.0120%" height="15" fill="rgb(250,129,47)" fg:x="8090" fg:w="1"/><text x="97.6729%" y="1583.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="97.4229%" y="1557" width="0.0120%" height="15" fill="rgb(253,88,35)" fg:x="8090" fg:w="1"/><text x="97.6729%" y="1567.50"></text></g><g><title>std::sync::poison::Flag::guard (1 samples, 0.01%)</title><rect x="97.4229%" y="1541" width="0.0120%" height="15" fill="rgb(245,221,14)" fg:x="8090" fg:w="1"/><text x="97.6729%" y="1551.50"></text></g><g><title>std::thread::panicking (1 samples, 0.01%)</title><rect x="97.4229%" y="1525" width="0.0120%" height="15" fill="rgb(217,119,54)" fg:x="8090" fg:w="1"/><text x="97.6729%" y="1535.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.01%)</title><rect x="97.4229%" y="1509" width="0.0120%" height="15" fill="rgb(247,128,31)" fg:x="8090" fg:w="1"/><text x="97.6729%" y="1519.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.01%)</title><rect x="97.4229%" y="1493" width="0.0120%" height="15" fill="rgb(211,99,22)" fg:x="8090" fg:w="1"/><text x="97.6729%" y="1503.50"></text></g><g><title>vm_library::managed::imports::cdr (37 samples, 0.45%)</title><rect x="97.0014%" y="1701" width="0.4456%" height="15" fill="rgb(212,20,17)" fg:x="8055" fg:w="37"/><text x="97.2514%" y="1711.50"></text></g><g><title>vm_library::env::Context::update_gas (32 samples, 0.39%)</title><rect x="97.0617%" y="1685" width="0.3854%" height="15" fill="rgb(209,159,29)" fg:x="8060" fg:w="32"/><text x="97.3117%" y="1695.50"></text></g><g><title>vm_library::env::Context::set_gas_left (15 samples, 0.18%)</title><rect x="97.2664%" y="1669" width="0.1806%" height="15" fill="rgb(222,177,53)" fg:x="8077" fg:w="15"/><text x="97.5164%" y="1679.50"></text></g><g><title>vm_library::env::Context::with_instance (15 samples, 0.18%)</title><rect x="97.2664%" y="1653" width="0.1806%" height="15" fill="rgb(234,46,43)" fg:x="8077" fg:w="15"/><text x="97.5164%" y="1663.50"></text></g><g><title>vm_library::env::Context::set_gas_left::{{closure}} (15 samples, 0.18%)</title><rect x="97.2664%" y="1637" width="0.1806%" height="15" fill="rgb(208,108,14)" fg:x="8077" fg:w="15"/><text x="97.5164%" y="1647.50"></text></g><g><title>wasmer_middlewares::metering::set_remaining_points (15 samples, 0.18%)</title><rect x="97.2664%" y="1621" width="0.1806%" height="15" fill="rgb(226,78,53)" fg:x="8077" fg:w="15"/><text x="97.5164%" y="1631.50"></text></g><g><title>wasmer::sys::externals::global::Global::set (6 samples, 0.07%)</title><rect x="97.3748%" y="1605" width="0.0723%" height="15" fill="rgb(230,20,41)" fg:x="8086" fg:w="6"/><text x="97.6248%" y="1615.50"></text></g><g><title>wasmer_vm::global::Global::set (3 samples, 0.04%)</title><rect x="97.4109%" y="1589" width="0.0361%" height="15" fill="rgb(213,195,35)" fg:x="8089" fg:w="3"/><text x="97.6609%" y="1599.50"></text></g><g><title>wasmer_vm::global::Global::ty (1 samples, 0.01%)</title><rect x="97.4350%" y="1573" width="0.0120%" height="15" fill="rgb(242,62,36)" fg:x="8091" fg:w="1"/><text x="97.6850%" y="1583.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.01%)</title><rect x="97.4470%" y="1605" width="0.0120%" height="15" fill="rgb(222,210,37)" fg:x="8092" fg:w="1"/><text x="97.6970%" y="1615.50"></text></g><g><title>wasmer_types::values::&lt;impl core::convert::TryFrom&lt;wasmer_types::values::Value&lt;T&gt;&gt; for u64&gt;::try_from (1 samples, 0.01%)</title><rect x="97.4470%" y="1589" width="0.0120%" height="15" fill="rgb(232,107,19)" fg:x="8092" fg:w="1"/><text x="97.6970%" y="1599.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (1 samples, 0.01%)</title><rect x="97.4470%" y="1573" width="0.0120%" height="15" fill="rgb(235,85,17)" fg:x="8092" fg:w="1"/><text x="97.6970%" y="1583.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (2 samples, 0.02%)</title><rect x="97.4591%" y="1541" width="0.0241%" height="15" fill="rgb(219,195,31)" fg:x="8093" fg:w="2"/><text x="97.7091%" y="1551.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.02%)</title><rect x="97.4591%" y="1525" width="0.0241%" height="15" fill="rgb(231,183,30)" fg:x="8093" fg:w="2"/><text x="97.7091%" y="1535.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="97.4591%" y="1509" width="0.0241%" height="15" fill="rgb(212,0,11)" fg:x="8093" fg:w="2"/><text x="97.7091%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="97.4591%" y="1493" width="0.0241%" height="15" fill="rgb(249,53,54)" fg:x="8093" fg:w="2"/><text x="97.7091%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="97.4591%" y="1477" width="0.0241%" height="15" fill="rgb(211,118,13)" fg:x="8093" fg:w="2"/><text x="97.7091%" y="1487.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="97.4591%" y="1461" width="0.0241%" height="15" fill="rgb(237,42,9)" fg:x="8093" fg:w="2"/><text x="97.7091%" y="1471.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::{{closure}} (4 samples, 0.05%)</title><rect x="97.4831%" y="1477" width="0.0482%" height="15" fill="rgb(227,68,32)" fg:x="8095" fg:w="4"/><text x="97.7331%" y="1487.50"></text></g><g><title>indexmap::map::core::equivalent::{{closure}} (3 samples, 0.04%)</title><rect x="97.4952%" y="1461" width="0.0361%" height="15" fill="rgb(238,10,7)" fg:x="8096" fg:w="3"/><text x="97.7452%" y="1471.50"></text></g><g><title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (3 samples, 0.04%)</title><rect x="97.4952%" y="1445" width="0.0361%" height="15" fill="rgb(224,42,12)" fg:x="8096" fg:w="3"/><text x="97.7452%" y="1455.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (3 samples, 0.04%)</title><rect x="97.4952%" y="1429" width="0.0361%" height="15" fill="rgb(252,190,5)" fg:x="8096" fg:w="3"/><text x="97.7452%" y="1439.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.04%)</title><rect x="97.4952%" y="1413" width="0.0361%" height="15" fill="rgb(220,214,39)" fg:x="8096" fg:w="3"/><text x="97.7452%" y="1423.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.04%)</title><rect x="97.4952%" y="1397" width="0.0361%" height="15" fill="rgb(247,98,4)" fg:x="8096" fg:w="3"/><text x="97.7452%" y="1407.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.04%)</title><rect x="97.4952%" y="1381" width="0.0361%" height="15" fill="rgb(211,60,12)" fg:x="8096" fg:w="3"/><text x="97.7452%" y="1391.50"></text></g><g><title>__memcmp_avx2_movbe (3 samples, 0.04%)</title><rect x="97.4952%" y="1365" width="0.0361%" height="15" fill="rgb(224,42,10)" fg:x="8096" fg:w="3"/><text x="97.7452%" y="1375.50"></text></g><g><title>vm_library::env::Context::get_gas_left (8 samples, 0.10%)</title><rect x="97.4470%" y="1669" width="0.0963%" height="15" fill="rgb(217,167,4)" fg:x="8092" fg:w="8"/><text x="97.6970%" y="1679.50"></text></g><g><title>vm_library::env::Context::with_instance (8 samples, 0.10%)</title><rect x="97.4470%" y="1653" width="0.0963%" height="15" fill="rgb(253,18,17)" fg:x="8092" fg:w="8"/><text x="97.6970%" y="1663.50"></text></g><g><title>vm_library::env::Context::get_gas_left::{{closure}} (8 samples, 0.10%)</title><rect x="97.4470%" y="1637" width="0.0963%" height="15" fill="rgb(249,186,44)" fg:x="8092" fg:w="8"/><text x="97.6970%" y="1647.50"></text></g><g><title>wasmer_middlewares::metering::get_remaining_points (8 samples, 0.10%)</title><rect x="97.4470%" y="1621" width="0.0963%" height="15" fill="rgb(254,124,54)" fg:x="8092" fg:w="8"/><text x="97.6970%" y="1631.50"></text></g><g><title>wasmer::sys::exports::Exports::get_global (7 samples, 0.08%)</title><rect x="97.4591%" y="1605" width="0.0843%" height="15" fill="rgb(220,124,39)" fg:x="8093" fg:w="7"/><text x="97.7091%" y="1615.50"></text></g><g><title>wasmer::sys::exports::Exports::get (7 samples, 0.08%)</title><rect x="97.4591%" y="1589" width="0.0843%" height="15" fill="rgb(225,96,46)" fg:x="8093" fg:w="7"/><text x="97.7091%" y="1599.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (7 samples, 0.08%)</title><rect x="97.4591%" y="1573" width="0.0843%" height="15" fill="rgb(221,106,12)" fg:x="8093" fg:w="7"/><text x="97.7091%" y="1583.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (7 samples, 0.08%)</title><rect x="97.4591%" y="1557" width="0.0843%" height="15" fill="rgb(227,133,23)" fg:x="8093" fg:w="7"/><text x="97.7091%" y="1567.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (5 samples, 0.06%)</title><rect x="97.4831%" y="1541" width="0.0602%" height="15" fill="rgb(216,44,52)" fg:x="8095" fg:w="5"/><text x="97.7331%" y="1551.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (5 samples, 0.06%)</title><rect x="97.4831%" y="1525" width="0.0602%" height="15" fill="rgb(239,149,7)" fg:x="8095" fg:w="5"/><text x="97.7331%" y="1535.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (5 samples, 0.06%)</title><rect x="97.4831%" y="1509" width="0.0602%" height="15" fill="rgb(211,157,31)" fg:x="8095" fg:w="5"/><text x="97.7331%" y="1519.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (5 samples, 0.06%)</title><rect x="97.4831%" y="1493" width="0.0602%" height="15" fill="rgb(206,215,22)" fg:x="8095" fg:w="5"/><text x="97.7331%" y="1503.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (1 samples, 0.01%)</title><rect x="97.5313%" y="1477" width="0.0120%" height="15" fill="rgb(208,113,15)" fg:x="8099" fg:w="1"/><text x="97.7813%" y="1487.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.01%)</title><rect x="97.5313%" y="1461" width="0.0120%" height="15" fill="rgb(207,189,15)" fg:x="8099" fg:w="1"/><text x="97.7813%" y="1471.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="97.5434%" y="1525" width="0.0120%" height="15" fill="rgb(231,115,4)" fg:x="8100" fg:w="1"/><text x="97.7934%" y="1535.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="97.5434%" y="1509" width="0.0120%" height="15" fill="rgb(253,117,2)" fg:x="8100" fg:w="1"/><text x="97.7934%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="97.5434%" y="1493" width="0.0120%" height="15" fill="rgb(248,48,24)" fg:x="8100" fg:w="1"/><text x="97.7934%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.01%)</title><rect x="97.5434%" y="1477" width="0.0120%" height="15" fill="rgb(241,28,46)" fg:x="8100" fg:w="1"/><text x="97.7934%" y="1487.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (2 samples, 0.02%)</title><rect x="97.5434%" y="1541" width="0.0241%" height="15" fill="rgb(216,165,52)" fg:x="8100" fg:w="2"/><text x="97.7934%" y="1551.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="97.5554%" y="1525" width="0.0120%" height="15" fill="rgb(220,222,34)" fg:x="8101" fg:w="1"/><text x="97.8054%" y="1535.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="97.5554%" y="1509" width="0.0120%" height="15" fill="rgb(247,222,49)" fg:x="8101" fg:w="1"/><text x="97.8054%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="97.5554%" y="1493" width="0.0120%" height="15" fill="rgb(240,10,31)" fg:x="8101" fg:w="1"/><text x="97.8054%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="97.5554%" y="1477" width="0.0120%" height="15" fill="rgb(221,199,35)" fg:x="8101" fg:w="1"/><text x="97.8054%" y="1487.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="97.5554%" y="1461" width="0.0120%" height="15" fill="rgb(230,223,11)" fg:x="8101" fg:w="1"/><text x="97.8054%" y="1471.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.01%)</title><rect x="97.5674%" y="1477" width="0.0120%" height="15" fill="rgb(218,82,45)" fg:x="8102" fg:w="1"/><text x="97.8174%" y="1487.50"></text></g><g><title>vm_library::managed::imports::deref_bool (12 samples, 0.14%)</title><rect x="97.4470%" y="1701" width="0.1445%" height="15" fill="rgb(233,213,33)" fg:x="8092" fg:w="12"/><text x="97.6970%" y="1711.50"></text></g><g><title>vm_library::env::Context::update_gas (12 samples, 0.14%)</title><rect x="97.4470%" y="1685" width="0.1445%" height="15" fill="rgb(210,143,52)" fg:x="8092" fg:w="12"/><text x="97.6970%" y="1695.50"></text></g><g><title>vm_library::env::Context::set_gas_left (4 samples, 0.05%)</title><rect x="97.5434%" y="1669" width="0.0482%" height="15" fill="rgb(206,95,4)" fg:x="8100" fg:w="4"/><text x="97.7934%" y="1679.50"></text></g><g><title>vm_library::env::Context::with_instance (4 samples, 0.05%)</title><rect x="97.5434%" y="1653" width="0.0482%" height="15" fill="rgb(246,164,46)" fg:x="8100" fg:w="4"/><text x="97.7934%" y="1663.50"></text></g><g><title>vm_library::env::Context::set_gas_left::{{closure}} (4 samples, 0.05%)</title><rect x="97.5434%" y="1637" width="0.0482%" height="15" fill="rgb(213,210,47)" fg:x="8100" fg:w="4"/><text x="97.7934%" y="1647.50"></text></g><g><title>wasmer_middlewares::metering::set_remaining_points (4 samples, 0.05%)</title><rect x="97.5434%" y="1621" width="0.0482%" height="15" fill="rgb(210,12,38)" fg:x="8100" fg:w="4"/><text x="97.7934%" y="1631.50"></text></g><g><title>wasmer::sys::exports::Exports::get_global (4 samples, 0.05%)</title><rect x="97.5434%" y="1605" width="0.0482%" height="15" fill="rgb(252,192,54)" fg:x="8100" fg:w="4"/><text x="97.7934%" y="1615.50"></text></g><g><title>wasmer::sys::exports::Exports::get (4 samples, 0.05%)</title><rect x="97.5434%" y="1589" width="0.0482%" height="15" fill="rgb(242,92,6)" fg:x="8100" fg:w="4"/><text x="97.7934%" y="1599.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (4 samples, 0.05%)</title><rect x="97.5434%" y="1573" width="0.0482%" height="15" fill="rgb(253,154,15)" fg:x="8100" fg:w="4"/><text x="97.7934%" y="1583.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (4 samples, 0.05%)</title><rect x="97.5434%" y="1557" width="0.0482%" height="15" fill="rgb(209,20,43)" fg:x="8100" fg:w="4"/><text x="97.7934%" y="1567.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (2 samples, 0.02%)</title><rect x="97.5674%" y="1541" width="0.0241%" height="15" fill="rgb(232,28,49)" fg:x="8102" fg:w="2"/><text x="97.8174%" y="1551.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (2 samples, 0.02%)</title><rect x="97.5674%" y="1525" width="0.0241%" height="15" fill="rgb(248,131,53)" fg:x="8102" fg:w="2"/><text x="97.8174%" y="1535.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="97.5674%" y="1509" width="0.0241%" height="15" fill="rgb(214,16,30)" fg:x="8102" fg:w="2"/><text x="97.8174%" y="1519.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.02%)</title><rect x="97.5674%" y="1493" width="0.0241%" height="15" fill="rgb(245,16,0)" fg:x="8102" fg:w="2"/><text x="97.8174%" y="1503.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="97.5795%" y="1477" width="0.0120%" height="15" fill="rgb(245,17,35)" fg:x="8103" fg:w="1"/><text x="97.8295%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;rug::integer::big::Integer&gt; (2 samples, 0.02%)</title><rect x="97.5915%" y="1685" width="0.0241%" height="15" fill="rgb(249,27,53)" fg:x="8104" fg:w="2"/><text x="97.8415%" y="1695.50"></text></g><g><title>rug::integer::traits::&lt;impl core::ops::drop::Drop for rug::integer::big::Integer&gt;::drop (2 samples, 0.02%)</title><rect x="97.5915%" y="1669" width="0.0241%" height="15" fill="rgb(214,73,24)" fg:x="8104" fg:w="2"/><text x="97.8415%" y="1679.50"></text></g><g><title>rug::ext::xmpz::clear (2 samples, 0.02%)</title><rect x="97.5915%" y="1653" width="0.0241%" height="15" fill="rgb(223,84,37)" fg:x="8104" fg:w="2"/><text x="97.8415%" y="1663.50"></text></g><g><title>__gmpz_clear (2 samples, 0.02%)</title><rect x="97.5915%" y="1637" width="0.0241%" height="15" fill="rgb(210,109,28)" fg:x="8104" fg:w="2"/><text x="97.8415%" y="1647.50"></text></g><g><title>vm_library::env::Context::bump (1 samples, 0.01%)</title><rect x="97.6156%" y="1685" width="0.0120%" height="15" fill="rgb(208,186,6)" fg:x="8106" fg:w="1"/><text x="97.8656%" y="1695.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::insert (1 samples, 0.01%)</title><rect x="97.6156%" y="1669" width="0.0120%" height="15" fill="rgb(235,201,30)" fg:x="8106" fg:w="1"/><text x="97.8656%" y="1679.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::insert_with_key (1 samples, 0.01%)</title><rect x="97.6156%" y="1653" width="0.0120%" height="15" fill="rgb(216,198,48)" fg:x="8106" fg:w="1"/><text x="97.8656%" y="1663.50"></text></g><g><title>wasmer::sys::exports::Exports::get_global (1 samples, 0.01%)</title><rect x="97.6276%" y="1605" width="0.0120%" height="15" fill="rgb(254,186,25)" fg:x="8107" fg:w="1"/><text x="97.8776%" y="1615.50"></text></g><g><title>wasmer::sys::exports::Exports::get (1 samples, 0.01%)</title><rect x="97.6276%" y="1589" width="0.0120%" height="15" fill="rgb(227,87,5)" fg:x="8107" fg:w="1"/><text x="97.8776%" y="1599.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="97.6276%" y="1573" width="0.0120%" height="15" fill="rgb(236,205,25)" fg:x="8107" fg:w="1"/><text x="97.8776%" y="1583.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (1 samples, 0.01%)</title><rect x="97.6276%" y="1557" width="0.0120%" height="15" fill="rgb(229,99,32)" fg:x="8107" fg:w="1"/><text x="97.8776%" y="1567.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (1 samples, 0.01%)</title><rect x="97.6276%" y="1541" width="0.0120%" height="15" fill="rgb(231,177,31)" fg:x="8107" fg:w="1"/><text x="97.8776%" y="1551.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="97.6276%" y="1525" width="0.0120%" height="15" fill="rgb(246,15,2)" fg:x="8107" fg:w="1"/><text x="97.8776%" y="1535.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="97.6276%" y="1509" width="0.0120%" height="15" fill="rgb(207,39,15)" fg:x="8107" fg:w="1"/><text x="97.8776%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="97.6276%" y="1493" width="0.0120%" height="15" fill="rgb(207,44,9)" fg:x="8107" fg:w="1"/><text x="97.8776%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="97.6276%" y="1477" width="0.0120%" height="15" fill="rgb(225,224,33)" fg:x="8107" fg:w="1"/><text x="97.8776%" y="1487.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="97.6276%" y="1461" width="0.0120%" height="15" fill="rgb(252,151,3)" fg:x="8107" fg:w="1"/><text x="97.8776%" y="1471.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="97.6276%" y="1445" width="0.0120%" height="15" fill="rgb(211,140,13)" fg:x="8107" fg:w="1"/><text x="97.8776%" y="1455.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="97.6276%" y="1429" width="0.0120%" height="15" fill="rgb(239,225,17)" fg:x="8107" fg:w="1"/><text x="97.8776%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (1 samples, 0.01%)</title><rect x="97.6397%" y="1573" width="0.0120%" height="15" fill="rgb(223,170,52)" fg:x="8108" fg:w="1"/><text x="97.8897%" y="1583.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="97.6397%" y="1557" width="0.0120%" height="15" fill="rgb(212,64,21)" fg:x="8108" fg:w="1"/><text x="97.8897%" y="1567.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.01%)</title><rect x="97.6397%" y="1541" width="0.0120%" height="15" fill="rgb(236,126,48)" fg:x="8108" fg:w="1"/><text x="97.8897%" y="1551.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (1 samples, 0.01%)</title><rect x="97.6397%" y="1525" width="0.0120%" height="15" fill="rgb(209,135,11)" fg:x="8108" fg:w="1"/><text x="97.8897%" y="1535.50"></text></g><g><title>vm_library::env::Context::get_gas_left (3 samples, 0.04%)</title><rect x="97.6276%" y="1669" width="0.0361%" height="15" fill="rgb(228,126,40)" fg:x="8107" fg:w="3"/><text x="97.8776%" y="1679.50"></text></g><g><title>vm_library::env::Context::with_instance (3 samples, 0.04%)</title><rect x="97.6276%" y="1653" width="0.0361%" height="15" fill="rgb(205,196,36)" fg:x="8107" fg:w="3"/><text x="97.8776%" y="1663.50"></text></g><g><title>vm_library::env::Context::get_gas_left::{{closure}} (3 samples, 0.04%)</title><rect x="97.6276%" y="1637" width="0.0361%" height="15" fill="rgb(243,160,33)" fg:x="8107" fg:w="3"/><text x="97.8776%" y="1647.50"></text></g><g><title>wasmer_middlewares::metering::get_remaining_points (3 samples, 0.04%)</title><rect x="97.6276%" y="1621" width="0.0361%" height="15" fill="rgb(210,84,20)" fg:x="8107" fg:w="3"/><text x="97.8776%" y="1631.50"></text></g><g><title>wasmer::sys::externals::global::Global::get (2 samples, 0.02%)</title><rect x="97.6397%" y="1605" width="0.0241%" height="15" fill="rgb(228,213,30)" fg:x="8108" fg:w="2"/><text x="97.8897%" y="1615.50"></text></g><g><title>wasmer_vm::global::Global::get (2 samples, 0.02%)</title><rect x="97.6397%" y="1589" width="0.0241%" height="15" fill="rgb(252,33,45)" fg:x="8108" fg:w="2"/><text x="97.8897%" y="1599.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="97.6517%" y="1573" width="0.0120%" height="15" fill="rgb(254,227,20)" fg:x="8109" fg:w="1"/><text x="97.9017%" y="1583.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.01%)</title><rect x="97.6517%" y="1557" width="0.0120%" height="15" fill="rgb(228,192,2)" fg:x="8109" fg:w="1"/><text x="97.9017%" y="1567.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (1 samples, 0.01%)</title><rect x="97.6517%" y="1541" width="0.0120%" height="15" fill="rgb(233,32,8)" fg:x="8109" fg:w="1"/><text x="97.9017%" y="1551.50"></text></g><g><title>wasmer::sys::exports::Exports::get_global (1 samples, 0.01%)</title><rect x="97.6638%" y="1605" width="0.0120%" height="15" fill="rgb(220,146,47)" fg:x="8110" fg:w="1"/><text x="97.9138%" y="1615.50"></text></g><g><title>wasmer::sys::exports::Exports::get (1 samples, 0.01%)</title><rect x="97.6638%" y="1589" width="0.0120%" height="15" fill="rgb(246,194,1)" fg:x="8110" fg:w="1"/><text x="97.9138%" y="1599.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="97.6638%" y="1573" width="0.0120%" height="15" fill="rgb(218,203,9)" fg:x="8110" fg:w="1"/><text x="97.9138%" y="1583.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (1 samples, 0.01%)</title><rect x="97.6638%" y="1557" width="0.0120%" height="15" fill="rgb(237,97,14)" fg:x="8110" fg:w="1"/><text x="97.9138%" y="1567.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (1 samples, 0.01%)</title><rect x="97.6638%" y="1541" width="0.0120%" height="15" fill="rgb(239,76,15)" fg:x="8110" fg:w="1"/><text x="97.9138%" y="1551.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="97.6638%" y="1525" width="0.0120%" height="15" fill="rgb(222,53,45)" fg:x="8110" fg:w="1"/><text x="97.9138%" y="1535.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="97.6638%" y="1509" width="0.0120%" height="15" fill="rgb(237,88,5)" fg:x="8110" fg:w="1"/><text x="97.9138%" y="1519.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.01%)</title><rect x="97.6638%" y="1493" width="0.0120%" height="15" fill="rgb(218,223,35)" fg:x="8110" fg:w="1"/><text x="97.9138%" y="1503.50"></text></g><g><title>vm_library::managed::imports::eq (8 samples, 0.10%)</title><rect x="97.5915%" y="1701" width="0.0963%" height="15" fill="rgb(243,229,38)" fg:x="8104" fg:w="8"/><text x="97.8415%" y="1711.50"></text></g><g><title>vm_library::env::Context::update_gas (5 samples, 0.06%)</title><rect x="97.6276%" y="1685" width="0.0602%" height="15" fill="rgb(240,75,41)" fg:x="8107" fg:w="5"/><text x="97.8776%" y="1695.50"></text></g><g><title>vm_library::env::Context::set_gas_left (2 samples, 0.02%)</title><rect x="97.6638%" y="1669" width="0.0241%" height="15" fill="rgb(209,110,37)" fg:x="8110" fg:w="2"/><text x="97.9138%" y="1679.50"></text></g><g><title>vm_library::env::Context::with_instance (2 samples, 0.02%)</title><rect x="97.6638%" y="1653" width="0.0241%" height="15" fill="rgb(221,130,46)" fg:x="8110" fg:w="2"/><text x="97.9138%" y="1663.50"></text></g><g><title>vm_library::env::Context::set_gas_left::{{closure}} (2 samples, 0.02%)</title><rect x="97.6638%" y="1637" width="0.0241%" height="15" fill="rgb(237,160,20)" fg:x="8110" fg:w="2"/><text x="97.9138%" y="1647.50"></text></g><g><title>wasmer_middlewares::metering::set_remaining_points (2 samples, 0.02%)</title><rect x="97.6638%" y="1621" width="0.0241%" height="15" fill="rgb(234,126,24)" fg:x="8110" fg:w="2"/><text x="97.9138%" y="1631.50"></text></g><g><title>wasmer::sys::externals::global::Global::set (1 samples, 0.01%)</title><rect x="97.6758%" y="1605" width="0.0120%" height="15" fill="rgb(207,177,9)" fg:x="8111" fg:w="1"/><text x="97.9258%" y="1615.50"></text></g><g><title>wasmer_vm::global::Global::set (1 samples, 0.01%)</title><rect x="97.6758%" y="1589" width="0.0120%" height="15" fill="rgb(231,191,33)" fg:x="8111" fg:w="1"/><text x="97.9258%" y="1599.50"></text></g><g><title>wasmer_vm::global::Global::set_unchecked (1 samples, 0.01%)</title><rect x="97.6758%" y="1573" width="0.0120%" height="15" fill="rgb(207,42,1)" fg:x="8111" fg:w="1"/><text x="97.9258%" y="1583.50"></text></g><g><title>wasmer_vm::vmcontext::VMGlobalDefinition::as_i64_mut (1 samples, 0.01%)</title><rect x="97.6758%" y="1557" width="0.0120%" height="15" fill="rgb(218,34,50)" fg:x="8111" fg:w="1"/><text x="97.9258%" y="1567.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="97.6879%" y="1653" width="0.0120%" height="15" fill="rgb(254,126,39)" fg:x="8112" fg:w="1"/><text x="97.9379%" y="1663.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (5 samples, 0.06%)</title><rect x="97.6879%" y="1685" width="0.0602%" height="15" fill="rgb(251,17,26)" fg:x="8112" fg:w="5"/><text x="97.9379%" y="1695.50"></text></g><g><title>vm_library::managed::imports::if_none::{{closure}} (5 samples, 0.06%)</title><rect x="97.6879%" y="1669" width="0.0602%" height="15" fill="rgb(252,215,34)" fg:x="8112" fg:w="5"/><text x="97.9379%" y="1679.50"></text></g><g><title>vm_library::env::Context::push_value (4 samples, 0.05%)</title><rect x="97.6999%" y="1653" width="0.0482%" height="15" fill="rgb(217,120,44)" fg:x="8113" fg:w="4"/><text x="97.9499%" y="1663.50"></text></g><g><title>wasmer::sys::native::NativeFunc&lt;A1,Rets&gt;::call (4 samples, 0.05%)</title><rect x="97.6999%" y="1637" width="0.0482%" height="15" fill="rgb(211,31,11)" fg:x="8113" fg:w="4"/><text x="97.9499%" y="1647.50"></text></g><g><title>wasmer_vm::trap::traphandlers::wasmer_call_trampoline (4 samples, 0.05%)</title><rect x="97.6999%" y="1621" width="0.0482%" height="15" fill="rgb(222,69,51)" fg:x="8113" fg:w="4"/><text x="97.9499%" y="1631.50"></text></g><g><title>wasmer_vm::trap::traphandlers::catch_traps (3 samples, 0.04%)</title><rect x="97.7119%" y="1605" width="0.0361%" height="15" fill="rgb(215,229,42)" fg:x="8114" fg:w="3"/><text x="97.9619%" y="1615.50"></text></g><g><title>wasmer_vm::trap::traphandlers::on_wasm_stack (3 samples, 0.04%)</title><rect x="97.7119%" y="1589" width="0.0361%" height="15" fill="rgb(212,102,15)" fg:x="8114" fg:w="3"/><text x="97.9619%" y="1599.50"></text></g><g><title>wasmer_vm::trap::traphandlers::TrapHandlerContext::install (2 samples, 0.02%)</title><rect x="97.7240%" y="1573" width="0.0241%" height="15" fill="rgb(205,179,41)" fg:x="8115" fg:w="2"/><text x="97.9740%" y="1583.50"></text></g><g><title>wasmer_vm::trap::traphandlers::on_wasm_stack::{{closure}} (2 samples, 0.02%)</title><rect x="97.7240%" y="1557" width="0.0241%" height="15" fill="rgb(219,148,46)" fg:x="8115" fg:w="2"/><text x="97.9740%" y="1567.50"></text></g><g><title>corosensei::coroutine::ScopedCoroutine&lt;Input,Yield,Return,Stack&gt;::resume (2 samples, 0.02%)</title><rect x="97.7240%" y="1541" width="0.0241%" height="15" fill="rgb(243,40,19)" fg:x="8115" fg:w="2"/><text x="97.9740%" y="1551.50"></text></g><g><title>wasmer_vm::trap::traphandlers::wasmer_call_trampoline (2 samples, 0.02%)</title><rect x="97.7240%" y="1525" width="0.0241%" height="15" fill="rgb(208,206,34)" fg:x="8115" fg:w="2"/><text x="97.9740%" y="1535.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.01%)</title><rect x="97.7481%" y="1605" width="0.0120%" height="15" fill="rgb(244,184,38)" fg:x="8117" fg:w="1"/><text x="97.9981%" y="1615.50"></text></g><g><title>&lt;wasmer::sys::externals::global::Global as wasmer::sys::exports::Exportable&gt;::get_self_from_extern (1 samples, 0.01%)</title><rect x="97.7601%" y="1573" width="0.0120%" height="15" fill="rgb(244,151,47)" fg:x="8118" fg:w="1"/><text x="98.0101%" y="1583.50"></text></g><g><title>vm_library::env::Context::get_gas_left (3 samples, 0.04%)</title><rect x="97.7481%" y="1669" width="0.0361%" height="15" fill="rgb(236,134,42)" fg:x="8117" fg:w="3"/><text x="97.9981%" y="1679.50"></text></g><g><title>vm_library::env::Context::with_instance (3 samples, 0.04%)</title><rect x="97.7481%" y="1653" width="0.0361%" height="15" fill="rgb(233,93,22)" fg:x="8117" fg:w="3"/><text x="97.9981%" y="1663.50"></text></g><g><title>vm_library::env::Context::get_gas_left::{{closure}} (3 samples, 0.04%)</title><rect x="97.7481%" y="1637" width="0.0361%" height="15" fill="rgb(211,202,10)" fg:x="8117" fg:w="3"/><text x="97.9981%" y="1647.50"></text></g><g><title>wasmer_middlewares::metering::get_remaining_points (3 samples, 0.04%)</title><rect x="97.7481%" y="1621" width="0.0361%" height="15" fill="rgb(240,63,8)" fg:x="8117" fg:w="3"/><text x="97.9981%" y="1631.50"></text></g><g><title>wasmer::sys::exports::Exports::get_global (2 samples, 0.02%)</title><rect x="97.7601%" y="1605" width="0.0241%" height="15" fill="rgb(214,9,4)" fg:x="8118" fg:w="2"/><text x="98.0101%" y="1615.50"></text></g><g><title>wasmer::sys::exports::Exports::get (2 samples, 0.02%)</title><rect x="97.7601%" y="1589" width="0.0241%" height="15" fill="rgb(243,66,45)" fg:x="8118" fg:w="2"/><text x="98.0101%" y="1599.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="97.7722%" y="1573" width="0.0120%" height="15" fill="rgb(220,50,42)" fg:x="8119" fg:w="1"/><text x="98.0222%" y="1583.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (1 samples, 0.01%)</title><rect x="97.7722%" y="1557" width="0.0120%" height="15" fill="rgb(220,134,27)" fg:x="8119" fg:w="1"/><text x="98.0222%" y="1567.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (1 samples, 0.01%)</title><rect x="97.7722%" y="1541" width="0.0120%" height="15" fill="rgb(246,151,50)" fg:x="8119" fg:w="1"/><text x="98.0222%" y="1551.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="97.7722%" y="1525" width="0.0120%" height="15" fill="rgb(238,216,27)" fg:x="8119" fg:w="1"/><text x="98.0222%" y="1535.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="97.7722%" y="1509" width="0.0120%" height="15" fill="rgb(250,92,11)" fg:x="8119" fg:w="1"/><text x="98.0222%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="97.7722%" y="1493" width="0.0120%" height="15" fill="rgb(248,183,6)" fg:x="8119" fg:w="1"/><text x="98.0222%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.01%)</title><rect x="97.7722%" y="1477" width="0.0120%" height="15" fill="rgb(211,204,50)" fg:x="8119" fg:w="1"/><text x="98.0222%" y="1487.50"></text></g><g><title>&lt;wasmer::sys::externals::global::Global as wasmer::sys::exports::Exportable&gt;::get_self_from_extern (1 samples, 0.01%)</title><rect x="97.7842%" y="1573" width="0.0120%" height="15" fill="rgb(252,55,47)" fg:x="8120" fg:w="1"/><text x="98.0342%" y="1583.50"></text></g><g><title>wasmer::sys::exports::Exports::get_global (2 samples, 0.02%)</title><rect x="97.7842%" y="1605" width="0.0241%" height="15" fill="rgb(240,198,32)" fg:x="8120" fg:w="2"/><text x="98.0342%" y="1615.50"></text></g><g><title>wasmer::sys::exports::Exports::get (2 samples, 0.02%)</title><rect x="97.7842%" y="1589" width="0.0241%" height="15" fill="rgb(224,203,19)" fg:x="8120" fg:w="2"/><text x="98.0342%" y="1599.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="97.7962%" y="1573" width="0.0120%" height="15" fill="rgb(205,27,16)" fg:x="8121" fg:w="1"/><text x="98.0462%" y="1583.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (1 samples, 0.01%)</title><rect x="97.7962%" y="1557" width="0.0120%" height="15" fill="rgb(224,226,17)" fg:x="8121" fg:w="1"/><text x="98.0462%" y="1567.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (1 samples, 0.01%)</title><rect x="97.7962%" y="1541" width="0.0120%" height="15" fill="rgb(205,216,54)" fg:x="8121" fg:w="1"/><text x="98.0462%" y="1551.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="97.7962%" y="1525" width="0.0120%" height="15" fill="rgb(248,168,46)" fg:x="8121" fg:w="1"/><text x="98.0462%" y="1535.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="97.7962%" y="1509" width="0.0120%" height="15" fill="rgb(226,111,45)" fg:x="8121" fg:w="1"/><text x="98.0462%" y="1519.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.01%)</title><rect x="97.7962%" y="1493" width="0.0120%" height="15" fill="rgb(231,15,9)" fg:x="8121" fg:w="1"/><text x="98.0462%" y="1503.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.01%)</title><rect x="97.7962%" y="1477" width="0.0120%" height="15" fill="rgb(243,168,3)" fg:x="8121" fg:w="1"/><text x="98.0462%" y="1487.50"></text></g><g><title>vm_library::managed::imports::if_none (12 samples, 0.14%)</title><rect x="97.6879%" y="1701" width="0.1445%" height="15" fill="rgb(221,220,54)" fg:x="8112" fg:w="12"/><text x="97.9379%" y="1711.50"></text></g><g><title>vm_library::env::Context::update_gas (7 samples, 0.08%)</title><rect x="97.7481%" y="1685" width="0.0843%" height="15" fill="rgb(232,174,38)" fg:x="8117" fg:w="7"/><text x="97.9981%" y="1695.50"></text></g><g><title>vm_library::env::Context::set_gas_left (4 samples, 0.05%)</title><rect x="97.7842%" y="1669" width="0.0482%" height="15" fill="rgb(205,14,38)" fg:x="8120" fg:w="4"/><text x="98.0342%" y="1679.50"></text></g><g><title>vm_library::env::Context::with_instance (4 samples, 0.05%)</title><rect x="97.7842%" y="1653" width="0.0482%" height="15" fill="rgb(234,89,19)" fg:x="8120" fg:w="4"/><text x="98.0342%" y="1663.50"></text></g><g><title>vm_library::env::Context::set_gas_left::{{closure}} (4 samples, 0.05%)</title><rect x="97.7842%" y="1637" width="0.0482%" height="15" fill="rgb(216,68,51)" fg:x="8120" fg:w="4"/><text x="98.0342%" y="1647.50"></text></g><g><title>wasmer_middlewares::metering::set_remaining_points (4 samples, 0.05%)</title><rect x="97.7842%" y="1621" width="0.0482%" height="15" fill="rgb(213,49,2)" fg:x="8120" fg:w="4"/><text x="98.0342%" y="1631.50"></text></g><g><title>wasmer::sys::externals::global::Global::set (2 samples, 0.02%)</title><rect x="97.8083%" y="1605" width="0.0241%" height="15" fill="rgb(242,146,30)" fg:x="8122" fg:w="2"/><text x="98.0583%" y="1615.50"></text></g><g><title>wasmer_vm::global::Global::set (2 samples, 0.02%)</title><rect x="97.8083%" y="1589" width="0.0241%" height="15" fill="rgb(224,188,11)" fg:x="8122" fg:w="2"/><text x="98.0583%" y="1599.50"></text></g><g><title>wasmer::sys::native::NativeFunc&lt;Args,Rets&gt;::is_host (1 samples, 0.01%)</title><rect x="97.8324%" y="1653" width="0.0120%" height="15" fill="rgb(213,159,11)" fg:x="8124" fg:w="1"/><text x="98.0824%" y="1663.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (1 samples, 0.01%)</title><rect x="97.8324%" y="1637" width="0.0120%" height="15" fill="rgb(229,13,31)" fg:x="8124" fg:w="1"/><text x="98.0824%" y="1647.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.01%)</title><rect x="97.8324%" y="1621" width="0.0120%" height="15" fill="rgb(209,103,11)" fg:x="8124" fg:w="1"/><text x="98.0824%" y="1631.50"></text></g><g><title>vm_library::env::Context::push_value (2 samples, 0.02%)</title><rect x="97.8324%" y="1685" width="0.0241%" height="15" fill="rgb(206,3,4)" fg:x="8124" fg:w="2"/><text x="98.0824%" y="1695.50"></text></g><g><title>wasmer::sys::native::NativeFunc&lt;A1,Rets&gt;::call (2 samples, 0.02%)</title><rect x="97.8324%" y="1669" width="0.0241%" height="15" fill="rgb(252,10,49)" fg:x="8124" fg:w="2"/><text x="98.0824%" y="1679.50"></text></g><g><title>wasmer_vm::trap::traphandlers::wasmer_call_trampoline (1 samples, 0.01%)</title><rect x="97.8444%" y="1653" width="0.0120%" height="15" fill="rgb(217,160,32)" fg:x="8125" fg:w="1"/><text x="98.0944%" y="1663.50"></text></g><g><title>wasmer_vm::trap::traphandlers::catch_traps (1 samples, 0.01%)</title><rect x="97.8444%" y="1637" width="0.0120%" height="15" fill="rgb(249,196,0)" fg:x="8125" fg:w="1"/><text x="98.0944%" y="1647.50"></text></g><g><title>wasmer_vm::trap::traphandlers::lazy_per_thread_init (1 samples, 0.01%)</title><rect x="97.8444%" y="1621" width="0.0120%" height="15" fill="rgb(213,17,48)" fg:x="8125" fg:w="1"/><text x="98.0944%" y="1631.50"></text></g><g><title>vm_library::env::Context::get_gas_left (2 samples, 0.02%)</title><rect x="97.8685%" y="1669" width="0.0241%" height="15" fill="rgb(206,42,46)" fg:x="8127" fg:w="2"/><text x="98.1185%" y="1679.50"></text></g><g><title>vm_library::env::Context::with_instance (2 samples, 0.02%)</title><rect x="97.8685%" y="1653" width="0.0241%" height="15" fill="rgb(212,105,24)" fg:x="8127" fg:w="2"/><text x="98.1185%" y="1663.50"></text></g><g><title>vm_library::env::Context::get_gas_left::{{closure}} (2 samples, 0.02%)</title><rect x="97.8685%" y="1637" width="0.0241%" height="15" fill="rgb(243,216,30)" fg:x="8127" fg:w="2"/><text x="98.1185%" y="1647.50"></text></g><g><title>wasmer_middlewares::metering::get_remaining_points (2 samples, 0.02%)</title><rect x="97.8685%" y="1621" width="0.0241%" height="15" fill="rgb(207,121,3)" fg:x="8127" fg:w="2"/><text x="98.1185%" y="1631.50"></text></g><g><title>wasmer::sys::exports::Exports::get_global (2 samples, 0.02%)</title><rect x="97.8685%" y="1605" width="0.0241%" height="15" fill="rgb(249,78,0)" fg:x="8127" fg:w="2"/><text x="98.1185%" y="1615.50"></text></g><g><title>wasmer::sys::exports::Exports::get (1 samples, 0.01%)</title><rect x="97.8805%" y="1589" width="0.0120%" height="15" fill="rgb(244,151,32)" fg:x="8128" fg:w="1"/><text x="98.1305%" y="1599.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="97.8805%" y="1573" width="0.0120%" height="15" fill="rgb(228,63,25)" fg:x="8128" fg:w="1"/><text x="98.1305%" y="1583.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (1 samples, 0.01%)</title><rect x="97.8805%" y="1557" width="0.0120%" height="15" fill="rgb(231,158,23)" fg:x="8128" fg:w="1"/><text x="98.1305%" y="1567.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (1 samples, 0.01%)</title><rect x="97.8805%" y="1541" width="0.0120%" height="15" fill="rgb(248,107,23)" fg:x="8128" fg:w="1"/><text x="98.1305%" y="1551.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="97.8805%" y="1525" width="0.0120%" height="15" fill="rgb(215,168,21)" fg:x="8128" fg:w="1"/><text x="98.1305%" y="1535.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="97.8805%" y="1509" width="0.0120%" height="15" fill="rgb(227,83,22)" fg:x="8128" fg:w="1"/><text x="98.1305%" y="1519.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.01%)</title><rect x="97.8805%" y="1493" width="0.0120%" height="15" fill="rgb(217,118,43)" fg:x="8128" fg:w="1"/><text x="98.1305%" y="1503.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.01%)</title><rect x="97.8805%" y="1477" width="0.0120%" height="15" fill="rgb(229,220,41)" fg:x="8128" fg:w="1"/><text x="98.1305%" y="1487.50"></text></g><g><title>indexmap::map::core::equivalent::{{closure}} (1 samples, 0.01%)</title><rect x="97.8805%" y="1461" width="0.0120%" height="15" fill="rgb(254,146,46)" fg:x="8128" fg:w="1"/><text x="98.1305%" y="1471.50"></text></g><g><title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.01%)</title><rect x="97.8805%" y="1445" width="0.0120%" height="15" fill="rgb(233,208,31)" fg:x="8128" fg:w="1"/><text x="98.1305%" y="1455.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.01%)</title><rect x="97.8805%" y="1429" width="0.0120%" height="15" fill="rgb(222,162,7)" fg:x="8128" fg:w="1"/><text x="98.1305%" y="1439.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="97.8805%" y="1413" width="0.0120%" height="15" fill="rgb(230,117,45)" fg:x="8128" fg:w="1"/><text x="98.1305%" y="1423.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="97.8805%" y="1397" width="0.0120%" height="15" fill="rgb(239,163,6)" fg:x="8128" fg:w="1"/><text x="98.1305%" y="1407.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="97.8805%" y="1381" width="0.0120%" height="15" fill="rgb(246,130,17)" fg:x="8128" fg:w="1"/><text x="98.1305%" y="1391.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::convert::AsRef&lt;T&gt;&gt;::as_ref (1 samples, 0.01%)</title><rect x="97.8926%" y="1637" width="0.0120%" height="15" fill="rgb(216,84,5)" fg:x="8129" fg:w="1"/><text x="98.1426%" y="1647.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (1 samples, 0.01%)</title><rect x="97.9046%" y="1541" width="0.0120%" height="15" fill="rgb(230,200,21)" fg:x="8130" fg:w="1"/><text x="98.1546%" y="1551.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="97.9046%" y="1525" width="0.0120%" height="15" fill="rgb(224,2,8)" fg:x="8130" fg:w="1"/><text x="98.1546%" y="1535.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="97.9046%" y="1509" width="0.0120%" height="15" fill="rgb(238,178,10)" fg:x="8130" fg:w="1"/><text x="98.1546%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="97.9046%" y="1493" width="0.0120%" height="15" fill="rgb(242,153,24)" fg:x="8130" fg:w="1"/><text x="98.1546%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="97.9046%" y="1477" width="0.0120%" height="15" fill="rgb(242,32,48)" fg:x="8130" fg:w="1"/><text x="98.1546%" y="1487.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="97.9046%" y="1461" width="0.0120%" height="15" fill="rgb(227,36,0)" fg:x="8130" fg:w="1"/><text x="98.1546%" y="1471.50"></text></g><g><title>wasmer::sys::exports::Exports::get_global (2 samples, 0.02%)</title><rect x="97.9046%" y="1605" width="0.0241%" height="15" fill="rgb(251,33,35)" fg:x="8130" fg:w="2"/><text x="98.1546%" y="1615.50"></text></g><g><title>wasmer::sys::exports::Exports::get (2 samples, 0.02%)</title><rect x="97.9046%" y="1589" width="0.0241%" height="15" fill="rgb(232,168,51)" fg:x="8130" fg:w="2"/><text x="98.1546%" y="1599.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (2 samples, 0.02%)</title><rect x="97.9046%" y="1573" width="0.0241%" height="15" fill="rgb(228,56,10)" fg:x="8130" fg:w="2"/><text x="98.1546%" y="1583.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (2 samples, 0.02%)</title><rect x="97.9046%" y="1557" width="0.0241%" height="15" fill="rgb(231,10,26)" fg:x="8130" fg:w="2"/><text x="98.1546%" y="1567.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (1 samples, 0.01%)</title><rect x="97.9167%" y="1541" width="0.0120%" height="15" fill="rgb(226,202,12)" fg:x="8131" fg:w="1"/><text x="98.1667%" y="1551.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="97.9167%" y="1525" width="0.0120%" height="15" fill="rgb(251,49,21)" fg:x="8131" fg:w="1"/><text x="98.1667%" y="1535.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="97.9167%" y="1509" width="0.0120%" height="15" fill="rgb(206,228,28)" fg:x="8131" fg:w="1"/><text x="98.1667%" y="1519.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.01%)</title><rect x="97.9167%" y="1493" width="0.0120%" height="15" fill="rgb(205,198,31)" fg:x="8131" fg:w="1"/><text x="98.1667%" y="1503.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.01%)</title><rect x="97.9167%" y="1477" width="0.0120%" height="15" fill="rgb(213,69,1)" fg:x="8131" fg:w="1"/><text x="98.1667%" y="1487.50"></text></g><g><title>indexmap::map::core::equivalent::{{closure}} (1 samples, 0.01%)</title><rect x="97.9167%" y="1461" width="0.0120%" height="15" fill="rgb(209,177,9)" fg:x="8131" fg:w="1"/><text x="98.1667%" y="1471.50"></text></g><g><title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.01%)</title><rect x="97.9167%" y="1445" width="0.0120%" height="15" fill="rgb(227,119,30)" fg:x="8131" fg:w="1"/><text x="98.1667%" y="1455.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.01%)</title><rect x="97.9167%" y="1429" width="0.0120%" height="15" fill="rgb(234,106,41)" fg:x="8131" fg:w="1"/><text x="98.1667%" y="1439.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="97.9167%" y="1413" width="0.0120%" height="15" fill="rgb(244,103,47)" fg:x="8131" fg:w="1"/><text x="98.1667%" y="1423.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="97.9167%" y="1397" width="0.0120%" height="15" fill="rgb(212,211,25)" fg:x="8131" fg:w="1"/><text x="98.1667%" y="1407.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="97.9167%" y="1381" width="0.0120%" height="15" fill="rgb(208,63,53)" fg:x="8131" fg:w="1"/><text x="98.1667%" y="1391.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="97.9167%" y="1365" width="0.0120%" height="15" fill="rgb(213,176,21)" fg:x="8131" fg:w="1"/><text x="98.1667%" y="1375.50"></text></g><g><title>vm_library::managed::imports::is_left (10 samples, 0.12%)</title><rect x="97.8324%" y="1701" width="0.1204%" height="15" fill="rgb(243,124,12)" fg:x="8124" fg:w="10"/><text x="98.0824%" y="1711.50"></text></g><g><title>vm_library::env::Context::update_gas (8 samples, 0.10%)</title><rect x="97.8565%" y="1685" width="0.0963%" height="15" fill="rgb(239,2,35)" fg:x="8126" fg:w="8"/><text x="98.1065%" y="1695.50"></text></g><g><title>vm_library::env::Context::set_gas_left (5 samples, 0.06%)</title><rect x="97.8926%" y="1669" width="0.0602%" height="15" fill="rgb(253,169,22)" fg:x="8129" fg:w="5"/><text x="98.1426%" y="1679.50"></text></g><g><title>vm_library::env::Context::with_instance (5 samples, 0.06%)</title><rect x="97.8926%" y="1653" width="0.0602%" height="15" fill="rgb(254,51,12)" fg:x="8129" fg:w="5"/><text x="98.1426%" y="1663.50"></text></g><g><title>vm_library::env::Context::set_gas_left::{{closure}} (4 samples, 0.05%)</title><rect x="97.9046%" y="1637" width="0.0482%" height="15" fill="rgb(244,17,47)" fg:x="8130" fg:w="4"/><text x="98.1546%" y="1647.50"></text></g><g><title>wasmer_middlewares::metering::set_remaining_points (4 samples, 0.05%)</title><rect x="97.9046%" y="1621" width="0.0482%" height="15" fill="rgb(251,45,46)" fg:x="8130" fg:w="4"/><text x="98.1546%" y="1631.50"></text></g><g><title>wasmer::sys::externals::global::Global::set (2 samples, 0.02%)</title><rect x="97.9287%" y="1605" width="0.0241%" height="15" fill="rgb(223,87,43)" fg:x="8132" fg:w="2"/><text x="98.1787%" y="1615.50"></text></g><g><title>vm_library::env::Context::get_gas_left (1 samples, 0.01%)</title><rect x="97.9528%" y="1637" width="0.0120%" height="15" fill="rgb(230,132,31)" fg:x="8134" fg:w="1"/><text x="98.2028%" y="1647.50"></text></g><g><title>vm_library::env::Context::get_gas_left (2 samples, 0.02%)</title><rect x="97.9528%" y="1669" width="0.0241%" height="15" fill="rgb(206,99,1)" fg:x="8134" fg:w="2"/><text x="98.2028%" y="1679.50"></text></g><g><title>vm_library::env::Context::with_instance (2 samples, 0.02%)</title><rect x="97.9528%" y="1653" width="0.0241%" height="15" fill="rgb(227,110,25)" fg:x="8134" fg:w="2"/><text x="98.2028%" y="1663.50"></text></g><g><title>vm_library::env::Context::get_gas_left::{{closure}} (1 samples, 0.01%)</title><rect x="97.9648%" y="1637" width="0.0120%" height="15" fill="rgb(217,182,7)" fg:x="8135" fg:w="1"/><text x="98.2148%" y="1647.50"></text></g><g><title>wasmer_middlewares::metering::get_remaining_points (1 samples, 0.01%)</title><rect x="97.9648%" y="1621" width="0.0120%" height="15" fill="rgb(250,176,4)" fg:x="8135" fg:w="1"/><text x="98.2148%" y="1631.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.01%)</title><rect x="97.9648%" y="1605" width="0.0120%" height="15" fill="rgb(244,98,30)" fg:x="8135" fg:w="1"/><text x="98.2148%" y="1615.50"></text></g><g><title>vm_library::managed::imports::lt (3 samples, 0.04%)</title><rect x="97.9528%" y="1701" width="0.0361%" height="15" fill="rgb(228,150,42)" fg:x="8134" fg:w="3"/><text x="98.2028%" y="1711.50"></text></g><g><title>vm_library::env::Context::update_gas (3 samples, 0.04%)</title><rect x="97.9528%" y="1685" width="0.0361%" height="15" fill="rgb(231,91,46)" fg:x="8134" fg:w="3"/><text x="98.2028%" y="1695.50"></text></g><g><title>vm_library::env::Context::set_gas_left (1 samples, 0.01%)</title><rect x="97.9769%" y="1669" width="0.0120%" height="15" fill="rgb(252,161,32)" fg:x="8136" fg:w="1"/><text x="98.2269%" y="1679.50"></text></g><g><title>vm_library::env::Context::with_instance (1 samples, 0.01%)</title><rect x="97.9769%" y="1653" width="0.0120%" height="15" fill="rgb(236,69,41)" fg:x="8136" fg:w="1"/><text x="98.2269%" y="1663.50"></text></g><g><title>vm_library::env::Context::set_gas_left::{{closure}} (1 samples, 0.01%)</title><rect x="97.9769%" y="1637" width="0.0120%" height="15" fill="rgb(212,160,3)" fg:x="8136" fg:w="1"/><text x="98.2269%" y="1647.50"></text></g><g><title>wasmer_middlewares::metering::set_remaining_points (1 samples, 0.01%)</title><rect x="97.9769%" y="1621" width="0.0120%" height="15" fill="rgb(216,5,50)" fg:x="8136" fg:w="1"/><text x="98.2269%" y="1631.50"></text></g><g><title>wasmer::sys::exports::Exports::get_global (1 samples, 0.01%)</title><rect x="97.9769%" y="1605" width="0.0120%" height="15" fill="rgb(241,138,25)" fg:x="8136" fg:w="1"/><text x="98.2269%" y="1615.50"></text></g><g><title>wasmer::sys::exports::Exports::get (1 samples, 0.01%)</title><rect x="97.9769%" y="1589" width="0.0120%" height="15" fill="rgb(239,42,18)" fg:x="8136" fg:w="1"/><text x="98.2269%" y="1599.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="97.9769%" y="1573" width="0.0120%" height="15" fill="rgb(239,40,7)" fg:x="8136" fg:w="1"/><text x="98.2269%" y="1583.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (1 samples, 0.01%)</title><rect x="97.9769%" y="1557" width="0.0120%" height="15" fill="rgb(239,11,31)" fg:x="8136" fg:w="1"/><text x="98.2269%" y="1567.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (1 samples, 0.01%)</title><rect x="97.9769%" y="1541" width="0.0120%" height="15" fill="rgb(224,77,40)" fg:x="8136" fg:w="1"/><text x="98.2269%" y="1551.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="97.9769%" y="1525" width="0.0120%" height="15" fill="rgb(226,15,5)" fg:x="8136" fg:w="1"/><text x="98.2269%" y="1535.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="97.9769%" y="1509" width="0.0120%" height="15" fill="rgb(254,188,5)" fg:x="8136" fg:w="1"/><text x="98.2269%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="97.9769%" y="1493" width="0.0120%" height="15" fill="rgb(241,148,52)" fg:x="8136" fg:w="1"/><text x="98.2269%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.01%)</title><rect x="97.9769%" y="1477" width="0.0120%" height="15" fill="rgb(251,48,36)" fg:x="8136" fg:w="1"/><text x="98.2269%" y="1487.50"></text></g><g><title>vm_library::env::Context::bump (1 samples, 0.01%)</title><rect x="97.9889%" y="1685" width="0.0120%" height="15" fill="rgb(243,83,13)" fg:x="8137" fg:w="1"/><text x="98.2389%" y="1695.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (2 samples, 0.02%)</title><rect x="98.0010%" y="1605" width="0.0241%" height="15" fill="rgb(210,105,0)" fg:x="8138" fg:w="2"/><text x="98.2510%" y="1615.50"></text></g><g><title>wasmer_types::values::&lt;impl core::convert::TryFrom&lt;wasmer_types::values::Value&lt;T&gt;&gt; for i32&gt;::try_from (1 samples, 0.01%)</title><rect x="98.0130%" y="1589" width="0.0120%" height="15" fill="rgb(239,60,36)" fg:x="8139" fg:w="1"/><text x="98.2630%" y="1599.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (1 samples, 0.01%)</title><rect x="98.0130%" y="1573" width="0.0120%" height="15" fill="rgb(210,20,0)" fg:x="8139" fg:w="1"/><text x="98.2630%" y="1583.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (1 samples, 0.01%)</title><rect x="98.0250%" y="1541" width="0.0120%" height="15" fill="rgb(244,26,53)" fg:x="8140" fg:w="1"/><text x="98.2750%" y="1551.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="98.0250%" y="1525" width="0.0120%" height="15" fill="rgb(240,100,49)" fg:x="8140" fg:w="1"/><text x="98.2750%" y="1535.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="98.0250%" y="1509" width="0.0120%" height="15" fill="rgb(250,46,45)" fg:x="8140" fg:w="1"/><text x="98.2750%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="98.0250%" y="1493" width="0.0120%" height="15" fill="rgb(220,181,29)" fg:x="8140" fg:w="1"/><text x="98.2750%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="98.0250%" y="1477" width="0.0120%" height="15" fill="rgb(213,137,33)" fg:x="8140" fg:w="1"/><text x="98.2750%" y="1487.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="98.0250%" y="1461" width="0.0120%" height="15" fill="rgb(213,27,48)" fg:x="8140" fg:w="1"/><text x="98.2750%" y="1471.50"></text></g><g><title>alloc::str::&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (1 samples, 0.01%)</title><rect x="98.0371%" y="1429" width="0.0120%" height="15" fill="rgb(245,180,39)" fg:x="8141" fg:w="1"/><text x="98.2871%" y="1439.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="98.0371%" y="1413" width="0.0120%" height="15" fill="rgb(212,158,42)" fg:x="8141" fg:w="1"/><text x="98.2871%" y="1423.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::{{closure}} (2 samples, 0.02%)</title><rect x="98.0371%" y="1477" width="0.0241%" height="15" fill="rgb(228,193,18)" fg:x="8141" fg:w="2"/><text x="98.2871%" y="1487.50"></text></g><g><title>indexmap::map::core::equivalent::{{closure}} (2 samples, 0.02%)</title><rect x="98.0371%" y="1461" width="0.0241%" height="15" fill="rgb(245,172,29)" fg:x="8141" fg:w="2"/><text x="98.2871%" y="1471.50"></text></g><g><title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (2 samples, 0.02%)</title><rect x="98.0371%" y="1445" width="0.0241%" height="15" fill="rgb(207,98,24)" fg:x="8141" fg:w="2"/><text x="98.2871%" y="1455.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.01%)</title><rect x="98.0491%" y="1429" width="0.0120%" height="15" fill="rgb(249,92,26)" fg:x="8142" fg:w="1"/><text x="98.2991%" y="1439.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="98.0491%" y="1413" width="0.0120%" height="15" fill="rgb(217,176,26)" fg:x="8142" fg:w="1"/><text x="98.2991%" y="1423.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="98.0491%" y="1397" width="0.0120%" height="15" fill="rgb(221,8,39)" fg:x="8142" fg:w="1"/><text x="98.2991%" y="1407.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="98.0491%" y="1381" width="0.0120%" height="15" fill="rgb(208,90,18)" fg:x="8142" fg:w="1"/><text x="98.2991%" y="1391.50"></text></g><g><title>vm_library::env::Context::get_gas_left (6 samples, 0.07%)</title><rect x="98.0010%" y="1669" width="0.0723%" height="15" fill="rgb(207,202,30)" fg:x="8138" fg:w="6"/><text x="98.2510%" y="1679.50"></text></g><g><title>vm_library::env::Context::with_instance (6 samples, 0.07%)</title><rect x="98.0010%" y="1653" width="0.0723%" height="15" fill="rgb(231,124,22)" fg:x="8138" fg:w="6"/><text x="98.2510%" y="1663.50"></text></g><g><title>vm_library::env::Context::get_gas_left::{{closure}} (6 samples, 0.07%)</title><rect x="98.0010%" y="1637" width="0.0723%" height="15" fill="rgb(206,15,5)" fg:x="8138" fg:w="6"/><text x="98.2510%" y="1647.50"></text></g><g><title>wasmer_middlewares::metering::get_remaining_points (6 samples, 0.07%)</title><rect x="98.0010%" y="1621" width="0.0723%" height="15" fill="rgb(239,16,52)" fg:x="8138" fg:w="6"/><text x="98.2510%" y="1631.50"></text></g><g><title>wasmer::sys::exports::Exports::get_global (4 samples, 0.05%)</title><rect x="98.0250%" y="1605" width="0.0482%" height="15" fill="rgb(245,213,29)" fg:x="8140" fg:w="4"/><text x="98.2750%" y="1615.50"></text></g><g><title>wasmer::sys::exports::Exports::get (4 samples, 0.05%)</title><rect x="98.0250%" y="1589" width="0.0482%" height="15" fill="rgb(213,203,36)" fg:x="8140" fg:w="4"/><text x="98.2750%" y="1599.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (4 samples, 0.05%)</title><rect x="98.0250%" y="1573" width="0.0482%" height="15" fill="rgb(209,55,18)" fg:x="8140" fg:w="4"/><text x="98.2750%" y="1583.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (4 samples, 0.05%)</title><rect x="98.0250%" y="1557" width="0.0482%" height="15" fill="rgb(207,133,49)" fg:x="8140" fg:w="4"/><text x="98.2750%" y="1567.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (3 samples, 0.04%)</title><rect x="98.0371%" y="1541" width="0.0361%" height="15" fill="rgb(240,33,46)" fg:x="8141" fg:w="3"/><text x="98.2871%" y="1551.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (3 samples, 0.04%)</title><rect x="98.0371%" y="1525" width="0.0361%" height="15" fill="rgb(212,35,2)" fg:x="8141" fg:w="3"/><text x="98.2871%" y="1535.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (3 samples, 0.04%)</title><rect x="98.0371%" y="1509" width="0.0361%" height="15" fill="rgb(231,119,28)" fg:x="8141" fg:w="3"/><text x="98.2871%" y="1519.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (3 samples, 0.04%)</title><rect x="98.0371%" y="1493" width="0.0361%" height="15" fill="rgb(252,178,7)" fg:x="8141" fg:w="3"/><text x="98.2871%" y="1503.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="98.0612%" y="1477" width="0.0120%" height="15" fill="rgb(251,91,4)" fg:x="8143" fg:w="1"/><text x="98.3112%" y="1487.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (1 samples, 0.01%)</title><rect x="98.0732%" y="1541" width="0.0120%" height="15" fill="rgb(233,122,19)" fg:x="8144" fg:w="1"/><text x="98.3232%" y="1551.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="98.0732%" y="1525" width="0.0120%" height="15" fill="rgb(231,208,46)" fg:x="8144" fg:w="1"/><text x="98.3232%" y="1535.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="98.0732%" y="1509" width="0.0120%" height="15" fill="rgb(243,15,41)" fg:x="8144" fg:w="1"/><text x="98.3232%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="98.0732%" y="1493" width="0.0120%" height="15" fill="rgb(210,32,43)" fg:x="8144" fg:w="1"/><text x="98.3232%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="98.0732%" y="1477" width="0.0120%" height="15" fill="rgb(222,177,15)" fg:x="8144" fg:w="1"/><text x="98.3232%" y="1487.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="98.0732%" y="1461" width="0.0120%" height="15" fill="rgb(244,121,34)" fg:x="8144" fg:w="1"/><text x="98.3232%" y="1471.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="98.0732%" y="1445" width="0.0120%" height="15" fill="rgb(234,138,4)" fg:x="8144" fg:w="1"/><text x="98.3232%" y="1455.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="98.0732%" y="1429" width="0.0120%" height="15" fill="rgb(240,97,48)" fg:x="8144" fg:w="1"/><text x="98.3232%" y="1439.50"></text></g><g><title>wasmer::sys::exports::Exports::get_global (4 samples, 0.05%)</title><rect x="98.0732%" y="1605" width="0.0482%" height="15" fill="rgb(237,65,54)" fg:x="8144" fg:w="4"/><text x="98.3232%" y="1615.50"></text></g><g><title>wasmer::sys::exports::Exports::get (4 samples, 0.05%)</title><rect x="98.0732%" y="1589" width="0.0482%" height="15" fill="rgb(214,25,24)" fg:x="8144" fg:w="4"/><text x="98.3232%" y="1599.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (4 samples, 0.05%)</title><rect x="98.0732%" y="1573" width="0.0482%" height="15" fill="rgb(213,5,3)" fg:x="8144" fg:w="4"/><text x="98.3232%" y="1583.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (4 samples, 0.05%)</title><rect x="98.0732%" y="1557" width="0.0482%" height="15" fill="rgb(219,81,29)" fg:x="8144" fg:w="4"/><text x="98.3232%" y="1567.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (3 samples, 0.04%)</title><rect x="98.0853%" y="1541" width="0.0361%" height="15" fill="rgb(220,43,48)" fg:x="8145" fg:w="3"/><text x="98.3353%" y="1551.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (3 samples, 0.04%)</title><rect x="98.0853%" y="1525" width="0.0361%" height="15" fill="rgb(239,157,2)" fg:x="8145" fg:w="3"/><text x="98.3353%" y="1535.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (3 samples, 0.04%)</title><rect x="98.0853%" y="1509" width="0.0361%" height="15" fill="rgb(213,104,43)" fg:x="8145" fg:w="3"/><text x="98.3353%" y="1519.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (3 samples, 0.04%)</title><rect x="98.0853%" y="1493" width="0.0361%" height="15" fill="rgb(237,84,9)" fg:x="8145" fg:w="3"/><text x="98.3353%" y="1503.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::{{closure}} (3 samples, 0.04%)</title><rect x="98.0853%" y="1477" width="0.0361%" height="15" fill="rgb(252,6,33)" fg:x="8145" fg:w="3"/><text x="98.3353%" y="1487.50"></text></g><g><title>indexmap::map::core::equivalent::{{closure}} (2 samples, 0.02%)</title><rect x="98.0973%" y="1461" width="0.0241%" height="15" fill="rgb(251,172,22)" fg:x="8146" fg:w="2"/><text x="98.3473%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (1 samples, 0.01%)</title><rect x="98.1214%" y="1573" width="0.0120%" height="15" fill="rgb(244,91,53)" fg:x="8148" fg:w="1"/><text x="98.3714%" y="1583.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="98.1214%" y="1557" width="0.0120%" height="15" fill="rgb(219,29,30)" fg:x="8148" fg:w="1"/><text x="98.3714%" y="1567.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.01%)</title><rect x="98.1214%" y="1541" width="0.0120%" height="15" fill="rgb(213,3,15)" fg:x="8148" fg:w="1"/><text x="98.3714%" y="1551.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (1 samples, 0.01%)</title><rect x="98.1214%" y="1525" width="0.0120%" height="15" fill="rgb(208,25,28)" fg:x="8148" fg:w="1"/><text x="98.3714%" y="1535.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="98.1334%" y="1573" width="0.0120%" height="15" fill="rgb(252,144,25)" fg:x="8149" fg:w="1"/><text x="98.3834%" y="1583.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.01%)</title><rect x="98.1334%" y="1557" width="0.0120%" height="15" fill="rgb(226,220,25)" fg:x="8149" fg:w="1"/><text x="98.3834%" y="1567.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (1 samples, 0.01%)</title><rect x="98.1334%" y="1541" width="0.0120%" height="15" fill="rgb(212,131,28)" fg:x="8149" fg:w="1"/><text x="98.3834%" y="1551.50"></text></g><g><title>vm_library::managed::imports::some (14 samples, 0.17%)</title><rect x="97.9889%" y="1701" width="0.1686%" height="15" fill="rgb(219,143,52)" fg:x="8137" fg:w="14"/><text x="98.2389%" y="1711.50"></text></g><g><title>vm_library::env::Context::update_gas (13 samples, 0.16%)</title><rect x="98.0010%" y="1685" width="0.1566%" height="15" fill="rgb(215,56,7)" fg:x="8138" fg:w="13"/><text x="98.2510%" y="1695.50"></text></g><g><title>vm_library::env::Context::set_gas_left (7 samples, 0.08%)</title><rect x="98.0732%" y="1669" width="0.0843%" height="15" fill="rgb(239,59,51)" fg:x="8144" fg:w="7"/><text x="98.3232%" y="1679.50"></text></g><g><title>vm_library::env::Context::with_instance (7 samples, 0.08%)</title><rect x="98.0732%" y="1653" width="0.0843%" height="15" fill="rgb(209,215,4)" fg:x="8144" fg:w="7"/><text x="98.3232%" y="1663.50"></text></g><g><title>vm_library::env::Context::set_gas_left::{{closure}} (7 samples, 0.08%)</title><rect x="98.0732%" y="1637" width="0.0843%" height="15" fill="rgb(221,118,39)" fg:x="8144" fg:w="7"/><text x="98.3232%" y="1647.50"></text></g><g><title>wasmer_middlewares::metering::set_remaining_points (7 samples, 0.08%)</title><rect x="98.0732%" y="1621" width="0.0843%" height="15" fill="rgb(236,6,44)" fg:x="8144" fg:w="7"/><text x="98.3232%" y="1631.50"></text></g><g><title>wasmer::sys::externals::global::Global::set (3 samples, 0.04%)</title><rect x="98.1214%" y="1605" width="0.0361%" height="15" fill="rgb(216,122,9)" fg:x="8148" fg:w="3"/><text x="98.3714%" y="1615.50"></text></g><g><title>wasmer_vm::global::Global::set (3 samples, 0.04%)</title><rect x="98.1214%" y="1589" width="0.0361%" height="15" fill="rgb(244,134,42)" fg:x="8148" fg:w="3"/><text x="98.3714%" y="1599.50"></text></g><g><title>wasmer_vm::global::Global::set_unchecked (1 samples, 0.01%)</title><rect x="98.1455%" y="1573" width="0.0120%" height="15" fill="rgb(209,189,35)" fg:x="8150" fg:w="1"/><text x="98.3955%" y="1583.50"></text></g><g><title>mi_free (3 samples, 0.04%)</title><rect x="98.2177%" y="1685" width="0.0361%" height="15" fill="rgb(250,47,36)" fg:x="8156" fg:w="3"/><text x="98.4677%" y="1695.50"></text></g><g><title>mi_check_is_double_free (1 samples, 0.01%)</title><rect x="98.2418%" y="1669" width="0.0120%" height="15" fill="rgb(252,112,4)" fg:x="8158" fg:w="1"/><text x="98.4918%" y="1679.50"></text></g><g><title>mi_is_in_same_page (1 samples, 0.01%)</title><rect x="98.2418%" y="1653" width="0.0120%" height="15" fill="rgb(221,79,51)" fg:x="8158" fg:w="1"/><text x="98.4918%" y="1663.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="98.2539%" y="1669" width="0.0120%" height="15" fill="rgb(232,65,53)" fg:x="8159" fg:w="1"/><text x="98.5039%" y="1679.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="98.2539%" y="1653" width="0.0120%" height="15" fill="rgb(211,37,7)" fg:x="8159" fg:w="1"/><text x="98.5039%" y="1663.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="98.2539%" y="1637" width="0.0120%" height="15" fill="rgb(234,221,18)" fg:x="8159" fg:w="1"/><text x="98.5039%" y="1647.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="98.2539%" y="1621" width="0.0120%" height="15" fill="rgb(220,158,26)" fg:x="8159" fg:w="1"/><text x="98.5039%" y="1631.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="98.2539%" y="1605" width="0.0120%" height="15" fill="rgb(220,70,6)" fg:x="8159" fg:w="1"/><text x="98.5039%" y="1615.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="98.2539%" y="1589" width="0.0120%" height="15" fill="rgb(250,39,48)" fg:x="8159" fg:w="1"/><text x="98.5039%" y="1599.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="98.2539%" y="1573" width="0.0120%" height="15" fill="rgb(206,40,27)" fg:x="8159" fg:w="1"/><text x="98.5039%" y="1583.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="98.2539%" y="1557" width="0.0120%" height="15" fill="rgb(247,80,36)" fg:x="8159" fg:w="1"/><text x="98.5039%" y="1567.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="98.2539%" y="1541" width="0.0120%" height="15" fill="rgb(222,9,20)" fg:x="8159" fg:w="1"/><text x="98.5039%" y="1551.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="98.2539%" y="1525" width="0.0120%" height="15" fill="rgb(217,26,45)" fg:x="8159" fg:w="1"/><text x="98.5039%" y="1535.50"></text></g><g><title>vm_library::env::Context::bump (2 samples, 0.02%)</title><rect x="98.2539%" y="1685" width="0.0241%" height="15" fill="rgb(221,67,14)" fg:x="8159" fg:w="2"/><text x="98.5039%" y="1695.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::insert (1 samples, 0.01%)</title><rect x="98.2659%" y="1669" width="0.0120%" height="15" fill="rgb(248,100,24)" fg:x="8160" fg:w="1"/><text x="98.5159%" y="1679.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::insert_with_key (1 samples, 0.01%)</title><rect x="98.2659%" y="1653" width="0.0120%" height="15" fill="rgb(230,187,16)" fg:x="8160" fg:w="1"/><text x="98.5159%" y="1663.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::insert::{{closure}} (1 samples, 0.01%)</title><rect x="98.2659%" y="1637" width="0.0120%" height="15" fill="rgb(205,108,13)" fg:x="8160" fg:w="1"/><text x="98.5159%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::Ref&lt;vm_library::env::Inner&gt;&gt; (1 samples, 0.01%)</title><rect x="98.2779%" y="1669" width="0.0120%" height="15" fill="rgb(235,71,51)" fg:x="8161" fg:w="1"/><text x="98.5279%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRef&gt; (1 samples, 0.01%)</title><rect x="98.2779%" y="1653" width="0.0120%" height="15" fill="rgb(251,172,48)" fg:x="8161" fg:w="1"/><text x="98.5279%" y="1663.50"></text></g><g><title>&lt;core::cell::BorrowRef as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="98.2779%" y="1637" width="0.0120%" height="15" fill="rgb(240,96,49)" fg:x="8161" fg:w="1"/><text x="98.5279%" y="1647.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.01%)</title><rect x="98.2779%" y="1621" width="0.0120%" height="15" fill="rgb(235,46,36)" fg:x="8161" fg:w="1"/><text x="98.5279%" y="1631.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.01%)</title><rect x="98.2779%" y="1605" width="0.0120%" height="15" fill="rgb(244,3,49)" fg:x="8161" fg:w="1"/><text x="98.5279%" y="1615.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="98.2779%" y="1589" width="0.0120%" height="15" fill="rgb(206,78,54)" fg:x="8161" fg:w="1"/><text x="98.5279%" y="1599.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="98.2779%" y="1573" width="0.0120%" height="15" fill="rgb(208,85,42)" fg:x="8161" fg:w="1"/><text x="98.5279%" y="1583.50"></text></g><g><title>wasmer::sys::native::NativeFunc&lt;Args,Rets&gt;::is_host (1 samples, 0.01%)</title><rect x="98.3261%" y="1653" width="0.0120%" height="15" fill="rgb(219,196,21)" fg:x="8165" fg:w="1"/><text x="98.5761%" y="1663.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (1 samples, 0.01%)</title><rect x="98.3261%" y="1637" width="0.0120%" height="15" fill="rgb(238,19,9)" fg:x="8165" fg:w="1"/><text x="98.5761%" y="1647.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.01%)</title><rect x="98.3261%" y="1621" width="0.0120%" height="15" fill="rgb(206,86,13)" fg:x="8165" fg:w="1"/><text x="98.5761%" y="1631.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.01%)</title><rect x="98.3743%" y="1605" width="0.0120%" height="15" fill="rgb(214,123,40)" fg:x="8169" fg:w="1"/><text x="98.6243%" y="1615.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="98.3743%" y="1589" width="0.0120%" height="15" fill="rgb(243,53,5)" fg:x="8169" fg:w="1"/><text x="98.6243%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;scopeguard::ScopeGuard&lt;(),wasmer_vm::trap::traphandlers::on_wasm_stack&lt;wasmer_vm::trap::traphandlers::wasmer_call_trampoline&lt;wasmer::sys::store::Store&gt;::{{closure}},()&gt;::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="98.3863%" y="1605" width="0.0120%" height="15" fill="rgb(254,186,31)" fg:x="8170" fg:w="1"/><text x="98.6363%" y="1615.50"></text></g><g><title>&lt;scopeguard::ScopeGuard&lt;T,F,S&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="98.3863%" y="1589" width="0.0120%" height="15" fill="rgb(221,216,25)" fg:x="8170" fg:w="1"/><text x="98.6363%" y="1599.50"></text></g><g><title>wasmer_vm::trap::traphandlers::on_wasm_stack::{{closure}} (1 samples, 0.01%)</title><rect x="98.3863%" y="1573" width="0.0120%" height="15" fill="rgb(248,107,42)" fg:x="8170" fg:w="1"/><text x="98.6363%" y="1583.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="98.3863%" y="1557" width="0.0120%" height="15" fill="rgb(221,85,43)" fg:x="8170" fg:w="1"/><text x="98.6363%" y="1567.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="98.3863%" y="1541" width="0.0120%" height="15" fill="rgb(225,34,24)" fg:x="8170" fg:w="1"/><text x="98.6363%" y="1551.50"></text></g><g><title>wasmer_vm::trap::traphandlers::YIELDER::__getit (1 samples, 0.01%)</title><rect x="98.3863%" y="1525" width="0.0120%" height="15" fill="rgb(211,119,1)" fg:x="8170" fg:w="1"/><text x="98.6363%" y="1535.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="98.3863%" y="1509" width="0.0120%" height="15" fill="rgb(254,216,46)" fg:x="8170" fg:w="1"/><text x="98.6363%" y="1519.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="98.3863%" y="1493" width="0.0120%" height="15" fill="rgb(238,11,38)" fg:x="8170" fg:w="1"/><text x="98.6363%" y="1503.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="98.3863%" y="1477" width="0.0120%" height="15" fill="rgb(233,50,15)" fg:x="8170" fg:w="1"/><text x="98.6363%" y="1487.50"></text></g><g><title>&lt;scopeguard::ScopeGuard&lt;T,F,S&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="98.3984%" y="1573" width="0.0120%" height="15" fill="rgb(217,181,29)" fg:x="8171" fg:w="1"/><text x="98.6484%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.02%)</title><rect x="98.4104%" y="1557" width="0.0241%" height="15" fill="rgb(214,56,3)" fg:x="8172" fg:w="2"/><text x="98.6604%" y="1567.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.02%)</title><rect x="98.4104%" y="1541" width="0.0241%" height="15" fill="rgb(230,69,45)" fg:x="8172" fg:w="2"/><text x="98.6604%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;scopeguard::ScopeGuard&lt;corosensei::stack::unix::DefaultStack,wasmer_vm::trap::traphandlers::on_wasm_stack&lt;wasmer_vm::trap::traphandlers::wasmer_call_trampoline&lt;wasmer::sys::store::Store&gt;::{{closure}},()&gt;::{{closure}}&gt;&gt; (4 samples, 0.05%)</title><rect x="98.3984%" y="1605" width="0.0482%" height="15" fill="rgb(224,201,50)" fg:x="8171" fg:w="4"/><text x="98.6484%" y="1615.50"></text></g><g><title>&lt;scopeguard::ScopeGuard&lt;T,F,S&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.05%)</title><rect x="98.3984%" y="1589" width="0.0482%" height="15" fill="rgb(217,228,18)" fg:x="8171" fg:w="4"/><text x="98.6484%" y="1599.50"></text></g><g><title>wasmer_vm::trap::traphandlers::on_wasm_stack::{{closure}} (3 samples, 0.04%)</title><rect x="98.4104%" y="1573" width="0.0361%" height="15" fill="rgb(239,33,44)" fg:x="8172" fg:w="3"/><text x="98.6604%" y="1583.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="98.4345%" y="1557" width="0.0120%" height="15" fill="rgb(248,210,23)" fg:x="8174" fg:w="1"/><text x="98.6845%" y="1567.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.01%)</title><rect x="98.4345%" y="1541" width="0.0120%" height="15" fill="rgb(253,135,8)" fg:x="8174" fg:w="1"/><text x="98.6845%" y="1551.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (1 samples, 0.01%)</title><rect x="98.4345%" y="1525" width="0.0120%" height="15" fill="rgb(217,98,21)" fg:x="8174" fg:w="1"/><text x="98.6845%" y="1535.50"></text></g><g><title>corosensei::coroutine::ScopedCoroutine&lt;Input,Yield,Return,Stack&gt;::with_stack (5 samples, 0.06%)</title><rect x="98.4465%" y="1605" width="0.0602%" height="15" fill="rgb(253,130,21)" fg:x="8175" fg:w="5"/><text x="98.6965%" y="1615.50"></text></g><g><title>corosensei::arch::x86_64::init_stack (5 samples, 0.06%)</title><rect x="98.4465%" y="1589" width="0.0602%" height="15" fill="rgb(207,81,54)" fg:x="8175" fg:w="5"/><text x="98.6965%" y="1599.50"></text></g><g><title>corosensei::arch::push (5 samples, 0.06%)</title><rect x="98.4465%" y="1573" width="0.0602%" height="15" fill="rgb(232,48,33)" fg:x="8175" fg:w="5"/><text x="98.6965%" y="1583.50"></text></g><g><title>vm_library::env::Context::push_value (20 samples, 0.24%)</title><rect x="98.2779%" y="1685" width="0.2408%" height="15" fill="rgb(211,9,35)" fg:x="8161" fg:w="20"/><text x="98.5279%" y="1695.50"></text></g><g><title>wasmer::sys::native::NativeFunc&lt;A1,Rets&gt;::call (19 samples, 0.23%)</title><rect x="98.2900%" y="1669" width="0.2288%" height="15" fill="rgb(205,152,21)" fg:x="8162" fg:w="19"/><text x="98.5400%" y="1679.50"></text></g><g><title>wasmer_vm::trap::traphandlers::wasmer_call_trampoline (15 samples, 0.18%)</title><rect x="98.3382%" y="1653" width="0.1806%" height="15" fill="rgb(249,21,27)" fg:x="8166" fg:w="15"/><text x="98.5882%" y="1663.50"></text></g><g><title>wasmer_vm::trap::traphandlers::catch_traps (14 samples, 0.17%)</title><rect x="98.3502%" y="1637" width="0.1686%" height="15" fill="rgb(252,29,24)" fg:x="8167" fg:w="14"/><text x="98.6002%" y="1647.50"></text></g><g><title>wasmer_vm::trap::traphandlers::on_wasm_stack (14 samples, 0.17%)</title><rect x="98.3502%" y="1621" width="0.1686%" height="15" fill="rgb(230,130,50)" fg:x="8167" fg:w="14"/><text x="98.6002%" y="1631.50"></text></g><g><title>wasmer_vm::trap::traphandlers::TrapHandlerContext::install (1 samples, 0.01%)</title><rect x="98.5067%" y="1605" width="0.0120%" height="15" fill="rgb(239,144,14)" fg:x="8180" fg:w="1"/><text x="98.7567%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;scopeguard::ScopeGuard&lt;(),wasmer_vm::trap::traphandlers::TrapHandlerContext::install&lt;(),core::result::Result&lt;(),wasmer_vm::trap::traphandlers::UnwindReason&gt;,wasmer_vm::trap::traphandlers::on_wasm_stack&lt;wasmer_vm::trap::traphandlers::wasmer_call_trampoline&lt;wasmer::sys::store::Store&gt;::{{closure}},()&gt;::{{closure}}&gt;::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="98.5067%" y="1589" width="0.0120%" height="15" fill="rgb(227,111,50)" fg:x="8180" fg:w="1"/><text x="98.7567%" y="1599.50"></text></g><g><title>&lt;scopeguard::ScopeGuard&lt;T,F,S&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="98.5067%" y="1573" width="0.0120%" height="15" fill="rgb(254,84,20)" fg:x="8180" fg:w="1"/><text x="98.7567%" y="1583.50"></text></g><g><title>wasmer_vm::trap::traphandlers::TrapHandlerContext::install::{{closure}} (1 samples, 0.01%)</title><rect x="98.5067%" y="1557" width="0.0120%" height="15" fill="rgb(232,90,48)" fg:x="8180" fg:w="1"/><text x="98.7567%" y="1567.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="98.5067%" y="1541" width="0.0120%" height="15" fill="rgb(253,63,47)" fg:x="8180" fg:w="1"/><text x="98.7567%" y="1551.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="98.5067%" y="1525" width="0.0120%" height="15" fill="rgb(251,146,35)" fg:x="8180" fg:w="1"/><text x="98.7567%" y="1535.50"></text></g><g><title>wasmer_vm::trap::traphandlers::TRAP_HANDLER::__getit (1 samples, 0.01%)</title><rect x="98.5067%" y="1509" width="0.0120%" height="15" fill="rgb(229,192,35)" fg:x="8180" fg:w="1"/><text x="98.7567%" y="1519.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (1 samples, 0.01%)</title><rect x="98.5188%" y="1637" width="0.0120%" height="15" fill="rgb(225,68,9)" fg:x="8181" fg:w="1"/><text x="98.7688%" y="1647.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow (1 samples, 0.01%)</title><rect x="98.5188%" y="1621" width="0.0120%" height="15" fill="rgb(214,97,34)" fg:x="8181" fg:w="1"/><text x="98.7688%" y="1631.50"></text></g><g><title>core::cell::BorrowRef::new (1 samples, 0.01%)</title><rect x="98.5188%" y="1605" width="0.0120%" height="15" fill="rgb(253,31,26)" fg:x="8181" fg:w="1"/><text x="98.7688%" y="1615.50"></text></g><g><title>core::cell::is_reading (1 samples, 0.01%)</title><rect x="98.5188%" y="1589" width="0.0120%" height="15" fill="rgb(225,151,47)" fg:x="8181" fg:w="1"/><text x="98.7688%" y="1599.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.01%)</title><rect x="98.5308%" y="1605" width="0.0120%" height="15" fill="rgb(206,185,9)" fg:x="8182" fg:w="1"/><text x="98.7808%" y="1615.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (1 samples, 0.01%)</title><rect x="98.5429%" y="1541" width="0.0120%" height="15" fill="rgb(249,65,17)" fg:x="8183" fg:w="1"/><text x="98.7929%" y="1551.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="98.5429%" y="1525" width="0.0120%" height="15" fill="rgb(220,110,10)" fg:x="8183" fg:w="1"/><text x="98.7929%" y="1535.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="98.5429%" y="1509" width="0.0120%" height="15" fill="rgb(222,198,49)" fg:x="8183" fg:w="1"/><text x="98.7929%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="98.5429%" y="1493" width="0.0120%" height="15" fill="rgb(239,81,13)" fg:x="8183" fg:w="1"/><text x="98.7929%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.01%)</title><rect x="98.5429%" y="1477" width="0.0120%" height="15" fill="rgb(216,128,11)" fg:x="8183" fg:w="1"/><text x="98.7929%" y="1487.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="98.5429%" y="1461" width="0.0120%" height="15" fill="rgb(247,156,8)" fg:x="8183" fg:w="1"/><text x="98.7929%" y="1471.50"></text></g><g><title>alloc::str::&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (2 samples, 0.02%)</title><rect x="98.5670%" y="1429" width="0.0241%" height="15" fill="rgb(219,173,1)" fg:x="8185" fg:w="2"/><text x="98.8170%" y="1439.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (2 samples, 0.02%)</title><rect x="98.5670%" y="1413" width="0.0241%" height="15" fill="rgb(227,42,24)" fg:x="8185" fg:w="2"/><text x="98.8170%" y="1423.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::{{closure}} (6 samples, 0.07%)</title><rect x="98.5549%" y="1477" width="0.0723%" height="15" fill="rgb(253,219,50)" fg:x="8184" fg:w="6"/><text x="98.8049%" y="1487.50"></text></g><g><title>indexmap::map::core::equivalent::{{closure}} (6 samples, 0.07%)</title><rect x="98.5549%" y="1461" width="0.0723%" height="15" fill="rgb(215,191,54)" fg:x="8184" fg:w="6"/><text x="98.8049%" y="1471.50"></text></g><g><title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (5 samples, 0.06%)</title><rect x="98.5670%" y="1445" width="0.0602%" height="15" fill="rgb(238,83,12)" fg:x="8185" fg:w="5"/><text x="98.8170%" y="1455.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (3 samples, 0.04%)</title><rect x="98.5910%" y="1429" width="0.0361%" height="15" fill="rgb(205,124,9)" fg:x="8187" fg:w="3"/><text x="98.8410%" y="1439.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.04%)</title><rect x="98.5910%" y="1413" width="0.0361%" height="15" fill="rgb(253,174,7)" fg:x="8187" fg:w="3"/><text x="98.8410%" y="1423.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.04%)</title><rect x="98.5910%" y="1397" width="0.0361%" height="15" fill="rgb(206,134,49)" fg:x="8187" fg:w="3"/><text x="98.8410%" y="1407.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.04%)</title><rect x="98.5910%" y="1381" width="0.0361%" height="15" fill="rgb(221,89,20)" fg:x="8187" fg:w="3"/><text x="98.8410%" y="1391.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="98.6151%" y="1365" width="0.0120%" height="15" fill="rgb(240,205,13)" fg:x="8189" fg:w="1"/><text x="98.8651%" y="1375.50"></text></g><g><title>wasmer::sys::exports::Exports::get_global (8 samples, 0.10%)</title><rect x="98.5429%" y="1605" width="0.0963%" height="15" fill="rgb(237,174,32)" fg:x="8183" fg:w="8"/><text x="98.7929%" y="1615.50"></text></g><g><title>wasmer::sys::exports::Exports::get (8 samples, 0.10%)</title><rect x="98.5429%" y="1589" width="0.0963%" height="15" fill="rgb(226,12,15)" fg:x="8183" fg:w="8"/><text x="98.7929%" y="1599.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (8 samples, 0.10%)</title><rect x="98.5429%" y="1573" width="0.0963%" height="15" fill="rgb(245,160,52)" fg:x="8183" fg:w="8"/><text x="98.7929%" y="1583.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (8 samples, 0.10%)</title><rect x="98.5429%" y="1557" width="0.0963%" height="15" fill="rgb(253,80,21)" fg:x="8183" fg:w="8"/><text x="98.7929%" y="1567.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (7 samples, 0.08%)</title><rect x="98.5549%" y="1541" width="0.0843%" height="15" fill="rgb(231,225,22)" fg:x="8184" fg:w="7"/><text x="98.8049%" y="1551.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (7 samples, 0.08%)</title><rect x="98.5549%" y="1525" width="0.0843%" height="15" fill="rgb(253,185,12)" fg:x="8184" fg:w="7"/><text x="98.8049%" y="1535.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (7 samples, 0.08%)</title><rect x="98.5549%" y="1509" width="0.0843%" height="15" fill="rgb(234,197,21)" fg:x="8184" fg:w="7"/><text x="98.8049%" y="1519.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (7 samples, 0.08%)</title><rect x="98.5549%" y="1493" width="0.0843%" height="15" fill="rgb(210,47,30)" fg:x="8184" fg:w="7"/><text x="98.8049%" y="1503.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="98.6272%" y="1477" width="0.0120%" height="15" fill="rgb(246,139,27)" fg:x="8190" fg:w="1"/><text x="98.8772%" y="1487.50"></text></g><g><title>vm_library::env::Context::get_gas_left (11 samples, 0.13%)</title><rect x="98.5188%" y="1669" width="0.1325%" height="15" fill="rgb(226,130,16)" fg:x="8181" fg:w="11"/><text x="98.7688%" y="1679.50"></text></g><g><title>vm_library::env::Context::with_instance (11 samples, 0.13%)</title><rect x="98.5188%" y="1653" width="0.1325%" height="15" fill="rgb(237,208,20)" fg:x="8181" fg:w="11"/><text x="98.7688%" y="1663.50"></text></g><g><title>vm_library::env::Context::get_gas_left::{{closure}} (10 samples, 0.12%)</title><rect x="98.5308%" y="1637" width="0.1204%" height="15" fill="rgb(245,186,28)" fg:x="8182" fg:w="10"/><text x="98.7808%" y="1647.50"></text></g><g><title>wasmer_middlewares::metering::get_remaining_points (10 samples, 0.12%)</title><rect x="98.5308%" y="1621" width="0.1204%" height="15" fill="rgb(238,105,39)" fg:x="8182" fg:w="10"/><text x="98.7808%" y="1631.50"></text></g><g><title>wasmer::sys::externals::global::Global::get (1 samples, 0.01%)</title><rect x="98.6392%" y="1605" width="0.0120%" height="15" fill="rgb(253,228,11)" fg:x="8191" fg:w="1"/><text x="98.8892%" y="1615.50"></text></g><g><title>wasmer_vm::global::Global::get (1 samples, 0.01%)</title><rect x="98.6392%" y="1589" width="0.0120%" height="15" fill="rgb(224,136,38)" fg:x="8191" fg:w="1"/><text x="98.8892%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (1 samples, 0.01%)</title><rect x="98.6392%" y="1573" width="0.0120%" height="15" fill="rgb(211,3,25)" fg:x="8191" fg:w="1"/><text x="98.8892%" y="1583.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="98.6392%" y="1557" width="0.0120%" height="15" fill="rgb(238,66,34)" fg:x="8191" fg:w="1"/><text x="98.8892%" y="1567.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.01%)</title><rect x="98.6392%" y="1541" width="0.0120%" height="15" fill="rgb(223,188,11)" fg:x="8191" fg:w="1"/><text x="98.8892%" y="1551.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (1 samples, 0.01%)</title><rect x="98.6392%" y="1525" width="0.0120%" height="15" fill="rgb(221,10,35)" fg:x="8191" fg:w="1"/><text x="98.8892%" y="1535.50"></text></g><g><title>vm_library::env::Context::set_gas_left (1 samples, 0.01%)</title><rect x="98.6513%" y="1637" width="0.0120%" height="15" fill="rgb(223,18,44)" fg:x="8192" fg:w="1"/><text x="98.9013%" y="1647.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (2 samples, 0.02%)</title><rect x="98.6633%" y="1541" width="0.0241%" height="15" fill="rgb(220,97,41)" fg:x="8193" fg:w="2"/><text x="98.9133%" y="1551.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="98.6633%" y="1525" width="0.0241%" height="15" fill="rgb(206,95,45)" fg:x="8193" fg:w="2"/><text x="98.9133%" y="1535.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="98.6633%" y="1509" width="0.0241%" height="15" fill="rgb(209,96,13)" fg:x="8193" fg:w="2"/><text x="98.9133%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="98.6633%" y="1493" width="0.0241%" height="15" fill="rgb(237,39,34)" fg:x="8193" fg:w="2"/><text x="98.9133%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.02%)</title><rect x="98.6633%" y="1477" width="0.0241%" height="15" fill="rgb(213,49,47)" fg:x="8193" fg:w="2"/><text x="98.9133%" y="1487.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="98.6633%" y="1461" width="0.0241%" height="15" fill="rgb(205,107,27)" fg:x="8193" fg:w="2"/><text x="98.9133%" y="1471.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::is_empty (1 samples, 0.01%)</title><rect x="98.6874%" y="1541" width="0.0120%" height="15" fill="rgb(212,142,9)" fg:x="8195" fg:w="1"/><text x="98.9374%" y="1551.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.01%)</title><rect x="98.6994%" y="1477" width="0.0120%" height="15" fill="rgb(226,182,0)" fg:x="8196" fg:w="1"/><text x="98.9494%" y="1487.50"></text></g><g><title>indexmap::map::core::equivalent::{{closure}} (1 samples, 0.01%)</title><rect x="98.6994%" y="1461" width="0.0120%" height="15" fill="rgb(231,3,53)" fg:x="8196" fg:w="1"/><text x="98.9494%" y="1471.50"></text></g><g><title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.01%)</title><rect x="98.6994%" y="1445" width="0.0120%" height="15" fill="rgb(246,111,28)" fg:x="8196" fg:w="1"/><text x="98.9494%" y="1455.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.01%)</title><rect x="98.6994%" y="1429" width="0.0120%" height="15" fill="rgb(254,183,7)" fg:x="8196" fg:w="1"/><text x="98.9494%" y="1439.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="98.6994%" y="1413" width="0.0120%" height="15" fill="rgb(247,177,28)" fg:x="8196" fg:w="1"/><text x="98.9494%" y="1423.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="98.6994%" y="1397" width="0.0120%" height="15" fill="rgb(244,43,1)" fg:x="8196" fg:w="1"/><text x="98.9494%" y="1407.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="98.6994%" y="1381" width="0.0120%" height="15" fill="rgb(207,2,35)" fg:x="8196" fg:w="1"/><text x="98.9494%" y="1391.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="98.6994%" y="1365" width="0.0120%" height="15" fill="rgb(213,83,22)" fg:x="8196" fg:w="1"/><text x="98.9494%" y="1375.50"></text></g><g><title>wasmer::sys::exports::Exports::get_global (6 samples, 0.07%)</title><rect x="98.6633%" y="1605" width="0.0723%" height="15" fill="rgb(246,212,13)" fg:x="8193" fg:w="6"/><text x="98.9133%" y="1615.50"></text></g><g><title>wasmer::sys::exports::Exports::get (6 samples, 0.07%)</title><rect x="98.6633%" y="1589" width="0.0723%" height="15" fill="rgb(213,127,46)" fg:x="8193" fg:w="6"/><text x="98.9133%" y="1599.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (6 samples, 0.07%)</title><rect x="98.6633%" y="1573" width="0.0723%" height="15" fill="rgb(219,215,39)" fg:x="8193" fg:w="6"/><text x="98.9133%" y="1583.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (6 samples, 0.07%)</title><rect x="98.6633%" y="1557" width="0.0723%" height="15" fill="rgb(227,99,17)" fg:x="8193" fg:w="6"/><text x="98.9133%" y="1567.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (3 samples, 0.04%)</title><rect x="98.6994%" y="1541" width="0.0361%" height="15" fill="rgb(208,155,18)" fg:x="8196" fg:w="3"/><text x="98.9494%" y="1551.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (3 samples, 0.04%)</title><rect x="98.6994%" y="1525" width="0.0361%" height="15" fill="rgb(223,204,38)" fg:x="8196" fg:w="3"/><text x="98.9494%" y="1535.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (3 samples, 0.04%)</title><rect x="98.6994%" y="1509" width="0.0361%" height="15" fill="rgb(212,114,21)" fg:x="8196" fg:w="3"/><text x="98.9494%" y="1519.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (3 samples, 0.04%)</title><rect x="98.6994%" y="1493" width="0.0361%" height="15" fill="rgb(250,74,13)" fg:x="8196" fg:w="3"/><text x="98.9494%" y="1503.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (2 samples, 0.02%)</title><rect x="98.7115%" y="1477" width="0.0241%" height="15" fill="rgb(234,7,1)" fg:x="8197" fg:w="2"/><text x="98.9615%" y="1487.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.01%)</title><rect x="98.7476%" y="1589" width="0.0120%" height="15" fill="rgb(207,138,31)" fg:x="8200" fg:w="1"/><text x="98.9976%" y="1599.50"></text></g><g><title>core::ops::function::Fn::call (204 samples, 2.46%)</title><rect x="96.3271%" y="1717" width="2.4566%" height="15" fill="rgb(215,186,42)" fg:x="7999" fg:w="204"/><text x="96.5771%" y="1727.50">co..</text></g><g><title>vm_library::managed::imports::unpair (52 samples, 0.63%)</title><rect x="98.1575%" y="1701" width="0.6262%" height="15" fill="rgb(229,205,49)" fg:x="8151" fg:w="52"/><text x="98.4075%" y="1711.50"></text></g><g><title>vm_library::env::Context::update_gas (22 samples, 0.26%)</title><rect x="98.5188%" y="1685" width="0.2649%" height="15" fill="rgb(216,156,32)" fg:x="8181" fg:w="22"/><text x="98.7688%" y="1695.50"></text></g><g><title>vm_library::env::Context::set_gas_left (11 samples, 0.13%)</title><rect x="98.6513%" y="1669" width="0.1325%" height="15" fill="rgb(238,7,21)" fg:x="8192" fg:w="11"/><text x="98.9013%" y="1679.50"></text></g><g><title>vm_library::env::Context::with_instance (11 samples, 0.13%)</title><rect x="98.6513%" y="1653" width="0.1325%" height="15" fill="rgb(249,190,22)" fg:x="8192" fg:w="11"/><text x="98.9013%" y="1663.50"></text></g><g><title>vm_library::env::Context::set_gas_left::{{closure}} (10 samples, 0.12%)</title><rect x="98.6633%" y="1637" width="0.1204%" height="15" fill="rgb(253,51,31)" fg:x="8193" fg:w="10"/><text x="98.9133%" y="1647.50"></text></g><g><title>wasmer_middlewares::metering::set_remaining_points (10 samples, 0.12%)</title><rect x="98.6633%" y="1621" width="0.1204%" height="15" fill="rgb(237,90,54)" fg:x="8193" fg:w="10"/><text x="98.9133%" y="1631.50"></text></g><g><title>wasmer::sys::externals::global::Global::set (4 samples, 0.05%)</title><rect x="98.7355%" y="1605" width="0.0482%" height="15" fill="rgb(250,214,33)" fg:x="8199" fg:w="4"/><text x="98.9855%" y="1615.50"></text></g><g><title>wasmer_vm::global::Global::set (2 samples, 0.02%)</title><rect x="98.7596%" y="1589" width="0.0241%" height="15" fill="rgb(237,10,49)" fg:x="8201" fg:w="2"/><text x="99.0096%" y="1599.50"></text></g><g><title>wasmer_vm::global::Global::ty (1 samples, 0.01%)</title><rect x="98.7717%" y="1573" width="0.0120%" height="15" fill="rgb(241,56,36)" fg:x="8202" fg:w="1"/><text x="99.0217%" y="1583.50"></text></g><g><title>slotmap::KeyData::from_ffi (2 samples, 0.02%)</title><rect x="98.7837%" y="1717" width="0.0241%" height="15" fill="rgb(227,164,12)" fg:x="8203" fg:w="2"/><text x="99.0337%" y="1727.50"></text></g><g><title>&lt;once_cell::unsync::Lazy&lt;T,F&gt; as core::ops::deref::DerefMut&gt;::deref_mut (3 samples, 0.04%)</title><rect x="98.8319%" y="1701" width="0.0361%" height="15" fill="rgb(249,149,35)" fg:x="8207" fg:w="3"/><text x="99.0819%" y="1711.50"></text></g><g><title>once_cell::unsync::OnceCell&lt;T&gt;::get_mut (2 samples, 0.02%)</title><rect x="98.8439%" y="1685" width="0.0241%" height="15" fill="rgb(238,227,50)" fg:x="8208" fg:w="2"/><text x="99.0939%" y="1695.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (2 samples, 0.02%)</title><rect x="98.8439%" y="1669" width="0.0241%" height="15" fill="rgb(235,102,45)" fg:x="8208" fg:w="2"/><text x="99.0939%" y="1679.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (1 samples, 0.01%)</title><rect x="98.8680%" y="1701" width="0.0120%" height="15" fill="rgb(211,10,38)" fg:x="8210" fg:w="1"/><text x="99.1180%" y="1711.50"></text></g><g><title>&lt;slotmap::DefaultKey as slotmap::Key&gt;::data (1 samples, 0.01%)</title><rect x="98.8921%" y="1685" width="0.0120%" height="15" fill="rgb(219,77,48)" fg:x="8212" fg:w="1"/><text x="99.1421%" y="1695.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::remove (5 samples, 0.06%)</title><rect x="98.8801%" y="1701" width="0.0602%" height="15" fill="rgb(246,6,15)" fg:x="8211" fg:w="5"/><text x="99.1301%" y="1711.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::contains_key (3 samples, 0.04%)</title><rect x="98.9041%" y="1685" width="0.0361%" height="15" fill="rgb(207,220,2)" fg:x="8213" fg:w="3"/><text x="99.1541%" y="1695.50"></text></g><g><title>&lt;slotmap::DefaultKey as slotmap::Key&gt;::data (3 samples, 0.04%)</title><rect x="98.9041%" y="1669" width="0.0361%" height="15" fill="rgb(242,48,14)" fg:x="8213" fg:w="3"/><text x="99.1541%" y="1679.50"></text></g><g><title>stack_call_trampoline (474 samples, 5.71%)</title><rect x="93.2803%" y="1957" width="5.7081%" height="15" fill="rgb(218,19,27)" fg:x="7746" fg:w="474"/><text x="93.5303%" y="1967.50">stack_c..</text></g><g><title>corosensei::coroutine::on_stack::wrapper (474 samples, 5.71%)</title><rect x="93.2803%" y="1941" width="5.7081%" height="15" fill="rgb(228,0,35)" fg:x="7746" fg:w="474"/><text x="93.5303%" y="1951.50">corosen..</text></g><g><title>corosensei::unwind::catch_unwind_at_root (461 samples, 5.55%)</title><rect x="93.4369%" y="1925" width="5.5515%" height="15" fill="rgb(244,142,54)" fg:x="7759" fg:w="461"/><text x="93.6869%" y="1935.50">corosen..</text></g><g><title>std::panic::catch_unwind (460 samples, 5.54%)</title><rect x="93.4489%" y="1909" width="5.5395%" height="15" fill="rgb(243,217,40)" fg:x="7760" fg:w="460"/><text x="93.6989%" y="1919.50">std::pa..</text></g><g><title>std::panicking::try (460 samples, 5.54%)</title><rect x="93.4489%" y="1893" width="5.5395%" height="15" fill="rgb(207,114,16)" fg:x="7760" fg:w="460"/><text x="93.6989%" y="1903.50">std::pa..</text></g><g><title>std::panicking::try::do_call (460 samples, 5.54%)</title><rect x="93.4489%" y="1877" width="5.5395%" height="15" fill="rgb(224,33,25)" fg:x="7760" fg:w="460"/><text x="93.6989%" y="1887.50">std::pa..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (452 samples, 5.44%)</title><rect x="93.5453%" y="1861" width="5.4432%" height="15" fill="rgb(230,93,54)" fg:x="7768" fg:w="452"/><text x="93.7953%" y="1871.50">&lt;core::..</text></g><g><title>wasmer_vm::trap::traphandlers::on_host_stack::{{closure}} (452 samples, 5.44%)</title><rect x="93.5453%" y="1845" width="5.4432%" height="15" fill="rgb(224,56,24)" fg:x="7768" fg:w="452"/><text x="93.7953%" y="1855.50">wasmer_..</text></g><g><title>&lt;Func as wasmer::sys::externals::function::inner::HostFunction&lt;A1,Rets,wasmer::sys::externals::function::inner::WithEnv,Env&gt;&gt;::function_body_ptr::func_wrapper::{{closure}} (284 samples, 3.42%)</title><rect x="95.5684%" y="1829" width="3.4200%" height="15" fill="rgb(235,189,50)" fg:x="7936" fg:w="284"/><text x="95.8184%" y="1839.50">&lt;Fu..</text></g><g><title>std::panic::catch_unwind (284 samples, 3.42%)</title><rect x="95.5684%" y="1813" width="3.4200%" height="15" fill="rgb(242,173,8)" fg:x="7936" fg:w="284"/><text x="95.8184%" y="1823.50">std..</text></g><g><title>std::panicking::try (282 samples, 3.40%)</title><rect x="95.5925%" y="1797" width="3.3960%" height="15" fill="rgb(209,206,10)" fg:x="7938" fg:w="282"/><text x="95.8425%" y="1807.50">std..</text></g><g><title>std::panicking::try::do_call (277 samples, 3.34%)</title><rect x="95.6527%" y="1781" width="3.3357%" height="15" fill="rgb(213,182,44)" fg:x="7943" fg:w="277"/><text x="95.9027%" y="1791.50">std..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (277 samples, 3.34%)</title><rect x="95.6527%" y="1765" width="3.3357%" height="15" fill="rgb(243,51,15)" fg:x="7943" fg:w="277"/><text x="95.9027%" y="1775.50">&lt;co..</text></g><g><title>&lt;Func as wasmer::sys::externals::function::inner::HostFunction&lt;A1,Rets,wasmer::sys::externals::function::inner::WithEnv,Env&gt;&gt;::function_body_ptr::func_wrapper::{{closure}}::{{closure}} (277 samples, 3.34%)</title><rect x="95.6527%" y="1749" width="3.3357%" height="15" fill="rgb(241,13,14)" fg:x="7943" fg:w="277"/><text x="95.9027%" y="1759.50">&lt;Fu..</text></g><g><title>vm_library::managed::imports::call1::{{closure}} (223 samples, 2.69%)</title><rect x="96.3030%" y="1733" width="2.6855%" height="15" fill="rgb(239,147,24)" fg:x="7997" fg:w="223"/><text x="96.5530%" y="1743.50">vm..</text></g><g><title>vm_library::env::Context::get (15 samples, 0.18%)</title><rect x="98.8078%" y="1717" width="0.1806%" height="15" fill="rgb(223,129,16)" fg:x="8205" fg:w="15"/><text x="99.0578%" y="1727.50"></text></g><g><title>vm_library::env::Context::get (4 samples, 0.05%)</title><rect x="98.9403%" y="1701" width="0.0482%" height="15" fill="rgb(209,169,13)" fg:x="8216" fg:w="4"/><text x="99.1903%" y="1711.50"></text></g><g><title>corosensei::unwind::catch_unwind_at_root (1 samples, 0.01%)</title><rect x="99.1570%" y="1893" width="0.0120%" height="15" fill="rgb(235,159,41)" fg:x="8234" fg:w="1"/><text x="99.4070%" y="1903.50"></text></g><g><title>stack_init_trampoline (17 samples, 0.20%)</title><rect x="98.9884%" y="1957" width="0.2047%" height="15" fill="rgb(223,219,48)" fg:x="8220" fg:w="17"/><text x="99.2384%" y="1967.50"></text></g><g><title>corosensei::coroutine::ScopedCoroutine&lt;Input,Yield,Return,Stack&gt;::with_stack::coroutine_func (16 samples, 0.19%)</title><rect x="99.0005%" y="1941" width="0.1927%" height="15" fill="rgb(236,80,13)" fg:x="8221" fg:w="16"/><text x="99.2505%" y="1951.50"></text></g><g><title>corosensei::unwind::catch_unwind_at_root (9 samples, 0.11%)</title><rect x="99.0848%" y="1925" width="0.1084%" height="15" fill="rgb(213,5,6)" fg:x="8228" fg:w="9"/><text x="99.3348%" y="1935.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.04%)</title><rect x="99.1570%" y="1909" width="0.0361%" height="15" fill="rgb(205,59,21)" fg:x="8234" fg:w="3"/><text x="99.4070%" y="1919.50"></text></g><g><title>std::panicking::try (2 samples, 0.02%)</title><rect x="99.1691%" y="1893" width="0.0241%" height="15" fill="rgb(247,137,35)" fg:x="8235" fg:w="2"/><text x="99.4191%" y="1903.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.01%)</title><rect x="99.1811%" y="1877" width="0.0120%" height="15" fill="rgb(242,208,28)" fg:x="8236" fg:w="1"/><text x="99.4311%" y="1887.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.01%)</title><rect x="99.1811%" y="1861" width="0.0120%" height="15" fill="rgb(245,62,25)" fg:x="8236" fg:w="1"/><text x="99.4311%" y="1871.50"></text></g><g><title>corosensei::coroutine::ScopedCoroutine&lt;Input,Yield,Return,Stack&gt;::with_stack::coroutine_func::{{closure}} (1 samples, 0.01%)</title><rect x="99.1811%" y="1845" width="0.0120%" height="15" fill="rgb(233,99,54)" fg:x="8236" fg:w="1"/><text x="99.4311%" y="1855.50"></text></g><g><title>wasmer_vm::trap::traphandlers::on_wasm_stack::{{closure}} (1 samples, 0.01%)</title><rect x="99.1811%" y="1829" width="0.0120%" height="15" fill="rgb(213,10,37)" fg:x="8236" fg:w="1"/><text x="99.4311%" y="1839.50"></text></g><g><title>wasmer_vm::trap::traphandlers::wasmer_call_trampoline::{{closure}} (1 samples, 0.01%)</title><rect x="99.1811%" y="1813" width="0.0120%" height="15" fill="rgb(235,143,30)" fg:x="8236" fg:w="1"/><text x="99.4311%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;vm_library::managed::value::Value&gt; (2 samples, 0.02%)</title><rect x="99.1932%" y="1845" width="0.0241%" height="15" fill="rgb(250,146,33)" fg:x="8237" fg:w="2"/><text x="99.4432%" y="1855.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.05%)</title><rect x="99.1932%" y="1941" width="0.0482%" height="15" fill="rgb(226,198,42)" fg:x="8237" fg:w="4"/><text x="99.4432%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;im_rc::nodes::btree::Node&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt; (4 samples, 0.05%)</title><rect x="99.1932%" y="1925" width="0.0482%" height="15" fill="rgb(222,55,6)" fg:x="8237" fg:w="4"/><text x="99.4432%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;sized_chunks::sized_chunk::Chunk&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt; (4 samples, 0.05%)</title><rect x="99.1932%" y="1909" width="0.0482%" height="15" fill="rgb(213,224,31)" fg:x="8237" fg:w="4"/><text x="99.4432%" y="1919.50"></text></g><g><title>&lt;sized_chunks::sized_chunk::Chunk&lt;A,N&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.05%)</title><rect x="99.1932%" y="1893" width="0.0482%" height="15" fill="rgb(226,103,35)" fg:x="8237" fg:w="4"/><text x="99.4432%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(vm_library::managed::value::Value,vm_library::managed::value::Value)]&gt; (4 samples, 0.05%)</title><rect x="99.1932%" y="1877" width="0.0482%" height="15" fill="rgb(205,66,45)" fg:x="8237" fg:w="4"/><text x="99.4432%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt; (4 samples, 0.05%)</title><rect x="99.1932%" y="1861" width="0.0482%" height="15" fill="rgb(226,51,42)" fg:x="8237" fg:w="4"/><text x="99.4432%" y="1871.50"></text></g><g><title>mi_free (2 samples, 0.02%)</title><rect x="99.2172%" y="1845" width="0.0241%" height="15" fill="rgb(206,69,1)" fg:x="8239" fg:w="2"/><text x="99.4672%" y="1855.50"></text></g><g><title>mi_check_is_double_free (1 samples, 0.01%)</title><rect x="99.2293%" y="1829" width="0.0120%" height="15" fill="rgb(213,228,47)" fg:x="8240" fg:w="1"/><text x="99.4793%" y="1839.50"></text></g><g><title>mi_is_in_same_page (1 samples, 0.01%)</title><rect x="99.2293%" y="1813" width="0.0120%" height="15" fill="rgb(224,204,18)" fg:x="8240" fg:w="1"/><text x="99.4793%" y="1823.50"></text></g><g><title>mi_free (1 samples, 0.01%)</title><rect x="99.2413%" y="1941" width="0.0120%" height="15" fill="rgb(253,187,47)" fg:x="8241" fg:w="1"/><text x="99.4913%" y="1951.50"></text></g><g><title>_mi_thread_id (1 samples, 0.01%)</title><rect x="99.2413%" y="1925" width="0.0120%" height="15" fill="rgb(232,61,2)" fg:x="8241" fg:w="1"/><text x="99.4913%" y="1935.50"></text></g><g><title>mi_tls_slot (1 samples, 0.01%)</title><rect x="99.2413%" y="1909" width="0.0120%" height="15" fill="rgb(213,132,35)" fg:x="8241" fg:w="1"/><text x="99.4913%" y="1919.50"></text></g><g><title>vm_library::env::Context::bump (2 samples, 0.02%)</title><rect x="99.2534%" y="1941" width="0.0241%" height="15" fill="rgb(247,33,21)" fg:x="8242" fg:w="2"/><text x="99.5034%" y="1951.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::insert (1 samples, 0.01%)</title><rect x="99.2654%" y="1925" width="0.0120%" height="15" fill="rgb(233,71,46)" fg:x="8243" fg:w="1"/><text x="99.5154%" y="1935.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::insert_with_key (1 samples, 0.01%)</title><rect x="99.2654%" y="1909" width="0.0120%" height="15" fill="rgb(222,173,43)" fg:x="8243" fg:w="1"/><text x="99.5154%" y="1919.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.01%)</title><rect x="99.2654%" y="1893" width="0.0120%" height="15" fill="rgb(249,218,47)" fg:x="8243" fg:w="1"/><text x="99.5154%" y="1903.50"></text></g><g><title>&lt;slotmap::DefaultKey as core::convert::From&lt;slotmap::KeyData&gt;&gt;::from (1 samples, 0.01%)</title><rect x="99.2654%" y="1877" width="0.0120%" height="15" fill="rgb(254,185,48)" fg:x="8243" fg:w="1"/><text x="99.5154%" y="1887.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.01%)</title><rect x="99.2775%" y="1781" width="0.0120%" height="15" fill="rgb(252,165,50)" fg:x="8244" fg:w="1"/><text x="99.5275%" y="1791.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.01%)</title><rect x="99.2775%" y="1765" width="0.0120%" height="15" fill="rgb(206,219,6)" fg:x="8244" fg:w="1"/><text x="99.5275%" y="1775.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.01%)</title><rect x="99.2775%" y="1749" width="0.0120%" height="15" fill="rgb(212,212,45)" fg:x="8244" fg:w="1"/><text x="99.5275%" y="1759.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.01%)</title><rect x="99.2775%" y="1733" width="0.0120%" height="15" fill="rgb(221,31,9)" fg:x="8244" fg:w="1"/><text x="99.5275%" y="1743.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (2 samples, 0.02%)</title><rect x="99.2775%" y="1797" width="0.0241%" height="15" fill="rgb(234,198,39)" fg:x="8244" fg:w="2"/><text x="99.5275%" y="1807.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="99.2895%" y="1781" width="0.0120%" height="15" fill="rgb(252,145,46)" fg:x="8245" fg:w="1"/><text x="99.5395%" y="1791.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="99.2895%" y="1765" width="0.0120%" height="15" fill="rgb(237,149,0)" fg:x="8245" fg:w="1"/><text x="99.5395%" y="1775.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="99.2895%" y="1749" width="0.0120%" height="15" fill="rgb(229,65,5)" fg:x="8245" fg:w="1"/><text x="99.5395%" y="1759.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="99.2895%" y="1733" width="0.0120%" height="15" fill="rgb(235,60,36)" fg:x="8245" fg:w="1"/><text x="99.5395%" y="1743.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="99.2895%" y="1717" width="0.0120%" height="15" fill="rgb(222,47,18)" fg:x="8245" fg:w="1"/><text x="99.5395%" y="1727.50"></text></g><g><title>vm_library::env::Context::get_gas_left (4 samples, 0.05%)</title><rect x="99.2775%" y="1925" width="0.0482%" height="15" fill="rgb(235,114,22)" fg:x="8244" fg:w="4"/><text x="99.5275%" y="1935.50"></text></g><g><title>vm_library::env::Context::with_instance (4 samples, 0.05%)</title><rect x="99.2775%" y="1909" width="0.0482%" height="15" fill="rgb(209,167,11)" fg:x="8244" fg:w="4"/><text x="99.5275%" y="1919.50"></text></g><g><title>vm_library::env::Context::get_gas_left::{{closure}} (4 samples, 0.05%)</title><rect x="99.2775%" y="1893" width="0.0482%" height="15" fill="rgb(251,73,18)" fg:x="8244" fg:w="4"/><text x="99.5275%" y="1903.50"></text></g><g><title>wasmer_middlewares::metering::get_remaining_points (4 samples, 0.05%)</title><rect x="99.2775%" y="1877" width="0.0482%" height="15" fill="rgb(217,60,17)" fg:x="8244" fg:w="4"/><text x="99.5275%" y="1887.50"></text></g><g><title>wasmer::sys::exports::Exports::get_global (4 samples, 0.05%)</title><rect x="99.2775%" y="1861" width="0.0482%" height="15" fill="rgb(224,36,37)" fg:x="8244" fg:w="4"/><text x="99.5275%" y="1871.50"></text></g><g><title>wasmer::sys::exports::Exports::get (4 samples, 0.05%)</title><rect x="99.2775%" y="1845" width="0.0482%" height="15" fill="rgb(211,21,32)" fg:x="8244" fg:w="4"/><text x="99.5275%" y="1855.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (4 samples, 0.05%)</title><rect x="99.2775%" y="1829" width="0.0482%" height="15" fill="rgb(231,55,48)" fg:x="8244" fg:w="4"/><text x="99.5275%" y="1839.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (4 samples, 0.05%)</title><rect x="99.2775%" y="1813" width="0.0482%" height="15" fill="rgb(227,42,18)" fg:x="8244" fg:w="4"/><text x="99.5275%" y="1823.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (2 samples, 0.02%)</title><rect x="99.3015%" y="1797" width="0.0241%" height="15" fill="rgb(217,2,27)" fg:x="8246" fg:w="2"/><text x="99.5515%" y="1807.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (2 samples, 0.02%)</title><rect x="99.3015%" y="1781" width="0.0241%" height="15" fill="rgb(251,138,23)" fg:x="8246" fg:w="2"/><text x="99.5515%" y="1791.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="99.3015%" y="1765" width="0.0241%" height="15" fill="rgb(226,184,11)" fg:x="8246" fg:w="2"/><text x="99.5515%" y="1775.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.02%)</title><rect x="99.3015%" y="1749" width="0.0241%" height="15" fill="rgb(242,142,12)" fg:x="8246" fg:w="2"/><text x="99.5515%" y="1759.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::{{closure}} (2 samples, 0.02%)</title><rect x="99.3015%" y="1733" width="0.0241%" height="15" fill="rgb(234,187,18)" fg:x="8246" fg:w="2"/><text x="99.5515%" y="1743.50"></text></g><g><title>indexmap::map::core::equivalent::{{closure}} (2 samples, 0.02%)</title><rect x="99.3015%" y="1717" width="0.0241%" height="15" fill="rgb(237,44,42)" fg:x="8246" fg:w="2"/><text x="99.5515%" y="1727.50"></text></g><g><title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (2 samples, 0.02%)</title><rect x="99.3015%" y="1701" width="0.0241%" height="15" fill="rgb(211,90,23)" fg:x="8246" fg:w="2"/><text x="99.5515%" y="1711.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.02%)</title><rect x="99.3015%" y="1685" width="0.0241%" height="15" fill="rgb(207,81,18)" fg:x="8246" fg:w="2"/><text x="99.5515%" y="1695.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.02%)</title><rect x="99.3015%" y="1669" width="0.0241%" height="15" fill="rgb(222,107,28)" fg:x="8246" fg:w="2"/><text x="99.5515%" y="1679.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.02%)</title><rect x="99.3015%" y="1653" width="0.0241%" height="15" fill="rgb(237,83,52)" fg:x="8246" fg:w="2"/><text x="99.5515%" y="1663.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.02%)</title><rect x="99.3015%" y="1637" width="0.0241%" height="15" fill="rgb(208,67,11)" fg:x="8246" fg:w="2"/><text x="99.5515%" y="1647.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="99.3136%" y="1621" width="0.0120%" height="15" fill="rgb(249,157,49)" fg:x="8247" fg:w="1"/><text x="99.5636%" y="1631.50"></text></g><g><title>vm_library::managed::imports::update (12 samples, 0.14%)</title><rect x="99.1932%" y="1957" width="0.1445%" height="15" fill="rgb(243,200,1)" fg:x="8237" fg:w="12"/><text x="99.4432%" y="1967.50"></text></g><g><title>vm_library::env::Context::update_gas (5 samples, 0.06%)</title><rect x="99.2775%" y="1941" width="0.0602%" height="15" fill="rgb(225,162,37)" fg:x="8244" fg:w="5"/><text x="99.5275%" y="1951.50"></text></g><g><title>vm_library::env::Context::set_gas_left (1 samples, 0.01%)</title><rect x="99.3256%" y="1925" width="0.0120%" height="15" fill="rgb(242,92,13)" fg:x="8248" fg:w="1"/><text x="99.5756%" y="1935.50"></text></g><g><title>vm_library::env::Context::with_instance (1 samples, 0.01%)</title><rect x="99.3256%" y="1909" width="0.0120%" height="15" fill="rgb(220,43,36)" fg:x="8248" fg:w="1"/><text x="99.5756%" y="1919.50"></text></g><g><title>vm_library::env::Context::set_gas_left::{{closure}} (1 samples, 0.01%)</title><rect x="99.3256%" y="1893" width="0.0120%" height="15" fill="rgb(213,165,48)" fg:x="8248" fg:w="1"/><text x="99.5756%" y="1903.50"></text></g><g><title>wasmer_middlewares::metering::set_remaining_points (1 samples, 0.01%)</title><rect x="99.3256%" y="1877" width="0.0120%" height="15" fill="rgb(227,200,9)" fg:x="8248" fg:w="1"/><text x="99.5756%" y="1887.50"></text></g><g><title>wasmer::sys::exports::Exports::get_global (1 samples, 0.01%)</title><rect x="99.3256%" y="1861" width="0.0120%" height="15" fill="rgb(221,222,28)" fg:x="8248" fg:w="1"/><text x="99.5756%" y="1871.50"></text></g><g><title>wasmer::sys::exports::Exports::get (1 samples, 0.01%)</title><rect x="99.3256%" y="1845" width="0.0120%" height="15" fill="rgb(223,142,26)" fg:x="8248" fg:w="1"/><text x="99.5756%" y="1855.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="99.3256%" y="1829" width="0.0120%" height="15" fill="rgb(243,46,9)" fg:x="8248" fg:w="1"/><text x="99.5756%" y="1839.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (1 samples, 0.01%)</title><rect x="99.3256%" y="1813" width="0.0120%" height="15" fill="rgb(250,56,11)" fg:x="8248" fg:w="1"/><text x="99.5756%" y="1823.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (1 samples, 0.01%)</title><rect x="99.3256%" y="1797" width="0.0120%" height="15" fill="rgb(229,113,5)" fg:x="8248" fg:w="1"/><text x="99.5756%" y="1807.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="99.3256%" y="1781" width="0.0120%" height="15" fill="rgb(244,108,28)" fg:x="8248" fg:w="1"/><text x="99.5756%" y="1791.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="99.3256%" y="1765" width="0.0120%" height="15" fill="rgb(242,119,50)" fg:x="8248" fg:w="1"/><text x="99.5756%" y="1775.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.01%)</title><rect x="99.3256%" y="1749" width="0.0120%" height="15" fill="rgb(224,164,23)" fg:x="8248" fg:w="1"/><text x="99.5756%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.05%)</title><rect x="99.3377%" y="1797" width="0.0482%" height="15" fill="rgb(214,227,44)" fg:x="8249" fg:w="4"/><text x="99.5877%" y="1807.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (4 samples, 0.05%)</title><rect x="99.3377%" y="1781" width="0.0482%" height="15" fill="rgb(238,202,4)" fg:x="8249" fg:w="4"/><text x="99.5877%" y="1791.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.05%)</title><rect x="99.3377%" y="1765" width="0.0482%" height="15" fill="rgb(213,190,30)" fg:x="8249" fg:w="4"/><text x="99.5877%" y="1775.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (4 samples, 0.05%)</title><rect x="99.3377%" y="1749" width="0.0482%" height="15" fill="rgb(239,15,2)" fg:x="8249" fg:w="4"/><text x="99.5877%" y="1759.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.05%)</title><rect x="99.3377%" y="1733" width="0.0482%" height="15" fill="rgb(249,229,4)" fg:x="8249" fg:w="4"/><text x="99.5877%" y="1743.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.05%)</title><rect x="99.3377%" y="1717" width="0.0482%" height="15" fill="rgb(239,75,44)" fg:x="8249" fg:w="4"/><text x="99.5877%" y="1727.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.05%)</title><rect x="99.3377%" y="1701" width="0.0482%" height="15" fill="rgb(251,206,23)" fg:x="8249" fg:w="4"/><text x="99.5877%" y="1711.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (4 samples, 0.05%)</title><rect x="99.3377%" y="1685" width="0.0482%" height="15" fill="rgb(215,208,0)" fg:x="8249" fg:w="4"/><text x="99.5877%" y="1695.50"></text></g><g><title>vm_library::managed::value::Value::from_runtime_ticket::{{closure}} (4 samples, 0.05%)</title><rect x="99.3377%" y="1669" width="0.0482%" height="15" fill="rgb(230,75,50)" fg:x="8249" fg:w="4"/><text x="99.5877%" y="1679.50"></text></g><g><title>vm_library::managed::value::Value::from_runtime_ticket (4 samples, 0.05%)</title><rect x="99.3377%" y="1653" width="0.0482%" height="15" fill="rgb(246,180,39)" fg:x="8249" fg:w="4"/><text x="99.5877%" y="1663.50"></text></g><g><title>vm_library::managed::value::Value::from_runtime_ticket (4 samples, 0.05%)</title><rect x="99.3377%" y="1637" width="0.0482%" height="15" fill="rgb(249,175,24)" fg:x="8249" fg:w="4"/><text x="99.5877%" y="1647.50"></text></g><g><title>&lt;im_rc::ord::map::OrdMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(RK,RV)&gt;&gt;::from_iter (4 samples, 0.05%)</title><rect x="99.3377%" y="1621" width="0.0482%" height="15" fill="rgb(247,176,22)" fg:x="8249" fg:w="4"/><text x="99.5877%" y="1631.50"></text></g><g><title>&lt;im_rc::ord::map::OrdMap&lt;K,V&gt; as core::default::Default&gt;::default (3 samples, 0.04%)</title><rect x="99.3497%" y="1605" width="0.0361%" height="15" fill="rgb(241,100,24)" fg:x="8250" fg:w="3"/><text x="99.5997%" y="1615.50"></text></g><g><title>im_rc::ord::map::OrdMap&lt;K,V&gt;::new (3 samples, 0.04%)</title><rect x="99.3497%" y="1589" width="0.0361%" height="15" fill="rgb(233,4,35)" fg:x="8250" fg:w="3"/><text x="99.5997%" y="1599.50"></text></g><g><title>im_rc::fakepool::Rc&lt;A&gt;::default (3 samples, 0.04%)</title><rect x="99.3497%" y="1573" width="0.0361%" height="15" fill="rgb(211,164,46)" fg:x="8250" fg:w="3"/><text x="99.5997%" y="1583.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::default::Default&gt;::default (3 samples, 0.04%)</title><rect x="99.3497%" y="1557" width="0.0361%" height="15" fill="rgb(242,99,53)" fg:x="8250" fg:w="3"/><text x="99.5997%" y="1567.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (3 samples, 0.04%)</title><rect x="99.3497%" y="1541" width="0.0361%" height="15" fill="rgb(243,45,33)" fg:x="8250" fg:w="3"/><text x="99.5997%" y="1551.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (3 samples, 0.04%)</title><rect x="99.3497%" y="1525" width="0.0361%" height="15" fill="rgb(217,55,21)" fg:x="8250" fg:w="3"/><text x="99.5997%" y="1535.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.04%)</title><rect x="99.3497%" y="1509" width="0.0361%" height="15" fill="rgb(245,145,46)" fg:x="8250" fg:w="3"/><text x="99.5997%" y="1519.50"></text></g><g><title>&lt;im_rc::ord::map::OrdMap&lt;K,V&gt; as core::default::Default&gt;::default (6 samples, 0.07%)</title><rect x="99.3858%" y="1637" width="0.0723%" height="15" fill="rgb(215,112,45)" fg:x="8253" fg:w="6"/><text x="99.6358%" y="1647.50"></text></g><g><title>im_rc::ord::map::OrdMap&lt;K,V&gt;::new (6 samples, 0.07%)</title><rect x="99.3858%" y="1621" width="0.0723%" height="15" fill="rgb(228,104,16)" fg:x="8253" fg:w="6"/><text x="99.6358%" y="1631.50"></text></g><g><title>im_rc::fakepool::Rc&lt;A&gt;::default (6 samples, 0.07%)</title><rect x="99.3858%" y="1605" width="0.0723%" height="15" fill="rgb(239,186,38)" fg:x="8253" fg:w="6"/><text x="99.6358%" y="1615.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::default::Default&gt;::default (6 samples, 0.07%)</title><rect x="99.3858%" y="1589" width="0.0723%" height="15" fill="rgb(228,38,35)" fg:x="8253" fg:w="6"/><text x="99.6358%" y="1599.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (6 samples, 0.07%)</title><rect x="99.3858%" y="1573" width="0.0723%" height="15" fill="rgb(251,42,40)" fg:x="8253" fg:w="6"/><text x="99.6358%" y="1583.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (5 samples, 0.06%)</title><rect x="99.3979%" y="1557" width="0.0602%" height="15" fill="rgb(210,51,19)" fg:x="8254" fg:w="5"/><text x="99.6479%" y="1567.50"></text></g><g><title>__memcpy_avx_unaligned_erms (5 samples, 0.06%)</title><rect x="99.3979%" y="1541" width="0.0602%" height="15" fill="rgb(236,94,42)" fg:x="8254" fg:w="5"/><text x="99.6479%" y="1551.50"></text></g><g><title>vm_library::managed::value::Value::from_runtime_ticket (12 samples, 0.14%)</title><rect x="99.3377%" y="1957" width="0.1445%" height="15" fill="rgb(239,167,16)" fg:x="8249" fg:w="12"/><text x="99.5877%" y="1967.50"></text></g><g><title>vm_library::managed::value::Value::from_runtime_ticket (12 samples, 0.14%)</title><rect x="99.3377%" y="1941" width="0.1445%" height="15" fill="rgb(252,175,31)" fg:x="8249" fg:w="12"/><text x="99.5877%" y="1951.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (12 samples, 0.14%)</title><rect x="99.3377%" y="1925" width="0.1445%" height="15" fill="rgb(206,166,30)" fg:x="8249" fg:w="12"/><text x="99.5877%" y="1935.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (12 samples, 0.14%)</title><rect x="99.3377%" y="1909" width="0.1445%" height="15" fill="rgb(206,209,37)" fg:x="8249" fg:w="12"/><text x="99.5877%" y="1919.50"></text></g><g><title>core::iter::adapters::try_process (12 samples, 0.14%)</title><rect x="99.3377%" y="1893" width="0.1445%" height="15" fill="rgb(226,91,4)" fg:x="8249" fg:w="12"/><text x="99.5877%" y="1903.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (12 samples, 0.14%)</title><rect x="99.3377%" y="1877" width="0.1445%" height="15" fill="rgb(222,167,0)" fg:x="8249" fg:w="12"/><text x="99.5877%" y="1887.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (12 samples, 0.14%)</title><rect x="99.3377%" y="1861" width="0.1445%" height="15" fill="rgb(211,70,14)" fg:x="8249" fg:w="12"/><text x="99.5877%" y="1871.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (12 samples, 0.14%)</title><rect x="99.3377%" y="1845" width="0.1445%" height="15" fill="rgb(214,84,42)" fg:x="8249" fg:w="12"/><text x="99.5877%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.14%)</title><rect x="99.3377%" y="1829" width="0.1445%" height="15" fill="rgb(235,157,37)" fg:x="8249" fg:w="12"/><text x="99.5877%" y="1839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (12 samples, 0.14%)</title><rect x="99.3377%" y="1813" width="0.1445%" height="15" fill="rgb(225,13,6)" fg:x="8249" fg:w="12"/><text x="99.5877%" y="1823.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.10%)</title><rect x="99.3858%" y="1797" width="0.0963%" height="15" fill="rgb(205,202,1)" fg:x="8253" fg:w="8"/><text x="99.6358%" y="1807.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (8 samples, 0.10%)</title><rect x="99.3858%" y="1781" width="0.0963%" height="15" fill="rgb(232,195,26)" fg:x="8253" fg:w="8"/><text x="99.6358%" y="1791.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.10%)</title><rect x="99.3858%" y="1765" width="0.0963%" height="15" fill="rgb(208,102,26)" fg:x="8253" fg:w="8"/><text x="99.6358%" y="1775.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.10%)</title><rect x="99.3858%" y="1749" width="0.0963%" height="15" fill="rgb(215,41,39)" fg:x="8253" fg:w="8"/><text x="99.6358%" y="1759.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (8 samples, 0.10%)</title><rect x="99.3858%" y="1733" width="0.0963%" height="15" fill="rgb(247,139,11)" fg:x="8253" fg:w="8"/><text x="99.6358%" y="1743.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (8 samples, 0.10%)</title><rect x="99.3858%" y="1717" width="0.0963%" height="15" fill="rgb(243,99,6)" fg:x="8253" fg:w="8"/><text x="99.6358%" y="1727.50"></text></g><g><title>vm_library::managed::value::Value::from_runtime_ticket::{{closure}} (8 samples, 0.10%)</title><rect x="99.3858%" y="1701" width="0.0963%" height="15" fill="rgb(230,168,48)" fg:x="8253" fg:w="8"/><text x="99.6358%" y="1711.50"></text></g><g><title>vm_library::managed::value::Value::from_runtime_ticket (8 samples, 0.10%)</title><rect x="99.3858%" y="1685" width="0.0963%" height="15" fill="rgb(238,227,13)" fg:x="8253" fg:w="8"/><text x="99.6358%" y="1695.50"></text></g><g><title>vm_library::managed::value::Value::from_runtime_ticket (8 samples, 0.10%)</title><rect x="99.3858%" y="1669" width="0.0963%" height="15" fill="rgb(209,109,13)" fg:x="8253" fg:w="8"/><text x="99.6358%" y="1679.50"></text></g><g><title>&lt;im_rc::ord::map::OrdMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(RK,RV)&gt;&gt;::from_iter (8 samples, 0.10%)</title><rect x="99.3858%" y="1653" width="0.0963%" height="15" fill="rgb(228,195,1)" fg:x="8253" fg:w="8"/><text x="99.6358%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt; (2 samples, 0.02%)</title><rect x="99.4581%" y="1637" width="0.0241%" height="15" fill="rgb(230,218,0)" fg:x="8259" fg:w="2"/><text x="99.7081%" y="1647.50"></text></g><g><title>__rg_dealloc (2 samples, 0.02%)</title><rect x="99.4581%" y="1621" width="0.0241%" height="15" fill="rgb(206,1,45)" fg:x="8259" fg:w="2"/><text x="99.7081%" y="1631.50"></text></g><g><title>&lt;mimalloc::MiMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (2 samples, 0.02%)</title><rect x="99.4581%" y="1605" width="0.0241%" height="15" fill="rgb(209,124,26)" fg:x="8259" fg:w="2"/><text x="99.7081%" y="1615.50"></text></g><g><title>vm_library::managed::value::Value::to_runtime_ticket (1 samples, 0.01%)</title><rect x="99.4822%" y="1957" width="0.0120%" height="15" fill="rgb(220,59,8)" fg:x="8261" fg:w="1"/><text x="99.7322%" y="1967.50"></text></g><g><title>vm_library::managed::value::Value::to_runtime_ticket (1 samples, 0.01%)</title><rect x="99.4822%" y="1941" width="0.0120%" height="15" fill="rgb(251,41,37)" fg:x="8261" fg:w="1"/><text x="99.7322%" y="1951.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="99.4822%" y="1925" width="0.0120%" height="15" fill="rgb(239,152,21)" fg:x="8261" fg:w="1"/><text x="99.7322%" y="1935.50"></text></g><g><title>&lt;im_rc::ord::map::OrdMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(RK,RV)&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="99.4822%" y="1909" width="0.0120%" height="15" fill="rgb(226,32,1)" fg:x="8261" fg:w="1"/><text x="99.7322%" y="1919.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="99.4822%" y="1893" width="0.0120%" height="15" fill="rgb(230,154,36)" fg:x="8261" fg:w="1"/><text x="99.7322%" y="1903.50"></text></g><g><title>&lt;im_rc::nodes::btree::ConsumingIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="99.4822%" y="1877" width="0.0120%" height="15" fill="rgb(208,228,43)" fg:x="8261" fg:w="1"/><text x="99.7322%" y="1887.50"></text></g><g><title>__rust_probestack (1 samples, 0.01%)</title><rect x="99.4822%" y="1861" width="0.0120%" height="15" fill="rgb(214,203,3)" fg:x="8261" fg:w="1"/><text x="99.7322%" y="1871.50"></text></g><g><title>&lt;im_rc::ord::map::OrdMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.01%)</title><rect x="99.4942%" y="1893" width="0.0120%" height="15" fill="rgb(207,149,29)" fg:x="8262" fg:w="1"/><text x="99.7442%" y="1903.50"></text></g><g><title>im_rc::nodes::btree::ConsumingIter&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="99.4942%" y="1877" width="0.0120%" height="15" fill="rgb(250,105,7)" fg:x="8262" fg:w="1"/><text x="99.7442%" y="1887.50"></text></g><g><title>__rust_probestack (1 samples, 0.01%)</title><rect x="99.4942%" y="1861" width="0.0120%" height="15" fill="rgb(232,222,16)" fg:x="8262" fg:w="1"/><text x="99.7442%" y="1871.50"></text></g><g><title>mi_block_nextx (2 samples, 0.02%)</title><rect x="99.5063%" y="1605" width="0.0241%" height="15" fill="rgb(209,32,24)" fg:x="8263" fg:w="2"/><text x="99.7563%" y="1615.50"></text></g><g><title>mi_ptr_decode (2 samples, 0.02%)</title><rect x="99.5063%" y="1589" width="0.0241%" height="15" fill="rgb(225,13,6)" fg:x="8263" fg:w="2"/><text x="99.7563%" y="1599.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::convert::From&lt;T&gt;&gt;::from (3 samples, 0.04%)</title><rect x="99.5063%" y="1781" width="0.0361%" height="15" fill="rgb(245,226,26)" fg:x="8263" fg:w="3"/><text x="99.7563%" y="1791.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (3 samples, 0.04%)</title><rect x="99.5063%" y="1765" width="0.0361%" height="15" fill="rgb(229,178,27)" fg:x="8263" fg:w="3"/><text x="99.7563%" y="1775.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.04%)</title><rect x="99.5063%" y="1749" width="0.0361%" height="15" fill="rgb(205,227,28)" fg:x="8263" fg:w="3"/><text x="99.7563%" y="1759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="99.5063%" y="1733" width="0.0361%" height="15" fill="rgb(210,191,45)" fg:x="8263" fg:w="3"/><text x="99.7563%" y="1743.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.04%)</title><rect x="99.5063%" y="1717" width="0.0361%" height="15" fill="rgb(206,124,16)" fg:x="8263" fg:w="3"/><text x="99.7563%" y="1727.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="99.5063%" y="1701" width="0.0361%" height="15" fill="rgb(210,162,0)" fg:x="8263" fg:w="3"/><text x="99.7563%" y="1711.50"></text></g><g><title>mi_malloc (3 samples, 0.04%)</title><rect x="99.5063%" y="1685" width="0.0361%" height="15" fill="rgb(211,54,38)" fg:x="8263" fg:w="3"/><text x="99.7563%" y="1695.50"></text></g><g><title>mi_heap_malloc (3 samples, 0.04%)</title><rect x="99.5063%" y="1669" width="0.0361%" height="15" fill="rgb(248,192,3)" fg:x="8263" fg:w="3"/><text x="99.7563%" y="1679.50"></text></g><g><title>mi_heap_malloc_small (3 samples, 0.04%)</title><rect x="99.5063%" y="1653" width="0.0361%" height="15" fill="rgb(233,187,18)" fg:x="8263" fg:w="3"/><text x="99.7563%" y="1663.50"></text></g><g><title>_mi_page_malloc (3 samples, 0.04%)</title><rect x="99.5063%" y="1637" width="0.0361%" height="15" fill="rgb(237,208,14)" fg:x="8263" fg:w="3"/><text x="99.7563%" y="1647.50"></text></g><g><title>mi_block_next (3 samples, 0.04%)</title><rect x="99.5063%" y="1621" width="0.0361%" height="15" fill="rgb(212,77,1)" fg:x="8263" fg:w="3"/><text x="99.7563%" y="1631.50"></text></g><g><title>mi_is_in_same_page (1 samples, 0.01%)</title><rect x="99.5303%" y="1605" width="0.0120%" height="15" fill="rgb(210,163,22)" fg:x="8265" fg:w="1"/><text x="99.7803%" y="1615.50"></text></g><g><title>_mi_segment_page_start (1 samples, 0.01%)</title><rect x="99.5303%" y="1589" width="0.0120%" height="15" fill="rgb(250,58,28)" fg:x="8265" fg:w="1"/><text x="99.7803%" y="1599.50"></text></g><g><title>_mi_segment_page_start_from_slice (1 samples, 0.01%)</title><rect x="99.5303%" y="1573" width="0.0120%" height="15" fill="rgb(254,28,41)" fg:x="8265" fg:w="1"/><text x="99.7803%" y="1583.50"></text></g><g><title>vm_library::run_loop::handle_invoke (5 samples, 0.06%)</title><rect x="99.4942%" y="1941" width="0.0602%" height="15" fill="rgb(237,162,36)" fg:x="8262" fg:w="5"/><text x="99.7442%" y="1951.50"></text></g><g><title>vm_library::managed::value::Value::to_runtime_ticket (5 samples, 0.06%)</title><rect x="99.4942%" y="1925" width="0.0602%" height="15" fill="rgb(232,56,6)" fg:x="8262" fg:w="5"/><text x="99.7442%" y="1935.50"></text></g><g><title>vm_library::managed::value::Value::to_runtime_ticket (5 samples, 0.06%)</title><rect x="99.4942%" y="1909" width="0.0602%" height="15" fill="rgb(216,127,42)" fg:x="8262" fg:w="5"/><text x="99.7442%" y="1919.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.05%)</title><rect x="99.5063%" y="1893" width="0.0482%" height="15" fill="rgb(241,69,15)" fg:x="8263" fg:w="4"/><text x="99.7563%" y="1903.50"></text></g><g><title>&lt;im_rc::ord::map::OrdMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(RK,RV)&gt;&gt;::from_iter (4 samples, 0.05%)</title><rect x="99.5063%" y="1877" width="0.0482%" height="15" fill="rgb(227,180,19)" fg:x="8263" fg:w="4"/><text x="99.7563%" y="1887.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.05%)</title><rect x="99.5063%" y="1861" width="0.0482%" height="15" fill="rgb(231,188,29)" fg:x="8263" fg:w="4"/><text x="99.7563%" y="1871.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.05%)</title><rect x="99.5063%" y="1845" width="0.0482%" height="15" fill="rgb(224,176,27)" fg:x="8263" fg:w="4"/><text x="99.7563%" y="1855.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.05%)</title><rect x="99.5063%" y="1829" width="0.0482%" height="15" fill="rgb(249,214,19)" fg:x="8263" fg:w="4"/><text x="99.7563%" y="1839.50"></text></g><g><title>vm_library::managed::value::Value::to_runtime_ticket::{{closure}} (4 samples, 0.05%)</title><rect x="99.5063%" y="1813" width="0.0482%" height="15" fill="rgb(240,0,4)" fg:x="8263" fg:w="4"/><text x="99.7563%" y="1823.50"></text></g><g><title>vm_library::managed::value::Value::to_runtime_ticket (4 samples, 0.05%)</title><rect x="99.5063%" y="1797" width="0.0482%" height="15" fill="rgb(233,28,41)" fg:x="8263" fg:w="4"/><text x="99.7563%" y="1807.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.01%)</title><rect x="99.5424%" y="1781" width="0.0120%" height="15" fill="rgb(220,90,51)" fg:x="8266" fg:w="1"/><text x="99.7924%" y="1791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="99.5424%" y="1765" width="0.0120%" height="15" fill="rgb(250,52,22)" fg:x="8266" fg:w="1"/><text x="99.7924%" y="1775.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="99.5424%" y="1749" width="0.0120%" height="15" fill="rgb(231,152,36)" fg:x="8266" fg:w="1"/><text x="99.7924%" y="1759.50"></text></g><g><title>mi_free (1 samples, 0.01%)</title><rect x="99.5424%" y="1733" width="0.0120%" height="15" fill="rgb(250,218,4)" fg:x="8266" fg:w="1"/><text x="99.7924%" y="1743.50"></text></g><g><title>mi_check_is_double_free (1 samples, 0.01%)</title><rect x="99.5424%" y="1717" width="0.0120%" height="15" fill="rgb(210,38,21)" fg:x="8266" fg:w="1"/><text x="99.7924%" y="1727.50"></text></g><g><title>mi_block_nextx (1 samples, 0.01%)</title><rect x="99.5424%" y="1701" width="0.0120%" height="15" fill="rgb(230,75,13)" fg:x="8266" fg:w="1"/><text x="99.7924%" y="1711.50"></text></g><g><title>mi_ptr_decode (1 samples, 0.01%)</title><rect x="99.5424%" y="1685" width="0.0120%" height="15" fill="rgb(250,68,53)" fg:x="8266" fg:w="1"/><text x="99.7924%" y="1695.50"></text></g><g><title>mi_rotr (1 samples, 0.01%)</title><rect x="99.5424%" y="1669" width="0.0120%" height="15" fill="rgb(250,210,16)" fg:x="8266" fg:w="1"/><text x="99.7924%" y="1679.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.5544%" y="1269" width="0.0120%" height="15" fill="rgb(240,132,5)" fg:x="8267" fg:w="1"/><text x="99.8044%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.5544%" y="1253" width="0.0120%" height="15" fill="rgb(222,148,48)" fg:x="8267" fg:w="1"/><text x="99.8044%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.5544%" y="1237" width="0.0120%" height="15" fill="rgb(247,181,24)" fg:x="8267" fg:w="1"/><text x="99.8044%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.5544%" y="1221" width="0.0120%" height="15" fill="rgb(239,5,31)" fg:x="8267" fg:w="1"/><text x="99.8044%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.5544%" y="1205" width="0.0120%" height="15" fill="rgb(241,152,38)" fg:x="8267" fg:w="1"/><text x="99.8044%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.5544%" y="1189" width="0.0120%" height="15" fill="rgb(246,200,37)" fg:x="8267" fg:w="1"/><text x="99.8044%" y="1199.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.01%)</title><rect x="99.5665%" y="1269" width="0.0120%" height="15" fill="rgb(243,210,26)" fg:x="8268" fg:w="1"/><text x="99.8165%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.5665%" y="1253" width="0.0120%" height="15" fill="rgb(222,22,22)" fg:x="8268" fg:w="1"/><text x="99.8165%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.5665%" y="1237" width="0.0120%" height="15" fill="rgb(208,129,28)" fg:x="8268" fg:w="1"/><text x="99.8165%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.5665%" y="1221" width="0.0120%" height="15" fill="rgb(254,169,28)" fg:x="8268" fg:w="1"/><text x="99.8165%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.5665%" y="1205" width="0.0120%" height="15" fill="rgb(225,45,17)" fg:x="8268" fg:w="1"/><text x="99.8165%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.5665%" y="1189" width="0.0120%" height="15" fill="rgb(232,199,2)" fg:x="8268" fg:w="1"/><text x="99.8165%" y="1199.50"></text></g><g><title>__GI___mprotect (1 samples, 0.01%)</title><rect x="99.5785%" y="1269" width="0.0120%" height="15" fill="rgb(235,33,40)" fg:x="8269" fg:w="1"/><text x="99.8285%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.5785%" y="1253" width="0.0120%" height="15" fill="rgb(237,89,50)" fg:x="8269" fg:w="1"/><text x="99.8285%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.5785%" y="1237" width="0.0120%" height="15" fill="rgb(238,126,5)" fg:x="8269" fg:w="1"/><text x="99.8285%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.5785%" y="1221" width="0.0120%" height="15" fill="rgb(247,214,42)" fg:x="8269" fg:w="1"/><text x="99.8285%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.5785%" y="1205" width="0.0120%" height="15" fill="rgb(238,60,45)" fg:x="8269" fg:w="1"/><text x="99.8285%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.5785%" y="1189" width="0.0120%" height="15" fill="rgb(225,69,44)" fg:x="8269" fg:w="1"/><text x="99.8285%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.5785%" y="1173" width="0.0120%" height="15" fill="rgb(241,13,44)" fg:x="8269" fg:w="1"/><text x="99.8285%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.5785%" y="1157" width="0.0120%" height="15" fill="rgb(227,121,22)" fg:x="8269" fg:w="1"/><text x="99.8285%" y="1167.50"></text></g><g><title>vm_library::run_loop::handle_transaction (9 samples, 0.11%)</title><rect x="99.4942%" y="1957" width="0.1084%" height="15" fill="rgb(231,160,23)" fg:x="8262" fg:w="9"/><text x="99.7442%" y="1967.50"></text></g><g><title>vm_library::run_loop::handle_originate (4 samples, 0.05%)</title><rect x="99.5544%" y="1941" width="0.0482%" height="15" fill="rgb(250,179,43)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1951.50"></text></g><g><title>vm_library::compile::compile_managed_module (4 samples, 0.05%)</title><rect x="99.5544%" y="1925" width="0.0482%" height="15" fill="rgb(233,54,46)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1935.50"></text></g><g><title>wasmer::sys::module::Module::new (4 samples, 0.05%)</title><rect x="99.5544%" y="1909" width="0.0482%" height="15" fill="rgb(247,120,42)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1919.50"></text></g><g><title>wasmer::sys::module::Module::from_binary (4 samples, 0.05%)</title><rect x="99.5544%" y="1893" width="0.0482%" height="15" fill="rgb(221,219,12)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1903.50"></text></g><g><title>wasmer::sys::module::Module::from_binary_unchecked (4 samples, 0.05%)</title><rect x="99.5544%" y="1877" width="0.0482%" height="15" fill="rgb(211,126,8)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1887.50"></text></g><g><title>wasmer::sys::module::Module::compile (4 samples, 0.05%)</title><rect x="99.5544%" y="1861" width="0.0482%" height="15" fill="rgb(218,154,33)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1871.50"></text></g><g><title>&lt;wasmer_engine_universal::engine::UniversalEngine as wasmer_engine::engine::Engine&gt;::compile (4 samples, 0.05%)</title><rect x="99.5544%" y="1845" width="0.0482%" height="15" fill="rgb(212,199,16)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1855.50"></text></g><g><title>wasmer_engine_universal::artifact::UniversalArtifact::new (4 samples, 0.05%)</title><rect x="99.5544%" y="1829" width="0.0482%" height="15" fill="rgb(236,215,46)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1839.50"></text></g><g><title>wasmer_engine_universal_artifact::artifact::UniversalArtifactBuild::new (4 samples, 0.05%)</title><rect x="99.5544%" y="1813" width="0.0482%" height="15" fill="rgb(232,32,22)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1823.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::compiler::SinglepassCompiler as wasmer_compiler::compiler::Compiler&gt;::compile_module (4 samples, 0.05%)</title><rect x="99.5544%" y="1797" width="0.0482%" height="15" fill="rgb(234,79,15)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1807.50"></text></g><g><title>rayon::iter::ParallelIterator::collect (4 samples, 0.05%)</title><rect x="99.5544%" y="1781" width="0.0482%" height="15" fill="rgb(235,187,47)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1791.50"></text></g><g><title>rayon::iter::from_par_iter::&lt;impl rayon::iter::FromParallelIterator&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_par_iter (4 samples, 0.05%)</title><rect x="99.5544%" y="1765" width="0.0482%" height="15" fill="rgb(244,69,37)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1775.50"></text></g><g><title>rayon::iter::from_par_iter::collect_extended (4 samples, 0.05%)</title><rect x="99.5544%" y="1749" width="0.0482%" height="15" fill="rgb(249,140,25)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1759.50"></text></g><g><title>rayon::iter::extend::&lt;impl rayon::iter::ParallelExtend&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::par_extend (4 samples, 0.05%)</title><rect x="99.5544%" y="1733" width="0.0482%" height="15" fill="rgb(213,69,8)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1743.50"></text></g><g><title>rayon::iter::collect::special_extend (4 samples, 0.05%)</title><rect x="99.5544%" y="1717" width="0.0482%" height="15" fill="rgb(220,136,2)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1727.50"></text></g><g><title>rayon::iter::collect::collect_with_consumer (4 samples, 0.05%)</title><rect x="99.5544%" y="1701" width="0.0482%" height="15" fill="rgb(237,50,36)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1711.50"></text></g><g><title>rayon::iter::collect::special_extend::{{closure}} (4 samples, 0.05%)</title><rect x="99.5544%" y="1685" width="0.0482%" height="15" fill="rgb(226,18,11)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1695.50"></text></g><g><title>&lt;rayon::iter::map::Map&lt;I,F&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (4 samples, 0.05%)</title><rect x="99.5544%" y="1669" width="0.0482%" height="15" fill="rgb(243,156,2)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1679.50"></text></g><g><title>&lt;rayon::vec::IntoIter&lt;T&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (4 samples, 0.05%)</title><rect x="99.5544%" y="1653" width="0.0482%" height="15" fill="rgb(218,8,34)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1663.50"></text></g><g><title>rayon::iter::plumbing::bridge (4 samples, 0.05%)</title><rect x="99.5544%" y="1637" width="0.0482%" height="15" fill="rgb(250,94,35)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1647.50"></text></g><g><title>&lt;rayon::vec::IntoIter&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (4 samples, 0.05%)</title><rect x="99.5544%" y="1621" width="0.0482%" height="15" fill="rgb(229,127,21)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1631.50"></text></g><g><title>&lt;rayon::vec::Drain&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (4 samples, 0.05%)</title><rect x="99.5544%" y="1605" width="0.0482%" height="15" fill="rgb(234,49,5)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1615.50"></text></g><g><title>&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (4 samples, 0.05%)</title><rect x="99.5544%" y="1589" width="0.0482%" height="15" fill="rgb(248,12,16)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1599.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer (4 samples, 0.05%)</title><rect x="99.5544%" y="1573" width="0.0482%" height="15" fill="rgb(208,220,31)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1583.50"></text></g><g><title>rayon::iter::plumbing::LengthSplitter::new (4 samples, 0.05%)</title><rect x="99.5544%" y="1557" width="0.0482%" height="15" fill="rgb(243,184,0)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1567.50"></text></g><g><title>rayon::iter::plumbing::Splitter::new (4 samples, 0.05%)</title><rect x="99.5544%" y="1541" width="0.0482%" height="15" fill="rgb(217,38,21)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1551.50"></text></g><g><title>rayon_core::current_num_threads (4 samples, 0.05%)</title><rect x="99.5544%" y="1525" width="0.0482%" height="15" fill="rgb(239,120,45)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1535.50"></text></g><g><title>rayon_core::registry::Registry::current_num_threads (4 samples, 0.05%)</title><rect x="99.5544%" y="1509" width="0.0482%" height="15" fill="rgb(235,33,2)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1519.50"></text></g><g><title>rayon_core::registry::global_registry (4 samples, 0.05%)</title><rect x="99.5544%" y="1493" width="0.0482%" height="15" fill="rgb(249,161,5)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1503.50"></text></g><g><title>rayon_core::registry::set_global_registry (4 samples, 0.05%)</title><rect x="99.5544%" y="1477" width="0.0482%" height="15" fill="rgb(250,165,48)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1487.50"></text></g><g><title>std::sync::once::Once::call_once (4 samples, 0.05%)</title><rect x="99.5544%" y="1461" width="0.0482%" height="15" fill="rgb(221,23,45)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1471.50"></text></g><g><title>std::sync::once::Once::call_inner (4 samples, 0.05%)</title><rect x="99.5544%" y="1445" width="0.0482%" height="15" fill="rgb(217,108,46)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1455.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (4 samples, 0.05%)</title><rect x="99.5544%" y="1429" width="0.0482%" height="15" fill="rgb(254,26,35)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1439.50"></text></g><g><title>rayon_core::registry::set_global_registry::{{closure}} (4 samples, 0.05%)</title><rect x="99.5544%" y="1413" width="0.0482%" height="15" fill="rgb(218,223,28)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1423.50"></text></g><g><title>rayon_core::registry::global_registry::{{closure}} (4 samples, 0.05%)</title><rect x="99.5544%" y="1397" width="0.0482%" height="15" fill="rgb(242,27,47)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1407.50"></text></g><g><title>rayon_core::registry::Registry::new (4 samples, 0.05%)</title><rect x="99.5544%" y="1381" width="0.0482%" height="15" fill="rgb(218,39,35)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1391.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn (4 samples, 0.05%)</title><rect x="99.5544%" y="1365" width="0.0482%" height="15" fill="rgb(232,127,16)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1375.50"></text></g><g><title>std::thread::Builder::spawn (4 samples, 0.05%)</title><rect x="99.5544%" y="1349" width="0.0482%" height="15" fill="rgb(231,219,51)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1359.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (4 samples, 0.05%)</title><rect x="99.5544%" y="1333" width="0.0482%" height="15" fill="rgb(217,220,46)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1343.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_ (4 samples, 0.05%)</title><rect x="99.5544%" y="1317" width="0.0482%" height="15" fill="rgb(230,75,1)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1327.50"></text></g><g><title>std::sys::unix::thread::Thread::new (4 samples, 0.05%)</title><rect x="99.5544%" y="1301" width="0.0482%" height="15" fill="rgb(218,2,8)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1311.50"></text></g><g><title>__pthread_create_2_1 (4 samples, 0.05%)</title><rect x="99.5544%" y="1285" width="0.0482%" height="15" fill="rgb(206,111,30)" fg:x="8267" fg:w="4"/><text x="99.8044%" y="1295.50"></text></g><g><title>__GI__dl_allocate_tls_init (1 samples, 0.01%)</title><rect x="99.5906%" y="1269" width="0.0120%" height="15" fill="rgb(209,135,6)" fg:x="8270" fg:w="1"/><text x="99.8406%" y="1279.50"></text></g><g><title>___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="99.5906%" y="1253" width="0.0120%" height="15" fill="rgb(205,169,10)" fg:x="8270" fg:w="1"/><text x="99.8406%" y="1263.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="99.6026%" y="1861" width="0.0120%" height="15" fill="rgb(212,204,38)" fg:x="8271" fg:w="1"/><text x="99.8526%" y="1871.50"></text></g><g><title>vm_library::managed::value::Value::from_runtime_ticket (4 samples, 0.05%)</title><rect x="99.6026%" y="1909" width="0.0482%" height="15" fill="rgb(205,199,14)" fg:x="8271" fg:w="4"/><text x="99.8526%" y="1919.50"></text></g><g><title>vm_library::managed::value::Value::from_runtime_ticket (4 samples, 0.05%)</title><rect x="99.6026%" y="1893" width="0.0482%" height="15" fill="rgb(212,4,6)" fg:x="8271" fg:w="4"/><text x="99.8526%" y="1903.50"></text></g><g><title>&lt;im_rc::ord::map::OrdMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(RK,RV)&gt;&gt;::from_iter (4 samples, 0.05%)</title><rect x="99.6026%" y="1877" width="0.0482%" height="15" fill="rgb(250,15,10)" fg:x="8271" fg:w="4"/><text x="99.8526%" y="1887.50"></text></g><g><title>&lt;im_rc::ord::map::OrdMap&lt;K,V&gt; as core::default::Default&gt;::default (3 samples, 0.04%)</title><rect x="99.6146%" y="1861" width="0.0361%" height="15" fill="rgb(212,49,51)" fg:x="8272" fg:w="3"/><text x="99.8646%" y="1871.50"></text></g><g><title>im_rc::ord::map::OrdMap&lt;K,V&gt;::new (3 samples, 0.04%)</title><rect x="99.6146%" y="1845" width="0.0361%" height="15" fill="rgb(235,21,9)" fg:x="8272" fg:w="3"/><text x="99.8646%" y="1855.50"></text></g><g><title>im_rc::fakepool::Rc&lt;A&gt;::default (3 samples, 0.04%)</title><rect x="99.6146%" y="1829" width="0.0361%" height="15" fill="rgb(251,31,32)" fg:x="8272" fg:w="3"/><text x="99.8646%" y="1839.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::default::Default&gt;::default (3 samples, 0.04%)</title><rect x="99.6146%" y="1813" width="0.0361%" height="15" fill="rgb(246,23,9)" fg:x="8272" fg:w="3"/><text x="99.8646%" y="1823.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (3 samples, 0.04%)</title><rect x="99.6146%" y="1797" width="0.0361%" height="15" fill="rgb(225,216,14)" fg:x="8272" fg:w="3"/><text x="99.8646%" y="1807.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (3 samples, 0.04%)</title><rect x="99.6146%" y="1781" width="0.0361%" height="15" fill="rgb(215,200,26)" fg:x="8272" fg:w="3"/><text x="99.8646%" y="1791.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.04%)</title><rect x="99.6146%" y="1765" width="0.0361%" height="15" fill="rgb(237,130,47)" fg:x="8272" fg:w="3"/><text x="99.8646%" y="1775.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.06%)</title><rect x="99.6869%" y="1845" width="0.0602%" height="15" fill="rgb(247,74,14)" fg:x="8278" fg:w="5"/><text x="99.9369%" y="1855.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.06%)</title><rect x="99.6869%" y="1829" width="0.0602%" height="15" fill="rgb(254,97,46)" fg:x="8278" fg:w="5"/><text x="99.9369%" y="1839.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.05%)</title><rect x="99.6989%" y="1813" width="0.0482%" height="15" fill="rgb(234,191,1)" fg:x="8279" fg:w="4"/><text x="99.9489%" y="1823.50"></text></g><g><title>vm_library::managed::value::Value::to_runtime_ticket::{{closure}} (4 samples, 0.05%)</title><rect x="99.6989%" y="1797" width="0.0482%" height="15" fill="rgb(215,165,14)" fg:x="8279" fg:w="4"/><text x="99.9489%" y="1807.50"></text></g><g><title>vm_library::managed::value::Value::to_runtime_ticket (4 samples, 0.05%)</title><rect x="99.6989%" y="1781" width="0.0482%" height="15" fill="rgb(230,182,6)" fg:x="8279" fg:w="4"/><text x="99.9489%" y="1791.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::convert::From&lt;T&gt;&gt;::from (2 samples, 0.02%)</title><rect x="99.7230%" y="1765" width="0.0241%" height="15" fill="rgb(210,127,39)" fg:x="8281" fg:w="2"/><text x="99.9730%" y="1775.50"></text></g><g><title>__memcpy_avx_unaligned_erms (7 samples, 0.08%)</title><rect x="99.7592%" y="1749" width="0.0843%" height="15" fill="rgb(223,212,51)" fg:x="8284" fg:w="7"/><text x="100.0092%" y="1759.50"></text></g><g><title>_mi_page_free_collect (1 samples, 0.01%)</title><rect x="99.8796%" y="1653" width="0.0120%" height="15" fill="rgb(226,176,43)" fg:x="8294" fg:w="1"/><text x="100.1296%" y="1663.50"></text></g><g><title>&lt;im_rc::ord::map::OrdMap&lt;K,V&gt; as core::default::Default&gt;::default (13 samples, 0.16%)</title><rect x="99.7471%" y="1845" width="0.1566%" height="15" fill="rgb(222,155,4)" fg:x="8283" fg:w="13"/><text x="99.9971%" y="1855.50"></text></g><g><title>im_rc::ord::map::OrdMap&lt;K,V&gt;::new (13 samples, 0.16%)</title><rect x="99.7471%" y="1829" width="0.1566%" height="15" fill="rgb(215,149,7)" fg:x="8283" fg:w="13"/><text x="99.9971%" y="1839.50"></text></g><g><title>im_rc::fakepool::Rc&lt;A&gt;::default (13 samples, 0.16%)</title><rect x="99.7471%" y="1813" width="0.1566%" height="15" fill="rgb(252,199,23)" fg:x="8283" fg:w="13"/><text x="99.9971%" y="1823.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::default::Default&gt;::default (13 samples, 0.16%)</title><rect x="99.7471%" y="1797" width="0.1566%" height="15" fill="rgb(245,52,29)" fg:x="8283" fg:w="13"/><text x="99.9971%" y="1807.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (13 samples, 0.16%)</title><rect x="99.7471%" y="1781" width="0.1566%" height="15" fill="rgb(221,228,19)" fg:x="8283" fg:w="13"/><text x="99.9971%" y="1791.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (12 samples, 0.14%)</title><rect x="99.7592%" y="1765" width="0.1445%" height="15" fill="rgb(253,101,6)" fg:x="8284" fg:w="12"/><text x="100.0092%" y="1775.50"></text></g><g><title>alloc::alloc::exchange_malloc (5 samples, 0.06%)</title><rect x="99.8434%" y="1749" width="0.0602%" height="15" fill="rgb(211,130,8)" fg:x="8291" fg:w="5"/><text x="100.0934%" y="1759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.06%)</title><rect x="99.8434%" y="1733" width="0.0602%" height="15" fill="rgb(238,37,53)" fg:x="8291" fg:w="5"/><text x="100.0934%" y="1743.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.06%)</title><rect x="99.8434%" y="1717" width="0.0602%" height="15" fill="rgb(235,145,5)" fg:x="8291" fg:w="5"/><text x="100.0934%" y="1727.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.06%)</title><rect x="99.8434%" y="1701" width="0.0602%" height="15" fill="rgb(244,12,43)" fg:x="8291" fg:w="5"/><text x="100.0934%" y="1711.50"></text></g><g><title>_mi_malloc_generic (5 samples, 0.06%)</title><rect x="99.8434%" y="1685" width="0.0602%" height="15" fill="rgb(246,195,24)" fg:x="8291" fg:w="5"/><text x="100.0934%" y="1695.50"></text></g><g><title>mi_page_queue_find_free_ex (5 samples, 0.06%)</title><rect x="99.8434%" y="1669" width="0.0602%" height="15" fill="rgb(235,163,6)" fg:x="8291" fg:w="5"/><text x="100.0934%" y="1679.50"></text></g><g><title>mi_page_to_full (1 samples, 0.01%)</title><rect x="99.8916%" y="1653" width="0.0120%" height="15" fill="rgb(236,218,17)" fg:x="8295" fg:w="1"/><text x="100.1416%" y="1663.50"></text></g><g><title>mi_page_queue_enqueue_from (1 samples, 0.01%)</title><rect x="99.8916%" y="1637" width="0.0120%" height="15" fill="rgb(235,12,38)" fg:x="8295" fg:w="1"/><text x="100.1416%" y="1647.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="99.9037%" y="1829" width="0.0120%" height="15" fill="rgb(225,195,33)" fg:x="8296" fg:w="1"/><text x="100.1537%" y="1839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="99.9157%" y="1797" width="0.0120%" height="15" fill="rgb(238,54,35)" fg:x="8297" fg:w="1"/><text x="100.1657%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;[im_rc::nodes::btree::ConsumingIterItem&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;]&gt; (1 samples, 0.01%)</title><rect x="99.9157%" y="1781" width="0.0120%" height="15" fill="rgb(238,33,7)" fg:x="8297" fg:w="1"/><text x="100.1657%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;im_rc::nodes::btree::ConsumingIterItem&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt; (1 samples, 0.01%)</title><rect x="99.9157%" y="1765" width="0.0120%" height="15" fill="rgb(245,5,14)" fg:x="8297" fg:w="1"/><text x="100.1657%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;im_rc::nodes::btree::Node&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt; (1 samples, 0.01%)</title><rect x="99.9157%" y="1749" width="0.0120%" height="15" fill="rgb(251,95,31)" fg:x="8297" fg:w="1"/><text x="100.1657%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;sized_chunks::sized_chunk::Chunk&lt;core::option::Option&lt;im_rc::fakepool::Rc&lt;im_rc::nodes::btree::Node&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt;&gt;,typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B1&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="99.9157%" y="1733" width="0.0120%" height="15" fill="rgb(222,15,46)" fg:x="8297" fg:w="1"/><text x="100.1657%" y="1743.50"></text></g><g><title>&lt;sized_chunks::sized_chunk::Chunk&lt;A,N&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="99.9157%" y="1717" width="0.0120%" height="15" fill="rgb(226,182,24)" fg:x="8297" fg:w="1"/><text x="100.1657%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;im_rc::fakepool::Rc&lt;im_rc::nodes::btree::Node&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt;&gt;]&gt; (1 samples, 0.01%)</title><rect x="99.9157%" y="1701" width="0.0120%" height="15" fill="rgb(229,105,41)" fg:x="8297" fg:w="1"/><text x="100.1657%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;im_rc::nodes::btree::ConsumingIterItem&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="99.9157%" y="1813" width="0.0241%" height="15" fill="rgb(216,99,53)" fg:x="8297" fg:w="2"/><text x="100.1657%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;im_rc::nodes::btree::ConsumingIterItem&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="99.9277%" y="1797" width="0.0120%" height="15" fill="rgb(253,26,20)" fg:x="8298" fg:w="1"/><text x="100.1777%" y="1807.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="99.9277%" y="1781" width="0.0120%" height="15" fill="rgb(249,155,28)" fg:x="8298" fg:w="1"/><text x="100.1777%" y="1791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="99.9277%" y="1765" width="0.0120%" height="15" fill="rgb(241,221,2)" fg:x="8298" fg:w="1"/><text x="100.1777%" y="1775.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="99.9277%" y="1749" width="0.0120%" height="15" fill="rgb(219,124,6)" fg:x="8298" fg:w="1"/><text x="100.1777%" y="1759.50"></text></g><g><title>_mi_page_retire (1 samples, 0.01%)</title><rect x="99.9277%" y="1733" width="0.0120%" height="15" fill="rgb(233,37,6)" fg:x="8298" fg:w="1"/><text x="100.1777%" y="1743.50"></text></g><g><title>__free (1 samples, 0.01%)</title><rect x="99.9398%" y="1749" width="0.0120%" height="15" fill="rgb(238,20,14)" fg:x="8299" fg:w="1"/><text x="100.1898%" y="1759.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="99.9398%" y="1733" width="0.0120%" height="15" fill="rgb(232,106,27)" fg:x="8299" fg:w="1"/><text x="100.1898%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;vm_library::managed::value::Value&gt; (2 samples, 0.02%)</title><rect x="99.9398%" y="1781" width="0.0241%" height="15" fill="rgb(246,157,24)" fg:x="8299" fg:w="2"/><text x="100.1898%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;vm_library::managed::value::Value&gt;&gt; (2 samples, 0.02%)</title><rect x="99.9398%" y="1765" width="0.0241%" height="15" fill="rgb(214,153,10)" fg:x="8299" fg:w="2"/><text x="100.1898%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;vm_library::managed::value::Value&gt; (1 samples, 0.01%)</title><rect x="99.9518%" y="1749" width="0.0120%" height="15" fill="rgb(212,94,6)" fg:x="8300" fg:w="1"/><text x="100.2018%" y="1759.50"></text></g><g><title>vm_library::run_loop::handle_invoke (31 samples, 0.37%)</title><rect x="99.6026%" y="1925" width="0.3733%" height="15" fill="rgb(254,25,27)" fg:x="8271" fg:w="31"/><text x="99.8526%" y="1935.50"></text></g><g><title>vm_library::managed::value::Value::to_runtime_ticket (27 samples, 0.33%)</title><rect x="99.6508%" y="1909" width="0.3251%" height="15" fill="rgb(250,43,52)" fg:x="8275" fg:w="27"/><text x="99.9008%" y="1919.50"></text></g><g><title>vm_library::managed::value::Value::to_runtime_ticket (27 samples, 0.33%)</title><rect x="99.6508%" y="1893" width="0.3251%" height="15" fill="rgb(221,226,40)" fg:x="8275" fg:w="27"/><text x="99.9008%" y="1903.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (27 samples, 0.33%)</title><rect x="99.6508%" y="1877" width="0.3251%" height="15" fill="rgb(235,162,34)" fg:x="8275" fg:w="27"/><text x="99.9008%" y="1887.50"></text></g><g><title>&lt;im_rc::ord::map::OrdMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(RK,RV)&gt;&gt;::from_iter (27 samples, 0.33%)</title><rect x="99.6508%" y="1861" width="0.3251%" height="15" fill="rgb(239,24,26)" fg:x="8275" fg:w="27"/><text x="99.9008%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;im_rc::nodes::btree::ConsumingIter&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;,vm_library::managed::value::Value::to_runtime_ticket::{{closure}}&gt;&gt; (6 samples, 0.07%)</title><rect x="99.9037%" y="1845" width="0.0723%" height="15" fill="rgb(244,226,11)" fg:x="8296" fg:w="6"/><text x="100.1537%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;im_rc::nodes::btree::ConsumingIter&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt; (5 samples, 0.06%)</title><rect x="99.9157%" y="1829" width="0.0602%" height="15" fill="rgb(225,23,10)" fg:x="8297" fg:w="5"/><text x="100.1657%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt;&gt; (3 samples, 0.04%)</title><rect x="99.9398%" y="1813" width="0.0361%" height="15" fill="rgb(249,125,6)" fg:x="8299" fg:w="3"/><text x="100.1898%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;(vm_library::managed::value::Value,vm_library::managed::value::Value)&gt; (3 samples, 0.04%)</title><rect x="99.9398%" y="1797" width="0.0361%" height="15" fill="rgb(246,212,12)" fg:x="8299" fg:w="3"/><text x="100.1898%" y="1807.50"></text></g><g><title>mi_free (1 samples, 0.01%)</title><rect x="99.9639%" y="1781" width="0.0120%" height="15" fill="rgb(230,43,32)" fg:x="8301" fg:w="1"/><text x="100.2139%" y="1791.50"></text></g><g><title>mi_check_is_double_free (1 samples, 0.01%)</title><rect x="99.9639%" y="1765" width="0.0120%" height="15" fill="rgb(210,95,23)" fg:x="8301" fg:w="1"/><text x="100.2139%" y="1775.50"></text></g><g><title>mi_block_nextx (1 samples, 0.01%)</title><rect x="99.9639%" y="1749" width="0.0120%" height="15" fill="rgb(229,103,33)" fg:x="8301" fg:w="1"/><text x="100.2139%" y="1759.50"></text></g><g><title>mi_ptr_decode (1 samples, 0.01%)</title><rect x="99.9639%" y="1733" width="0.0120%" height="15" fill="rgb(222,104,27)" fg:x="8301" fg:w="1"/><text x="100.2139%" y="1743.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn (1 samples, 0.01%)</title><rect x="99.9759%" y="1333" width="0.0120%" height="15" fill="rgb(239,221,23)" fg:x="8302" fg:w="1"/><text x="100.2259%" y="1343.50"></text></g><g><title>all (8,304 samples, 100%)</title><rect x="0.0000%" y="1989" width="100.0000%" height="15" fill="rgb(222,98,21)" fg:x="0" fg:w="8304"/><text x="0.2500%" y="1999.50"></text></g><g><title>vm_library (8,304 samples, 100.00%)</title><rect x="0.0000%" y="1973" width="100.0000%" height="15" fill="rgb(231,101,20)" fg:x="0" fg:w="8304"/><text x="0.2500%" y="1983.50">vm_library</text></g><g><title>vm_library::run_loop::run_loop (33 samples, 0.40%)</title><rect x="99.6026%" y="1957" width="0.3974%" height="15" fill="rgb(215,150,22)" fg:x="8271" fg:w="33"/><text x="99.8526%" y="1967.50"></text></g><g><title>vm_library::run_loop::handle_transaction (33 samples, 0.40%)</title><rect x="99.6026%" y="1941" width="0.3974%" height="15" fill="rgb(248,3,34)" fg:x="8271" fg:w="33"/><text x="99.8526%" y="1951.50"></text></g><g><title>vm_library::run_loop::handle_originate (2 samples, 0.02%)</title><rect x="99.9759%" y="1925" width="0.0241%" height="15" fill="rgb(220,141,21)" fg:x="8302" fg:w="2"/><text x="100.2259%" y="1935.50"></text></g><g><title>vm_library::compile::compile_managed_module (2 samples, 0.02%)</title><rect x="99.9759%" y="1909" width="0.0241%" height="15" fill="rgb(223,41,48)" fg:x="8302" fg:w="2"/><text x="100.2259%" y="1919.50"></text></g><g><title>wasmer::sys::module::Module::new (2 samples, 0.02%)</title><rect x="99.9759%" y="1893" width="0.0241%" height="15" fill="rgb(247,12,5)" fg:x="8302" fg:w="2"/><text x="100.2259%" y="1903.50"></text></g><g><title>wasmer::sys::module::Module::from_binary (2 samples, 0.02%)</title><rect x="99.9759%" y="1877" width="0.0241%" height="15" fill="rgb(206,173,10)" fg:x="8302" fg:w="2"/><text x="100.2259%" y="1887.50"></text></g><g><title>wasmer::sys::module::Module::from_binary_unchecked (2 samples, 0.02%)</title><rect x="99.9759%" y="1861" width="0.0241%" height="15" fill="rgb(233,214,37)" fg:x="8302" fg:w="2"/><text x="100.2259%" y="1871.50"></text></g><g><title>wasmer::sys::module::Module::compile (2 samples, 0.02%)</title><rect x="99.9759%" y="1845" width="0.0241%" height="15" fill="rgb(238,86,43)" fg:x="8302" fg:w="2"/><text x="100.2259%" y="1855.50"></text></g><g><title>&lt;wasmer_engine_universal::engine::UniversalEngine as wasmer_engine::engine::Engine&gt;::compile (2 samples, 0.02%)</title><rect x="99.9759%" y="1829" width="0.0241%" height="15" fill="rgb(212,182,8)" fg:x="8302" fg:w="2"/><text x="100.2259%" y="1839.50"></text></g><g><title>wasmer_engine_universal::artifact::UniversalArtifact::new (2 samples, 0.02%)</title><rect x="99.9759%" y="1813" width="0.0241%" height="15" fill="rgb(240,91,47)" fg:x="8302" fg:w="2"/><text x="100.2259%" y="1823.50"></text></g><g><title>wasmer_engine_universal_artifact::artifact::UniversalArtifactBuild::new (2 samples, 0.02%)</title><rect x="99.9759%" y="1797" width="0.0241%" height="15" fill="rgb(209,138,26)" fg:x="8302" fg:w="2"/><text x="100.2259%" y="1807.50"></text></g><g><title>&lt;wasmer_compiler_singlepass::compiler::SinglepassCompiler as wasmer_compiler::compiler::Compiler&gt;::compile_module (2 samples, 0.02%)</title><rect x="99.9759%" y="1781" width="0.0241%" height="15" fill="rgb(231,163,20)" fg:x="8302" fg:w="2"/><text x="100.2259%" y="1791.50"></text></g><g><title>rayon::iter::ParallelIterator::collect (2 samples, 0.02%)</title><rect x="99.9759%" y="1765" width="0.0241%" height="15" fill="rgb(214,91,54)" fg:x="8302" fg:w="2"/><text x="100.2259%" y="1775.50"></text></g><g><title>rayon::iter::from_par_iter::&lt;impl rayon::iter::FromParallelIterator&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_par_iter (2 samples, 0.02%)</title><rect x="99.9759%" y="1749" width="0.0241%" height="15" fill="rgb(230,32,17)" fg:x="8302" fg:w="2"/><text x="100.2259%" y="1759.50"></text></g><g><title>rayon::iter::from_par_iter::collect_extended (2 samples, 0.02%)</title><rect x="99.9759%" y="1733" width="0.0241%" height="15" fill="rgb(231,34,34)" fg:x="8302" fg:w="2"/><text x="100.2259%" y="1743.50"></text></g><g><title>rayon::iter::extend::&lt;impl rayon::iter::ParallelExtend&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::par_extend (2 samples, 0.02%)</title><rect x="99.9759%" y="1717" width="0.0241%" height="15" fill="rgb(224,228,27)" fg:x="8302" fg:w="2"/><text x="100.2259%" y="1727.50"></text></g><g><title>rayon::iter::collect::special_extend (2 samples, 0.02%)</title><rect x="99.9759%" y="1701" width="0.0241%" height="15" fill="rgb(219,35,40)" fg:x="8302" fg:w="2"/><text x="100.2259%" y="1711.50"></text></g><g><title>rayon::iter::collect::collect_with_consumer (2 samples, 0.02%)</title><rect x="99.9759%" y="1685" width="0.0241%" height="15" fill="rgb(234,42,8)" fg:x="8302" fg:w="2"/><text x="100.2259%" y="1695.50"></text></g><g><title>rayon::iter::collect::special_extend::{{closure}} (2 samples, 0.02%)</title><rect x="99.9759%" y="1669" width="0.0241%" height="15" fill="rgb(226,75,22)" fg:x="8302" fg:w="2"/><text x="100.2259%" y="1679.50"></text></g><g><title>&lt;rayon::iter::map::Map&lt;I,F&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (2 samples, 0.02%)</title><rect x="99.9759%" y="1653" width="0.0241%" height="15" fill="rgb(242,203,28)" fg:x="8302" fg:w="2"/><text x="100.2259%" y="1663.50"></text></g><g><title>&lt;rayon::vec::IntoIter&lt;T&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (2 samples, 0.02%)</title><rect x="99.9759%" y="1637" width="0.0241%" height="15" fill="rgb(221,3,9)" fg:x="8302" fg:w="2"/><text x="100.2259%" y="1647.50"></text></g><g><title>rayon::iter::plumbing::bridge (2 samples, 0.02%)</title><rect x="99.9759%" y="1621" width="0.0241%" height="15" fill="rgb(214,34,31)" fg:x="8302" fg:w="2"/><text x="100.2259%" y="1631.50"></text></g><g><title>&lt;rayon::vec::IntoIter&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (2 samples, 0.02%)</title><rect x="99.9759%" y="1605" width="0.0241%" height="15" fill="rgb(252,119,15)" fg:x="8302" fg:w="2"/><text x="100.2259%" y="1615.50"></text></g><g><title>&lt;rayon::vec::Drain&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (2 samples, 0.02%)</title><rect x="99.9759%" y="1589" width="0.0241%" height="15" fill="rgb(244,224,31)" fg:x="8302" fg:w="2"/><text x="100.2259%" y="1599.50"></text></g><g><title>&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (2 samples, 0.02%)</title><rect x="99.9759%" y="1573" width="0.0241%" height="15" fill="rgb(215,8,51)" fg:x="8302" fg:w="2"/><text x="100.2259%" y="1583.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer (2 samples, 0.02%)</title><rect x="99.9759%" y="1557" width="0.0241%" height="15" fill="rgb(207,24,1)" fg:x="8302" fg:w="2"/><text x="100.2259%" y="1567.50"></text></g><g><title>rayon::iter::plumbing::LengthSplitter::new (2 samples, 0.02%)</title><rect x="99.9759%" y="1541" width="0.0241%" height="15" fill="rgb(245,90,0)" fg:x="8302" fg:w="2"/><text x="100.2259%" y="1551.50"></text></g><g><title>rayon::iter::plumbing::Splitter::new (2 samples, 0.02%)</title><rect x="99.9759%" y="1525" width="0.0241%" height="15" fill="rgb(246,43,48)" fg:x="8302" fg:w="2"/><text x="100.2259%" y="1535.50"></text></g><g><title>rayon_core::current_num_threads (2 samples, 0.02%)</title><rect x="99.9759%" y="1509" width="0.0241%" height="15" fill="rgb(252,218,10)" fg:x="8302" fg:w="2"/><text x="100.2259%" y="1519.50"></text></g><g><title>rayon_core::registry::Registry::current_num_threads (2 samples, 0.02%)</title><rect x="99.9759%" y="1493" width="0.0241%" height="15" fill="rgb(231,24,35)" fg:x="8302" fg:w="2"/><text x="100.2259%" y="1503.50"></text></g><g><title>rayon_core::registry::global_registry (2 samples, 0.02%)</title><rect x="99.9759%" y="1477" width="0.0241%" height="15" fill="rgb(225,66,19)" fg:x="8302" fg:w="2"/><text x="100.2259%" y="1487.50"></text></g><g><title>rayon_core::registry::set_global_registry (2 samples, 0.02%)</title><rect x="99.9759%" y="1461" width="0.0241%" height="15" fill="rgb(214,96,51)" fg:x="8302" fg:w="2"/><text x="100.2259%" y="1471.50"></text></g><g><title>std::sync::once::Once::call_once (2 samples, 0.02%)</title><rect x="99.9759%" y="1445" width="0.0241%" height="15" fill="rgb(251,151,47)" fg:x="8302" fg:w="2"/><text x="100.2259%" y="1455.50"></text></g><g><title>std::sync::once::Once::call_inner (2 samples, 0.02%)</title><rect x="99.9759%" y="1429" width="0.0241%" height="15" fill="rgb(236,79,14)" fg:x="8302" fg:w="2"/><text x="100.2259%" y="1439.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (2 samples, 0.02%)</title><rect x="99.9759%" y="1413" width="0.0241%" height="15" fill="rgb(210,205,11)" fg:x="8302" fg:w="2"/><text x="100.2259%" y="1423.50"></text></g><g><title>rayon_core::registry::set_global_registry::{{closure}} (2 samples, 0.02%)</title><rect x="99.9759%" y="1397" width="0.0241%" height="15" fill="rgb(233,142,53)" fg:x="8302" fg:w="2"/><text x="100.2259%" y="1407.50"></text></g><g><title>rayon_core::registry::global_registry::{{closure}} (2 samples, 0.02%)</title><rect x="99.9759%" y="1381" width="0.0241%" height="15" fill="rgb(212,116,48)" fg:x="8302" fg:w="2"/><text x="100.2259%" y="1391.50"></text></g><g><title>rayon_core::registry::Registry::new (2 samples, 0.02%)</title><rect x="99.9759%" y="1365" width="0.0241%" height="15" fill="rgb(234,55,33)" fg:x="8302" fg:w="2"/><text x="100.2259%" y="1375.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn (2 samples, 0.02%)</title><rect x="99.9759%" y="1349" width="0.0241%" height="15" fill="rgb(253,92,27)" fg:x="8302" fg:w="2"/><text x="100.2259%" y="1359.50"></text></g><g><title>std::thread::Builder::spawn (1 samples, 0.01%)</title><rect x="99.9880%" y="1333" width="0.0120%" height="15" fill="rgb(220,7,35)" fg:x="8303" fg:w="1"/><text x="100.2380%" y="1343.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (1 samples, 0.01%)</title><rect x="99.9880%" y="1317" width="0.0120%" height="15" fill="rgb(246,124,6)" fg:x="8303" fg:w="1"/><text x="100.2380%" y="1327.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_ (1 samples, 0.01%)</title><rect x="99.9880%" y="1301" width="0.0120%" height="15" fill="rgb(212,111,51)" fg:x="8303" fg:w="1"/><text x="100.2380%" y="1311.50"></text></g><g><title>std::thread::Thread::new (1 samples, 0.01%)</title><rect x="99.9880%" y="1285" width="0.0120%" height="15" fill="rgb(253,116,7)" fg:x="8303" fg:w="1"/><text x="100.2380%" y="1295.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new_uninit (1 samples, 0.01%)</title><rect x="99.9880%" y="1269" width="0.0120%" height="15" fill="rgb(213,145,18)" fg:x="8303" fg:w="1"/><text x="100.2380%" y="1279.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::allocate_for_layout (1 samples, 0.01%)</title><rect x="99.9880%" y="1253" width="0.0120%" height="15" fill="rgb(219,149,7)" fg:x="8303" fg:w="1"/><text x="100.2380%" y="1263.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::try_allocate_for_layout (1 samples, 0.01%)</title><rect x="99.9880%" y="1237" width="0.0120%" height="15" fill="rgb(225,156,20)" fg:x="8303" fg:w="1"/><text x="100.2380%" y="1247.50"></text></g></svg></svg>